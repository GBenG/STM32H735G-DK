// Generated by imageconverter. Please, do not edit!

#include <images/SVGDatabase.hpp>

using namespace touchgfx;

static const uint8_t svg_square2_shape_1_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_square2_shape_1_points[] = {
    3.0000f, 12.0000f, 3.0000f, 4.5885f, 4.5885f, 3.0000f, 12.0000f, 3.0000f, 19.4115f, 3.0000f, 21.0000f, 4.5885f, 21.0000f, 12.0000f, 21.0000f, 19.4115f, 19.4115f, 21.0000f, 12.0000f, 21.0000f,
    4.5885f, 21.0000f, 3.0000f, 19.4115f, 3.0000f, 12.0000f,
};

static const VGFixedColor svg_square2_shape_1_stroke = {
    0xff323232 // ARGB
};

static const VGShape svg_square2_shape_1 = {
    6, 26,                                                    // numCommands, numPoints
    svg_square2_shape_1_commands,                             // commands
    svg_square2_shape_1_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_NONE,                                                  // fillMode
    VG_FIXED_COLOR,                                           // strokeMode
    0,                                                        // fillPaint
    &svg_square2_shape_1_stroke,                              // strokePaint
    2.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 3.0000f, 3.0000f, 21.0000f, 21.0000f },                 // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    0                                                         // next
};

static const uint8_t svg_square2_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_square2_shape_0_points[] = {
    3.0000f, 12.0000f, 3.0000f, 4.5885f, 4.5885f, 3.0000f, 12.0000f, 3.0000f, 19.4115f, 3.0000f, 21.0000f, 4.5885f, 21.0000f, 12.0000f, 21.0000f, 19.4115f, 19.4115f, 21.0000f, 12.0000f, 21.0000f,
    4.5885f, 21.0000f, 3.0000f, 19.4115f, 3.0000f, 12.0000f,
};

static const VGFixedColor svg_square2_shape_0_fill = {
    0xff323232 // ARGB
};

static const VGShape svg_square2_shape_0 = {
    6, 26,                                                    // numCommands, numPoints
    svg_square2_shape_0_commands,                             // commands
    svg_square2_shape_0_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_square2_shape_0_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    25,                                                       // fillAlpha
    25,                                                       // strokeAlpha
    { 3.0000f, 3.0000f, 21.0000f, 21.0000f },                 // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_square2_shape_1                                      // next
};

static const uint8_t svg_square3_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_HLINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_VLINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_HLINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_VLINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_square3_shape_0_points[] = {
    2.0000f, 0.0000f, 14.0000f, 15.1046f, 0.0000f, 16.0000f, 0.8954f, 16.0000f, 2.0000f, 14.0000f,
    16.0000f, 15.1046f, 15.1046f, 16.0000f, 14.0000f, 16.0000f, 2.0000f, 0.8954f, 16.0000f, 0.0000f, 15.1046f, 0.0000f, 14.0000f, 2.0000f,
    0.0000f, 0.8954f, 0.8954f, 0.0000f, 2.0000f, 0.0000f,
};

static const VGFixedColor svg_square3_shape_0_fill = {
    0xff758ca3 // ARGB
};

static const VGShape svg_square3_shape_0 = {
    10, 30,                                                   // numCommands, numPoints
    svg_square3_shape_0_commands,                             // commands
    svg_square3_shape_0_points,                               // points
    VG_FILL_EVEN_ODD,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_square3_shape_0_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 0.0000f, 0.0000f, 16.0000f, 16.0000f },                 // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    0                                                         // next
};

static const uint8_t svg_square4_shape_1_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_square4_shape_1_points[] = {
    7.2501f, 2.3878f, 8.5488f, 2.0992f, 10.1243f, 2.0000f, 12.0000f, 2.0000f, 13.8757f, 2.0000f, 15.4512f, 2.0992f, 16.7499f, 2.3878f, 18.0600f, 2.6790f, 19.1488f, 3.1760f, 19.9864f, 4.0136f,
    20.8240f, 4.8512f, 21.3210f, 5.9400f, 21.6122f, 7.2501f, 21.9008f, 8.5488f, 22.0000f, 10.1243f, 22.0000f, 12.0000f, 22.0000f, 13.8757f, 21.9008f, 15.4512f, 21.6122f, 16.7499f, 21.3210f, 18.0600f, 20.8240f, 19.1488f, 19.9864f, 19.9864f,
    19.1488f, 20.8240f, 18.0600f, 21.3210f, 16.7499f, 21.6122f, 15.4512f, 21.9008f, 13.8757f, 22.0000f, 12.0000f, 22.0000f, 10.1243f, 22.0000f, 8.5488f, 21.9008f, 7.2501f, 21.6122f, 5.9400f, 21.3210f, 4.8512f, 20.8240f, 4.0136f, 19.9864f,
    3.1760f, 19.1488f, 2.6790f, 18.0600f, 2.3878f, 16.7499f, 2.0992f, 15.4512f, 2.0000f, 13.8757f, 2.0000f, 12.0000f, 2.0000f, 10.1243f, 2.0992f, 8.5488f, 2.3878f, 7.2501f, 2.6790f, 5.9400f, 3.1760f, 4.8512f, 4.0136f, 4.0136f,
    4.8512f, 3.1760f, 5.9400f, 2.6790f, 7.2501f, 2.3878f,
};

static const VGFixedColor svg_square4_shape_1_fill = {
    0xff323232 // ARGB
};

static const VGShape svg_square4_shape_1 = {
    18, 98,                                                   // numCommands, numPoints
    svg_square4_shape_1_commands,                             // commands
    svg_square4_shape_1_points,                               // points
    VG_FILL_EVEN_ODD,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_square4_shape_1_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 2.0000f, 2.0000f, 22.0000f, 22.0000f },                 // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    0                                                         // next
};

static const uint8_t svg_square4_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_HLINE, VECTOR_PRIM_VLINE, VECTOR_PRIM_HLINE,
    VECTOR_PRIM_CLOSE
};

static const float svg_square4_shape_0_points[] = {
    0.0000f, 0.0000f, 24.0000f, 24.0000f, 0.0000f,
};

static const VGFixedColor svg_square4_shape_0_fill = {
    0xffffffff // ARGB
};

static const VGShape svg_square4_shape_0 = {
    5, 5,                                                     // numCommands, numPoints
    svg_square4_shape_0_commands,                             // commands
    svg_square4_shape_0_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_square4_shape_0_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 0.0000f, 0.0000f, 24.0000f, 24.0000f },                 // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_square4_shape_1                                      // next
};

static const touchgfx::VGObject svg_database[] = {
    { 2.0000f, 2.0000f, 20.0000f, 20.0000f, 24.0000f, 24.0000f, &svg_square2_shape_0 },
    { 0.0000f, 0.0000f, 16.0000f, 16.0000f, 16.0000f, 16.0000f, &svg_square3_shape_0 },
    { 0.0000f, 0.0000f, 24.0000f, 24.0000f, 24.0000f, 24.0000f, &svg_square4_shape_0 }
};

namespace SVGDatabase
{
const touchgfx::VGObject* getInstance()
{
    return svg_database;
}

uint16_t getInstanceSize()
{
    return 3;
}
} // namespace SVGDatabase
