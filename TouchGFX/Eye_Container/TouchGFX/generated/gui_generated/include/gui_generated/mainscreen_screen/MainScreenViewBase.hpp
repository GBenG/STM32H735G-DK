/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINSCREENVIEWBASE_HPP
#define MAINSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>

class MainScreenViewBase : public touchgfx::View<MainScreenPresenter>
{
public:
    MainScreenViewBase();
    virtual ~MainScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ScreenButtonClicked()
    {
        // Override and implement this function in MainScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger >  ScreenButton;
    touchgfx::Container Eye_L;
    touchgfx::Circle circle_BL;
    touchgfx::PainterRGB888 circle_BLPainter;
    touchgfx::Circle circle_TL;
    touchgfx::PainterRGB888 circle_TLPainter;
    touchgfx::Circle circle_BR;
    touchgfx::PainterRGB888 circle_BRPainter;
    touchgfx::Circle circle_TR;
    touchgfx::PainterRGB888 circle_TRPainter;
    touchgfx::Box box_mid;
    touchgfx::Box box_top;
    touchgfx::Box box_bot;
    touchgfx::Container Eye_R;
    touchgfx::Circle circle_BL_1;
    touchgfx::PainterRGB888 circle_BL_1Painter;
    touchgfx::Circle circle_TL_1;
    touchgfx::PainterRGB888 circle_TL_1Painter;
    touchgfx::Circle circle_BR_1;
    touchgfx::PainterRGB888 circle_BR_1Painter;
    touchgfx::Circle circle_TR_1;
    touchgfx::PainterRGB888 circle_TR_1Painter;
    touchgfx::Box box_mid_1;
    touchgfx::Box box_top_1;
    touchgfx::Box box_bot_1;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // MAINSCREENVIEWBASE_HPP
