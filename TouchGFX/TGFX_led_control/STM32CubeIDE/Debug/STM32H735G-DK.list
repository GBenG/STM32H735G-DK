
STM32H735G-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001d740  080002d0  080002d0  000102d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001ff8  0801da10  0801da10  0002da10  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000f02  0801fa08  0801fa08  0002fa08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  0802090c  0802090c  0003090c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000001c  08020924  08020924  00030924  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  08020940  08020940  000e1568  2**0
                  CONTENTS
  7 .ARM          00000000  08020940  08020940  000e1568  2**0
                  CONTENTS
  8 .preinit_array 00000000  08020940  08020940  000e1568  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  08020940  08020940  00030940  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08020954  08020954  00030954  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000114  24000000  0802095c  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00008ac4  24000114  08020a70  00040114  2**2
                  ALLOC
 13 ._user_heap_stack 00002000  24008bd8  08020a70  00048bd8  2**0
                  ALLOC
 14 .ARM.attributes 0000002e  00000000  00000000  000e1568  2**0
                  CONTENTS, READONLY
 15 ExtFlashSection 00091568  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_info   000ccd67  00000000  00000000  000e1596  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_abbrev 0001410a  00000000  00000000  001ae2fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_aranges 00002f38  00000000  00000000  001c2408  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_ranges 00004dc8  00000000  00000000  001c5340  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_macro  0004351a  00000000  00000000  001ca108  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line   000535a8  00000000  00000000  0020d622  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    0018661a  00000000  00000000  00260bca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .comment      000000cf  00000000  00000000  003e71e4  2**0
                  CONTENTS, READONLY
 24 .debug_frame  00008da0  00000000  00000000  003e72b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loc    0002c15a  00000000  00000000  003f0054  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002d0 <__do_global_dtors_aux>:
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4c05      	ldr	r4, [pc, #20]	; (80002e8 <__do_global_dtors_aux+0x18>)
 80002d4:	7823      	ldrb	r3, [r4, #0]
 80002d6:	b933      	cbnz	r3, 80002e6 <__do_global_dtors_aux+0x16>
 80002d8:	4b04      	ldr	r3, [pc, #16]	; (80002ec <__do_global_dtors_aux+0x1c>)
 80002da:	b113      	cbz	r3, 80002e2 <__do_global_dtors_aux+0x12>
 80002dc:	4804      	ldr	r0, [pc, #16]	; (80002f0 <__do_global_dtors_aux+0x20>)
 80002de:	f3af 8000 	nop.w
 80002e2:	2301      	movs	r3, #1
 80002e4:	7023      	strb	r3, [r4, #0]
 80002e6:	bd10      	pop	{r4, pc}
 80002e8:	24000114 	.word	0x24000114
 80002ec:	00000000 	.word	0x00000000
 80002f0:	0801d9f8 	.word	0x0801d9f8

080002f4 <frame_dummy>:
 80002f4:	b508      	push	{r3, lr}
 80002f6:	4b03      	ldr	r3, [pc, #12]	; (8000304 <frame_dummy+0x10>)
 80002f8:	b11b      	cbz	r3, 8000302 <frame_dummy+0xe>
 80002fa:	4903      	ldr	r1, [pc, #12]	; (8000308 <frame_dummy+0x14>)
 80002fc:	4803      	ldr	r0, [pc, #12]	; (800030c <frame_dummy+0x18>)
 80002fe:	f3af 8000 	nop.w
 8000302:	bd08      	pop	{r3, pc}
 8000304:	00000000 	.word	0x00000000
 8000308:	24000118 	.word	0x24000118
 800030c:	0801d9f8 	.word	0x0801d9f8

08000310 <memchr>:
 8000310:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000314:	2a10      	cmp	r2, #16
 8000316:	db2b      	blt.n	8000370 <memchr+0x60>
 8000318:	f010 0f07 	tst.w	r0, #7
 800031c:	d008      	beq.n	8000330 <memchr+0x20>
 800031e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000322:	3a01      	subs	r2, #1
 8000324:	428b      	cmp	r3, r1
 8000326:	d02d      	beq.n	8000384 <memchr+0x74>
 8000328:	f010 0f07 	tst.w	r0, #7
 800032c:	b342      	cbz	r2, 8000380 <memchr+0x70>
 800032e:	d1f6      	bne.n	800031e <memchr+0xe>
 8000330:	b4f0      	push	{r4, r5, r6, r7}
 8000332:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000336:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800033a:	f022 0407 	bic.w	r4, r2, #7
 800033e:	f07f 0700 	mvns.w	r7, #0
 8000342:	2300      	movs	r3, #0
 8000344:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000348:	3c08      	subs	r4, #8
 800034a:	ea85 0501 	eor.w	r5, r5, r1
 800034e:	ea86 0601 	eor.w	r6, r6, r1
 8000352:	fa85 f547 	uadd8	r5, r5, r7
 8000356:	faa3 f587 	sel	r5, r3, r7
 800035a:	fa86 f647 	uadd8	r6, r6, r7
 800035e:	faa5 f687 	sel	r6, r5, r7
 8000362:	b98e      	cbnz	r6, 8000388 <memchr+0x78>
 8000364:	d1ee      	bne.n	8000344 <memchr+0x34>
 8000366:	bcf0      	pop	{r4, r5, r6, r7}
 8000368:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800036c:	f002 0207 	and.w	r2, r2, #7
 8000370:	b132      	cbz	r2, 8000380 <memchr+0x70>
 8000372:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000376:	3a01      	subs	r2, #1
 8000378:	ea83 0301 	eor.w	r3, r3, r1
 800037c:	b113      	cbz	r3, 8000384 <memchr+0x74>
 800037e:	d1f8      	bne.n	8000372 <memchr+0x62>
 8000380:	2000      	movs	r0, #0
 8000382:	4770      	bx	lr
 8000384:	3801      	subs	r0, #1
 8000386:	4770      	bx	lr
 8000388:	2d00      	cmp	r5, #0
 800038a:	bf06      	itte	eq
 800038c:	4635      	moveq	r5, r6
 800038e:	3803      	subeq	r0, #3
 8000390:	3807      	subne	r0, #7
 8000392:	f015 0f01 	tst.w	r5, #1
 8000396:	d107      	bne.n	80003a8 <memchr+0x98>
 8000398:	3001      	adds	r0, #1
 800039a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800039e:	bf02      	ittt	eq
 80003a0:	3001      	addeq	r0, #1
 80003a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80003a6:	3001      	addeq	r0, #1
 80003a8:	bcf0      	pop	{r4, r5, r6, r7}
 80003aa:	3801      	subs	r0, #1
 80003ac:	4770      	bx	lr
 80003ae:	bf00      	nop

080003b0 <__aeabi_drsub>:
 80003b0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80003b4:	e002      	b.n	80003bc <__adddf3>
 80003b6:	bf00      	nop

080003b8 <__aeabi_dsub>:
 80003b8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080003bc <__adddf3>:
 80003bc:	b530      	push	{r4, r5, lr}
 80003be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80003c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80003c6:	ea94 0f05 	teq	r4, r5
 80003ca:	bf08      	it	eq
 80003cc:	ea90 0f02 	teqeq	r0, r2
 80003d0:	bf1f      	itttt	ne
 80003d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80003d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80003da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80003de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003e2:	f000 80e2 	beq.w	80005aa <__adddf3+0x1ee>
 80003e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80003ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80003ee:	bfb8      	it	lt
 80003f0:	426d      	neglt	r5, r5
 80003f2:	dd0c      	ble.n	800040e <__adddf3+0x52>
 80003f4:	442c      	add	r4, r5
 80003f6:	ea80 0202 	eor.w	r2, r0, r2
 80003fa:	ea81 0303 	eor.w	r3, r1, r3
 80003fe:	ea82 0000 	eor.w	r0, r2, r0
 8000402:	ea83 0101 	eor.w	r1, r3, r1
 8000406:	ea80 0202 	eor.w	r2, r0, r2
 800040a:	ea81 0303 	eor.w	r3, r1, r3
 800040e:	2d36      	cmp	r5, #54	; 0x36
 8000410:	bf88      	it	hi
 8000412:	bd30      	pophi	{r4, r5, pc}
 8000414:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000418:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800041c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000420:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000424:	d002      	beq.n	800042c <__adddf3+0x70>
 8000426:	4240      	negs	r0, r0
 8000428:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800042c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000430:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000434:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000438:	d002      	beq.n	8000440 <__adddf3+0x84>
 800043a:	4252      	negs	r2, r2
 800043c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000440:	ea94 0f05 	teq	r4, r5
 8000444:	f000 80a7 	beq.w	8000596 <__adddf3+0x1da>
 8000448:	f1a4 0401 	sub.w	r4, r4, #1
 800044c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000450:	db0d      	blt.n	800046e <__adddf3+0xb2>
 8000452:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000456:	fa22 f205 	lsr.w	r2, r2, r5
 800045a:	1880      	adds	r0, r0, r2
 800045c:	f141 0100 	adc.w	r1, r1, #0
 8000460:	fa03 f20e 	lsl.w	r2, r3, lr
 8000464:	1880      	adds	r0, r0, r2
 8000466:	fa43 f305 	asr.w	r3, r3, r5
 800046a:	4159      	adcs	r1, r3
 800046c:	e00e      	b.n	800048c <__adddf3+0xd0>
 800046e:	f1a5 0520 	sub.w	r5, r5, #32
 8000472:	f10e 0e20 	add.w	lr, lr, #32
 8000476:	2a01      	cmp	r2, #1
 8000478:	fa03 fc0e 	lsl.w	ip, r3, lr
 800047c:	bf28      	it	cs
 800047e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000482:	fa43 f305 	asr.w	r3, r3, r5
 8000486:	18c0      	adds	r0, r0, r3
 8000488:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800048c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000490:	d507      	bpl.n	80004a2 <__adddf3+0xe6>
 8000492:	f04f 0e00 	mov.w	lr, #0
 8000496:	f1dc 0c00 	rsbs	ip, ip, #0
 800049a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800049e:	eb6e 0101 	sbc.w	r1, lr, r1
 80004a2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80004a6:	d31b      	bcc.n	80004e0 <__adddf3+0x124>
 80004a8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80004ac:	d30c      	bcc.n	80004c8 <__adddf3+0x10c>
 80004ae:	0849      	lsrs	r1, r1, #1
 80004b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80004b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80004b8:	f104 0401 	add.w	r4, r4, #1
 80004bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80004c0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80004c4:	f080 809a 	bcs.w	80005fc <__adddf3+0x240>
 80004c8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80004cc:	bf08      	it	eq
 80004ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80004d2:	f150 0000 	adcs.w	r0, r0, #0
 80004d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80004da:	ea41 0105 	orr.w	r1, r1, r5
 80004de:	bd30      	pop	{r4, r5, pc}
 80004e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80004e4:	4140      	adcs	r0, r0
 80004e6:	eb41 0101 	adc.w	r1, r1, r1
 80004ea:	3c01      	subs	r4, #1
 80004ec:	bf28      	it	cs
 80004ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80004f2:	d2e9      	bcs.n	80004c8 <__adddf3+0x10c>
 80004f4:	f091 0f00 	teq	r1, #0
 80004f8:	bf04      	itt	eq
 80004fa:	4601      	moveq	r1, r0
 80004fc:	2000      	moveq	r0, #0
 80004fe:	fab1 f381 	clz	r3, r1
 8000502:	bf08      	it	eq
 8000504:	3320      	addeq	r3, #32
 8000506:	f1a3 030b 	sub.w	r3, r3, #11
 800050a:	f1b3 0220 	subs.w	r2, r3, #32
 800050e:	da0c      	bge.n	800052a <__adddf3+0x16e>
 8000510:	320c      	adds	r2, #12
 8000512:	dd08      	ble.n	8000526 <__adddf3+0x16a>
 8000514:	f102 0c14 	add.w	ip, r2, #20
 8000518:	f1c2 020c 	rsb	r2, r2, #12
 800051c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000520:	fa21 f102 	lsr.w	r1, r1, r2
 8000524:	e00c      	b.n	8000540 <__adddf3+0x184>
 8000526:	f102 0214 	add.w	r2, r2, #20
 800052a:	bfd8      	it	le
 800052c:	f1c2 0c20 	rsble	ip, r2, #32
 8000530:	fa01 f102 	lsl.w	r1, r1, r2
 8000534:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000538:	bfdc      	itt	le
 800053a:	ea41 010c 	orrle.w	r1, r1, ip
 800053e:	4090      	lslle	r0, r2
 8000540:	1ae4      	subs	r4, r4, r3
 8000542:	bfa2      	ittt	ge
 8000544:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000548:	4329      	orrge	r1, r5
 800054a:	bd30      	popge	{r4, r5, pc}
 800054c:	ea6f 0404 	mvn.w	r4, r4
 8000550:	3c1f      	subs	r4, #31
 8000552:	da1c      	bge.n	800058e <__adddf3+0x1d2>
 8000554:	340c      	adds	r4, #12
 8000556:	dc0e      	bgt.n	8000576 <__adddf3+0x1ba>
 8000558:	f104 0414 	add.w	r4, r4, #20
 800055c:	f1c4 0220 	rsb	r2, r4, #32
 8000560:	fa20 f004 	lsr.w	r0, r0, r4
 8000564:	fa01 f302 	lsl.w	r3, r1, r2
 8000568:	ea40 0003 	orr.w	r0, r0, r3
 800056c:	fa21 f304 	lsr.w	r3, r1, r4
 8000570:	ea45 0103 	orr.w	r1, r5, r3
 8000574:	bd30      	pop	{r4, r5, pc}
 8000576:	f1c4 040c 	rsb	r4, r4, #12
 800057a:	f1c4 0220 	rsb	r2, r4, #32
 800057e:	fa20 f002 	lsr.w	r0, r0, r2
 8000582:	fa01 f304 	lsl.w	r3, r1, r4
 8000586:	ea40 0003 	orr.w	r0, r0, r3
 800058a:	4629      	mov	r1, r5
 800058c:	bd30      	pop	{r4, r5, pc}
 800058e:	fa21 f004 	lsr.w	r0, r1, r4
 8000592:	4629      	mov	r1, r5
 8000594:	bd30      	pop	{r4, r5, pc}
 8000596:	f094 0f00 	teq	r4, #0
 800059a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800059e:	bf06      	itte	eq
 80005a0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80005a4:	3401      	addeq	r4, #1
 80005a6:	3d01      	subne	r5, #1
 80005a8:	e74e      	b.n	8000448 <__adddf3+0x8c>
 80005aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005ae:	bf18      	it	ne
 80005b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005b4:	d029      	beq.n	800060a <__adddf3+0x24e>
 80005b6:	ea94 0f05 	teq	r4, r5
 80005ba:	bf08      	it	eq
 80005bc:	ea90 0f02 	teqeq	r0, r2
 80005c0:	d005      	beq.n	80005ce <__adddf3+0x212>
 80005c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80005c6:	bf04      	itt	eq
 80005c8:	4619      	moveq	r1, r3
 80005ca:	4610      	moveq	r0, r2
 80005cc:	bd30      	pop	{r4, r5, pc}
 80005ce:	ea91 0f03 	teq	r1, r3
 80005d2:	bf1e      	ittt	ne
 80005d4:	2100      	movne	r1, #0
 80005d6:	2000      	movne	r0, #0
 80005d8:	bd30      	popne	{r4, r5, pc}
 80005da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80005de:	d105      	bne.n	80005ec <__adddf3+0x230>
 80005e0:	0040      	lsls	r0, r0, #1
 80005e2:	4149      	adcs	r1, r1
 80005e4:	bf28      	it	cs
 80005e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80005ea:	bd30      	pop	{r4, r5, pc}
 80005ec:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80005f0:	bf3c      	itt	cc
 80005f2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80005f6:	bd30      	popcc	{r4, r5, pc}
 80005f8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005fc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000600:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000604:	f04f 0000 	mov.w	r0, #0
 8000608:	bd30      	pop	{r4, r5, pc}
 800060a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800060e:	bf1a      	itte	ne
 8000610:	4619      	movne	r1, r3
 8000612:	4610      	movne	r0, r2
 8000614:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000618:	bf1c      	itt	ne
 800061a:	460b      	movne	r3, r1
 800061c:	4602      	movne	r2, r0
 800061e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000622:	bf06      	itte	eq
 8000624:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000628:	ea91 0f03 	teqeq	r1, r3
 800062c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000630:	bd30      	pop	{r4, r5, pc}
 8000632:	bf00      	nop

08000634 <__aeabi_ui2d>:
 8000634:	f090 0f00 	teq	r0, #0
 8000638:	bf04      	itt	eq
 800063a:	2100      	moveq	r1, #0
 800063c:	4770      	bxeq	lr
 800063e:	b530      	push	{r4, r5, lr}
 8000640:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000644:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000648:	f04f 0500 	mov.w	r5, #0
 800064c:	f04f 0100 	mov.w	r1, #0
 8000650:	e750      	b.n	80004f4 <__adddf3+0x138>
 8000652:	bf00      	nop

08000654 <__aeabi_i2d>:
 8000654:	f090 0f00 	teq	r0, #0
 8000658:	bf04      	itt	eq
 800065a:	2100      	moveq	r1, #0
 800065c:	4770      	bxeq	lr
 800065e:	b530      	push	{r4, r5, lr}
 8000660:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000664:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000668:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800066c:	bf48      	it	mi
 800066e:	4240      	negmi	r0, r0
 8000670:	f04f 0100 	mov.w	r1, #0
 8000674:	e73e      	b.n	80004f4 <__adddf3+0x138>
 8000676:	bf00      	nop

08000678 <__aeabi_f2d>:
 8000678:	0042      	lsls	r2, r0, #1
 800067a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800067e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000682:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000686:	bf1f      	itttt	ne
 8000688:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800068c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000690:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000694:	4770      	bxne	lr
 8000696:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800069a:	bf08      	it	eq
 800069c:	4770      	bxeq	lr
 800069e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80006a2:	bf04      	itt	eq
 80006a4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80006a8:	4770      	bxeq	lr
 80006aa:	b530      	push	{r4, r5, lr}
 80006ac:	f44f 7460 	mov.w	r4, #896	; 0x380
 80006b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80006b4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006b8:	e71c      	b.n	80004f4 <__adddf3+0x138>
 80006ba:	bf00      	nop

080006bc <__aeabi_ul2d>:
 80006bc:	ea50 0201 	orrs.w	r2, r0, r1
 80006c0:	bf08      	it	eq
 80006c2:	4770      	bxeq	lr
 80006c4:	b530      	push	{r4, r5, lr}
 80006c6:	f04f 0500 	mov.w	r5, #0
 80006ca:	e00a      	b.n	80006e2 <__aeabi_l2d+0x16>

080006cc <__aeabi_l2d>:
 80006cc:	ea50 0201 	orrs.w	r2, r0, r1
 80006d0:	bf08      	it	eq
 80006d2:	4770      	bxeq	lr
 80006d4:	b530      	push	{r4, r5, lr}
 80006d6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80006da:	d502      	bpl.n	80006e2 <__aeabi_l2d+0x16>
 80006dc:	4240      	negs	r0, r0
 80006de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006e2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006e6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80006ee:	f43f aed8 	beq.w	80004a2 <__adddf3+0xe6>
 80006f2:	f04f 0203 	mov.w	r2, #3
 80006f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006fa:	bf18      	it	ne
 80006fc:	3203      	addne	r2, #3
 80006fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000702:	bf18      	it	ne
 8000704:	3203      	addne	r2, #3
 8000706:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800070a:	f1c2 0320 	rsb	r3, r2, #32
 800070e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000712:	fa20 f002 	lsr.w	r0, r0, r2
 8000716:	fa01 fe03 	lsl.w	lr, r1, r3
 800071a:	ea40 000e 	orr.w	r0, r0, lr
 800071e:	fa21 f102 	lsr.w	r1, r1, r2
 8000722:	4414      	add	r4, r2
 8000724:	e6bd      	b.n	80004a2 <__adddf3+0xe6>
 8000726:	bf00      	nop

08000728 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8000728:	4901      	ldr	r1, [pc, #4]	; (8000730 <vApplicationIdleHook+0x8>)
 800072a:	2000      	movs	r0, #0
 800072c:	f009 b986 	b.w	8009a3c <vTaskSetApplicationTaskTag>
 8000730:	080019d1 	.word	0x080019d1

08000734 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000734:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000736:	2064      	movs	r0, #100	; 0x64
 8000738:	f007 fd25 	bl	8008186 <osDelay>
  for(;;)
 800073c:	e7fb      	b.n	8000736 <StartDefaultTask+0x2>
	...

08000740 <SystemClock_Config>:
{
 8000740:	b510      	push	{r4, lr}
 8000742:	b09c      	sub	sp, #112	; 0x70
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000744:	224c      	movs	r2, #76	; 0x4c
 8000746:	2100      	movs	r1, #0
 8000748:	a809      	add	r0, sp, #36	; 0x24
 800074a:	f01c f9bf 	bl	801cacc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800074e:	2220      	movs	r2, #32
 8000750:	2100      	movs	r1, #0
 8000752:	a801      	add	r0, sp, #4
 8000754:	f01c f9ba 	bl	801cacc <memset>
  HAL_PWREx_ConfigSupply(PWR_DIRECT_SMPS_SUPPLY);
 8000758:	2004      	movs	r0, #4
 800075a:	f006 f841 	bl	80067e0 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 800075e:	2300      	movs	r3, #0
 8000760:	9300      	str	r3, [sp, #0]
 8000762:	4b1b      	ldr	r3, [pc, #108]	; (80007d0 <SystemClock_Config+0x90>)
 8000764:	699a      	ldr	r2, [r3, #24]
 8000766:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800076a:	619a      	str	r2, [r3, #24]
 800076c:	699a      	ldr	r2, [r3, #24]
 800076e:	f402 4240 	and.w	r2, r2, #49152	; 0xc000
 8000772:	9200      	str	r2, [sp, #0]
 8000774:	9a00      	ldr	r2, [sp, #0]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 8000776:	699a      	ldr	r2, [r3, #24]
 8000778:	0491      	lsls	r1, r2, #18
 800077a:	d5fc      	bpl.n	8000776 <SystemClock_Config+0x36>
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800077c:	2201      	movs	r2, #1
 800077e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8000782:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLN = 44;
 8000784:	212c      	movs	r1, #44	; 0x2c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000786:	a809      	add	r0, sp, #36	; 0x24
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000788:	941b      	str	r4, [sp, #108]	; 0x6c
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800078a:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800078e:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000790:	e9cd 3312 	strd	r3, r3, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLM = 2;
 8000794:	9314      	str	r3, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000796:	e9cd 3317 	strd	r3, r3, [sp, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 800079a:	230c      	movs	r3, #12
  RCC_OscInitStruct.PLL.PLLP = 1;
 800079c:	e9cd 1215 	strd	r1, r2, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 80007a0:	e9cd 3419 	strd	r3, r4, [sp, #100]	; 0x64
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80007a4:	f006 f85a 	bl	800685c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80007a8:	2103      	movs	r1, #3
 80007aa:	233f      	movs	r3, #63	; 0x3f
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 80007ac:	2208      	movs	r2, #8
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 80007ae:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 80007b0:	9403      	str	r4, [sp, #12]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80007b2:	e9cd 3101 	strd	r3, r1, [sp, #4]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 80007b6:	2340      	movs	r3, #64	; 0x40
 80007b8:	e9cd 2304 	strd	r2, r3, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 80007bc:	f44f 6280 	mov.w	r2, #1024	; 0x400
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 80007c0:	9306      	str	r3, [sp, #24]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 80007c2:	e9cd 2307 	strd	r2, r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 80007c6:	f006 fb69 	bl	8006e9c <HAL_RCC_ClockConfig>
}
 80007ca:	b01c      	add	sp, #112	; 0x70
 80007cc:	bd10      	pop	{r4, pc}
 80007ce:	bf00      	nop
 80007d0:	58024800 	.word	0x58024800

080007d4 <PeriphCommonClock_Config>:
{
 80007d4:	b500      	push	{lr}
 80007d6:	b0af      	sub	sp, #188	; 0xbc
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80007d8:	2100      	movs	r1, #0
 80007da:	2298      	movs	r2, #152	; 0x98
 80007dc:	a808      	add	r0, sp, #32
 80007de:	f01c f975 	bl	801cacc <memset>
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI;
 80007e2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80007e6:	2300      	movs	r3, #0
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80007e8:	4668      	mov	r0, sp
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI;
 80007ea:	e9cd 2300 	strd	r2, r3, [sp]
  PeriphClkInitStruct.PLL2.PLL2N = 80;
 80007ee:	2205      	movs	r2, #5
 80007f0:	2350      	movs	r3, #80	; 0x50
 80007f2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  PeriphClkInitStruct.PLL2.PLL2P = 2;
 80007f6:	2302      	movs	r3, #2
  PeriphClkInitStruct.PLL2.PLL2Q = 2;
 80007f8:	e9cd 3304 	strd	r3, r3, [sp, #16]
  PeriphClkInitStruct.PLL2.PLL2R = 2;
 80007fc:	9306      	str	r3, [sp, #24]
  PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_2;
 80007fe:	2380      	movs	r3, #128	; 0x80
 8000800:	9307      	str	r3, [sp, #28]
  PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_PLL2;
 8000802:	2320      	movs	r3, #32
 8000804:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000806:	f006 fdcf 	bl	80073a8 <HAL_RCCEx_PeriphCLKConfig>
}
 800080a:	b02f      	add	sp, #188	; 0xbc
 800080c:	f85d fb04 	ldr.w	pc, [sp], #4

08000810 <main>:
{
 8000810:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8000814:	b0a1      	sub	sp, #132	; 0x84

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000816:	2210      	movs	r2, #16
 8000818:	2100      	movs	r1, #0
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  MPU_InitStruct.BaseAddress = 0x24000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 800081a:	f04f 5410 	mov.w	r4, #603979776	; 0x24000000
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 800081e:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000820:	2501      	movs	r5, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000822:	f01c f953 	bl	801cacc <memset>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x70000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 8000826:	271c      	movs	r7, #28
  HAL_MPU_Disable();
 8000828:	f004 f92e 	bl	8004a88 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 800082c:	4bd5      	ldr	r3, [pc, #852]	; (8000b84 <main+0x374>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800082e:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000830:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_8MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8000834:	2603      	movs	r6, #3
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 8000836:	e9cd 4314 	strd	r4, r3, [sp, #80]	; 0x50
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 800083a:	4bd3      	ldr	r3, [pc, #844]	; (8000b88 <main+0x378>)
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 800083c:	2400      	movs	r4, #0
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 800083e:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000840:	f004 f940 	bl	8004ac4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x70000000;
 8000844:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000848:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 800084a:	f88d 4057 	strb.w	r4, [sp, #87]	; 0x57
  MPU_InitStruct.BaseAddress = 0x70000000;
 800084e:	9314      	str	r3, [sp, #80]	; 0x50
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 8000850:	f8ad 405a 	strh.w	r4, [sp, #90]	; 0x5a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 8000854:	f88d 504d 	strb.w	r5, [sp, #77]	; 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 8000858:	f88d 7054 	strb.w	r7, [sp, #84]	; 0x54
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800085c:	f004 f932 	bl	8004ac4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 8000860:	2302      	movs	r3, #2
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000862:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8000864:	f88d 6057 	strb.w	r6, [sp, #87]	; 0x57
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 8000868:	f88d 304d 	strb.w	r3, [sp, #77]	; 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_8MB;
 800086c:	2316      	movs	r3, #22
 800086e:	f88d 3054 	strb.w	r3, [sp, #84]	; 0x54
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8000872:	f240 1301 	movw	r3, #257	; 0x101
 8000876:	f8ad 305a 	strh.w	r3, [sp, #90]	; 0x5a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800087a:	f004 f923 	bl	8004ac4 <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0x90000000;
 800087e:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000882:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 8000884:	f88d 4057 	strb.w	r4, [sp, #87]	; 0x57
  MPU_InitStruct.BaseAddress = 0x90000000;
 8000888:	9314      	str	r3, [sp, #80]	; 0x50
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 800088a:	f8ad 405a 	strh.w	r4, [sp, #90]	; 0x5a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 800088e:	2404      	movs	r4, #4
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 8000890:	f88d 604d 	strb.w	r6, [sp, #77]	; 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 8000894:	f88d 7054 	strb.w	r7, [sp, #84]	; 0x54
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000898:	f004 f914 	bl	8004ac4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_64MB;
 800089c:	2319      	movs	r3, #25
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800089e:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 80008a0:	f88d 404d 	strb.w	r4, [sp, #77]	; 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_64MB;
 80008a4:	f88d 3054 	strb.w	r3, [sp, #84]	; 0x54
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 80008a8:	f88d 6057 	strb.w	r6, [sp, #87]	; 0x57
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 80008ac:	f88d 505a 	strb.w	r5, [sp, #90]	; 0x5a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80008b0:	f004 f908 	bl	8004ac4 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 80008b4:	4620      	mov	r0, r4
 80008b6:	f004 f8f5 	bl	8004aa4 <HAL_MPU_Enable>
  \details Turns on I-Cache
  */
__STATIC_FORCEINLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80008ba:	4bb4      	ldr	r3, [pc, #720]	; (8000b8c <main+0x37c>)
 80008bc:	695a      	ldr	r2, [r3, #20]
 80008be:	f412 3200 	ands.w	r2, r2, #131072	; 0x20000
 80008c2:	d111      	bne.n	80008e8 <main+0xd8>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80008c4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80008c8:	f3bf 8f6f 	isb	sy

    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80008cc:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80008d0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80008d4:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 80008d8:	695a      	ldr	r2, [r3, #20]
 80008da:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80008de:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 80008e0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80008e4:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 80008e8:	4aa8      	ldr	r2, [pc, #672]	; (8000b8c <main+0x37c>)
 80008ea:	6953      	ldr	r3, [r2, #20]
 80008ec:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 80008f0:	d123      	bne.n	800093a <main+0x12a>

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 80008f2:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80008f6:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 80008fa:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80008fe:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000902:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8000906:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800090a:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800090c:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000910:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000912:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8000916:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000918:	f8c2 5260 	str.w	r5, [r2, #608]	; 0x260
      } while (ways-- != 0U);
 800091c:	d2f9      	bcs.n	8000912 <main+0x102>
    } while(sets-- != 0U);
 800091e:	3b20      	subs	r3, #32
 8000920:	f113 0f20 	cmn.w	r3, #32
 8000924:	d1f2      	bne.n	800090c <main+0xfc>
 8000926:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 800092a:	6953      	ldr	r3, [r2, #20]
 800092c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000930:	6153      	str	r3, [r2, #20]
 8000932:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000936:	f3bf 8f6f 	isb	sy
  HAL_Init();
 800093a:	f004 f801 	bl	8004940 <HAL_Init>
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800093e:	2400      	movs	r4, #0
  SystemClock_Config();
 8000940:	f7ff fefe 	bl	8000740 <SystemClock_Config>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000944:	2601      	movs	r6, #1
  PeriphCommonClock_Config();
 8000946:	f7ff ff45 	bl	80007d4 <PeriphCommonClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800094a:	2214      	movs	r2, #20
 800094c:	2100      	movs	r1, #0
 800094e:	a813      	add	r0, sp, #76	; 0x4c
 8000950:	f01c f8bc 	bl	801cacc <memset>
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000954:	4b8e      	ldr	r3, [pc, #568]	; (8000b90 <main+0x380>)
  HAL_GPIO_WritePin(GPIOG, LCD_BL_CTRL_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 8000956:	f248 0108 	movw	r1, #32776	; 0x8008
 800095a:	488e      	ldr	r0, [pc, #568]	; (8000b94 <main+0x384>)
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800095c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000960:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Pin = RENDER_TIME_Pin;
 8000964:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Pin = LCD_DISP_Pin;
 8000968:	f44f 6780 	mov.w	r7, #1024	; 0x400
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800096c:	f042 0202 	orr.w	r2, r2, #2
  hltdc.Instance = LTDC;
 8000970:	4d89      	ldr	r5, [pc, #548]	; (8000b98 <main+0x388>)
  pLayerCfg.FBStartAdress = 0x70000000;
 8000972:	f04f 0a05 	mov.w	sl, #5
  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 8000976:	f04f 0b18 	mov.w	fp, #24
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800097a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800097e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000982:	f002 0202 	and.w	r2, r2, #2
 8000986:	9200      	str	r2, [sp, #0]
 8000988:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800098a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800098e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000992:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000996:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800099a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800099e:	9201      	str	r2, [sp, #4]
 80009a0:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80009a2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80009a6:	f042 0208 	orr.w	r2, r2, #8
 80009aa:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80009ae:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80009b2:	f002 0208 	and.w	r2, r2, #8
 80009b6:	9202      	str	r2, [sp, #8]
 80009b8:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80009ba:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80009be:	f042 0210 	orr.w	r2, r2, #16
 80009c2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80009c6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80009ca:	f002 0210 	and.w	r2, r2, #16
 80009ce:	9203      	str	r2, [sp, #12]
 80009d0:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80009d2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80009d6:	f042 0201 	orr.w	r2, r2, #1
 80009da:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80009de:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80009e2:	f002 0201 	and.w	r2, r2, #1
 80009e6:	9204      	str	r2, [sp, #16]
 80009e8:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80009ea:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80009ee:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80009f2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80009f6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80009fa:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80009fe:	9205      	str	r2, [sp, #20]
 8000a00:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000a02:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000a06:	f042 0204 	orr.w	r2, r2, #4
 8000a0a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000a0e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000a12:	f002 0204 	and.w	r2, r2, #4
 8000a16:	9206      	str	r2, [sp, #24]
 8000a18:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a1a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000a1e:	f042 0220 	orr.w	r2, r2, #32
 8000a22:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  HAL_GPIO_WritePin(GPIOG, LCD_BL_CTRL_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 8000a26:	2200      	movs	r2, #0
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a28:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000a2c:	f003 0320 	and.w	r3, r3, #32
 8000a30:	9307      	str	r3, [sp, #28]
 8000a32:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOG, LCD_BL_CTRL_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 8000a34:	f004 fb24 	bl	8005080 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, MCU_ACTIVE_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000a38:	2200      	movs	r2, #0
 8000a3a:	f44f 4140 	mov.w	r1, #49152	; 0xc000
 8000a3e:	4857      	ldr	r0, [pc, #348]	; (8000b9c <main+0x38c>)
 8000a40:	f004 fb1e 	bl	8005080 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_RESET);
 8000a44:	2200      	movs	r2, #0
 8000a46:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000a4a:	4855      	ldr	r0, [pc, #340]	; (8000ba0 <main+0x390>)
 8000a4c:	f004 fb18 	bl	8005080 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(UserLED2_GPIO_Port, UserLED2_Pin, GPIO_PIN_SET);
 8000a50:	2201      	movs	r2, #1
 8000a52:	2104      	movs	r1, #4
 8000a54:	4853      	ldr	r0, [pc, #332]	; (8000ba4 <main+0x394>)
 8000a56:	f004 fb13 	bl	8005080 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(UserLED1_GPIO_Port, UserLED1_Pin, GPIO_PIN_RESET);
 8000a5a:	2200      	movs	r2, #0
 8000a5c:	2108      	movs	r1, #8
 8000a5e:	4851      	ldr	r0, [pc, #324]	; (8000ba4 <main+0x394>)
 8000a60:	f004 fb0e 	bl	8005080 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000a64:	2200      	movs	r2, #0
 8000a66:	2101      	movs	r1, #1
 8000a68:	484f      	ldr	r0, [pc, #316]	; (8000ba8 <main+0x398>)
 8000a6a:	f004 fb09 	bl	8005080 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a6e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 8000a72:	a913      	add	r1, sp, #76	; 0x4c
 8000a74:	4847      	ldr	r0, [pc, #284]	; (8000b94 <main+0x384>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a76:	e9cd 3613 	strd	r3, r6, [sp, #76]	; 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a7a:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 8000a7e:	f004 f977 	bl	8004d70 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8000a82:	a913      	add	r1, sp, #76	; 0x4c
 8000a84:	4843      	ldr	r0, [pc, #268]	; (8000b94 <main+0x384>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a86:	9415      	str	r4, [sp, #84]	; 0x54
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a88:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a8c:	e9cd 9613 	strd	r9, r6, [sp, #76]	; 0x4c
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8000a90:	f004 f96e 	bl	8004d70 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin|FRAME_RATE_Pin;
 8000a94:	f44f 4340 	mov.w	r3, #49152	; 0xc000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000a98:	a913      	add	r1, sp, #76	; 0x4c
 8000a9a:	4840      	ldr	r0, [pc, #256]	; (8000b9c <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a9c:	e9cd 3613 	strd	r3, r6, [sp, #76]	; 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000aa0:	e9cd 4815 	strd	r4, r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000aa4:	f004 f964 	bl	8004d70 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 8000aa8:	a913      	add	r1, sp, #76	; 0x4c
 8000aaa:	483d      	ldr	r0, [pc, #244]	; (8000ba0 <main+0x390>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000aac:	e9cd 7613 	strd	r7, r6, [sp, #76]	; 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ab0:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 8000ab4:	f004 f95c 	bl	8004d70 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = UserLED2_Pin|UserLED1_Pin;
 8000ab8:	230c      	movs	r3, #12
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000aba:	a913      	add	r1, sp, #76	; 0x4c
 8000abc:	4839      	ldr	r0, [pc, #228]	; (8000ba4 <main+0x394>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000abe:	e9cd 3613 	strd	r3, r6, [sp, #76]	; 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ac2:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ac6:	f004 f953 	bl	8004d70 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8000aca:	a913      	add	r1, sp, #76	; 0x4c
 8000acc:	4836      	ldr	r0, [pc, #216]	; (8000ba8 <main+0x398>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ace:	e9cd 6613 	strd	r6, r6, [sp, #76]	; 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ad2:	e9cd 4815 	strd	r4, r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8000ad6:	f004 f94b 	bl	8004d70 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8000ada:	4834      	ldr	r0, [pc, #208]	; (8000bac <main+0x39c>)
 8000adc:	4b34      	ldr	r3, [pc, #208]	; (8000bb0 <main+0x3a0>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000ade:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
 8000ae0:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000ae2:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000ae4:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000ae8:	f004 f818 	bl	8004b1c <HAL_CRC_Init>
  hdma2d.Init.Mode = DMA2D_R2M;
 8000aec:	f44f 3340 	mov.w	r3, #196608	; 0x30000
  hdma2d.Instance = DMA2D;
 8000af0:	4830      	ldr	r0, [pc, #192]	; (8000bb4 <main+0x3a4>)
  hdma2d.Init.Mode = DMA2D_R2M;
 8000af2:	4a31      	ldr	r2, [pc, #196]	; (8000bb8 <main+0x3a8>)
  hdma2d.Init.OutputOffset = 0;
 8000af4:	e9c0 6402 	strd	r6, r4, [r0, #8]
  hdma2d.Init.Mode = DMA2D_R2M;
 8000af8:	e9c0 2300 	strd	r2, r3, [r0]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000afc:	f004 f86e 	bl	8004bdc <HAL_DMA2D_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000b00:	2234      	movs	r2, #52	; 0x34
 8000b02:	4621      	mov	r1, r4
 8000b04:	a813      	add	r0, sp, #76	; 0x4c
 8000b06:	f01b ffe1 	bl	801cacc <memset>
  hltdc.Instance = LTDC;
 8000b0a:	4b2c      	ldr	r3, [pc, #176]	; (8000bbc <main+0x3ac>)
  hltdc.Init.VerticalSync = 9;
 8000b0c:	2128      	movs	r1, #40	; 0x28
  hltdc.Init.AccumulatedVBP = 11;
 8000b0e:	2035      	movs	r0, #53	; 0x35
  hltdc.Init.AccumulatedActiveH = 283;
 8000b10:	f240 2c15 	movw	ip, #533	; 0x215
  hltdc.Init.TotalHeigh = 285;
 8000b14:	f240 2e35 	movw	lr, #565	; 0x235
  hltdc.Init.Backcolor.Blue = 0;
 8000b18:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000b1a:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 8000b1c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000b20:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.VerticalSync = 9;
 8000b24:	2309      	movs	r3, #9
 8000b26:	e9c5 1305 	strd	r1, r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
 8000b2a:	230b      	movs	r3, #11
 8000b2c:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
 8000b30:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000b34:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
 8000b36:	e9c5 c309 	strd	ip, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
 8000b3a:	f240 131d 	movw	r3, #285	; 0x11d
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000b3e:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.TotalHeigh = 285;
 8000b42:	e9c5 e30b 	strd	lr, r3, [r5, #44]	; 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000b46:	f004 fecf 	bl	80058e8 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8000b4a:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowY1 = 272;
 8000b4c:	f44f 7388 	mov.w	r3, #272	; 0x110
  pLayerCfg.WindowX1 = 480;
 8000b50:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000b54:	4628      	mov	r0, r5
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8000b56:	971a      	str	r7, [sp, #104]	; 0x68
  pLayerCfg.WindowX0 = 0;
 8000b58:	9413      	str	r4, [sp, #76]	; 0x4c
  hospi1.Init.ChipSelectHighTime = 2;
 8000b5a:	2702      	movs	r7, #2
  pLayerCfg.Backcolor.Blue = 0;
 8000b5c:	f8ad 407c 	strh.w	r4, [sp, #124]	; 0x7c
  pLayerCfg.Backcolor.Red = 0;
 8000b60:	f88d 407e 	strb.w	r4, [sp, #126]	; 0x7e
  hospi1.Instance = OCTOSPI1;
 8000b64:	4d16      	ldr	r5, [pc, #88]	; (8000bc0 <main+0x3b0>)
  pLayerCfg.Alpha0 = 0;
 8000b66:	e9cd 1418 	strd	r1, r4, [sp, #96]	; 0x60
  pLayerCfg.FBStartAdress = 0x70000000;
 8000b6a:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
  pLayerCfg.ImageHeight = 272;
 8000b6e:	e9cd 231d 	strd	r2, r3, [sp, #116]	; 0x74
  pLayerCfg.FBStartAdress = 0x70000000;
 8000b72:	e9cd a11b 	strd	sl, r1, [sp, #108]	; 0x6c
  pLayerCfg.WindowY0 = 0;
 8000b76:	e9cd 2414 	strd	r2, r4, [sp, #80]	; 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000b7a:	a913      	add	r1, sp, #76	; 0x4c
 8000b7c:	4622      	mov	r2, r4
  hospi1.Init.FifoThreshold = 4;
 8000b7e:	f04f 0a04 	mov.w	sl, #4
 8000b82:	e01f      	b.n	8000bc4 <main+0x3b4>
 8000b84:	03000012 	.word	0x03000012
 8000b88:	01010001 	.word	0x01010001
 8000b8c:	e000ed00 	.word	0xe000ed00
 8000b90:	58024400 	.word	0x58024400
 8000b94:	58021800 	.word	0x58021800
 8000b98:	240001c4 	.word	0x240001c4
 8000b9c:	58020400 	.word	0x58020400
 8000ba0:	58020c00 	.word	0x58020c00
 8000ba4:	58020800 	.word	0x58020800
 8000ba8:	58020000 	.word	0x58020000
 8000bac:	24000138 	.word	0x24000138
 8000bb0:	58024c00 	.word	0x58024c00
 8000bb4:	2400015c 	.word	0x2400015c
 8000bb8:	52001000 	.word	0x52001000
 8000bbc:	50001000 	.word	0x50001000
 8000bc0:	2400026c 	.word	0x2400026c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB888;
 8000bc4:	e9cd 3616 	strd	r3, r6, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000bc8:	f004 ff59 	bl	8005a7e <HAL_LTDC_ConfigLayer>
  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 8000bcc:	4621      	mov	r1, r4
 8000bce:	465a      	mov	r2, fp
 8000bd0:	a813      	add	r0, sp, #76	; 0x4c
 8000bd2:	f01b ff7b 	bl	801cacc <memset>
  hospi1.Init.FifoThreshold = 4;
 8000bd6:	4b54      	ldr	r3, [pc, #336]	; (8000d28 <main+0x518>)
  hospi1.Init.DeviceSize = 32;
 8000bd8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 8000bdc:	4628      	mov	r0, r5
  hospi1.Init.DualQuad = HAL_OSPI_DUALQUAD_DISABLE;
 8000bde:	60ac      	str	r4, [r5, #8]
  hospi1.Init.Refresh = 0;
 8000be0:	63ec      	str	r4, [r5, #60]	; 0x3c
  hospi1.Init.FifoThreshold = 4;
 8000be2:	e9c5 3a00 	strd	r3, sl, [r5]
  hospi1.Init.DeviceSize = 32;
 8000be6:	2320      	movs	r3, #32
  hospi1.Init.FreeRunningClock = HAL_OSPI_FREERUNCLK_DISABLE;
 8000be8:	e9c5 7405 	strd	r7, r4, [r5, #20]
  hospi1.Init.DeviceSize = 32;
 8000bec:	e9c5 2303 	strd	r2, r3, [r5, #12]
  hospi1.Init.WrapSize = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8000bf0:	e9c5 4407 	strd	r4, r4, [r5, #28]
  hospi1.Init.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8000bf4:	e9c5 7409 	strd	r7, r4, [r5, #36]	; 0x24
  hospi1.Init.ChipSelectBoundary = 0;
 8000bf8:	e9c5 440b 	strd	r4, r4, [r5, #44]	; 0x2c
  hospi1.Init.MaxTran = 0;
 8000bfc:	e9c5 940d 	strd	r9, r4, [r5, #52]	; 0x34
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 8000c00:	f005 f8ca 	bl	8005d98 <HAL_OSPI_Init>
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_LOW;
 8000c04:	f04f 1301 	mov.w	r3, #65537	; 0x10001
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000c08:	f241 3288 	movw	r2, #5000	; 0x1388
 8000c0c:	a913      	add	r1, sp, #76	; 0x4c
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_LOW;
 8000c0e:	9316      	str	r3, [sp, #88]	; 0x58
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_1_HIGH;
 8000c10:	f503 037f 	add.w	r3, r3, #16711680	; 0xff0000
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000c14:	4628      	mov	r0, r5
  sOspiManagerCfg.NCSPort = 1;
 8000c16:	9615      	str	r6, [sp, #84]	; 0x54
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_1_HIGH;
 8000c18:	9317      	str	r3, [sp, #92]	; 0x5c
  sOspiManagerCfg.DQSPort = 1;
 8000c1a:	e9cd 6613 	strd	r6, r6, [sp, #76]	; 0x4c
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000c1e:	f005 fb43 	bl	80062a8 <HAL_OSPIM_Config>
  HAL_OSPI_DeInit(&hospi1);
 8000c22:	4628      	mov	r0, r5
 8000c24:	f005 f92c 	bl	8005e80 <HAL_OSPI_DeInit>
  BSP_OSPI_NOR_DeInit(0);
 8000c28:	4620      	mov	r0, r4
  ospi_nor_int.InterfaceMode = BSP_OSPI_NOR_OPI_MODE;
 8000c2a:	f88d 6038 	strb.w	r6, [sp, #56]	; 0x38
  ospi_nor_int.TransferRate  = BSP_OSPI_NOR_DTR_TRANSFER;
 8000c2e:	f88d 6039 	strb.w	r6, [sp, #57]	; 0x39
  BSP_OSPI_NOR_DeInit(0);
 8000c32:	f003 fadd 	bl	80041f0 <BSP_OSPI_NOR_DeInit>
  if(BSP_OSPI_NOR_Init(0, &ospi_nor_int) != BSP_ERROR_NONE)
 8000c36:	a90e      	add	r1, sp, #56	; 0x38
 8000c38:	4620      	mov	r0, r4
 8000c3a:	f003 fbcd 	bl	80043d8 <BSP_OSPI_NOR_Init>
  if(BSP_OSPI_NOR_EnableMemoryMappedMode(0) != BSP_ERROR_NONE)
 8000c3e:	4620      	mov	r0, r4
 8000c40:	f003 fa9e 	bl	8004180 <BSP_OSPI_NOR_EnableMemoryMappedMode>
  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 8000c44:	465a      	mov	r2, fp
 8000c46:	4621      	mov	r1, r4
 8000c48:	a813      	add	r0, sp, #76	; 0x4c
 8000c4a:	f01b ff3f 	bl	801cacc <memset>
  OSPI_HyperbusCfgTypeDef sHyperBusCfg = {0};
 8000c4e:	2210      	movs	r2, #16
 8000c50:	4621      	mov	r1, r4
 8000c52:	a80a      	add	r0, sp, #40	; 0x28
 8000c54:	f01b ff3a 	bl	801cacc <memset>
  OSPI_HyperbusCmdTypeDef sCommand = {0};
 8000c58:	2214      	movs	r2, #20
 8000c5a:	4621      	mov	r1, r4
 8000c5c:	a80e      	add	r0, sp, #56	; 0x38
 8000c5e:	f01b ff35 	bl	801cacc <memset>
  hospi2.Instance = OCTOSPI2;
 8000c62:	4d32      	ldr	r5, [pc, #200]	; (8000d2c <main+0x51c>)
 8000c64:	4b32      	ldr	r3, [pc, #200]	; (8000d30 <main+0x520>)
  hospi2.Init.ChipSelectBoundary = 23;
 8000c66:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  if (HAL_OSPI_Init(&hospi2) != HAL_OK)
 8000c6a:	4628      	mov	r0, r5
  hospi2.Init.DualQuad = HAL_OSPI_DUALQUAD_DISABLE;
 8000c6c:	60ac      	str	r4, [r5, #8]
  hospi2.Init.FifoThreshold = 4;
 8000c6e:	e9c5 3a00 	strd	r3, sl, [r5]
  hospi2.Init.MemoryType = HAL_OSPI_MEMTYPE_HYPERBUS;
 8000c72:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  hospi2.Init.DeviceSize = 24;
 8000c76:	e9c5 3b03 	strd	r3, fp, [r5, #12]
  hospi2.Init.ChipSelectBoundary = 23;
 8000c7a:	2317      	movs	r3, #23
 8000c7c:	e9c5 130b 	strd	r1, r3, [r5, #44]	; 0x2c
  hospi2.Init.Refresh = 400;
 8000c80:	f44f 73c8 	mov.w	r3, #400	; 0x190
  OSPI_MemoryMappedTypeDef sMemMappedCfg = {0};
 8000c84:	e9cd 4408 	strd	r4, r4, [sp, #32]
  hospi2.Init.Refresh = 400;
 8000c88:	63eb      	str	r3, [r5, #60]	; 0x3c
  hospi2.Init.FreeRunningClock = HAL_OSPI_FREERUNCLK_DISABLE;
 8000c8a:	e9c5 a405 	strd	sl, r4, [r5, #20]
  hospi2.Init.WrapSize = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8000c8e:	e9c5 4407 	strd	r4, r4, [r5, #28]
  hospi2.Init.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8000c92:	e9c5 7409 	strd	r7, r4, [r5, #36]	; 0x24
  hospi2.Init.MaxTran = 0;
 8000c96:	e9c5 440d 	strd	r4, r4, [r5, #52]	; 0x34
  if (HAL_OSPI_Init(&hospi2) != HAL_OK)
 8000c9a:	f005 f87d 	bl	8005d98 <HAL_OSPI_Init>
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_2_LOW;
 8000c9e:	4b25      	ldr	r3, [pc, #148]	; (8000d34 <main+0x524>)
  if (HAL_OSPIM_Config(&hospi2, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000ca0:	f241 3288 	movw	r2, #5000	; 0x1388
 8000ca4:	a913      	add	r1, sp, #76	; 0x4c
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_2_LOW;
 8000ca6:	9316      	str	r3, [sp, #88]	; 0x58
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_2_HIGH;
 8000ca8:	f503 037f 	add.w	r3, r3, #16711680	; 0xff0000
  if (HAL_OSPIM_Config(&hospi2, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000cac:	4628      	mov	r0, r5
  sOspiManagerCfg.NCSPort = 2;
 8000cae:	9715      	str	r7, [sp, #84]	; 0x54
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_2_HIGH;
 8000cb0:	9317      	str	r3, [sp, #92]	; 0x5c
  sOspiManagerCfg.DQSPort = 2;
 8000cb2:	e9cd 7713 	strd	r7, r7, [sp, #76]	; 0x4c
  if (HAL_OSPIM_Config(&hospi2, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000cb6:	f005 faf7 	bl	80062a8 <HAL_OSPIM_Config>
  sHyperBusCfg.AccessTime = 6;
 8000cba:	2306      	movs	r3, #6
  if (HAL_OSPI_HyperbusCfg(&hospi2, &sHyperBusCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000cbc:	f241 3288 	movw	r2, #5000	; 0x1388
 8000cc0:	a90a      	add	r1, sp, #40	; 0x28
 8000cc2:	4628      	mov	r0, r5
  sHyperBusCfg.RWRecoveryTime = 3;
 8000cc4:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
  sHyperBusCfg.LatencyMode = HAL_OSPI_FIXED_LATENCY;
 8000cc8:	960d      	str	r6, [sp, #52]	; 0x34
  sHyperBusCfg.WriteZeroLatency = HAL_OSPI_LATENCY_ON_WRITE;
 8000cca:	e9cd 340b 	strd	r3, r4, [sp, #44]	; 0x2c
  if (HAL_OSPI_HyperbusCfg(&hospi2, &sHyperBusCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000cce:	f005 f939 	bl	8005f44 <HAL_OSPI_HyperbusCfg>
  sCommand.AddressSize  = HAL_OSPI_ADDRESS_32_BITS;
 8000cd2:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  if (HAL_OSPI_HyperbusCmd(&hospi2, &sCommand, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000cd6:	f241 3288 	movw	r2, #5000	; 0x1388
 8000cda:	a90e      	add	r1, sp, #56	; 0x38
  sCommand.AddressSize  = HAL_OSPI_ADDRESS_32_BITS;
 8000cdc:	9310      	str	r3, [sp, #64]	; 0x40
  sCommand.DQSMode      = HAL_OSPI_DQS_ENABLE;
 8000cde:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
  if (HAL_OSPI_HyperbusCmd(&hospi2, &sCommand, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000ce2:	4628      	mov	r0, r5
  sCommand.AddressSpace = HAL_OSPI_MEMORY_ADDRESS_SPACE;
 8000ce4:	940e      	str	r4, [sp, #56]	; 0x38
  sCommand.DQSMode      = HAL_OSPI_DQS_ENABLE;
 8000ce6:	9312      	str	r3, [sp, #72]	; 0x48
  sCommand.Address      = 0;
 8000ce8:	940f      	str	r4, [sp, #60]	; 0x3c
  sCommand.NbData       = 1;
 8000cea:	9611      	str	r6, [sp, #68]	; 0x44
  if (HAL_OSPI_HyperbusCmd(&hospi2, &sCommand, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000cec:	f005 f950 	bl	8005f90 <HAL_OSPI_HyperbusCmd>
  if (HAL_OSPI_MemoryMapped(&hospi2, &sMemMappedCfg) != HAL_OK)
 8000cf0:	a908      	add	r1, sp, #32
 8000cf2:	4628      	mov	r0, r5
  sMemMappedCfg.TimeOutActivation = HAL_OSPI_TIMEOUT_COUNTER_DISABLE;
 8000cf4:	9408      	str	r4, [sp, #32]
  if (HAL_OSPI_MemoryMapped(&hospi2, &sMemMappedCfg) != HAL_OK)
 8000cf6:	f005 fa63 	bl	80061c0 <HAL_OSPI_MemoryMapped>
  MX_TouchGFX_Init();
 8000cfa:	f000 fc0f 	bl	800151c <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000cfe:	f000 fc0c 	bl	800151a <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8000d02:	f007 f9cb 	bl	800809c <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000d06:	4a0c      	ldr	r2, [pc, #48]	; (8000d38 <main+0x528>)
 8000d08:	4621      	mov	r1, r4
 8000d0a:	480c      	ldr	r0, [pc, #48]	; (8000d3c <main+0x52c>)
 8000d0c:	f007 f9f2 	bl	80080f4 <osThreadNew>
 8000d10:	4b0b      	ldr	r3, [pc, #44]	; (8000d40 <main+0x530>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000d12:	4a0c      	ldr	r2, [pc, #48]	; (8000d44 <main+0x534>)
 8000d14:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000d16:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000d18:	480b      	ldr	r0, [pc, #44]	; (8000d48 <main+0x538>)
 8000d1a:	f007 f9eb 	bl	80080f4 <osThreadNew>
 8000d1e:	4b0b      	ldr	r3, [pc, #44]	; (8000d4c <main+0x53c>)
 8000d20:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000d22:	f007 f9cd 	bl	80080c0 <osKernelStart>
  while (1)
 8000d26:	e7fe      	b.n	8000d26 <main+0x516>
 8000d28:	52005000 	.word	0x52005000
 8000d2c:	240002c8 	.word	0x240002c8
 8000d30:	5200a000 	.word	0x5200a000
 8000d34:	00010002 	.word	0x00010002
 8000d38:	0801da90 	.word	0x0801da90
 8000d3c:	08000735 	.word	0x08000735
 8000d40:	24000134 	.word	0x24000134
 8000d44:	0801da6c 	.word	0x0801da6c
 8000d48:	0800152b 	.word	0x0800152b
 8000d4c:	24000130 	.word	0x24000130

08000d50 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8000d50:	6802      	ldr	r2, [r0, #0]
 8000d52:	4b03      	ldr	r3, [pc, #12]	; (8000d60 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8000d54:	429a      	cmp	r2, r3
 8000d56:	d101      	bne.n	8000d5c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8000d58:	f003 be20 	b.w	800499c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000d5c:	4770      	bx	lr
 8000d5e:	bf00      	nop
 8000d60:	40001000 	.word	0x40001000

08000d64 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000d64:	4770      	bx	lr
	...

08000d68 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d68:	4b0a      	ldr	r3, [pc, #40]	; (8000d94 <HAL_MspInit+0x2c>)
{
 8000d6a:	b082      	sub	sp, #8

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d6c:	210f      	movs	r1, #15
 8000d6e:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d72:	f8d3 20f4 	ldr.w	r2, [r3, #244]	; 0xf4
 8000d76:	f042 0202 	orr.w	r2, r2, #2
 8000d7a:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d7e:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d80:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000d84:	f003 0302 	and.w	r3, r3, #2
 8000d88:	9301      	str	r3, [sp, #4]
 8000d8a:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000d8c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d8e:	f003 be3b 	b.w	8004a08 <HAL_NVIC_SetPriority>
 8000d92:	bf00      	nop
 8000d94:	58024400 	.word	0x58024400

08000d98 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000d98:	6802      	ldr	r2, [r0, #0]
{
 8000d9a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8000d9c:	4b09      	ldr	r3, [pc, #36]	; (8000dc4 <HAL_CRC_MspInit+0x2c>)
 8000d9e:	429a      	cmp	r2, r3
 8000da0:	d10d      	bne.n	8000dbe <HAL_CRC_MspInit+0x26>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000da2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8000da6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000daa:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8000dae:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000db2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000db6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8000dba:	9301      	str	r3, [sp, #4]
 8000dbc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000dbe:	b002      	add	sp, #8
 8000dc0:	4770      	bx	lr
 8000dc2:	bf00      	nop
 8000dc4:	58024c00 	.word	0x58024c00

08000dc8 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8000dc8:	4b0f      	ldr	r3, [pc, #60]	; (8000e08 <HAL_DMA2D_MspInit+0x40>)
{
 8000dca:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8000dcc:	6802      	ldr	r2, [r0, #0]
 8000dce:	429a      	cmp	r2, r3
 8000dd0:	d117      	bne.n	8000e02 <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000dd2:	4b0e      	ldr	r3, [pc, #56]	; (8000e0c <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000dd4:	2105      	movs	r1, #5
 8000dd6:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000dd8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8000ddc:	f042 0210 	orr.w	r2, r2, #16
 8000de0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000de4:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000de6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8000dea:	f003 0310 	and.w	r3, r3, #16
 8000dee:	9301      	str	r3, [sp, #4]
 8000df0:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000df2:	f003 fe09 	bl	8004a08 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000df6:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000df8:	b003      	add	sp, #12
 8000dfa:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000dfe:	f003 be35 	b.w	8004a6c <HAL_NVIC_EnableIRQ>
}
 8000e02:	b003      	add	sp, #12
 8000e04:	f85d fb04 	ldr.w	pc, [sp], #4
 8000e08:	52001000 	.word	0x52001000
 8000e0c:	58024400 	.word	0x58024400

08000e10 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000e10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e14:	b0bc      	sub	sp, #240	; 0xf0
 8000e16:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e18:	2214      	movs	r2, #20
 8000e1a:	2100      	movs	r1, #0
 8000e1c:	a809      	add	r0, sp, #36	; 0x24
 8000e1e:	f01b fe55 	bl	801cacc <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000e22:	22b8      	movs	r2, #184	; 0xb8
 8000e24:	2100      	movs	r1, #0
 8000e26:	a80e      	add	r0, sp, #56	; 0x38
 8000e28:	f01b fe50 	bl	801cacc <memset>
  if(hltdc->Instance==LTDC)
 8000e2c:	6822      	ldr	r2, [r4, #0]
 8000e2e:	4b77      	ldr	r3, [pc, #476]	; (800100c <HAL_LTDC_MspInit+0x1fc>)
 8000e30:	429a      	cmp	r2, r3
 8000e32:	f040 80e7 	bne.w	8001004 <HAL_LTDC_MspInit+0x1f4>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000e36:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8000e3a:	2300      	movs	r3, #0
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
    PeriphClkInitStruct.PLL3.PLL3R = 30;
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_0;
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOMEDIUM;
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e3c:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000e3e:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLL3.PLL3N = 288;
 8000e42:	f44f 7390 	mov.w	r3, #288	; 0x120
 8000e46:	2219      	movs	r2, #25
 8000e48:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    PeriphClkInitStruct.PLL3.PLL3P = 2;
 8000e4c:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 8000e4e:	e9cd 331a 	strd	r3, r3, [sp, #104]	; 0x68
    PeriphClkInitStruct.PLL3.PLL3R = 30;
 8000e52:	231e      	movs	r3, #30
 8000e54:	931c      	str	r3, [sp, #112]	; 0x70
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOMEDIUM;
 8000e56:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000e5a:	931e      	str	r3, [sp, #120]	; 0x78
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e5c:	f006 faa4 	bl	80073a8 <HAL_RCCEx_PeriphCLKConfig>
 8000e60:	b108      	cbz	r0, 8000e66 <HAL_LTDC_MspInit+0x56>
    {
      Error_Handler();
 8000e62:	f7ff ff7f 	bl	8000d64 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e66:	4b6a      	ldr	r3, [pc, #424]	; (8001010 <HAL_LTDC_MspInit+0x200>)
    PE11     ------> LTDC_G3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_1|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e68:	2400      	movs	r4, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e6a:	2602      	movs	r6, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e6c:	2503      	movs	r5, #3
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e6e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000e72:	270e      	movs	r7, #14
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000e74:	a909      	add	r1, sp, #36	; 0x24
 8000e76:	4867      	ldr	r0, [pc, #412]	; (8001014 <HAL_LTDC_MspInit+0x204>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e78:	f042 0208 	orr.w	r2, r2, #8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6;
 8000e7c:	f04f 0858 	mov.w	r8, #88	; 0x58
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e80:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
 8000e84:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 8000e88:	f002 0208 	and.w	r2, r2, #8
 8000e8c:	9201      	str	r2, [sp, #4]
 8000e8e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000e90:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000e94:	f042 0202 	orr.w	r2, r2, #2
 8000e98:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000e9c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000ea0:	f002 0202 	and.w	r2, r2, #2
 8000ea4:	9202      	str	r2, [sp, #8]
 8000ea6:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000ea8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000eac:	f042 0208 	orr.w	r2, r2, #8
 8000eb0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000eb4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000eb8:	f002 0208 	and.w	r2, r2, #8
 8000ebc:	9203      	str	r2, [sp, #12]
 8000ebe:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000ec0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000ec4:	f042 0210 	orr.w	r2, r2, #16
 8000ec8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000ecc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000ed0:	f002 0210 	and.w	r2, r2, #16
 8000ed4:	9204      	str	r2, [sp, #16]
 8000ed6:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ed8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000edc:	f042 0201 	orr.w	r2, r2, #1
 8000ee0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000ee4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000ee8:	f002 0201 	and.w	r2, r2, #1
 8000eec:	9205      	str	r2, [sp, #20]
 8000eee:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000ef0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000ef4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000ef8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000efc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000f00:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8000f04:	9206      	str	r2, [sp, #24]
 8000f06:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000f08:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000f0c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000f10:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000f14:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000f18:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8000f1c:	9207      	str	r2, [sp, #28]
 8000f1e:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000f20:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000f24:	f042 0204 	orr.w	r2, r2, #4
 8000f28:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000f2c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f30:	970d      	str	r7, [sp, #52]	; 0x34
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000f32:	f003 0304 	and.w	r3, r3, #4
 8000f36:	9308      	str	r3, [sp, #32]
 8000f38:	9b08      	ldr	r3, [sp, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f3a:	f240 3303 	movw	r3, #771	; 0x303
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f3e:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f42:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000f46:	f003 ff13 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_6;
 8000f4a:	2349      	movs	r3, #73	; 0x49
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000f4c:	a909      	add	r1, sp, #36	; 0x24
 8000f4e:	4832      	ldr	r0, [pc, #200]	; (8001018 <HAL_LTDC_MspInit+0x208>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f50:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f52:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f56:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000f5a:	f003 ff09 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_12|GPIO_PIN_13
 8000f5e:	f64b 0303 	movw	r3, #47107	; 0xb803
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f62:	a909      	add	r1, sp, #36	; 0x24
 8000f64:	482d      	ldr	r0, [pc, #180]	; (800101c <HAL_LTDC_MspInit+0x20c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f66:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f68:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f6c:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f70:	f003 fefe 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000f74:	f44f 7380 	mov.w	r3, #256	; 0x100
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f78:	a909      	add	r1, sp, #36	; 0x24
 8000f7a:	4829      	ldr	r0, [pc, #164]	; (8001020 <HAL_LTDC_MspInit+0x210>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f7c:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Alternate = GPIO_AF13_LTDC;
 8000f80:	230d      	movs	r3, #13
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f82:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF13_LTDC;
 8000f86:	930d      	str	r3, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f88:	f003 fef2 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_7;
 8000f8c:	f44f 4381 	mov.w	r3, #16512	; 0x4080
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f90:	a909      	add	r1, sp, #36	; 0x24
 8000f92:	4824      	ldr	r0, [pc, #144]	; (8001024 <HAL_LTDC_MspInit+0x214>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f94:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f96:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f9a:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f9e:	f003 fee7 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_11|GPIO_PIN_9|GPIO_PIN_8
 8000fa2:	f648 7308 	movw	r3, #36616	; 0x8f08
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000fa6:	a909      	add	r1, sp, #36	; 0x24
 8000fa8:	481f      	ldr	r0, [pc, #124]	; (8001028 <HAL_LTDC_MspInit+0x218>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000faa:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fac:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fb0:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000fb4:	f003 fedc 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
 8000fb8:	23c0      	movs	r3, #192	; 0xc0
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000fba:	a909      	add	r1, sp, #36	; 0x24
 8000fbc:	481b      	ldr	r0, [pc, #108]	; (800102c <HAL_LTDC_MspInit+0x21c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000fbe:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fc0:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fc4:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000fc8:	f003 fed2 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000fcc:	a909      	add	r1, sp, #36	; 0x24
 8000fce:	4814      	ldr	r0, [pc, #80]	; (8001020 <HAL_LTDC_MspInit+0x210>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000fd0:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fd2:	e9cd 8609 	strd	r8, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fd6:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000fda:	f003 fec9 	bl	8004d70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8000fde:	2310      	movs	r3, #16
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000fe0:	a909      	add	r1, sp, #36	; 0x24
 8000fe2:	4811      	ldr	r0, [pc, #68]	; (8001028 <HAL_LTDC_MspInit+0x218>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fe4:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000fe8:	2309      	movs	r3, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fea:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000fee:	930d      	str	r3, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000ff0:	f003 febe 	bl	8004d70 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000ff4:	4640      	mov	r0, r8
 8000ff6:	4622      	mov	r2, r4
 8000ff8:	2105      	movs	r1, #5
 8000ffa:	f003 fd05 	bl	8004a08 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000ffe:	4640      	mov	r0, r8
 8001000:	f003 fd34 	bl	8004a6c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001004:	b03c      	add	sp, #240	; 0xf0
 8001006:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800100a:	bf00      	nop
 800100c:	50001000 	.word	0x50001000
 8001010:	58024400 	.word	0x58024400
 8001014:	58020400 	.word	0x58020400
 8001018:	58020c00 	.word	0x58020c00
 800101c:	58021000 	.word	0x58021000
 8001020:	58020000 	.word	0x58020000
 8001024:	58021800 	.word	0x58021800
 8001028:	58021c00 	.word	0x58021c00
 800102c:	58020800 	.word	0x58020800

08001030 <HAL_OSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hospi: OSPI handle pointer
* @retval None
*/
void HAL_OSPI_MspInit(OSPI_HandleTypeDef* hospi)
{
 8001030:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001034:	b091      	sub	sp, #68	; 0x44
 8001036:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001038:	2214      	movs	r2, #20
 800103a:	2100      	movs	r1, #0
 800103c:	a80b      	add	r0, sp, #44	; 0x2c
 800103e:	f01b fd45 	bl	801cacc <memset>
  if(hospi->Instance==OCTOSPI1)
 8001042:	6823      	ldr	r3, [r4, #0]
 8001044:	4a88      	ldr	r2, [pc, #544]	; (8001268 <HAL_OSPI_MspInit+0x238>)
 8001046:	4293      	cmp	r3, r2
 8001048:	f040 80b0 	bne.w	80011ac <HAL_OSPI_MspInit+0x17c>
  {
  /* USER CODE BEGIN OCTOSPI1_MspInit 0 */

  /* USER CODE END OCTOSPI1_MspInit 0 */
    /* Peripheral clock enable */
    HAL_RCC_OCTOSPIM_CLK_ENABLED++;
 800104c:	4a87      	ldr	r2, [pc, #540]	; (800126c <HAL_OSPI_MspInit+0x23c>)
 800104e:	6813      	ldr	r3, [r2, #0]
 8001050:	3301      	adds	r3, #1
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==1){
 8001052:	2b01      	cmp	r3, #1
    HAL_RCC_OCTOSPIM_CLK_ENABLED++;
 8001054:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==1){
 8001056:	d10c      	bne.n	8001072 <HAL_OSPI_MspInit+0x42>
      __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 8001058:	4b85      	ldr	r3, [pc, #532]	; (8001270 <HAL_OSPI_MspInit+0x240>)
 800105a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 800105e:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8001062:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001066:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800106a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800106e:	9300      	str	r3, [sp, #0]
 8001070:	9b00      	ldr	r3, [sp, #0]
    }
    __HAL_RCC_OSPI1_CLK_ENABLE();
 8001072:	4b7f      	ldr	r3, [pc, #508]	; (8001270 <HAL_OSPI_MspInit+0x240>)
    PD12     ------> OCTOSPIM_P1_IO1
    PF10     ------> OCTOSPIM_P1_CLK
    PB2     ------> OCTOSPIM_P1_DQS
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001074:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8001076:	2403      	movs	r4, #3
 8001078:	2709      	movs	r7, #9
    __HAL_RCC_OSPI1_CLK_ENABLE();
 800107a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800107e:	a90b      	add	r1, sp, #44	; 0x2c
 8001080:	487c      	ldr	r0, [pc, #496]	; (8001274 <HAL_OSPI_MspInit+0x244>)

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_5|GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001082:	2600      	movs	r6, #0
    __HAL_RCC_OSPI1_CLK_ENABLE();
 8001084:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8001088:	f04f 080a 	mov.w	r8, #10
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800108c:	f04f 0904 	mov.w	r9, #4
    __HAL_RCC_OSPI1_CLK_ENABLE();
 8001090:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001094:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001098:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 800109c:	9201      	str	r2, [sp, #4]
 800109e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80010a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80010a4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80010a8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80010ac:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80010b0:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80010b4:	9202      	str	r2, [sp, #8]
 80010b6:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80010b8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80010bc:	f042 0208 	orr.w	r2, r2, #8
 80010c0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80010c4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80010c8:	f002 0208 	and.w	r2, r2, #8
 80010cc:	9203      	str	r2, [sp, #12]
 80010ce:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80010d0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80010d4:	f042 0210 	orr.w	r2, r2, #16
 80010d8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80010dc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80010e0:	f002 0210 	and.w	r2, r2, #16
 80010e4:	9204      	str	r2, [sp, #16]
 80010e6:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80010e8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80010ec:	f042 0220 	orr.w	r2, r2, #32
 80010f0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80010f4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80010f8:	f002 0220 	and.w	r2, r2, #32
 80010fc:	9205      	str	r2, [sp, #20]
 80010fe:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001100:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001104:	f042 0202 	orr.w	r2, r2, #2
 8001108:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800110c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001110:	f003 0302 	and.w	r3, r3, #2
 8001114:	9306      	str	r3, [sp, #24]
 8001116:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001118:	f44f 7300 	mov.w	r3, #512	; 0x200
 800111c:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8001120:	e9cd 470e 	strd	r4, r7, [sp, #56]	; 0x38
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001124:	f003 fe24 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_5|GPIO_PIN_4;
 8001128:	23b0      	movs	r3, #176	; 0xb0
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800112a:	a90b      	add	r1, sp, #44	; 0x2c
 800112c:	4852      	ldr	r0, [pc, #328]	; (8001278 <HAL_OSPI_MspInit+0x248>)
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 800112e:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001132:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001136:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800113a:	f003 fe19 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800113e:	a90b      	add	r1, sp, #44	; 0x2c
 8001140:	484e      	ldr	r0, [pc, #312]	; (800127c <HAL_OSPI_MspInit+0x24c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8001142:	970f      	str	r7, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001144:	e9cd 950b 	strd	r9, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001148:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800114c:	f003 fe10 	bl	8004d70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001150:	2340      	movs	r3, #64	; 0x40
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001152:	a90b      	add	r1, sp, #44	; 0x2c
 8001154:	4847      	ldr	r0, [pc, #284]	; (8001274 <HAL_OSPI_MspInit+0x244>)
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8001156:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800115a:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800115e:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001162:	f003 fe05 	bl	8004d70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_11|GPIO_PIN_12;
 8001166:	f44f 5360 	mov.w	r3, #14336	; 0x3800
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800116a:	a90b      	add	r1, sp, #44	; 0x2c
 800116c:	4842      	ldr	r0, [pc, #264]	; (8001278 <HAL_OSPI_MspInit+0x248>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 800116e:	970f      	str	r7, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001170:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001174:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001178:	f003 fdfa 	bl	8004d70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800117c:	f44f 6380 	mov.w	r3, #1024	; 0x400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001180:	a90b      	add	r1, sp, #44	; 0x2c
 8001182:	483f      	ldr	r0, [pc, #252]	; (8001280 <HAL_OSPI_MspInit+0x250>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8001184:	970f      	str	r7, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001186:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800118a:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800118e:	f003 fdef 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001192:	a90b      	add	r1, sp, #44	; 0x2c
 8001194:	483b      	ldr	r0, [pc, #236]	; (8001284 <HAL_OSPI_MspInit+0x254>)
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8001196:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800119a:	e9cd 950b 	strd	r9, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800119e:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
                          |GPIO_PIN_3|GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P2;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80011a2:	f003 fde5 	bl	8004d70 <HAL_GPIO_Init>
  /* USER CODE BEGIN OCTOSPI2_MspInit 1 */

  /* USER CODE END OCTOSPI2_MspInit 1 */
  }

}
 80011a6:	b011      	add	sp, #68	; 0x44
 80011a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if(hospi->Instance==OCTOSPI2)
 80011ac:	4a36      	ldr	r2, [pc, #216]	; (8001288 <HAL_OSPI_MspInit+0x258>)
 80011ae:	4293      	cmp	r3, r2
 80011b0:	d1f9      	bne.n	80011a6 <HAL_OSPI_MspInit+0x176>
    HAL_RCC_OCTOSPIM_CLK_ENABLED++;
 80011b2:	4a2e      	ldr	r2, [pc, #184]	; (800126c <HAL_OSPI_MspInit+0x23c>)
 80011b4:	6813      	ldr	r3, [r2, #0]
 80011b6:	3301      	adds	r3, #1
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==1){
 80011b8:	2b01      	cmp	r3, #1
    HAL_RCC_OCTOSPIM_CLK_ENABLED++;
 80011ba:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==1){
 80011bc:	d10c      	bne.n	80011d8 <HAL_OSPI_MspInit+0x1a8>
      __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 80011be:	4b2c      	ldr	r3, [pc, #176]	; (8001270 <HAL_OSPI_MspInit+0x240>)
 80011c0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80011c4:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 80011c8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80011cc:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011d0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80011d4:	9307      	str	r3, [sp, #28]
 80011d6:	9b07      	ldr	r3, [sp, #28]
    __HAL_RCC_OSPI2_CLK_ENABLE();
 80011d8:	4b25      	ldr	r3, [pc, #148]	; (8001270 <HAL_OSPI_MspInit+0x240>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P2;
 80011da:	2403      	movs	r4, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011dc:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P2;
 80011de:	2609      	movs	r6, #9
    __HAL_RCC_OSPI2_CLK_ENABLE();
 80011e0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80011e4:	a90b      	add	r1, sp, #44	; 0x2c
 80011e6:	4823      	ldr	r0, [pc, #140]	; (8001274 <HAL_OSPI_MspInit+0x244>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011e8:	2700      	movs	r7, #0
    __HAL_RCC_OSPI2_CLK_ENABLE();
 80011ea:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 80011ee:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80011f2:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80011f6:	f402 2200 	and.w	r2, r2, #524288	; 0x80000
 80011fa:	9208      	str	r2, [sp, #32]
 80011fc:	9a08      	ldr	r2, [sp, #32]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80011fe:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001202:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001206:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800120a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800120e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001212:	9209      	str	r2, [sp, #36]	; 0x24
 8001214:	9a09      	ldr	r2, [sp, #36]	; 0x24
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001216:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800121a:	f042 0220 	orr.w	r2, r2, #32
 800121e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001222:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001226:	f003 0320 	and.w	r3, r3, #32
 800122a:	930a      	str	r3, [sp, #40]	; 0x28
 800122c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800122e:	f640 0303 	movw	r3, #2051	; 0x803
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P2;
 8001232:	e9cd 460e 	strd	r4, r6, [sp, #56]	; 0x38
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001236:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800123a:	f003 fd99 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800123e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001242:	a90b      	add	r1, sp, #44	; 0x2c
 8001244:	480b      	ldr	r0, [pc, #44]	; (8001274 <HAL_OSPI_MspInit+0x244>)
    GPIO_InitStruct.Alternate = GPIO_AF3_OCTOSPIM_P2;
 8001246:	940f      	str	r4, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001248:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800124c:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001250:	f003 fd8e 	bl	8004d70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4
 8001254:	f241 031f 	movw	r3, #4127	; 0x101f
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001258:	a90b      	add	r1, sp, #44	; 0x2c
 800125a:	4809      	ldr	r0, [pc, #36]	; (8001280 <HAL_OSPI_MspInit+0x250>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P2;
 800125c:	960f      	str	r6, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800125e:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001262:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001266:	e79c      	b.n	80011a2 <HAL_OSPI_MspInit+0x172>
 8001268:	52005000 	.word	0x52005000
 800126c:	24000324 	.word	0x24000324
 8001270:	58024400 	.word	0x58024400
 8001274:	58021800 	.word	0x58021800
 8001278:	58020c00 	.word	0x58020c00
 800127c:	58021000 	.word	0x58021000
 8001280:	58021400 	.word	0x58021400
 8001284:	58020400 	.word	0x58020400
 8001288:	5200a000 	.word	0x5200a000

0800128c <HAL_OSPI_MspDeInit>:
* @param hospi: OSPI handle pointer
* @retval None
*/
void HAL_OSPI_MspDeInit(OSPI_HandleTypeDef* hospi)
{
  if(hospi->Instance==OCTOSPI1)
 800128c:	4a27      	ldr	r2, [pc, #156]	; (800132c <HAL_OSPI_MspDeInit+0xa0>)
{
 800128e:	b508      	push	{r3, lr}
  if(hospi->Instance==OCTOSPI1)
 8001290:	6803      	ldr	r3, [r0, #0]
 8001292:	4293      	cmp	r3, r2
 8001294:	d12a      	bne.n	80012ec <HAL_OSPI_MspDeInit+0x60>
  {
  /* USER CODE BEGIN OCTOSPI1_MspDeInit 0 */

  /* USER CODE END OCTOSPI1_MspDeInit 0 */
    /* Peripheral clock disable */
    HAL_RCC_OCTOSPIM_CLK_ENABLED--;
 8001296:	4b26      	ldr	r3, [pc, #152]	; (8001330 <HAL_OSPI_MspDeInit+0xa4>)
 8001298:	681a      	ldr	r2, [r3, #0]
 800129a:	3a01      	subs	r2, #1
 800129c:	601a      	str	r2, [r3, #0]
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==0){
 800129e:	4b25      	ldr	r3, [pc, #148]	; (8001334 <HAL_OSPI_MspDeInit+0xa8>)
 80012a0:	b92a      	cbnz	r2, 80012ae <HAL_OSPI_MspDeInit+0x22>
      __HAL_RCC_OCTOSPIM_CLK_DISABLE();
 80012a2:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80012a6:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 80012aa:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    }
    __HAL_RCC_OSPI1_CLK_DISABLE();
 80012ae:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    PD11     ------> OCTOSPIM_P1_IO0
    PD12     ------> OCTOSPIM_P1_IO1
    PF10     ------> OCTOSPIM_P1_CLK
    PB2     ------> OCTOSPIM_P1_DQS
    */
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_9|GPIO_PIN_6);
 80012b2:	f44f 7110 	mov.w	r1, #576	; 0x240
 80012b6:	4820      	ldr	r0, [pc, #128]	; (8001338 <HAL_OSPI_MspDeInit+0xac>)
    __HAL_RCC_OSPI1_CLK_DISABLE();
 80012b8:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80012bc:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_9|GPIO_PIN_6);
 80012c0:	f003 fe3c 	bl	8004f3c <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_7|GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_13
 80012c4:	f643 01b0 	movw	r1, #14512	; 0x38b0
 80012c8:	481c      	ldr	r0, [pc, #112]	; (800133c <HAL_OSPI_MspDeInit+0xb0>)
 80012ca:	f003 fe37 	bl	8004f3c <HAL_GPIO_DeInit>
                          |GPIO_PIN_11|GPIO_PIN_12);

    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 80012ce:	2104      	movs	r1, #4
 80012d0:	481b      	ldr	r0, [pc, #108]	; (8001340 <HAL_OSPI_MspDeInit+0xb4>)
 80012d2:	f003 fe33 	bl	8004f3c <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_10);
 80012d6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80012da:	481a      	ldr	r0, [pc, #104]	; (8001344 <HAL_OSPI_MspDeInit+0xb8>)
 80012dc:	f003 fe2e 	bl	8004f3c <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 80012e0:	2104      	movs	r1, #4
 80012e2:	4819      	ldr	r0, [pc, #100]	; (8001348 <HAL_OSPI_MspDeInit+0xbc>)
  /* USER CODE BEGIN OCTOSPI2_MspDeInit 1 */

  /* USER CODE END OCTOSPI2_MspDeInit 1 */
  }

}
 80012e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4
 80012e8:	f003 be28 	b.w	8004f3c <HAL_GPIO_DeInit>
  else if(hospi->Instance==OCTOSPI2)
 80012ec:	4a17      	ldr	r2, [pc, #92]	; (800134c <HAL_OSPI_MspDeInit+0xc0>)
 80012ee:	4293      	cmp	r3, r2
 80012f0:	d11a      	bne.n	8001328 <HAL_OSPI_MspDeInit+0x9c>
    HAL_RCC_OCTOSPIM_CLK_ENABLED--;
 80012f2:	4b0f      	ldr	r3, [pc, #60]	; (8001330 <HAL_OSPI_MspDeInit+0xa4>)
 80012f4:	681a      	ldr	r2, [r3, #0]
 80012f6:	3a01      	subs	r2, #1
 80012f8:	601a      	str	r2, [r3, #0]
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==0){
 80012fa:	4b0e      	ldr	r3, [pc, #56]	; (8001334 <HAL_OSPI_MspDeInit+0xa8>)
 80012fc:	b92a      	cbnz	r2, 800130a <HAL_OSPI_MspDeInit+0x7e>
      __HAL_RCC_OCTOSPIM_CLK_DISABLE();
 80012fe:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001302:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8001306:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    __HAL_RCC_OSPI2_CLK_DISABLE();
 800130a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_11|GPIO_PIN_10|GPIO_PIN_12|GPIO_PIN_1
 800130e:	f641 4103 	movw	r1, #7171	; 0x1c03
 8001312:	4809      	ldr	r0, [pc, #36]	; (8001338 <HAL_OSPI_MspDeInit+0xac>)
    __HAL_RCC_OSPI2_CLK_DISABLE();
 8001314:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
 8001318:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_11|GPIO_PIN_10|GPIO_PIN_12|GPIO_PIN_1
 800131c:	f003 fe0e 	bl	8004f3c <HAL_GPIO_DeInit>
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4
 8001320:	f241 011f 	movw	r1, #4127	; 0x101f
 8001324:	4807      	ldr	r0, [pc, #28]	; (8001344 <HAL_OSPI_MspDeInit+0xb8>)
 8001326:	e7dd      	b.n	80012e4 <HAL_OSPI_MspDeInit+0x58>
}
 8001328:	bd08      	pop	{r3, pc}
 800132a:	bf00      	nop
 800132c:	52005000 	.word	0x52005000
 8001330:	24000324 	.word	0x24000324
 8001334:	58024400 	.word	0x58024400
 8001338:	58021800 	.word	0x58021800
 800133c:	58020c00 	.word	0x58020c00
 8001340:	58021000 	.word	0x58021000
 8001344:	58021400 	.word	0x58021400
 8001348:	58020400 	.word	0x58020400
 800134c:	5200a000 	.word	0x5200a000

08001350 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001350:	280f      	cmp	r0, #15
{
 8001352:	b510      	push	{r4, lr}
 8001354:	4604      	mov	r4, r0
 8001356:	b08a      	sub	sp, #40	; 0x28
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001358:	d902      	bls.n	8001360 <HAL_InitTick+0x10>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
 800135a:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
 800135c:	b00a      	add	sp, #40	; 0x28
 800135e:	bd10      	pop	{r4, pc}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
 8001360:	4601      	mov	r1, r0
 8001362:	2200      	movs	r2, #0
 8001364:	2036      	movs	r0, #54	; 0x36
 8001366:	f003 fb4f 	bl	8004a08 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800136a:	2036      	movs	r0, #54	; 0x36
 800136c:	f003 fb7e 	bl	8004a6c <HAL_NVIC_EnableIRQ>
    uwTickPrio = TickPriority;
 8001370:	4b18      	ldr	r3, [pc, #96]	; (80013d4 <HAL_InitTick+0x84>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001372:	4669      	mov	r1, sp
 8001374:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
 8001376:	601c      	str	r4, [r3, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001378:	4b17      	ldr	r3, [pc, #92]	; (80013d8 <HAL_InitTick+0x88>)
 800137a:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
 800137e:	f042 0210 	orr.w	r2, r2, #16
 8001382:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
 8001386:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 800138a:	f003 0310 	and.w	r3, r3, #16
 800138e:	9301      	str	r3, [sp, #4]
 8001390:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001392:	f005 feef 	bl	8007174 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001396:	9b07      	ldr	r3, [sp, #28]
 8001398:	b9c3      	cbnz	r3, 80013cc <HAL_InitTick+0x7c>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800139a:	f005 fec7 	bl	800712c <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 800139e:	4c0f      	ldr	r4, [pc, #60]	; (80013dc <HAL_InitTick+0x8c>)
 80013a0:	4b0f      	ldr	r3, [pc, #60]	; (80013e0 <HAL_InitTick+0x90>)
 80013a2:	6023      	str	r3, [r4, #0]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80013a4:	f240 33e7 	movw	r3, #999	; 0x3e7
 80013a8:	60e3      	str	r3, [r4, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80013aa:	4b0e      	ldr	r3, [pc, #56]	; (80013e4 <HAL_InitTick+0x94>)
 80013ac:	fbb0 f0f3 	udiv	r0, r0, r3
 80013b0:	3801      	subs	r0, #1
  htim6.Init.ClockDivision = 0;
 80013b2:	2300      	movs	r3, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80013b4:	6060      	str	r0, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80013b6:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 80013b8:	6123      	str	r3, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80013ba:	60a3      	str	r3, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80013bc:	f006 fe2e 	bl	800801c <HAL_TIM_Base_Init>
 80013c0:	2800      	cmp	r0, #0
 80013c2:	d1ca      	bne.n	800135a <HAL_InitTick+0xa>
    return HAL_TIM_Base_Start_IT(&htim6);
 80013c4:	4620      	mov	r0, r4
 80013c6:	f006 fcc1 	bl	8007d4c <HAL_TIM_Base_Start_IT>
 80013ca:	e7c7      	b.n	800135c <HAL_InitTick+0xc>
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80013cc:	f005 feae 	bl	800712c <HAL_RCC_GetPCLK1Freq>
 80013d0:	0040      	lsls	r0, r0, #1
 80013d2:	e7e4      	b.n	800139e <HAL_InitTick+0x4e>
 80013d4:	2400004c 	.word	0x2400004c
 80013d8:	58024400 	.word	0x58024400
 80013dc:	24000328 	.word	0x24000328
 80013e0:	40001000 	.word	0x40001000
 80013e4:	000f4240 	.word	0x000f4240

080013e8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80013e8:	4770      	bx	lr

080013ea <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80013ea:	e7fe      	b.n	80013ea <HardFault_Handler>

080013ec <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80013ec:	e7fe      	b.n	80013ec <MemManage_Handler>

080013ee <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80013ee:	e7fe      	b.n	80013ee <BusFault_Handler>

080013f0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80013f0:	e7fe      	b.n	80013f0 <UsageFault_Handler>

080013f2 <DebugMon_Handler>:
 80013f2:	4770      	bx	lr

080013f4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80013f4:	4801      	ldr	r0, [pc, #4]	; (80013fc <TIM6_DAC_IRQHandler+0x8>)
 80013f6:	f006 bcf3 	b.w	8007de0 <HAL_TIM_IRQHandler>
 80013fa:	bf00      	nop
 80013fc:	24000328 	.word	0x24000328

08001400 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001400:	4801      	ldr	r0, [pc, #4]	; (8001408 <LTDC_IRQHandler+0x8>)
 8001402:	f004 badf 	b.w	80059c4 <HAL_LTDC_IRQHandler>
 8001406:	bf00      	nop
 8001408:	240001c4 	.word	0x240001c4

0800140c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800140c:	4801      	ldr	r0, [pc, #4]	; (8001414 <DMA2D_IRQHandler+0x8>)
 800140e:	f003 bc24 	b.w	8004c5a <HAL_DMA2D_IRQHandler>
 8001412:	bf00      	nop
 8001414:	2400015c 	.word	0x2400015c

08001418 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001418:	2001      	movs	r0, #1
 800141a:	4770      	bx	lr

0800141c <_kill>:

int _kill(int pid, int sig)
{
 800141c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800141e:	f01b fa01 	bl	801c824 <__errno>
 8001422:	2316      	movs	r3, #22
 8001424:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001426:	f04f 30ff 	mov.w	r0, #4294967295
 800142a:	bd08      	pop	{r3, pc}

0800142c <_exit>:

void _exit (int status)
{
 800142c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800142e:	f01b f9f9 	bl	801c824 <__errno>
 8001432:	2316      	movs	r3, #22
 8001434:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001436:	e7fe      	b.n	8001436 <_exit+0xa>

08001438 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001438:	b570      	push	{r4, r5, r6, lr}
 800143a:	460d      	mov	r5, r1
 800143c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800143e:	460e      	mov	r6, r1
 8001440:	1b73      	subs	r3, r6, r5
 8001442:	429c      	cmp	r4, r3
 8001444:	dc01      	bgt.n	800144a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001446:	4620      	mov	r0, r4
 8001448:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800144a:	f3af 8000 	nop.w
 800144e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001452:	e7f5      	b.n	8001440 <_read+0x8>

08001454 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001454:	b570      	push	{r4, r5, r6, lr}
 8001456:	460d      	mov	r5, r1
 8001458:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800145a:	460e      	mov	r6, r1
 800145c:	1b73      	subs	r3, r6, r5
 800145e:	429c      	cmp	r4, r3
 8001460:	dc01      	bgt.n	8001466 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001462:	4620      	mov	r0, r4
 8001464:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001466:	f816 0b01 	ldrb.w	r0, [r6], #1
 800146a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800146e:	e7f5      	b.n	800145c <_write+0x8>

08001470 <_close>:

int _close(int file)
{
	return -1;
}
 8001470:	f04f 30ff 	mov.w	r0, #4294967295
 8001474:	4770      	bx	lr

08001476 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001476:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
 800147a:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 800147c:	604b      	str	r3, [r1, #4]
}
 800147e:	4770      	bx	lr

08001480 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001480:	2001      	movs	r0, #1
 8001482:	4770      	bx	lr

08001484 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001484:	2000      	movs	r0, #0
 8001486:	4770      	bx	lr

08001488 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001488:	4a0b      	ldr	r2, [pc, #44]	; (80014b8 <_sbrk+0x30>)
{
 800148a:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 800148c:	6811      	ldr	r1, [r2, #0]
{
 800148e:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8001490:	b909      	cbnz	r1, 8001496 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 8001492:	490a      	ldr	r1, [pc, #40]	; (80014bc <_sbrk+0x34>)
 8001494:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001496:	6810      	ldr	r0, [r2, #0]
 8001498:	4909      	ldr	r1, [pc, #36]	; (80014c0 <_sbrk+0x38>)
 800149a:	4c0a      	ldr	r4, [pc, #40]	; (80014c4 <_sbrk+0x3c>)
 800149c:	4403      	add	r3, r0
 800149e:	1b09      	subs	r1, r1, r4
 80014a0:	428b      	cmp	r3, r1
 80014a2:	d906      	bls.n	80014b2 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80014a4:	f01b f9be 	bl	801c824 <__errno>
 80014a8:	230c      	movs	r3, #12
 80014aa:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80014ac:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80014b0:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80014b2:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 80014b4:	e7fc      	b.n	80014b0 <_sbrk+0x28>
 80014b6:	bf00      	nop
 80014b8:	24000374 	.word	0x24000374
 80014bc:	24008bd8 	.word	0x24008bd8
 80014c0:	24050000 	.word	0x24050000
 80014c4:	00001000 	.word	0x00001000

080014c8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80014c8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001500 <LoopFillZerobss+0x10>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80014cc:	f003 f9e2 	bl	8004894 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80014d0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80014d2:	e003      	b.n	80014dc <LoopCopyDataInit>

080014d4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80014d4:	4b0b      	ldr	r3, [pc, #44]	; (8001504 <LoopFillZerobss+0x14>)
  ldr  r3, [r3, r1]
 80014d6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80014d8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80014da:	3104      	adds	r1, #4

080014dc <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80014dc:	480a      	ldr	r0, [pc, #40]	; (8001508 <LoopFillZerobss+0x18>)
  ldr  r3, =_edata
 80014de:	4b0b      	ldr	r3, [pc, #44]	; (800150c <LoopFillZerobss+0x1c>)
  adds  r2, r0, r1
 80014e0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80014e2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80014e4:	d3f6      	bcc.n	80014d4 <CopyDataInit>
  ldr  r2, =_sbss
 80014e6:	4a0a      	ldr	r2, [pc, #40]	; (8001510 <LoopFillZerobss+0x20>)
  b  LoopFillZerobss
 80014e8:	e002      	b.n	80014f0 <LoopFillZerobss>

080014ea <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80014ea:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80014ec:	f842 3b04 	str.w	r3, [r2], #4

080014f0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80014f0:	4b08      	ldr	r3, [pc, #32]	; (8001514 <LoopFillZerobss+0x24>)
  cmp  r2, r3
 80014f2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80014f4:	d3f9      	bcc.n	80014ea <FillZerobss>
  
/* Call static constructors */
    bl __libc_init_array
 80014f6:	f01b faa3 	bl	801ca40 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80014fa:	f7ff f989 	bl	8000810 <main>
  bx  lr    
 80014fe:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001500:	24050000 	.word	0x24050000
  ldr  r3, =_sidata
 8001504:	0802095c 	.word	0x0802095c
  ldr  r0, =_sdata
 8001508:	24000000 	.word	0x24000000
  ldr  r3, =_edata
 800150c:	24000114 	.word	0x24000114
  ldr  r2, =_sbss
 8001510:	24000114 	.word	0x24000114
  ldr  r3, = _ebss
 8001514:	24008bd8 	.word	0x24008bd8

08001518 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001518:	e7fe      	b.n	8001518 <ADC3_IRQHandler>

0800151a <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 800151a:	4770      	bx	lr

0800151c <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800151c:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800151e:	f000 fd9f 	bl	8002060 <touchgfx_components_init>
  touchgfx_init();
}
 8001522:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001526:	f000 bd29 	b.w	8001f7c <touchgfx_init>

0800152a <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800152a:	f000 bd9b 	b.w	8002064 <touchgfx_taskEntry>

0800152e <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800152e:	6840      	ldr	r0, [r0, #4]
    }
 8001530:	4770      	bx	lr

08001532 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8001532:	6041      	str	r1, [r0, #4]
    }
 8001534:	4770      	bx	lr
	...

08001538 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8001538:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800153c:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 8001540:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001544:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8001548:	4b05      	ldr	r3, [pc, #20]	; (8001560 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 800154a:	4a06      	ldr	r2, [pc, #24]	; (8001564 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 800154c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
 8001550:	430a      	orrs	r2, r1
 8001552:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 8001556:	681a      	ldr	r2, [r3, #0]
 8001558:	f042 0201 	orr.w	r2, r2, #1
 800155c:	601a      	str	r2, [r3, #0]
}
 800155e:	4770      	bx	lr
 8001560:	e0001000 	.word	0xe0001000
 8001564:	c5acce55 	.word	0xc5acce55

08001568 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8001568:	1a51      	subs	r1, r2, r1
 800156a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 800156e:	fbb1 f0f3 	udiv	r0, r1, r3
 8001572:	4770      	bx	lr

08001574 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001574:	4b01      	ldr	r3, [pc, #4]	; (800157c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8001576:	6858      	ldr	r0, [r3, #4]
}
 8001578:	4770      	bx	lr
 800157a:	bf00      	nop
 800157c:	e0001000 	.word	0xe0001000

08001580 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8001580:	4770      	bx	lr

08001582 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8001582:	b510      	push	{r4, lr}
 8001584:	4604      	mov	r4, r0
 8001586:	210c      	movs	r1, #12
 8001588:	f01a ff3d 	bl	801c406 <_ZdlPvj>
 800158c:	4620      	mov	r0, r4
 800158e:	bd10      	pop	{r4, pc}

08001590 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001590:	6803      	ldr	r3, [r0, #0]
{
 8001592:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001594:	691b      	ldr	r3, [r3, #16]
{
 8001596:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8001598:	b131      	cbz	r1, 80015a8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800159a:	4798      	blx	r3
 800159c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800159e:	6863      	ldr	r3, [r4, #4]
 80015a0:	1a9b      	subs	r3, r3, r2
 80015a2:	4418      	add	r0, r3
 80015a4:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 80015a6:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 80015a8:	4798      	blx	r3
 80015aa:	60a0      	str	r0, [r4, #8]
}
 80015ac:	e7fb      	b.n	80015a6 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

080015ae <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80015ae:	4770      	bx	lr

080015b0 <_ZN20STM32TouchController4initEv>:
#include <stm32h735g_discovery_ts.h>
#include <TouchGFXHAL.hpp>
#include <cmsis_os.h>

void STM32TouchController::init()
{
 80015b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    TS_Init_t hTS;

    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
 80015b2:	2308      	movs	r3, #8
 80015b4:	2000      	movs	r0, #0
    hTS.Width = touchgfx::HAL::FRAME_BUFFER_WIDTH;
    hTS.Height = touchgfx::HAL::FRAME_BUFFER_HEIGHT;
    BSP_TS_Init(0, &hTS);
 80015b6:	4669      	mov	r1, sp
    hTS.Accuracy = 0;
 80015b8:	e9cd 3002 	strd	r3, r0, [sp, #8]
    hTS.Width = touchgfx::HAL::FRAME_BUFFER_WIDTH;
 80015bc:	4b05      	ldr	r3, [pc, #20]	; (80015d4 <_ZN20STM32TouchController4initEv+0x24>)
 80015be:	881b      	ldrh	r3, [r3, #0]
 80015c0:	9300      	str	r3, [sp, #0]
    hTS.Height = touchgfx::HAL::FRAME_BUFFER_HEIGHT;
 80015c2:	4b05      	ldr	r3, [pc, #20]	; (80015d8 <_ZN20STM32TouchController4initEv+0x28>)
 80015c4:	881b      	ldrh	r3, [r3, #0]
 80015c6:	9301      	str	r3, [sp, #4]
    BSP_TS_Init(0, &hTS);
 80015c8:	f003 f880 	bl	80046cc <BSP_TS_Init>
}
 80015cc:	b005      	add	sp, #20
 80015ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80015d2:	bf00      	nop
 80015d4:	24008946 	.word	0x24008946
 80015d8:	24008948 	.word	0x24008948

080015dc <_ZN20STM32TouchControllerD0Ev>:
 80015dc:	b510      	push	{r4, lr}
 80015de:	4604      	mov	r4, r0
 80015e0:	2104      	movs	r1, #4
 80015e2:	f01a ff10 	bl	801c406 <_ZdlPvj>
 80015e6:	4620      	mov	r0, r4
 80015e8:	bd10      	pop	{r4, pc}

080015ea <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 80015ea:	b530      	push	{r4, r5, lr}
 80015ec:	b085      	sub	sp, #20
    TS_State_t TS_State = { 0 };
 80015ee:	2000      	movs	r0, #0
{
 80015f0:	460d      	mov	r5, r1
 80015f2:	4614      	mov	r4, r2

    /* This should never fail !! */
    if (BSP_TS_GetState(0, &TS_State) != BSP_ERROR_NONE)
 80015f4:	a901      	add	r1, sp, #4
    TS_State_t TS_State = { 0 };
 80015f6:	9003      	str	r0, [sp, #12]
 80015f8:	e9cd 0001 	strd	r0, r0, [sp, #4]
    if (BSP_TS_GetState(0, &TS_State) != BSP_ERROR_NONE)
 80015fc:	f003 f8e8 	bl	80047d0 <BSP_TS_GetState>
 8001600:	b140      	cbz	r0, 8001614 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8001602:	f04f 0350 	mov.w	r3, #80	; 0x50
 8001606:	f383 8811 	msr	BASEPRI, r3
 800160a:	f3bf 8f6f 	isb	sy
 800160e:	f3bf 8f4f 	dsb	sy
    {
        configASSERT(0);
 8001612:	e7fe      	b.n	8001612 <_ZN20STM32TouchController11sampleTouchERlS0_+0x28>
    }

    if (TS_State.TouchDetected)
 8001614:	9801      	ldr	r0, [sp, #4]
 8001616:	b120      	cbz	r0, 8001622 <_ZN20STM32TouchController11sampleTouchERlS0_+0x38>
    {
        x = TS_State.TouchX;
 8001618:	9b02      	ldr	r3, [sp, #8]
        y = TS_State.TouchY;

        return true;
 800161a:	2001      	movs	r0, #1
        x = TS_State.TouchX;
 800161c:	602b      	str	r3, [r5, #0]
        y = TS_State.TouchY;
 800161e:	9b03      	ldr	r3, [sp, #12]
 8001620:	6023      	str	r3, [r4, #0]
    }

    return false;
}
 8001622:	b005      	add	sp, #20
 8001624:	bd30      	pop	{r4, r5, pc}
	...

08001628 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001628:	2803      	cmp	r0, #3
 800162a:	d825      	bhi.n	8001678 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>
 800162c:	e8df f000 	tbb	[pc, r0]
 8001630:	1c130b02 	.word	0x1c130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001634:	4b11      	ldr	r3, [pc, #68]	; (800167c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 8001636:	2101      	movs	r1, #1
 8001638:	4811      	ldr	r0, [pc, #68]	; (8001680 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 800163a:	681a      	ldr	r2, [r3, #0]
 800163c:	fab2 f282 	clz	r2, r2
 8001640:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001642:	f003 bd1d 	b.w	8005080 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8001646:	4b0d      	ldr	r3, [pc, #52]	; (800167c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 8001648:	2108      	movs	r1, #8
 800164a:	480e      	ldr	r0, [pc, #56]	; (8001684 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
 800164c:	685a      	ldr	r2, [r3, #4]
 800164e:	fab2 f282 	clz	r2, r2
 8001652:	0952      	lsrs	r2, r2, #5
 8001654:	e7f5      	b.n	8001642 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001656:	4b09      	ldr	r3, [pc, #36]	; (800167c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 8001658:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800165c:	689a      	ldr	r2, [r3, #8]
 800165e:	fab2 f282 	clz	r2, r2
 8001662:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001664:	4808      	ldr	r0, [pc, #32]	; (8001688 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
 8001666:	e7ec      	b.n	8001642 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001668:	4b04      	ldr	r3, [pc, #16]	; (800167c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 800166a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800166e:	68da      	ldr	r2, [r3, #12]
 8001670:	fab2 f282 	clz	r2, r2
 8001674:	0952      	lsrs	r2, r2, #5
 8001676:	e7f5      	b.n	8001664 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x3c>
#endif
        break;
    }
}
 8001678:	4770      	bx	lr
 800167a:	bf00      	nop
 800167c:	24000378 	.word	0x24000378
 8001680:	58020000 	.word	0x58020000
 8001684:	58021800 	.word	0x58021800
 8001688:	58020400 	.word	0x58020400

0800168c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800168c:	2803      	cmp	r0, #3
 800168e:	d825      	bhi.n	80016dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>
 8001690:	e8df f000 	tbb	[pc, r0]
 8001694:	1c130b02 	.word	0x1c130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001698:	4b11      	ldr	r3, [pc, #68]	; (80016e0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 800169a:	2101      	movs	r1, #1
 800169c:	4811      	ldr	r0, [pc, #68]	; (80016e4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 800169e:	681a      	ldr	r2, [r3, #0]
 80016a0:	3a00      	subs	r2, #0
 80016a2:	bf18      	it	ne
 80016a4:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80016a6:	f003 bceb 	b.w	8005080 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80016aa:	4b0d      	ldr	r3, [pc, #52]	; (80016e0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 80016ac:	2108      	movs	r1, #8
 80016ae:	480e      	ldr	r0, [pc, #56]	; (80016e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
 80016b0:	685a      	ldr	r2, [r3, #4]
 80016b2:	3a00      	subs	r2, #0
 80016b4:	bf18      	it	ne
 80016b6:	2201      	movne	r2, #1
 80016b8:	e7f5      	b.n	80016a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80016ba:	4b09      	ldr	r3, [pc, #36]	; (80016e0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 80016bc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80016c0:	689a      	ldr	r2, [r3, #8]
 80016c2:	3a00      	subs	r2, #0
 80016c4:	bf18      	it	ne
 80016c6:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80016c8:	4808      	ldr	r0, [pc, #32]	; (80016ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
 80016ca:	e7ec      	b.n	80016a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80016cc:	4b04      	ldr	r3, [pc, #16]	; (80016e0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 80016ce:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80016d2:	68da      	ldr	r2, [r3, #12]
 80016d4:	3a00      	subs	r2, #0
 80016d6:	bf18      	it	ne
 80016d8:	2201      	movne	r2, #1
 80016da:	e7f5      	b.n	80016c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x3c>
#endif
        break;
    }
}
 80016dc:	4770      	bx	lr
 80016de:	bf00      	nop
 80016e0:	24000378 	.word	0x24000378
 80016e4:	58020000 	.word	0x58020000
 80016e8:	58021800 	.word	0x58021800
 80016ec:	58020400 	.word	0x58020400

080016f0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80016f0:	2803      	cmp	r0, #3
 80016f2:	d811      	bhi.n	8001718 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>
 80016f4:	e8df f000 	tbb	[pc, r0]
 80016f8:	0d090602 	.word	0x0d090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80016fc:	2101      	movs	r1, #1
 80016fe:	4807      	ldr	r0, [pc, #28]	; (800171c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001700:	f003 bcc3 	b.w	800508a <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001704:	2108      	movs	r1, #8
 8001706:	4806      	ldr	r0, [pc, #24]	; (8001720 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
 8001708:	e7fa      	b.n	8001700 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800170a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800170e:	4805      	ldr	r0, [pc, #20]	; (8001724 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
 8001710:	e7f6      	b.n	8001700 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001712:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001716:	e7fa      	b.n	800170e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1e>
#endif
        break;
    }
}
 8001718:	4770      	bx	lr
 800171a:	bf00      	nop
 800171c:	58020000 	.word	0x58020000
 8001720:	58021800 	.word	0x58021800
 8001724:	58020400 	.word	0x58020400

08001728 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001728:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800172a:	2803      	cmp	r0, #3
 800172c:	d815      	bhi.n	800175a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x32>
 800172e:	e8df f000 	tbb	[pc, r0]
 8001732:	0a02      	.short	0x0a02
 8001734:	110d      	.short	0x110d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001736:	2101      	movs	r1, #1
 8001738:	4809      	ldr	r0, [pc, #36]	; (8001760 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800173a:	f003 fc9b 	bl	8005074 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800173e:	1e43      	subs	r3, r0, #1
 8001740:	4258      	negs	r0, r3
 8001742:	4158      	adcs	r0, r3
 8001744:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001746:	2108      	movs	r1, #8
 8001748:	4806      	ldr	r0, [pc, #24]	; (8001764 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x3c>)
 800174a:	e7f6      	b.n	800173a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800174c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001750:	4805      	ldr	r0, [pc, #20]	; (8001768 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x40>)
 8001752:	e7f2      	b.n	800173a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001754:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001758:	e7fa      	b.n	8001750 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>
    switch (id)
 800175a:	2000      	movs	r0, #0
 800175c:	e7ef      	b.n	800173e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800175e:	bf00      	nop
 8001760:	58020000 	.word	0x58020000
 8001764:	58021800 	.word	0x58021800
 8001768:	58020400 	.word	0x58020400

0800176c <_ZN8touchgfx4GPIO4initEv>:
{
 800176c:	b570      	push	{r4, r5, r6, lr}
 800176e:	4d08      	ldr	r5, [pc, #32]	; (8001790 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001770:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001772:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001774:	b2e0      	uxtb	r0, r4
 8001776:	f7ff ffd7 	bl	8001728 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800177a:	b118      	cbz	r0, 8001784 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800177c:	682b      	ldr	r3, [r5, #0]
 800177e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001780:	bf18      	it	ne
 8001782:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001784:	3401      	adds	r4, #1
 8001786:	3504      	adds	r5, #4
 8001788:	2c05      	cmp	r4, #5
 800178a:	d1f3      	bne.n	8001774 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800178c:	bd70      	pop	{r4, r5, r6, pc}
 800178e:	bf00      	nop
 8001790:	24000378 	.word	0x24000378

08001794 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001794:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001796:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800179a:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 800179e:	4770      	bx	lr

080017a0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80017a0:	2000      	movs	r0, #0
 80017a2:	4770      	bx	lr

080017a4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80017a4:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80017a6:	3900      	subs	r1, #0
 80017a8:	4b02      	ldr	r3, [pc, #8]	; (80017b4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 80017aa:	bf18      	it	ne
 80017ac:	2101      	movne	r1, #1
 80017ae:	7019      	strb	r1, [r3, #0]
    }
 80017b0:	4770      	bx	lr
 80017b2:	bf00      	nop
 80017b4:	2400894b 	.word	0x2400894b

080017b8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80017b8:	2000      	movs	r0, #0
 80017ba:	4770      	bx	lr

080017bc <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80017bc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80017be:	b10b      	cbz	r3, 80017c4 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80017c0:	4608      	mov	r0, r1
 80017c2:	4718      	bx	r3
        }
    }
 80017c4:	4770      	bx	lr

080017c6 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80017c6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80017ca:	4770      	bx	lr

080017cc <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80017cc:	6840      	ldr	r0, [r0, #4]
 80017ce:	6803      	ldr	r3, [r0, #0]
 80017d0:	699b      	ldr	r3, [r3, #24]
 80017d2:	4718      	bx	r3

080017d4 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80017d4:	4770      	bx	lr
	...

080017d8 <_ZN11TouchGFXHAL10initializeEv>:
#include "task.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 80017d8:	b538      	push	{r3, r4, r5, lr}
 80017da:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80017dc:	f000 fd36 	bl	800224c <_ZN20TouchGFXGeneratedHAL10initializeEv>

    setFrameBufferStartAddresses((void*)0x70000000, (void*)0x70060000, (void*)0x700C0000);
 80017e0:	4a0a      	ldr	r2, [pc, #40]	; (800180c <_ZN11TouchGFXHAL10initializeEv+0x34>)
 80017e2:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 80017e6:	6823      	ldr	r3, [r4, #0]
 80017e8:	4620      	mov	r0, r4
 80017ea:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80017ee:	4b08      	ldr	r3, [pc, #32]	; (8001810 <_ZN11TouchGFXHAL10initializeEv+0x38>)
 80017f0:	47a8      	blx	r5

    GPIO::init();
    instrumentation.init();
 80017f2:	f104 057c 	add.w	r5, r4, #124	; 0x7c
    GPIO::init();
 80017f6:	f7ff ffb9 	bl	800176c <_ZN8touchgfx4GPIO4initEv>
    instrumentation.init();
 80017fa:	4628      	mov	r0, r5
 80017fc:	f7ff fe9c 	bl	8001538 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8001800:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 8001802:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 8001804:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 8001808:	bd38      	pop	{r3, r4, r5, pc}
 800180a:	bf00      	nop
 800180c:	70060000 	.word	0x70060000
 8001810:	700c0000 	.word	0x700c0000

08001814 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001814:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001816:	6803      	ldr	r3, [r0, #0]
{
 8001818:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800181a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800181e:	4798      	blx	r3
    enableInterrupts();
 8001820:	6823      	ldr	r3, [r4, #0]
 8001822:	4620      	mov	r0, r4
 8001824:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001826:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001828:	f000 f92a 	bl	8001a80 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800182c:	6823      	ldr	r3, [r4, #0]
 800182e:	4620      	mov	r0, r4
 8001830:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001832:	4798      	blx	r3

    /* Assert display enable LCD_DISP_CTRL pin */
    HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 8001834:	2201      	movs	r2, #1
 8001836:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800183a:	4808      	ldr	r0, [pc, #32]	; (800185c <_ZN11TouchGFXHAL9taskEntryEv+0x48>)
 800183c:	f003 fc20 	bl	8005080 <HAL_GPIO_WritePin>
    /* Assert back light LCD_BL_CTRL pin */
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8001840:	2201      	movs	r2, #1
 8001842:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001846:	4806      	ldr	r0, [pc, #24]	; (8001860 <_ZN11TouchGFXHAL9taskEntryEv+0x4c>)
 8001848:	f003 fc1a 	bl	8005080 <HAL_GPIO_WritePin>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800184c:	f000 f918 	bl	8001a80 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001850:	6823      	ldr	r3, [r4, #0]
 8001852:	4620      	mov	r0, r4
 8001854:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001856:	4798      	blx	r3
    for (;;)
 8001858:	e7f8      	b.n	800184c <_ZN11TouchGFXHAL9taskEntryEv+0x38>
 800185a:	bf00      	nop
 800185c:	58020c00 	.word	0x58020c00
 8001860:	58021800 	.word	0x58021800

08001864 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001864:	b510      	push	{r4, lr}
 8001866:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001868:	f009 ff7a 	bl	800b760 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800186c:	6823      	ldr	r3, [r4, #0]
 800186e:	4620      	mov	r0, r4
 8001870:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001874:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001878:	4718      	bx	r3

0800187a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800187a:	f000 bcd9 	b.w	8002230 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800187e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800187e:	f000 bcdd 	b.w	800223c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
	...

08001884 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8001884:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001886:	f000 fd07 	bl	8002298 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800188a:	4910      	ldr	r1, [pc, #64]	; (80018cc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
 800188c:	2300      	movs	r3, #0
 800188e:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001892:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 8001896:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800189a:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800189e:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80018a2:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80018a6:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80018a8:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80018ac:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80018ae:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 80018b2:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80018b4:	f8c1 5274 	str.w	r5, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 80018b8:	d2f9      	bcs.n	80018ae <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
 80018ba:	3b20      	subs	r3, #32
 80018bc:	f113 0f20 	cmn.w	r3, #32
 80018c0:	d1f2      	bne.n	80018a8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 80018c2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80018c6:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
 80018ca:	bd70      	pop	{r4, r5, r6, pc}
 80018cc:	e000ed00 	.word	0xe000ed00

080018d0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80018d0:	f000 bc8a 	b.w	80021e8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080018d4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80018d4:	f000 bd28 	b.w	8002328 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080018d8 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80018d8:	f000 bd12 	b.w	8002300 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080018dc <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80018dc:	f000 bc8e 	b.w	80021fc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080018e0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80018e0:	f009 b9a4 	b.w	800ac2c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080018e4 <_ZN11TouchGFXHALD0Ev>:
 80018e4:	b510      	push	{r4, lr}
 80018e6:	4604      	mov	r4, r0
 80018e8:	2188      	movs	r1, #136	; 0x88
 80018ea:	f01a fd8c 	bl	801c406 <_ZdlPvj>
 80018ee:	4620      	mov	r0, r4
 80018f0:	bd10      	pop	{r4, pc}

080018f2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80018f2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80018f6:	b11b      	cbz	r3, 8001900 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80018f8:	6840      	ldr	r0, [r0, #4]
 80018fa:	6803      	ldr	r3, [r0, #0]
 80018fc:	681b      	ldr	r3, [r3, #0]
 80018fe:	4718      	bx	r3
    }
 8001900:	4618      	mov	r0, r3
 8001902:	4770      	bx	lr

08001904 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8001904:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 8001908:	4b0d      	ldr	r3, [pc, #52]	; (8001940 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 800190a:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800190c:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8001910:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001912:	428c      	cmp	r4, r1
 8001914:	d009      	beq.n	800192a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001916:	b93a      	cbnz	r2, 8001928 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001918:	490a      	ldr	r1, [pc, #40]	; (8001944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800191a:	4a0b      	ldr	r2, [pc, #44]	; (8001948 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800191c:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800191e:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 8001920:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8001922:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001924:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 8001926:	701a      	strb	r2, [r3, #0]
        }
    }
 8001928:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800192a:	2a00      	cmp	r2, #0
 800192c:	d0fc      	beq.n	8001928 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800192e:	4a06      	ldr	r2, [pc, #24]	; (8001948 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001930:	4904      	ldr	r1, [pc, #16]	; (8001944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001932:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001934:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001936:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001938:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800193a:	2200      	movs	r2, #0
 800193c:	e7f3      	b.n	8001926 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800193e:	bf00      	nop
 8001940:	24008944 	.word	0x24008944
 8001944:	24008942 	.word	0x24008942
 8001948:	24008940 	.word	0x24008940

0800194c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800194c:	b570      	push	{r4, r5, r6, lr}
 800194e:	460d      	mov	r5, r1
 8001950:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001952:	b935      	cbnz	r5, 8001962 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001954:	4b09      	ldr	r3, [pc, #36]	; (800197c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001956:	f240 21d2 	movw	r1, #722	; 0x2d2
 800195a:	4a09      	ldr	r2, [pc, #36]	; (8001980 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 800195c:	4809      	ldr	r0, [pc, #36]	; (8001984 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800195e:	f01a ff2f 	bl	801c7c0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001962:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001966:	3a00      	subs	r2, #0
 8001968:	4b07      	ldr	r3, [pc, #28]	; (8001988 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 800196a:	bf18      	it	ne
 800196c:	2201      	movne	r2, #1
 800196e:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001970:	6803      	ldr	r3, [r0, #0]
    }
 8001972:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001976:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800197a:	4718      	bx	r3
 800197c:	0801daf4 	.word	0x0801daf4
 8001980:	0801db2c 	.word	0x0801db2c
 8001984:	0801db7a 	.word	0x0801db7a
 8001988:	2400894a 	.word	0x2400894a

0800198c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800198c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800198e:	4b09      	ldr	r3, [pc, #36]	; (80019b4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001990:	881b      	ldrh	r3, [r3, #0]
 8001992:	428b      	cmp	r3, r1
 8001994:	d803      	bhi.n	800199e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001996:	4b08      	ldr	r3, [pc, #32]	; (80019b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001998:	881b      	ldrh	r3, [r3, #0]
 800199a:	4293      	cmp	r3, r2
 800199c:	d905      	bls.n	80019aa <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800199e:	4b07      	ldr	r3, [pc, #28]	; (80019bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80019a0:	219e      	movs	r1, #158	; 0x9e
 80019a2:	4a07      	ldr	r2, [pc, #28]	; (80019c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80019a4:	4807      	ldr	r0, [pc, #28]	; (80019c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80019a6:	f01a ff0b 	bl	801c7c0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80019aa:	4b07      	ldr	r3, [pc, #28]	; (80019c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80019ac:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80019ae:	4b07      	ldr	r3, [pc, #28]	; (80019cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80019b0:	801a      	strh	r2, [r3, #0]
    }
 80019b2:	bd08      	pop	{r3, pc}
 80019b4:	24008940 	.word	0x24008940
 80019b8:	24008942 	.word	0x24008942
 80019bc:	0801dbbf 	.word	0x0801dbbf
 80019c0:	0801dc22 	.word	0x0801dc22
 80019c4:	0801db7a 	.word	0x0801db7a
 80019c8:	24008946 	.word	0x24008946
 80019cc:	24008948 	.word	0x24008948

080019d0 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 80019d0:	4601      	mov	r1, r0
 80019d2:	b508      	push	{r3, lr}
        return instance;
 80019d4:	4b03      	ldr	r3, [pc, #12]	; (80019e4 <IdleTaskHook+0x14>)
 80019d6:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 80019d8:	b101      	cbz	r1, 80019dc <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 80019da:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 80019dc:	f009 feda 	bl	800b794 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 80019e0:	2001      	movs	r0, #1
 80019e2:	bd08      	pop	{r3, pc}
 80019e4:	2400894c 	.word	0x2400894c

080019e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80019e8:	2101      	movs	r1, #1
 80019ea:	2200      	movs	r2, #0
{
 80019ec:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80019ee:	4608      	mov	r0, r1
 80019f0:	f006 fbd5 	bl	800819e <osSemaphoreNew>
 80019f4:	4b0a      	ldr	r3, [pc, #40]	; (8001a20 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80019f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80019f8:	b928      	cbnz	r0, 8001a06 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80019fa:	4b0a      	ldr	r3, [pc, #40]	; (8001a24 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80019fc:	2128      	movs	r1, #40	; 0x28
 80019fe:	4a0a      	ldr	r2, [pc, #40]	; (8001a28 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001a00:	480a      	ldr	r0, [pc, #40]	; (8001a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001a02:	f01a fedd 	bl	801c7c0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001a06:	2200      	movs	r2, #0
 8001a08:	2104      	movs	r1, #4
 8001a0a:	2001      	movs	r0, #1
 8001a0c:	f006 fc64 	bl	80082d8 <osMessageQueueNew>
 8001a10:	4b07      	ldr	r3, [pc, #28]	; (8001a30 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001a12:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001a14:	b918      	cbnz	r0, 8001a1e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001a16:	4b07      	ldr	r3, [pc, #28]	; (8001a34 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001a18:	212c      	movs	r1, #44	; 0x2c
 8001a1a:	4a03      	ldr	r2, [pc, #12]	; (8001a28 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001a1c:	e7f0      	b.n	8001a00 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001a1e:	bd08      	pop	{r3, pc}
 8001a20:	2400038c 	.word	0x2400038c
 8001a24:	0801dd40 	.word	0x0801dd40
 8001a28:	0801dd89 	.word	0x0801dd89
 8001a2c:	0801ddb8 	.word	0x0801ddb8
 8001a30:	24000388 	.word	0x24000388
 8001a34:	0801de10 	.word	0x0801de10

08001a38 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001a38:	4b02      	ldr	r3, [pc, #8]	; (8001a44 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001a3a:	f04f 31ff 	mov.w	r1, #4294967295
 8001a3e:	6818      	ldr	r0, [r3, #0]
 8001a40:	f006 bbf7 	b.w	8008232 <osSemaphoreAcquire>
 8001a44:	2400038c 	.word	0x2400038c

08001a48 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001a48:	4b01      	ldr	r3, [pc, #4]	; (8001a50 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001a4a:	6818      	ldr	r0, [r3, #0]
 8001a4c:	f006 bc1c 	b.w	8008288 <osSemaphoreRelease>
 8001a50:	2400038c 	.word	0x2400038c

08001a54 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001a54:	4b02      	ldr	r3, [pc, #8]	; (8001a60 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001a56:	2100      	movs	r1, #0
 8001a58:	6818      	ldr	r0, [r3, #0]
 8001a5a:	f006 bbea 	b.w	8008232 <osSemaphoreAcquire>
 8001a5e:	bf00      	nop
 8001a60:	2400038c 	.word	0x2400038c

08001a64 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001a64:	f7ff bff0 	b.w	8001a48 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001a68 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001a68:	2300      	movs	r3, #0
 8001a6a:	4803      	ldr	r0, [pc, #12]	; (8001a78 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001a6c:	4903      	ldr	r1, [pc, #12]	; (8001a7c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001a6e:	461a      	mov	r2, r3
 8001a70:	6800      	ldr	r0, [r0, #0]
 8001a72:	f006 bc6c 	b.w	800834e <osMessageQueuePut>
 8001a76:	bf00      	nop
 8001a78:	24000388 	.word	0x24000388
 8001a7c:	24000004 	.word	0x24000004

08001a80 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001a80:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001a82:	2300      	movs	r3, #0
 8001a84:	4c07      	ldr	r4, [pc, #28]	; (8001aa4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001a86:	a901      	add	r1, sp, #4
 8001a88:	461a      	mov	r2, r3
 8001a8a:	6820      	ldr	r0, [r4, #0]
 8001a8c:	f006 fc8f 	bl	80083ae <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001a90:	f04f 33ff 	mov.w	r3, #4294967295
 8001a94:	2200      	movs	r2, #0
 8001a96:	a901      	add	r1, sp, #4
 8001a98:	6820      	ldr	r0, [r4, #0]
 8001a9a:	f006 fc88 	bl	80083ae <osMessageQueueGet>
}
 8001a9e:	b002      	add	sp, #8
 8001aa0:	bd10      	pop	{r4, pc}
 8001aa2:	bf00      	nop
 8001aa4:	24000388 	.word	0x24000388

08001aa8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001aa8:	6803      	ldr	r3, [r0, #0]
 8001aaa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001aac:	4718      	bx	r3

08001aae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001aae:	2001      	movs	r0, #1
 8001ab0:	4770      	bx	lr

08001ab2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8001ab2:	6803      	ldr	r3, [r0, #0]
 8001ab4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001ab6:	4718      	bx	r3

08001ab8 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001ab8:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8001abc:	4770      	bx	lr
	...

08001ac0 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001ac0:	4b05      	ldr	r3, [pc, #20]	; (8001ad8 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001ac2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001ac6:	6003      	str	r3, [r0, #0]
 8001ac8:	4b04      	ldr	r3, [pc, #16]	; (8001adc <_ZN8STM32DMAD1Ev+0x1c>)
 8001aca:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001ace:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001ad2:	f3bf 8f6f 	isb	sy
}
 8001ad6:	4770      	bx	lr
 8001ad8:	0801dfb8 	.word	0x0801dfb8
 8001adc:	e000e100 	.word	0xe000e100

08001ae0 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001ae0:	b510      	push	{r4, lr}
 8001ae2:	4604      	mov	r4, r0
}
 8001ae4:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8001ae8:	f7ff ffea 	bl	8001ac0 <_ZN8STM32DMAD1Ev>
 8001aec:	4620      	mov	r0, r4
 8001aee:	f01a fc8a 	bl	801c406 <_ZdlPvj>
 8001af2:	4620      	mov	r0, r4
 8001af4:	bd10      	pop	{r4, pc}
	...

08001af8 <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001af8:	4b0f      	ldr	r3, [pc, #60]	; (8001b38 <_ZN8STM32DMA10initializeEv+0x40>)
{
 8001afa:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001afc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001b00:	f042 0210 	orr.w	r2, r2, #16
 8001b04:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001b08:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001b0c:	f002 0210 	and.w	r2, r2, #16
 8001b10:	9201      	str	r2, [sp, #4]
 8001b12:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001b14:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8001b16:	f042 0210 	orr.w	r2, r2, #16
 8001b1a:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001b1c:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8001b1e:	f022 0210 	bic.w	r2, r2, #16
 8001b22:	67da      	str	r2, [r3, #124]	; 0x7c
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001b24:	4b05      	ldr	r3, [pc, #20]	; (8001b3c <_ZN8STM32DMA10initializeEv+0x44>)
 8001b26:	4a06      	ldr	r2, [pc, #24]	; (8001b40 <_ZN8STM32DMA10initializeEv+0x48>)
 8001b28:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001b2a:	4b06      	ldr	r3, [pc, #24]	; (8001b44 <_ZN8STM32DMA10initializeEv+0x4c>)
 8001b2c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001b30:	609a      	str	r2, [r3, #8]
}
 8001b32:	b002      	add	sp, #8
 8001b34:	4770      	bx	lr
 8001b36:	bf00      	nop
 8001b38:	58024400 	.word	0x58024400
 8001b3c:	2400015c 	.word	0x2400015c
 8001b40:	08001b49 	.word	0x08001b49
 8001b44:	e000e100 	.word	0xe000e100

08001b48 <DMA2D_XferCpltCallback>:
 8001b48:	4b02      	ldr	r3, [pc, #8]	; (8001b54 <DMA2D_XferCpltCallback+0xc>)
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001b4e:	6803      	ldr	r3, [r0, #0]
 8001b50:	695b      	ldr	r3, [r3, #20]
 8001b52:	4718      	bx	r3
 8001b54:	2400894c 	.word	0x2400894c

08001b58 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001b58:	b570      	push	{r4, r5, r6, lr}
 8001b5a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001b5c:	4b0a      	ldr	r3, [pc, #40]	; (8001b88 <_ZN8STM32DMAC1Ev+0x30>)
 8001b5e:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001b60:	2600      	movs	r6, #0
 8001b62:	4625      	mov	r5, r4
 8001b64:	2260      	movs	r2, #96	; 0x60
 8001b66:	6060      	str	r0, [r4, #4]
 8001b68:	7226      	strb	r6, [r4, #8]
 8001b6a:	7266      	strb	r6, [r4, #9]
 8001b6c:	f845 3b20 	str.w	r3, [r5], #32
 8001b70:	4629      	mov	r1, r5
 8001b72:	f009 ff63 	bl	800ba3c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001b76:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001b7a:	60ee      	str	r6, [r5, #12]
 8001b7c:	3524      	adds	r5, #36	; 0x24
 8001b7e:	42ab      	cmp	r3, r5
 8001b80:	d1fb      	bne.n	8001b7a <_ZN8STM32DMAC1Ev+0x22>
}
 8001b82:	4620      	mov	r0, r4
 8001b84:	bd70      	pop	{r4, r5, r6, pc}
 8001b86:	bf00      	nop
 8001b88:	0801dfb8 	.word	0x0801dfb8

08001b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001b8c:	b508      	push	{r3, lr}
    switch (format)
 8001b8e:	290b      	cmp	r1, #11
 8001b90:	d80b      	bhi.n	8001baa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8001b92:	e8df f001 	tbb	[pc, r1]
 8001b96:	0612      	.short	0x0612
 8001b98:	0a0a0a10 	.word	0x0a0a0a10
 8001b9c:	0808080a 	.word	0x0808080a
 8001ba0:	0808      	.short	0x0808
 8001ba2:	2001      	movs	r0, #1
}
 8001ba4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001ba6:	2005      	movs	r0, #5
        break;
 8001ba8:	e7fc      	b.n	8001ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8001baa:	4b05      	ldr	r3, [pc, #20]	; (8001bc0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001bac:	2166      	movs	r1, #102	; 0x66
 8001bae:	4a05      	ldr	r2, [pc, #20]	; (8001bc4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001bb0:	4805      	ldr	r0, [pc, #20]	; (8001bc8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8001bb2:	f01a fe05 	bl	801c7c0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001bb6:	2000      	movs	r0, #0
 8001bb8:	e7f4      	b.n	8001ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001bba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001bbc:	e7f2      	b.n	8001ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001bbe:	bf00      	nop
 8001bc0:	0801de52 	.word	0x0801de52
 8001bc4:	0801de6d 	.word	0x0801de6d
 8001bc8:	0801deb7 	.word	0x0801deb7

08001bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001bcc:	b508      	push	{r3, lr}
    switch (format)
 8001bce:	290a      	cmp	r1, #10
 8001bd0:	d809      	bhi.n	8001be6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8001bd2:	e8df f001 	tbb	[pc, r1]
 8001bd6:	0610      	.short	0x0610
 8001bd8:	0808080e 	.word	0x0808080e
 8001bdc:	06060608 	.word	0x06060608
 8001be0:	06          	.byte	0x06
 8001be1:	00          	.byte	0x00
 8001be2:	2001      	movs	r0, #1
}
 8001be4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001be6:	4b05      	ldr	r3, [pc, #20]	; (8001bfc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8001be8:	2187      	movs	r1, #135	; 0x87
 8001bea:	4a05      	ldr	r2, [pc, #20]	; (8001c00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001bec:	4805      	ldr	r0, [pc, #20]	; (8001c04 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001bee:	f01a fde7 	bl	801c7c0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001bf2:	2000      	movs	r0, #0
 8001bf4:	e7f6      	b.n	8001be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001bf6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001bf8:	e7f4      	b.n	8001be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001bfa:	bf00      	nop
 8001bfc:	0801de52 	.word	0x0801de52
 8001c00:	0801df0d 	.word	0x0801df0d
 8001c04:	0801deb7 	.word	0x0801deb7

08001c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8001c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001c0c:	7f4f      	ldrb	r7, [r1, #29]
{
 8001c0e:	460c      	mov	r4, r1
 8001c10:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001c12:	4639      	mov	r1, r7
 8001c14:	f7ff ffba 	bl	8001b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001c18:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001c1c:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001c1e:	4648      	mov	r0, r9
 8001c20:	4641      	mov	r1, r8
 8001c22:	f7ff ffb3 	bl	8001b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001c26:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001c28:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001c2a:	4648      	mov	r0, r9
 8001c2c:	f7ff ffce 	bl	8001bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001c30:	8aa1      	ldrh	r1, [r4, #20]
 8001c32:	8b62      	ldrh	r2, [r4, #26]
 8001c34:	4b42      	ldr	r3, [pc, #264]	; (8001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001c36:	1a52      	subs	r2, r2, r1
 8001c38:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001c3a:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001c3c:	8b22      	ldrh	r2, [r4, #24]
 8001c3e:	1a52      	subs	r2, r2, r1
 8001c40:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001c42:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001c44:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001c46:	ea42 4201 	orr.w	r2, r2, r1, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001c4a:	6920      	ldr	r0, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001c4c:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001c4e:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001c50:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001c52:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8001c54:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001c56:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8001c5a:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001c5c:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8001c60:	d026      	beq.n	8001cb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8001c62:	d810      	bhi.n	8001c86 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8001c64:	2920      	cmp	r1, #32
 8001c66:	ea45 0402 	orr.w	r4, r5, r2
 8001c6a:	d062      	beq.n	8001d32 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
 8001c6c:	2940      	cmp	r1, #64	; 0x40
 8001c6e:	d060      	beq.n	8001d32 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
 8001c70:	2904      	cmp	r1, #4
 8001c72:	d05e      	beq.n	8001d32 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001c74:	432a      	orrs	r2, r5
 8001c76:	4b32      	ldr	r3, [pc, #200]	; (8001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001c78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001c7a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001c7e:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001c80:	d05b      	beq.n	8001d3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x132>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001c82:	4a30      	ldr	r2, [pc, #192]	; (8001d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001c84:	e040      	b.n	8001d08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8001c86:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8001c8a:	d007      	beq.n	8001c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8001c8c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8001c90:	d1f0      	bne.n	8001c74 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001c92:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001c96:	f042 0209 	orr.w	r2, r2, #9
 8001c9a:	e003      	b.n	8001ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001c9c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001ca0:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ca4:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001ca6:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001ca8:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001caa:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001cac:	6158      	str	r0, [r3, #20]
 8001cae:	e02a      	b.n	8001d06 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001cb0:	432a      	orrs	r2, r5
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001cb2:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001cb4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001cb8:	61da      	str	r2, [r3, #28]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001cba:	1d22      	adds	r2, r4, #4
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001cbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001cbe:	6158      	str	r0, [r3, #20]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001cc0:	62da      	str	r2, [r3, #44]	; 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
 8001cc2:	7822      	ldrb	r2, [r4, #0]
 8001cc4:	b142      	cbz	r2, 8001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8001cc6:	2a01      	cmp	r2, #1
 8001cc8:	d021      	beq.n	8001d0e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8001cca:	4b1f      	ldr	r3, [pc, #124]	; (8001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001ccc:	f240 1101 	movw	r1, #257	; 0x101
 8001cd0:	4a1e      	ldr	r2, [pc, #120]	; (8001d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001cd2:	481f      	ldr	r0, [pc, #124]	; (8001d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001cd4:	f01a fd74 	bl	801c7c0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001cd8:	69da      	ldr	r2, [r3, #28]
            bool blend = true;
 8001cda:	2001      	movs	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001cdc:	8861      	ldrh	r1, [r4, #2]
 8001cde:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8001ce2:	3901      	subs	r1, #1
 8001ce4:	f022 0210 	bic.w	r2, r2, #16
 8001ce8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001cec:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001cee:	4b14      	ldr	r3, [pc, #80]	; (8001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001cf0:	69da      	ldr	r2, [r3, #28]
 8001cf2:	f042 0220 	orr.w	r2, r2, #32
 8001cf6:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001cf8:	69da      	ldr	r2, [r3, #28]
 8001cfa:	0692      	lsls	r2, r2, #26
 8001cfc:	d4fc      	bmi.n	8001cf8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001cfe:	2210      	movs	r2, #16
 8001d00:	609a      	str	r2, [r3, #8]
            if(blend)
 8001d02:	2800      	cmp	r0, #0
 8001d04:	d0bd      	beq.n	8001c82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001d06:	4a13      	ldr	r2, [pc, #76]	; (8001d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001d08:	601a      	str	r2, [r3, #0]
        }

        break;
    }
}
 8001d0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001d0e:	8862      	ldrh	r2, [r4, #2]
                if(blitOp.alpha == 255)
 8001d10:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001d14:	69d9      	ldr	r1, [r3, #28]
 8001d16:	f102 34ff 	add.w	r4, r2, #4294967295
                if(blitOp.alpha == 255)
 8001d1a:	bf18      	it	ne
 8001d1c:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001d1e:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8001d22:	f022 0210 	bic.w	r2, r2, #16
 8001d26:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8001d2a:	f042 0210 	orr.w	r2, r2, #16
 8001d2e:	61da      	str	r2, [r3, #28]
                break;
 8001d30:	e7dd      	b.n	8001cee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001d32:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001d36:	61dc      	str	r4, [r3, #28]
 8001d38:	e7b7      	b.n	8001caa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001d3a:	f240 2201 	movw	r2, #513	; 0x201
 8001d3e:	e7e3      	b.n	8001d08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8001d40:	52001000 	.word	0x52001000
 8001d44:	00010201 	.word	0x00010201
 8001d48:	0801df58 	.word	0x0801df58
 8001d4c:	0801df72 	.word	0x0801df72
 8001d50:	0801deb7 	.word	0x0801deb7
 8001d54:	00020201 	.word	0x00020201

08001d58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001d58:	b570      	push	{r4, r5, r6, lr}
 8001d5a:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001d5c:	7f89      	ldrb	r1, [r1, #30]
 8001d5e:	f7ff ff35 	bl	8001bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001d62:	4b12      	ldr	r3, [pc, #72]	; (8001dac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x54>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001d64:	8aa5      	ldrh	r5, [r4, #20]
 8001d66:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001d68:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001d6a:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001d6e:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001d70:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001d72:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001d74:	6921      	ldr	r1, [r4, #16]
 8001d76:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001d78:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001d7a:	6826      	ldr	r6, [r4, #0]
 8001d7c:	68e5      	ldr	r5, [r4, #12]
 8001d7e:	2e08      	cmp	r6, #8
 8001d80:	d10d      	bne.n	8001d9e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001d82:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001d84:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001d86:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001d88:	4a09      	ldr	r2, [pc, #36]	; (8001db0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>)
 8001d8a:	7f20      	ldrb	r0, [r4, #28]
 8001d8c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001d90:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001d92:	4a08      	ldr	r2, [pc, #32]	; (8001db4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001d94:	621d      	str	r5, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001d96:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001d98:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, blitOp.color);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001d9a:	601a      	str	r2, [r3, #0]
    }
}
 8001d9c:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001d9e:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001da0:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001da2:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001da4:	4a04      	ldr	r2, [pc, #16]	; (8001db8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x60>)
        WRITE_REG(DMA2D->OCOLR, blitOp.color);
 8001da6:	639d      	str	r5, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001da8:	e7f7      	b.n	8001d9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001daa:	bf00      	nop
 8001dac:	52001000 	.word	0x52001000
 8001db0:	00010009 	.word	0x00010009
 8001db4:	00020201 	.word	0x00020201
 8001db8:	00030201 	.word	0x00030201

08001dbc <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001dbc:	4b03      	ldr	r3, [pc, #12]	; (8001dcc <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8001dbe:	681a      	ldr	r2, [r3, #0]
 8001dc0:	07d2      	lsls	r2, r2, #31
 8001dc2:	d4fc      	bmi.n	8001dbe <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001dc4:	2223      	movs	r2, #35	; 0x23
 8001dc6:	609a      	str	r2, [r3, #8]
}
 8001dc8:	4770      	bx	lr
 8001dca:	bf00      	nop
 8001dcc:	52001000 	.word	0x52001000

08001dd0 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh>:
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}

void lineFromRGB888(uint8_t* const ptr, const uint8_t* const data, const unsigned count, const uint8_t alpha)
{
 8001dd0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001dd2:	4c0e      	ldr	r4, [pc, #56]	; (8001e0c <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x3c>)
 8001dd4:	6825      	ldr	r5, [r4, #0]
 8001dd6:	07ed      	lsls	r5, r5, #31
 8001dd8:	d4fc      	bmi.n	8001dd4 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001dda:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB888);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001ddc:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8001dde:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001de0:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB888);
 8001de2:	f04f 0501 	mov.w	r5, #1
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001de6:	ea42 0205 	orr.w	r2, r2, r5
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB888);
 8001dea:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001dec:	6462      	str	r2, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001dee:	63e0      	str	r0, [r4, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8001df0:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8001df2:	d007      	beq.n	8001e04 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB888 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));
 8001df4:	4a06      	ldr	r2, [pc, #24]	; (8001e10 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x40>)
 8001df6:	ea42 6303 	orr.w	r3, r2, r3, lsl #24
 8001dfa:	61e3      	str	r3, [r4, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB888 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001dfc:	6265      	str	r5, [r4, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8001dfe:	6160      	str	r0, [r4, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001e00:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB888 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
 8001e02:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB888 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));
 8001e04:	4b03      	ldr	r3, [pc, #12]	; (8001e14 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x44>)
 8001e06:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8001e08:	6025      	str	r5, [r4, #0]
}
 8001e0a:	e7fa      	b.n	8001e02 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x32>
 8001e0c:	52001000 	.word	0x52001000
 8001e10:	00020001 	.word	0x00020001
 8001e14:	ff020001 	.word	0xff020001

08001e18 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh>:

void lineFromARGB8888(uint8_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8001e18:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001e1a:	4c0b      	ldr	r4, [pc, #44]	; (8001e48 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x30>)
 8001e1c:	6825      	ldr	r5, [r4, #0]
 8001e1e:	07ed      	lsls	r5, r5, #31
 8001e20:	d4fc      	bmi.n	8001e1c <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x4>
    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001e22:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB888);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001e24:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));
 8001e26:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001e28:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB888);
 8001e2a:	2501      	movs	r5, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));
 8001e2c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001e30:	432a      	orrs	r2, r5
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB888);
 8001e32:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001e34:	6462      	str	r2, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001e36:	63e0      	str	r0, [r4, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8001e38:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));
 8001e3a:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001e3c:	4b03      	ldr	r3, [pc, #12]	; (8001e4c <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB888 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001e3e:	6265      	str	r5, [r4, #36]	; 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8001e40:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001e42:	6023      	str	r3, [r4, #0]
}
 8001e44:	bd30      	pop	{r4, r5, pc}
 8001e46:	bf00      	nop
 8001e48:	52001000 	.word	0x52001000
 8001e4c:	00020001 	.word	0x00020001

08001e50 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001e50:	2001      	movs	r0, #1
 8001e52:	4770      	bx	lr

08001e54 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001e54:	200c      	movs	r0, #12
 8001e56:	4770      	bx	lr

08001e58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001e58:	230c      	movs	r3, #12
 8001e5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001e5e:	3008      	adds	r0, #8
 8001e60:	4770      	bx	lr

08001e62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001e62:	230c      	movs	r3, #12
 8001e64:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001e68:	3008      	adds	r0, #8
 8001e6a:	4770      	bx	lr

08001e6c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001e6c:	2001      	movs	r0, #1
 8001e6e:	4770      	bx	lr

08001e70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001e70:	f641 7098 	movw	r0, #8088	; 0x1f98
 8001e74:	4770      	bx	lr

08001e76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001e76:	f641 7398 	movw	r3, #8088	; 0x1f98
 8001e7a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001e7e:	3008      	adds	r0, #8
 8001e80:	4770      	bx	lr

08001e82 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001e82:	f641 7398 	movw	r3, #8088	; 0x1f98
 8001e86:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001e8a:	3008      	adds	r0, #8
 8001e8c:	4770      	bx	lr

08001e8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001e8e:	2001      	movs	r0, #1
 8001e90:	4770      	bx	lr

08001e92 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001e92:	2010      	movs	r0, #16
 8001e94:	4770      	bx	lr

08001e96 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001e96:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001e9a:	3008      	adds	r0, #8
 8001e9c:	4770      	bx	lr

08001e9e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001e9e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001ea2:	3008      	adds	r0, #8
 8001ea4:	4770      	bx	lr

08001ea6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8001ea6:	4608      	mov	r0, r1
 8001ea8:	f000 bc3e 	b.w	8002728 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001eac:	4b03      	ldr	r3, [pc, #12]	; (8001ebc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001eae:	b510      	push	{r4, lr}
 8001eb0:	4604      	mov	r4, r0
 8001eb2:	6003      	str	r3, [r0, #0]
 8001eb4:	f008 fa43 	bl	800a33e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001eb8:	4620      	mov	r0, r4
 8001eba:	bd10      	pop	{r4, pc}
 8001ebc:	0801e070 	.word	0x0801e070

08001ec0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001ec0:	b510      	push	{r4, lr}
 8001ec2:	4604      	mov	r4, r0
 8001ec4:	f7ff fff2 	bl	8001eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ec8:	2114      	movs	r1, #20
 8001eca:	4620      	mov	r0, r4
 8001ecc:	f01a fa9b 	bl	801c406 <_ZdlPvj>
 8001ed0:	4620      	mov	r0, r4
 8001ed2:	bd10      	pop	{r4, pc}

08001ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001ed4:	4b03      	ldr	r3, [pc, #12]	; (8001ee4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001ed6:	b510      	push	{r4, lr}
 8001ed8:	4604      	mov	r4, r0
 8001eda:	6003      	str	r3, [r0, #0]
 8001edc:	f008 fa2f 	bl	800a33e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001ee0:	4620      	mov	r0, r4
 8001ee2:	bd10      	pop	{r4, pc}
 8001ee4:	0801e03c 	.word	0x0801e03c

08001ee8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001ee8:	b510      	push	{r4, lr}
 8001eea:	4604      	mov	r4, r0
 8001eec:	f7ff fff2 	bl	8001ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ef0:	f44f 51fd 	mov.w	r1, #8096	; 0x1fa0
 8001ef4:	4620      	mov	r0, r4
 8001ef6:	f01a fa86 	bl	801c406 <_ZdlPvj>
 8001efa:	4620      	mov	r0, r4
 8001efc:	bd10      	pop	{r4, pc}
	...

08001f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001f00:	4b03      	ldr	r3, [pc, #12]	; (8001f10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001f02:	b510      	push	{r4, lr}
 8001f04:	4604      	mov	r4, r0
 8001f06:	6003      	str	r3, [r0, #0]
 8001f08:	f008 fa19 	bl	800a33e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001f0c:	4620      	mov	r0, r4
 8001f0e:	bd10      	pop	{r4, pc}
 8001f10:	0801e008 	.word	0x0801e008

08001f14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001f14:	b510      	push	{r4, lr}
 8001f16:	4604      	mov	r4, r0
 8001f18:	f7ff fff2 	bl	8001f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001f1c:	2118      	movs	r1, #24
 8001f1e:	4620      	mov	r0, r4
 8001f20:	f01a fa71 	bl	801c406 <_ZdlPvj>
 8001f24:	4620      	mov	r0, r4
 8001f26:	bd10      	pop	{r4, pc}

08001f28 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001f28:	4b09      	ldr	r3, [pc, #36]	; (8001f50 <_ZN12FrontendHeapD1Ev+0x28>)
 8001f2a:	b510      	push	{r4, lr}
 8001f2c:	4604      	mov	r4, r0
 8001f2e:	6003      	str	r3, [r0, #0]
 8001f30:	f500 50fe 	add.w	r0, r0, #8128	; 0x1fc0
 8001f34:	300c      	adds	r0, #12
 8001f36:	f7ff ffb9 	bl	8001eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001f3a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001f3e:	f7ff ffc9 	bl	8001ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001f42:	f104 0014 	add.w	r0, r4, #20
 8001f46:	f7ff ffdb 	bl	8001f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001f4a:	4620      	mov	r0, r4
 8001f4c:	bd10      	pop	{r4, pc}
 8001f4e:	bf00      	nop
 8001f50:	0801e0a4 	.word	0x0801e0a4

08001f54 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001f54:	b508      	push	{r3, lr}
 8001f56:	4802      	ldr	r0, [pc, #8]	; (8001f60 <__tcf_0+0xc>)
 8001f58:	f7ff ffe6 	bl	8001f28 <_ZN12FrontendHeapD1Ev>
 8001f5c:	bd08      	pop	{r3, pc}
 8001f5e:	bf00      	nop
 8001f60:	24000394 	.word	0x24000394

08001f64 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001f64:	b510      	push	{r4, lr}
 8001f66:	4604      	mov	r4, r0
 8001f68:	f7ff ffde 	bl	8001f28 <_ZN12FrontendHeapD1Ev>
 8001f6c:	f44f 5105 	mov.w	r1, #8512	; 0x2140
 8001f70:	4620      	mov	r0, r4
 8001f72:	f01a fa48 	bl	801c406 <_ZdlPvj>
 8001f76:	4620      	mov	r0, r4
 8001f78:	bd10      	pop	{r4, pc}
	...

08001f7c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
 8001f7c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001f80:	f000 fa5e 	bl	8002440 <_ZN14BitmapDatabase11getInstanceEv>
 8001f84:	2400      	movs	r4, #0
 8001f86:	4605      	mov	r5, r0
 8001f88:	f000 fa5e 	bl	8002448 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001f8c:	4623      	mov	r3, r4
 8001f8e:	4601      	mov	r1, r0
 8001f90:	4622      	mov	r2, r4
 8001f92:	4628      	mov	r0, r5
 8001f94:	9400      	str	r4, [sp, #0]
 8001f96:	f010 ff03 	bl	8012da0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001f9a:	4b26      	ldr	r3, [pc, #152]	; (8002034 <touchgfx_init+0xb8>)
 8001f9c:	4a26      	ldr	r2, [pc, #152]	; (8002038 <touchgfx_init+0xbc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001f9e:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8001fa0:	4d26      	ldr	r5, [pc, #152]	; (800203c <touchgfx_init+0xc0>)
 8001fa2:	601a      	str	r2, [r3, #0]
 8001fa4:	f001 f8d0 	bl	8003148 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001fa8:	4825      	ldr	r0, [pc, #148]	; (8002040 <touchgfx_init+0xc4>)
 8001faa:	f010 fdb1 	bl	8012b10 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001fae:	782b      	ldrb	r3, [r5, #0]
 8001fb0:	f3bf 8f5b 	dmb	ish
 8001fb4:	07db      	lsls	r3, r3, #31
 8001fb6:	d437      	bmi.n	8002028 <touchgfx_init+0xac>
 8001fb8:	4628      	mov	r0, r5
 8001fba:	f01a fa26 	bl	801c40a <__cxa_guard_acquire>
 8001fbe:	b398      	cbz	r0, 8002028 <touchgfx_init+0xac>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001fc0:	4c20      	ldr	r4, [pc, #128]	; (8002044 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001fc2:	4b21      	ldr	r3, [pc, #132]	; (8002048 <touchgfx_init+0xcc>)
 8001fc4:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001fc8:	f104 0014 	add.w	r0, r4, #20
 8001fcc:	6023      	str	r3, [r4, #0]
 8001fce:	f508 57fd 	add.w	r7, r8, #8096	; 0x1fa0
 8001fd2:	6060      	str	r0, [r4, #4]
 8001fd4:	f8c4 8008 	str.w	r8, [r4, #8]
 8001fd8:	f107 0618 	add.w	r6, r7, #24
 8001fdc:	60e7      	str	r7, [r4, #12]
 8001fde:	6126      	str	r6, [r4, #16]
 8001fe0:	f008 f9ae 	bl	800a340 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001fe4:	4b19      	ldr	r3, [pc, #100]	; (800204c <touchgfx_init+0xd0>)
 8001fe6:	4640      	mov	r0, r8
 8001fe8:	6163      	str	r3, [r4, #20]
 8001fea:	f008 f9a9 	bl	800a340 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001fee:	4b18      	ldr	r3, [pc, #96]	; (8002050 <touchgfx_init+0xd4>)
 8001ff0:	4638      	mov	r0, r7
 8001ff2:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001ff4:	f008 f9a4 	bl	800a340 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001ff8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8001ffc:	4a15      	ldr	r2, [pc, #84]	; (8002054 <touchgfx_init+0xd8>)
 8001ffe:	f504 50ff 	add.w	r0, r4, #8160	; 0x1fe0
 8002002:	f8c3 2fcc 	str.w	r2, [r3, #4044]	; 0xfcc
 8002006:	f001 f91b 	bl	8003240 <_ZN5ModelC1Ev>
 800200a:	4622      	mov	r2, r4
 800200c:	f504 51ff 	add.w	r1, r4, #8160	; 0x1fe0
 8002010:	4630      	mov	r0, r6
 8002012:	f001 f90b 	bl	800322c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002016:	4630      	mov	r0, r6
 8002018:	f000 fb86 	bl	8002728 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 800201c:	480e      	ldr	r0, [pc, #56]	; (8002058 <touchgfx_init+0xdc>)
 800201e:	f01a fbed 	bl	801c7fc <atexit>
 8002022:	4628      	mov	r0, r5
 8002024:	f01a f9fd 	bl	801c422 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002028:	480c      	ldr	r0, [pc, #48]	; (800205c <touchgfx_init+0xe0>)
}
 800202a:	b002      	add	sp, #8
 800202c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002030:	f7ff bbd2 	b.w	80017d8 <_ZN11TouchGFXHAL10initializeEv>
 8002034:	240089b0 	.word	0x240089b0
 8002038:	24003300 	.word	0x24003300
 800203c:	24000390 	.word	0x24000390
 8002040:	24000008 	.word	0x24000008
 8002044:	24000394 	.word	0x24000394
 8002048:	0801e0a4 	.word	0x0801e0a4
 800204c:	0801e008 	.word	0x0801e008
 8002050:	0801e03c 	.word	0x0801e03c
 8002054:	0801e070 	.word	0x0801e070
 8002058:	08001f55 	.word	0x08001f55
 800205c:	24003278 	.word	0x24003278

08002060 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002060:	4770      	bx	lr
	...

08002064 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002064:	4801      	ldr	r0, [pc, #4]	; (800206c <touchgfx_taskEntry+0x8>)
 8002066:	f7ff bbd5 	b.w	8001814 <_ZN11TouchGFXHAL9taskEntryEv>
 800206a:	bf00      	nop
 800206c:	24003278 	.word	0x24003278

08002070 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002070:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8002072:	4e26      	ldr	r6, [pc, #152]	; (800210c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8002074:	4b26      	ldr	r3, [pc, #152]	; (8002110 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 8002076:	4c27      	ldr	r4, [pc, #156]	; (8002114 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8002078:	4630      	mov	r0, r6
static LCD24bpp display;
 800207a:	4d27      	ldr	r5, [pc, #156]	; (8002118 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800207c:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 800207e:	f7ff fd6b 	bl	8001b58 <_ZN8STM32DMAC1Ev>
static LCD24bpp display;
 8002082:	4628      	mov	r0, r5
 8002084:	f013 f8de 	bl	8015244 <_ZN8touchgfx8LCD24bppC1Ev>
          lastRenderMethod(HARDWARE)
 8002088:	4b24      	ldr	r3, [pc, #144]	; (800211c <_GLOBAL__sub_I_touchgfx_init+0xac>)
 800208a:	2200      	movs	r2, #0
 800208c:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002090:	4823      	ldr	r0, [pc, #140]	; (8002120 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002092:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8002094:	661a      	str	r2, [r3, #96]	; 0x60
 8002096:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800209a:	671a      	str	r2, [r3, #112]	; 0x70
 800209c:	60dc      	str	r4, [r3, #12]
 800209e:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80020a2:	4920      	ldr	r1, [pc, #128]	; (8002124 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 80020a4:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 80020a8:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80020ac:	6759      	str	r1, [r3, #116]	; 0x74
 80020ae:	2101      	movs	r1, #1
 80020b0:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80020b4:	491c      	ldr	r1, [pc, #112]	; (8002128 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80020b6:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80020b8:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80020bc:	8001      	strh	r1, [r0, #0]
 80020be:	481b      	ldr	r0, [pc, #108]	; (800212c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80020c0:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80020c2:	f44f 7188 	mov.w	r1, #272	; 0x110
 80020c6:	481a      	ldr	r0, [pc, #104]	; (8002130 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          lastRenderMethod(HARDWARE)
 80020c8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80020cc:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80020d0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80020d4:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 80020d8:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 80020dc:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80020e0:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 80020e4:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 80020e8:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80020ec:	8001      	strh	r1, [r0, #0]
 80020ee:	4811      	ldr	r0, [pc, #68]	; (8002134 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
          cc_in(0)
 80020f0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80020f4:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80020f6:	4910      	ldr	r1, [pc, #64]	; (8002138 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80020f8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        DISPLAY_ROTATION = rotate0;
 80020fc:	700a      	strb	r2, [r1, #0]
 80020fe:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8002102:	490e      	ldr	r1, [pc, #56]	; (800213c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 8002104:	4a0e      	ldr	r2, [pc, #56]	; (8002140 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8002106:	6019      	str	r1, [r3, #0]
 8002108:	67da      	str	r2, [r3, #124]	; 0x7c
}
 800210a:	bd70      	pop	{r4, r5, r6, pc}
 800210c:	240024d8 	.word	0x240024d8
 8002110:	0801dae4 	.word	0x0801dae4
 8002114:	240024d4 	.word	0x240024d4
 8002118:	24003304 	.word	0x24003304
 800211c:	24003278 	.word	0x24003278
 8002120:	24008940 	.word	0x24008940
 8002124:	01000001 	.word	0x01000001
 8002128:	2400894c 	.word	0x2400894c
 800212c:	24008946 	.word	0x24008946
 8002130:	24008942 	.word	0x24008942
 8002134:	24008948 	.word	0x24008948
 8002138:	24008944 	.word	0x24008944
 800213c:	0801dc70 	.word	0x0801dc70
 8002140:	0801dabc 	.word	0x0801dabc

08002144 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8002144:	4801      	ldr	r0, [pc, #4]	; (800214c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8002146:	f7ff bcbb 	b.w	8001ac0 <_ZN8STM32DMAD1Ev>
 800214a:	bf00      	nop
 800214c:	240024d8 	.word	0x240024d8

08002150 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002150:	2000      	movs	r0, #0
 8002152:	4770      	bx	lr

08002154 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002154:	8081      	strh	r1, [r0, #4]
    }
 8002156:	4770      	bx	lr

08002158 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002158:	80c1      	strh	r1, [r0, #6]
    }
 800215a:	4770      	bx	lr

0800215c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800215c:	8101      	strh	r1, [r0, #8]
    }
 800215e:	4770      	bx	lr

08002160 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002160:	8141      	strh	r1, [r0, #10]
    }
 8002162:	4770      	bx	lr

08002164 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002164:	4770      	bx	lr

08002166 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002166:	4770      	bx	lr

08002168 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002168:	4770      	bx	lr

0800216a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800216a:	4770      	bx	lr

0800216c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800216c:	4770      	bx	lr

0800216e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800216e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002170:	88c4      	ldrh	r4, [r0, #6]
 8002172:	6803      	ldr	r3, [r0, #0]
 8002174:	1b12      	subs	r2, r2, r4
 8002176:	8884      	ldrh	r4, [r0, #4]
 8002178:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800217a:	1b09      	subs	r1, r1, r4
 800217c:	b212      	sxth	r2, r2
    }
 800217e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002182:	b209      	sxth	r1, r1
 8002184:	4718      	bx	r3

08002186 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002186:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800218a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800218c:	f04f 33ff 	mov.w	r3, #4294967295
 8002190:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002192:	6813      	ldr	r3, [r2, #0]
 8002194:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002196:	6010      	str	r0, [r2, #0]
    }
 8002198:	4770      	bx	lr

0800219a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800219a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800219e:	b11a      	cbz	r2, 80021a8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80021a0:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80021a4:	b102      	cbz	r2, 80021a8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80021a6:	6018      	str	r0, [r3, #0]
        }
    }
 80021a8:	4770      	bx	lr

080021aa <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80021aa:	2000      	movs	r0, #0
 80021ac:	4770      	bx	lr

080021ae <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80021ae:	888b      	ldrh	r3, [r1, #4]
 80021b0:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80021b2:	2001      	movs	r0, #1
 80021b4:	4770      	bx	lr

080021b6 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80021b6:	4770      	bx	lr

080021b8 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80021b8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80021bc:	4770      	bx	lr

080021be <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80021be:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80021c2:	4770      	bx	lr

080021c4 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80021c4:	2200      	movs	r2, #0
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80021c6:	b510      	push	{r4, lr}
        return rect.width;
 80021c8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80021cc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80021d0:	8002      	strh	r2, [r0, #0]
 80021d2:	8042      	strh	r2, [r0, #2]
 80021d4:	8084      	strh	r4, [r0, #4]
 80021d6:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80021d8:	bd10      	pop	{r4, pc}

080021da <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80021da:	2200      	movs	r2, #0
 80021dc:	8002      	strh	r2, [r0, #0]
 80021de:	8042      	strh	r2, [r0, #2]
 80021e0:	8082      	strh	r2, [r0, #4]
 80021e2:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80021e4:	4770      	bx	lr
	...

080021e8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80021e8:	4b03      	ldr	r3, [pc, #12]	; (80021f8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80021ea:	2290      	movs	r2, #144	; 0x90
 80021ec:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80021f0:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80021f4:	4770      	bx	lr
 80021f6:	bf00      	nop
 80021f8:	e000e100 	.word	0xe000e100

080021fc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80021fc:	4a09      	ldr	r2, [pc, #36]	; (8002224 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80021fe:	490a      	ldr	r1, [pc, #40]	; (8002228 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002200:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002202:	480a      	ldr	r0, [pc, #40]	; (800222c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002204:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002208:	3b01      	subs	r3, #1
 800220a:	b29b      	uxth	r3, r3
 800220c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800220e:	6911      	ldr	r1, [r2, #16]
 8002210:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002214:	3901      	subs	r1, #1
 8002216:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002218:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800221a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800221c:	f043 0301 	orr.w	r3, r3, #1
 8002220:	6353      	str	r3, [r2, #52]	; 0x34
}
 8002222:	4770      	bx	lr
 8002224:	50001000 	.word	0x50001000
 8002228:	24003360 	.word	0x24003360
 800222c:	2400335e 	.word	0x2400335e

08002230 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002230:	4b01      	ldr	r3, [pc, #4]	; (8002238 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8002232:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8002236:	4770      	bx	lr
 8002238:	50001000 	.word	0x50001000

0800223c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800223c:	4b02      	ldr	r3, [pc, #8]	; (8002248 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800223e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002240:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002244:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002246:	4770      	bx	lr
 8002248:	50001000 	.word	0x50001000

0800224c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800224c:	b570      	push	{r4, r5, r6, lr}
 800224e:	4604      	mov	r4, r0
    HAL::initialize();
 8002250:	f008 fd41 	bl	800acd6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002254:	6823      	ldr	r3, [r4, #0]
 8002256:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002258:	f00d fbcc 	bl	800f9f4 <_ZN8touchgfx11Application11getInstanceEv>
 800225c:	4601      	mov	r1, r0
 800225e:	4620      	mov	r0, r4
 8002260:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0x70000000, (void*)0x70060000, (void*)0);
 8002262:	6823      	ldr	r3, [r4, #0]
 8002264:	4620      	mov	r0, r4
 8002266:	4a05      	ldr	r2, [pc, #20]	; (800227c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002268:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800226c:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 8002270:	2300      	movs	r3, #0
 8002272:	46ac      	mov	ip, r5
}
 8002274:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0x70000000, (void*)0x70060000, (void*)0);
 8002278:	4760      	bx	ip
 800227a:	bf00      	nop
 800227c:	70060000 	.word	0x70060000

08002280 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002280:	f008 bd10 	b.w	800aca4 <_ZN8touchgfx3HAL10beginFrameEv>

08002284 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 8002284:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 8002288:	b113      	cbz	r3, 8002290 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 800228a:	4b02      	ldr	r3, [pc, #8]	; (8002294 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 800228c:	2201      	movs	r2, #1
 800228e:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 8002290:	f008 bd14 	b.w	800acbc <_ZN8touchgfx3HAL8endFrameEv>
 8002294:	2400335c 	.word	0x2400335c

08002298 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002298:	f008 bcce 	b.w	800ac38 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

0800229c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800229c:	f008 be29 	b.w	800aef2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080022a0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80022a0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80022a4:	b112      	cbz	r2, 80022ac <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80022a6:	6803      	ldr	r3, [r0, #0]
 80022a8:	695b      	ldr	r3, [r3, #20]
 80022aa:	4718      	bx	r3
    }
 80022ac:	4770      	bx	lr
	...

080022b0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 80022b0:	4a12      	ldr	r2, [pc, #72]	; (80022fc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x4c>)
 80022b2:	6953      	ldr	r3, [r2, #20]
 80022b4:	03db      	lsls	r3, r3, #15
{
 80022b6:	b570      	push	{r4, r5, r6, lr}
    if (SCB->CCR & SCB_CCR_DC_Msk)
 80022b8:	d51e      	bpl.n	80022f8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 80022ba:	2300      	movs	r3, #0
 80022bc:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80022c0:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 80022c4:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80022c8:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80022cc:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80022d0:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80022d4:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80022d6:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80022da:	4601      	mov	r1, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80022dc:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 80022e0:	3901      	subs	r1, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80022e2:	f8c2 5274 	str.w	r5, [r2, #628]	; 0x274
      } while (ways-- != 0U);
 80022e6:	d2f9      	bcs.n	80022dc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>
    } while(sets-- != 0U);
 80022e8:	3b20      	subs	r3, #32
 80022ea:	f113 0f20 	cmn.w	r3, #32
 80022ee:	d1f2      	bne.n	80022d6 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x26>
 80022f0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80022f4:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
 80022f8:	bd70      	pop	{r4, r5, r6, pc}
 80022fa:	bf00      	nop
 80022fc:	e000ed00 	.word	0xe000ed00

08002300 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002300:	4b08      	ldr	r3, [pc, #32]	; (8002324 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8002302:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8002306:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800230a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800230e:	f3bf 8f6f 	isb	sy
 8002312:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002316:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800231a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800231e:	f3bf 8f6f 	isb	sy
}
 8002322:	4770      	bx	lr
 8002324:	e000e100 	.word	0xe000e100

08002328 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002328:	4b03      	ldr	r3, [pc, #12]	; (8002338 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800232a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800232e:	609a      	str	r2, [r3, #8]
 8002330:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002334:	609a      	str	r2, [r3, #8]
}
 8002336:	4770      	bx	lr
 8002338:	e000e100 	.word	0xe000e100

0800233c <_ZN8touchgfx21AbstractPainterRGB888C1Ev>:
        : widgetWidth(0)
 800233c:	2300      	movs	r3, #0
 * @see AbstractPainter
 */
class AbstractPainterRGB888 : public AbstractPainter
{
public:
    AbstractPainterRGB888()
 800233e:	b570      	push	{r4, r5, r6, lr}
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002340:	4e12      	ldr	r6, [pc, #72]	; (800238c <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x50>)
 8002342:	4604      	mov	r4, r0
 8002344:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8002346:	4b12      	ldr	r3, [pc, #72]	; (8002390 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x54>)
 8002348:	6003      	str	r3, [r0, #0]
 800234a:	6833      	ldr	r3, [r6, #0]
 800234c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002350:	b10a      	cbz	r2, 8002356 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x1a>
 8002352:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002354:	b900      	cbnz	r0, 8002358 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x1c>
        return instance->lcdRef;
 8002356:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002358:	6803      	ldr	r3, [r0, #0]
 800235a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800235c:	4798      	blx	r3
 800235e:	1e43      	subs	r3, r0, #1
 8002360:	425d      	negs	r5, r3
 8002362:	415d      	adcs	r5, r3
        return auxiliaryLCD;
 8002364:	6833      	ldr	r3, [r6, #0]
 8002366:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002368:	b130      	cbz	r0, 8002378 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800236a:	6803      	ldr	r3, [r0, #0]
 800236c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800236e:	4798      	blx	r3
 8002370:	2801      	cmp	r0, #1
 8002372:	bf08      	it	eq
 8002374:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB888) && "The chosen painter only works with RGB888 displays");
 8002378:	b92d      	cbnz	r5, 8002386 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x4a>
 800237a:	4b06      	ldr	r3, [pc, #24]	; (8002394 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x58>)
 800237c:	2127      	movs	r1, #39	; 0x27
 800237e:	4a06      	ldr	r2, [pc, #24]	; (8002398 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x5c>)
 8002380:	4806      	ldr	r0, [pc, #24]	; (800239c <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x60>)
 8002382:	f01a fa1d 	bl	801c7c0 <__assert_func>
    }
 8002386:	4620      	mov	r0, r4
 8002388:	bd70      	pop	{r4, r5, r6, pc}
 800238a:	bf00      	nop
 800238c:	2400894c 	.word	0x2400894c
 8002390:	0801e1b4 	.word	0x0801e1b4
 8002394:	0801e0b0 	.word	0x0801e0b0
 8002398:	0801e10e 	.word	0x0801e10e
 800239c:	0801e147 	.word	0x0801e147

080023a0 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80023a0:	b510      	push	{r4, lr}
        return instance;
 80023a2:	4c14      	ldr	r4, [pc, #80]	; (80023f4 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80023a4:	6823      	ldr	r3, [r4, #0]
 80023a6:	b323      	cbz	r3, 80023f2 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80023a8:	4b13      	ldr	r3, [pc, #76]	; (80023f8 <HAL_LTDC_LineEventCallback+0x58>)
 80023aa:	4a14      	ldr	r2, [pc, #80]	; (80023fc <HAL_LTDC_LineEventCallback+0x5c>)
 80023ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023ae:	8811      	ldrh	r1, [r2, #0]
 80023b0:	428b      	cmp	r3, r1
 80023b2:	d113      	bne.n	80023dc <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80023b4:	4b12      	ldr	r3, [pc, #72]	; (8002400 <HAL_LTDC_LineEventCallback+0x60>)
 80023b6:	8819      	ldrh	r1, [r3, #0]
 80023b8:	f003 fb8e 	bl	8005ad8 <HAL_LTDC_ProgramLineEvent>
 80023bc:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80023be:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80023c2:	3301      	adds	r3, #1
 80023c4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80023c8:	f7ff fb4e 	bl	8001a68 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80023cc:	6820      	ldr	r0, [r4, #0]
 80023ce:	f009 f9c7 	bl	800b760 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 80023d2:	2000      	movs	r0, #0

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80023d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80023d8:	f7ff b926 	b.w	8001628 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80023dc:	f003 fb7c 	bl	8005ad8 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80023e0:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80023e2:	6803      	ldr	r3, [r0, #0]
 80023e4:	6a1b      	ldr	r3, [r3, #32]
 80023e6:	4798      	blx	r3
            GPIO::clear(GPIO::VSYNC_FREQ);
 80023e8:	2000      	movs	r0, #0
    }
 80023ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80023ee:	f7ff b94d 	b.w	800168c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80023f2:	bd10      	pop	{r4, pc}
 80023f4:	2400894c 	.word	0x2400894c
 80023f8:	50001000 	.word	0x50001000
 80023fc:	24003360 	.word	0x24003360
 8002400:	2400335e 	.word	0x2400335e

08002404 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const touchgfx::FontId COUNTER = 1; // verdana_40_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002404:	4770      	bx	lr

08002406 <_ZN23ApplicationFontProviderD0Ev>:
 8002406:	b510      	push	{r4, lr}
 8002408:	4604      	mov	r4, r0
 800240a:	2104      	movs	r1, #4
 800240c:	f019 fffb 	bl	801c406 <_ZdlPvj>
 8002410:	4620      	mov	r0, r4
 8002412:	bd10      	pop	{r4, pc}

08002414 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002414:	b508      	push	{r3, lr}
    switch (typography)
 8002416:	2903      	cmp	r1, #3
 8002418:	d80f      	bhi.n	800243a <_ZN23ApplicationFontProvider7getFontEt+0x26>
 800241a:	e8df f001 	tbb	[pc, r1]
 800241e:	0a02      	.short	0x0a02
 8002420:	0a06      	.short	0x0a06
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002422:	f000 fedd 	bl	80031e0 <_ZN17TypedTextDatabase8getFontsEv>
 8002426:	6800      	ldr	r0, [r0, #0]
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    default:
        return 0;
    }
}
 8002428:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800242a:	f000 fed9 	bl	80031e0 <_ZN17TypedTextDatabase8getFontsEv>
 800242e:	6880      	ldr	r0, [r0, #8]
 8002430:	e7fa      	b.n	8002428 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002432:	f000 fed5 	bl	80031e0 <_ZN17TypedTextDatabase8getFontsEv>
 8002436:	6840      	ldr	r0, [r0, #4]
 8002438:	e7f6      	b.n	8002428 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800243a:	2000      	movs	r0, #0
 800243c:	e7f4      	b.n	8002428 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002440 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002440:	4800      	ldr	r0, [pc, #0]	; (8002444 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002442:	4770      	bx	lr
 8002444:	0801e1e0 	.word	0x0801e1e0

08002448 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002448:	200b      	movs	r0, #11
 800244a:	4770      	bx	lr

0800244c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800244c:	b513      	push	{r0, r1, r4, lr}
 800244e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002450:	b151      	cbz	r1, 8002468 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002452:	6803      	ldr	r3, [r0, #0]
 8002454:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 8002456:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002458:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800245c:	689c      	ldr	r4, [r3, #8]
 800245e:	f10d 0303 	add.w	r3, sp, #3
 8002462:	47a0      	blx	r4
        return glyph;
    }
 8002464:	b002      	add	sp, #8
 8002466:	bd10      	pop	{r4, pc}
            return 0;
 8002468:	4608      	mov	r0, r1
 800246a:	e7fb      	b.n	8002464 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800246c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800246c:	89c0      	ldrh	r0, [r0, #14]
 800246e:	4770      	bx	lr

08002470 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002470:	8a00      	ldrh	r0, [r0, #16]
 8002472:	4770      	bx	lr

08002474 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002474:	88c0      	ldrh	r0, [r0, #6]
 8002476:	4770      	bx	lr

08002478 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002478:	8880      	ldrh	r0, [r0, #4]
 800247a:	4770      	bx	lr

0800247c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800247c:	7a80      	ldrb	r0, [r0, #10]
    }
 800247e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002482:	4770      	bx	lr

08002484 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002484:	7a80      	ldrb	r0, [r0, #10]
    }
 8002486:	09c0      	lsrs	r0, r0, #7
 8002488:	4770      	bx	lr

0800248a <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800248a:	4770      	bx	lr

0800248c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800248c:	b510      	push	{r4, lr}
 800248e:	4604      	mov	r4, r0
    }
 8002490:	2108      	movs	r1, #8
 8002492:	f019 ffb8 	bl	801c406 <_ZdlPvj>
 8002496:	4620      	mov	r0, r4
 8002498:	bd10      	pop	{r4, pc}

0800249a <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800249a:	4770      	bx	lr

0800249c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800249c:	4770      	bx	lr

0800249e <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800249e:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80024a2:	6808      	ldr	r0, [r1, #0]
 80024a4:	6849      	ldr	r1, [r1, #4]
 80024a6:	c303      	stmia	r3!, {r0, r1}
    }
 80024a8:	4770      	bx	lr

080024aa <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80024aa:	4770      	bx	lr

080024ac <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80024ac:	4770      	bx	lr

080024ae <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80024ae:	6041      	str	r1, [r0, #4]
    }
 80024b0:	4770      	bx	lr

080024b2 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80024b2:	4770      	bx	lr

080024b4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80024b4:	4b06      	ldr	r3, [pc, #24]	; (80024d0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80024b6:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80024ba:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80024be:	2300      	movs	r3, #0
 80024c0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80024c4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80024c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80024cc:	4770      	bx	lr
 80024ce:	bf00      	nop
 80024d0:	08002575 	.word	0x08002575

080024d4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80024d4:	2301      	movs	r3, #1
 80024d6:	7203      	strb	r3, [r0, #8]
    }
 80024d8:	4770      	bx	lr

080024da <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80024da:	4770      	bx	lr

080024dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80024dc:	4770      	bx	lr

080024de <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80024de:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80024e0:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 80024e2:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80024e4:	68c2      	ldr	r2, [r0, #12]
 80024e6:	689b      	ldr	r3, [r3, #8]
 80024e8:	1054      	asrs	r4, r2, #1
 80024ea:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80024ee:	07d2      	lsls	r2, r2, #31
 80024f0:	bf48      	it	mi
 80024f2:	590a      	ldrmi	r2, [r1, r4]
    }
 80024f4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80024f8:	bf48      	it	mi
 80024fa:	58d3      	ldrmi	r3, [r2, r3]
 80024fc:	4718      	bx	r3

080024fe <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80024fe:	6843      	ldr	r3, [r0, #4]
 8002500:	b12b      	cbz	r3, 800250e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002502:	6883      	ldr	r3, [r0, #8]
 8002504:	b92b      	cbnz	r3, 8002512 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002506:	68c0      	ldr	r0, [r0, #12]
 8002508:	f000 0001 	and.w	r0, r0, #1
 800250c:	4770      	bx	lr
 800250e:	4618      	mov	r0, r3
 8002510:	4770      	bx	lr
 8002512:	2001      	movs	r0, #1
    }
 8002514:	4770      	bx	lr

08002516 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002516:	b510      	push	{r4, lr}
 8002518:	4604      	mov	r4, r0
 800251a:	210c      	movs	r1, #12
 800251c:	f019 ff73 	bl	801c406 <_ZdlPvj>
 8002520:	4620      	mov	r0, r4
 8002522:	bd10      	pop	{r4, pc}

08002524 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002524:	b510      	push	{r4, lr}
 8002526:	4604      	mov	r4, r0
 8002528:	2110      	movs	r1, #16
 800252a:	f019 ff6c 	bl	801c406 <_ZdlPvj>
 800252e:	4620      	mov	r0, r4
 8002530:	bd10      	pop	{r4, pc}

08002532 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002532:	b510      	push	{r4, lr}
 8002534:	4604      	mov	r4, r0
 8002536:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800253a:	f019 ff64 	bl	801c406 <_ZdlPvj>
 800253e:	4620      	mov	r0, r4
 8002540:	bd10      	pop	{r4, pc}

08002542 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002542:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002544:	f00d fa56 	bl	800f9f4 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002548:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 800254c:	f00d bee6 	b.w	801031c <_ZN8touchgfx11Application10invalidateEv>

08002550 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002550:	b510      	push	{r4, lr}
 8002552:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002554:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8002558:	b158      	cbz	r0, 8002572 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800255a:	6803      	ldr	r3, [r0, #0]
 800255c:	68db      	ldr	r3, [r3, #12]
 800255e:	4798      	blx	r3
 8002560:	b138      	cbz	r0, 8002572 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002562:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8002566:	6803      	ldr	r3, [r0, #0]
 8002568:	689b      	ldr	r3, [r3, #8]
 800256a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800256c:	2300      	movs	r3, #0
 800256e:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8002572:	bd10      	pop	{r4, pc}

08002574 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002574:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002578:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 800257c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800257e:	68a8      	ldr	r0, [r5, #8]
 8002580:	6803      	ldr	r3, [r0, #0]
 8002582:	6a1b      	ldr	r3, [r3, #32]
 8002584:	4798      	blx	r3
 8002586:	f641 7397 	movw	r3, #8087	; 0x1f97
 800258a:	4298      	cmp	r0, r3
 800258c:	d805      	bhi.n	800259a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x26>
 800258e:	4b46      	ldr	r3, [pc, #280]	; (80026a8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002590:	21a3      	movs	r1, #163	; 0xa3
 8002592:	4a46      	ldr	r2, [pc, #280]	; (80026ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002594:	4846      	ldr	r0, [pc, #280]	; (80026b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002596:	f01a f913 	bl	801c7c0 <__assert_func>
 800259a:	6868      	ldr	r0, [r5, #4]
 800259c:	6803      	ldr	r3, [r0, #0]
 800259e:	6a1b      	ldr	r3, [r3, #32]
 80025a0:	4798      	blx	r3
 80025a2:	280f      	cmp	r0, #15
 80025a4:	d803      	bhi.n	80025ae <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x3a>
 80025a6:	4b43      	ldr	r3, [pc, #268]	; (80026b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 80025a8:	21a4      	movs	r1, #164	; 0xa4
 80025aa:	4a40      	ldr	r2, [pc, #256]	; (80026ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80025ac:	e7f2      	b.n	8002594 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80025ae:	68e8      	ldr	r0, [r5, #12]
 80025b0:	6803      	ldr	r3, [r0, #0]
 80025b2:	6a1b      	ldr	r3, [r3, #32]
 80025b4:	4798      	blx	r3
 80025b6:	280b      	cmp	r0, #11
 80025b8:	d803      	bhi.n	80025c2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4e>
 80025ba:	4b3f      	ldr	r3, [pc, #252]	; (80026b8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80025bc:	21a5      	movs	r1, #165	; 0xa5
 80025be:	4a3b      	ldr	r2, [pc, #236]	; (80026ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80025c0:	e7e8      	b.n	8002594 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 80025c2:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 80026c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
    Application::getInstance()->clearAllTimerWidgets();
 80025c6:	f00d fa15 	bl	800f9f4 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80025ca:	3004      	adds	r0, #4
 80025cc:	f00d fa50 	bl	800fa70 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 80025d0:	f8d9 0000 	ldr.w	r0, [r9]
 80025d4:	b110      	cbz	r0, 80025dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80025d6:	6803      	ldr	r3, [r0, #0]
 80025d8:	68db      	ldr	r3, [r3, #12]
 80025da:	4798      	blx	r3
    if (*currentTrans)
 80025dc:	f8d9 0000 	ldr.w	r0, [r9]
 80025e0:	b110      	cbz	r0, 80025e8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80025e2:	6803      	ldr	r3, [r0, #0]
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	4798      	blx	r3
    if (*currentScreen)
 80025e8:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80026c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x150>
 80025ec:	f8d8 0000 	ldr.w	r0, [r8]
 80025f0:	b110      	cbz	r0, 80025f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80025f2:	6803      	ldr	r3, [r0, #0]
 80025f4:	695b      	ldr	r3, [r3, #20]
 80025f6:	4798      	blx	r3
    if (*currentPresenter)
 80025f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80025fc:	b110      	cbz	r0, 8002604 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80025fe:	6803      	ldr	r3, [r0, #0]
 8002600:	685b      	ldr	r3, [r3, #4]
 8002602:	4798      	blx	r3
    if (*currentScreen)
 8002604:	f8d8 0000 	ldr.w	r0, [r8]
 8002608:	b110      	cbz	r0, 8002610 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800260a:	6803      	ldr	r3, [r0, #0]
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	4798      	blx	r3
    if (*currentPresenter)
 8002610:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002614:	b110      	cbz	r0, 800261c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002616:	6803      	ldr	r3, [r0, #0]
 8002618:	689b      	ldr	r3, [r3, #8]
 800261a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800261c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800261e:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
 8002620:	f04f 0b00 	mov.w	fp, #0
 8002624:	6803      	ldr	r3, [r0, #0]
 8002626:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002628:	4798      	blx	r3
 800262a:	4b24      	ldr	r3, [pc, #144]	; (80026bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>)
 800262c:	4604      	mov	r4, r0
 800262e:	f8c0 b004 	str.w	fp, [r0, #4]
 8002632:	6003      	str	r3, [r0, #0]
 8002634:	4659      	mov	r1, fp
 8002636:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800263a:	68a8      	ldr	r0, [r5, #8]
 800263c:	6803      	ldr	r3, [r0, #0]
 800263e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002640:	4798      	blx	r3
 8002642:	4606      	mov	r6, r0
 8002644:	f000 fe6a 	bl	800331c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002648:	6868      	ldr	r0, [r5, #4]
 800264a:	4659      	mov	r1, fp
 800264c:	6803      	ldr	r3, [r0, #0]
 800264e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002650:	4798      	blx	r3
 8002652:	4605      	mov	r5, r0
 8002654:	4631      	mov	r1, r6
 8002656:	f000 fe05 	bl	8003264 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 800265a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800265e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002662:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002666:	b1e5      	cbz	r5, 80026a2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12e>
 8002668:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800266a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800266e:	4630      	mov	r0, r6
 8002670:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002672:	f8c5 a008 	str.w	sl, [r5, #8]
 8002676:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002678:	63f5      	str	r5, [r6, #60]	; 0x3c
 800267a:	4798      	blx	r3
    newPresenter->activate();
 800267c:	682b      	ldr	r3, [r5, #0]
 800267e:	4628      	mov	r0, r5
 8002680:	681b      	ldr	r3, [r3, #0]
 8002682:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002684:	4621      	mov	r1, r4
 8002686:	4630      	mov	r0, r6
 8002688:	f00e ff40 	bl	801150c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800268c:	6823      	ldr	r3, [r4, #0]
 800268e:	4620      	mov	r0, r4
 8002690:	691b      	ldr	r3, [r3, #16]
 8002692:	4798      	blx	r3
    newTransition->invalidate();
 8002694:	6823      	ldr	r3, [r4, #0]
 8002696:	4620      	mov	r0, r4
 8002698:	695b      	ldr	r3, [r3, #20]
}
 800269a:	b001      	add	sp, #4
 800269c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026a0:	4718      	bx	r3
    model->bind(newPresenter);
 80026a2:	462b      	mov	r3, r5
 80026a4:	e7e1      	b.n	800266a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf6>
 80026a6:	bf00      	nop
 80026a8:	0801e2cc 	.word	0x0801e2cc
 80026ac:	0801e35a 	.word	0x0801e35a
 80026b0:	0801e45e 	.word	0x0801e45e
 80026b4:	0801e4a5 	.word	0x0801e4a5
 80026b8:	0801e548 	.word	0x0801e548
 80026bc:	0801e658 	.word	0x0801e658
 80026c0:	24008994 	.word	0x24008994
 80026c4:	24008990 	.word	0x24008990

080026c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80026c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026ca:	4604      	mov	r4, r0
 80026cc:	4617      	mov	r7, r2
 80026ce:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80026d0:	f00d faa0 	bl	800fc14 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80026d4:	4b10      	ldr	r3, [pc, #64]	; (8002718 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80026d6:	2500      	movs	r5, #0
        instance = this;
 80026d8:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80026da:	4629      	mov	r1, r5
      model(m)
 80026dc:	4b0f      	ldr	r3, [pc, #60]	; (800271c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80026de:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
        return instance;
 80026e2:	4e0f      	ldr	r6, [pc, #60]	; (8002720 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80026e4:	6023      	str	r3, [r4, #0]
 80026e6:	6830      	ldr	r0, [r6, #0]
        : pobject(0), pmemfun(0)
 80026e8:	4b0e      	ldr	r3, [pc, #56]	; (8002724 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80026ea:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 80026ee:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80026f2:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 80026f4:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 80026f8:	689b      	ldr	r3, [r3, #8]
 80026fa:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80026fc:	4628      	mov	r0, r5
 80026fe:	f000 fd23 	bl	8003148 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002702:	6833      	ldr	r3, [r6, #0]
 8002704:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002708:	b10a      	cbz	r2, 800270e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 800270a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800270c:	b900      	cbnz	r0, 8002710 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 800270e:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002710:	f013 fe49 	bl	80163a6 <_ZN8touchgfx8LCD24bpp22enableTextureMapperAllEv>
}
 8002714:	4620      	mov	r0, r4
 8002716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002718:	240089a0 	.word	0x240089a0
 800271c:	0801e60c 	.word	0x0801e60c
 8002720:	2400894c 	.word	0x2400894c
 8002724:	0801e5f4 	.word	0x0801e5f4

08002728 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002728:	4b06      	ldr	r3, [pc, #24]	; (8002744 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800272a:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800272e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002732:	2300      	movs	r3, #0
 8002734:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002738:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800273c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002740:	4770      	bx	lr
 8002742:	bf00      	nop
 8002744:	08002575 	.word	0x08002575

08002748 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002748:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800274a:	4770      	bx	lr

0800274c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800274c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800274e:	4770      	bx	lr

08002750 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002750:	4770      	bx	lr

08002752 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002752:	888b      	ldrh	r3, [r1, #4]
 8002754:	69c0      	ldr	r0, [r0, #28]
 8002756:	0adb      	lsrs	r3, r3, #11
 8002758:	680a      	ldr	r2, [r1, #0]
 800275a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800275e:	4410      	add	r0, r2
 8002760:	4770      	bx	lr

08002762 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002762:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002764:	b1c2      	cbz	r2, 8002798 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002766:	7b13      	ldrb	r3, [r2, #12]
 8002768:	b1b3      	cbz	r3, 8002798 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800276a:	7b54      	ldrb	r4, [r2, #13]
 800276c:	7ad2      	ldrb	r2, [r2, #11]
 800276e:	0224      	lsls	r4, r4, #8
 8002770:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002774:	4314      	orrs	r4, r2
 8002776:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002778:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800277a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800277e:	8813      	ldrh	r3, [r2, #0]
 8002780:	428b      	cmp	r3, r1
 8002782:	d102      	bne.n	800278a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002784:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002788:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800278a:	d805      	bhi.n	8002798 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800278c:	3801      	subs	r0, #1
 800278e:	3204      	adds	r2, #4
 8002790:	b280      	uxth	r0, r0
 8002792:	2800      	cmp	r0, #0
 8002794:	d1f3      	bne.n	800277e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002796:	e7f7      	b.n	8002788 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002798:	2000      	movs	r0, #0
 800279a:	e7f5      	b.n	8002788 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800279c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800279c:	b510      	push	{r4, lr}
 800279e:	4604      	mov	r4, r0
 80027a0:	212c      	movs	r1, #44	; 0x2c
 80027a2:	f019 fe30 	bl	801c406 <_ZdlPvj>
 80027a6:	4620      	mov	r0, r4
 80027a8:	bd10      	pop	{r4, pc}
	...

080027ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80027ac:	b530      	push	{r4, r5, lr}
 80027ae:	b08b      	sub	sp, #44	; 0x2c
 80027b0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80027b2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 80027b6:	9508      	str	r5, [sp, #32]
 80027b8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 80027bc:	9507      	str	r5, [sp, #28]
 80027be:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80027c2:	9506      	str	r5, [sp, #24]
 80027c4:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80027c8:	9505      	str	r5, [sp, #20]
 80027ca:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80027ce:	9504      	str	r5, [sp, #16]
 80027d0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80027d4:	9503      	str	r5, [sp, #12]
 80027d6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80027da:	9502      	str	r5, [sp, #8]
 80027dc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80027e0:	9501      	str	r5, [sp, #4]
 80027e2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80027e6:	9500      	str	r5, [sp, #0]
 80027e8:	f00e fa40 	bl	8010c6c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80027ec:	4b06      	ldr	r3, [pc, #24]	; (8002808 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
}
 80027ee:	4620      	mov	r0, r4
      arabicTable(formsTable)
 80027f0:	6023      	str	r3, [r4, #0]
 80027f2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80027f4:	61e3      	str	r3, [r4, #28]
 80027f6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80027f8:	6223      	str	r3, [r4, #32]
 80027fa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80027fc:	6263      	str	r3, [r4, #36]	; 0x24
 80027fe:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8002800:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8002802:	b00b      	add	sp, #44	; 0x2c
 8002804:	bd30      	pop	{r4, r5, pc}
 8002806:	bf00      	nop
 8002808:	0801e67c 	.word	0x0801e67c

0800280c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800280c:	4770      	bx	lr

0800280e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800280e:	4770      	bx	lr

08002810 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002810:	4770      	bx	lr

08002812 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002812:	4770      	bx	lr

08002814 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002814:	4770      	bx	lr

08002816 <_ZN8touchgfx21AbstractPainterBitmapD1Ev>:
    }

    /** Destructor */
    virtual ~AbstractPainterBitmap()
    {
    }
 8002816:	4770      	bx	lr

08002818 <_ZN8touchgfx21AbstractPainterBitmap8setTiledEb>:
     *
     * @see setOffset
     */
    virtual void setTiled(bool tiled)
    {
        isTiled = tiled;
 8002818:	7601      	strb	r1, [r0, #24]
    }
 800281a:	4770      	bx	lr

0800281c <_ZN8touchgfx21AbstractPainterBitmap9setOffsetEss>:
     *
     * @see setTiled
     */
    virtual void setOffset(int16_t x, int16_t y)
    {
        xOffset = x;
 800281c:	8281      	strh	r1, [r0, #20]
        yOffset = y;
 800281e:	82c2      	strh	r2, [r0, #22]
    }
 8002820:	4770      	bx	lr

08002822 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002822:	b530      	push	{r4, r5, lr}
 8002824:	b085      	sub	sp, #20
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002826:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 8002828:	4604      	mov	r4, r0
        rect.width = width;
 800282a:	8101      	strh	r1, [r0, #8]
        boundingArea = calculateBoundingArea();
 800282c:	466d      	mov	r5, sp
 800282e:	4601      	mov	r1, r0
 8002830:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002834:	343c      	adds	r4, #60	; 0x3c
 8002836:	4628      	mov	r0, r5
 8002838:	4798      	blx	r3
 800283a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800283e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002842:	b005      	add	sp, #20
 8002844:	bd30      	pop	{r4, r5, pc}

08002846 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002846:	b530      	push	{r4, r5, lr}
 8002848:	b085      	sub	sp, #20
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 800284a:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 800284c:	4604      	mov	r4, r0
        rect.height = height;
 800284e:	8141      	strh	r1, [r0, #10]
        boundingArea = calculateBoundingArea();
 8002850:	466d      	mov	r5, sp
 8002852:	4601      	mov	r1, r0
 8002854:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002858:	343c      	adds	r4, #60	; 0x3c
 800285a:	4628      	mov	r0, r5
 800285c:	4798      	blx	r3
 800285e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002862:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002866:	b005      	add	sp, #20
 8002868:	bd30      	pop	{r4, r5, pc}

0800286a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800286a:	2200      	movs	r2, #0
 800286c:	8002      	strh	r2, [r0, #0]
 800286e:	8042      	strh	r2, [r0, #2]
 8002870:	8082      	strh	r2, [r0, #4]
 8002872:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002874:	4770      	bx	lr

08002876 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002876:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800287a:	4770      	bx	lr

0800287c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
    {
        setX(x);
 800287c:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800287e:	b570      	push	{r4, r5, r6, lr}
 8002880:	4604      	mov	r4, r0
        setX(x);
 8002882:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002884:	4615      	mov	r5, r2
        setX(x);
 8002886:	4798      	blx	r3
        setBaselineY(baselineY);
 8002888:	6823      	ldr	r3, [r4, #0]
 800288a:	4620      	mov	r0, r4
 800288c:	4629      	mov	r1, r5
 800288e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002890:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002894:	4718      	bx	r3

08002896 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002896:	2000      	movs	r0, #0
 8002898:	4770      	bx	lr

0800289a <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800289a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800289c:	4770      	bx	lr

0800289e <_ZN15Screen1ViewBase9ToggleLEDEv>:
     * Virtual Action Handlers
     */
    virtual void ToggleLED()
    {
        // Override and implement this function in Screen1
    }
 800289e:	4770      	bx	lr

080028a0 <_ZN15Screen1ViewBase7GuageUpEv>:
    virtual void GuageUp()
    {
        // Override and implement this function in Screen1
    }
 80028a0:	4770      	bx	lr

080028a2 <_ZN15Screen1ViewBase9GuageDownEv>:
    virtual void GuageDown()
    {
        // Override and implement this function in Screen1
    }
 80028a2:	4770      	bx	lr

080028a4 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80028a4:	4770      	bx	lr

080028a6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80028a6:	4770      	bx	lr

080028a8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80028a8:	4770      	bx	lr

080028aa <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80028aa:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80028ac:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 80028ae:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80028b0:	68c2      	ldr	r2, [r0, #12]
 80028b2:	689b      	ldr	r3, [r3, #8]
 80028b4:	1055      	asrs	r5, r2, #1
 80028b6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80028ba:	07d2      	lsls	r2, r2, #31
 80028bc:	bf48      	it	mi
 80028be:	5962      	ldrmi	r2, [r4, r5]
    }
 80028c0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80028c2:	bf48      	it	mi
 80028c4:	58d3      	ldrmi	r3, [r2, r3]
 80028c6:	4718      	bx	r3

080028c8 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80028c8:	6843      	ldr	r3, [r0, #4]
 80028ca:	b12b      	cbz	r3, 80028d8 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80028cc:	6883      	ldr	r3, [r0, #8]
 80028ce:	b92b      	cbnz	r3, 80028dc <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80028d0:	68c0      	ldr	r0, [r0, #12]
 80028d2:	f000 0001 	and.w	r0, r0, #1
 80028d6:	4770      	bx	lr
 80028d8:	4618      	mov	r0, r3
 80028da:	4770      	bx	lr
 80028dc:	2001      	movs	r0, #1
    }
 80028de:	4770      	bx	lr

080028e0 <_ZN8touchgfx21AbstractPainterBitmapD0Ev>:
    virtual ~AbstractPainterBitmap()
 80028e0:	b510      	push	{r4, lr}
 80028e2:	4604      	mov	r4, r0
    }
 80028e4:	2120      	movs	r1, #32
 80028e6:	f019 fd8e 	bl	801c406 <_ZdlPvj>
 80028ea:	4620      	mov	r0, r4
 80028ec:	bd10      	pop	{r4, pc}

080028ee <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80028ee:	b510      	push	{r4, lr}
 80028f0:	4604      	mov	r4, r0
 80028f2:	214c      	movs	r1, #76	; 0x4c
 80028f4:	f019 fd87 	bl	801c406 <_ZdlPvj>
 80028f8:	4620      	mov	r0, r4
 80028fa:	bd10      	pop	{r4, pc}

080028fc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80028fc:	b510      	push	{r4, lr}
 80028fe:	4604      	mov	r4, r0
 8002900:	2110      	movs	r1, #16
 8002902:	f019 fd80 	bl	801c406 <_ZdlPvj>
 8002906:	4620      	mov	r0, r4
 8002908:	bd10      	pop	{r4, pc}

0800290a <_ZN8touchgfx21AbstractPainterBitmap9setBitmapERKNS_6BitmapE>:
    virtual void setBitmap(const Bitmap& bmp)
 800290a:	b570      	push	{r4, r5, r6, lr}
        bitmap = bmp;
 800290c:	880b      	ldrh	r3, [r1, #0]
 800290e:	4605      	mov	r5, r0
    virtual void setBitmap(const Bitmap& bmp)
 8002910:	4604      	mov	r4, r0
        bitmap = bmp;
 8002912:	f825 3f04 	strh.w	r3, [r5, #4]!
        bitmapFormat = bitmap.getFormat();
 8002916:	4628      	mov	r0, r5
 8002918:	f010 fbc6 	bl	80130a8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800291c:	71a0      	strb	r0, [r4, #6]
     *
     * @return a Rect describing the dimensions of this Bitmap.
     */
    Rect getRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
 800291e:	4628      	mov	r0, r5
 8002920:	f010 fa52 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002924:	4606      	mov	r6, r0
 8002926:	4628      	mov	r0, r5
 8002928:	f010 fa82 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
        bitmapRect = bitmap.getRect();
 800292c:	2300      	movs	r3, #0
 800292e:	81e0      	strh	r0, [r4, #14]
        DisplayTransformation::transformDisplayToFrameBuffer(bitmapRect);
 8002930:	f104 0008 	add.w	r0, r4, #8
        bitmapRect = bitmap.getRect();
 8002934:	60a3      	str	r3, [r4, #8]
 8002936:	81a6      	strh	r6, [r4, #12]
        DisplayTransformation::transformDisplayToFrameBuffer(bitmapRect);
 8002938:	f00c fec0 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
        bitmapData = bitmap.getData();
 800293c:	4628      	mov	r0, r5
 800293e:	f010 fb2f 	bl	8012fa0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8002942:	6120      	str	r0, [r4, #16]
    }
 8002944:	bd70      	pop	{r4, r5, r6, pc}
	...

08002948 <_ZN15Screen1ViewBaseD1Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002948:	4b03      	ldr	r3, [pc, #12]	; (8002958 <_ZN15Screen1ViewBaseD1Ev+0x10>)
 800294a:	b510      	push	{r4, lr}
 800294c:	4604      	mov	r4, r0
 800294e:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002950:	f00b fb70 	bl	800e034 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002954:	4620      	mov	r0, r4
 8002956:	bd10      	pop	{r4, pc}
 8002958:	0801e948 	.word	0x0801e948

0800295c <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 800295c:	4b07      	ldr	r3, [pc, #28]	; (800297c <_ZN15Screen1ViewBaseD0Ev+0x20>)
 800295e:	b507      	push	{r0, r1, r2, lr}
 8002960:	6003      	str	r3, [r0, #0]
 8002962:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002964:	f00b fb66 	bl	800e034 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002968:	9801      	ldr	r0, [sp, #4]
 800296a:	f641 7198 	movw	r1, #8088	; 0x1f98
 800296e:	f019 fd4a 	bl	801c406 <_ZdlPvj>
 8002972:	9801      	ldr	r0, [sp, #4]
 8002974:	b003      	add	sp, #12
 8002976:	f85d fb04 	ldr.w	pc, [sp], #4
 800297a:	bf00      	nop
 800297c:	0801e948 	.word	0x0801e948

08002980 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002980:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002982:	f7ff fc8d 	bl	80022a0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002986:	bd08      	pop	{r3, pc}

08002988 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton)
 8002988:	f100 0398 	add.w	r3, r0, #152	; 0x98
 800298c:	4299      	cmp	r1, r3
{
 800298e:	b570      	push	{r4, r5, r6, lr}
 8002990:	4604      	mov	r4, r0
 8002992:	460d      	mov	r5, r1
    if (&src == &toggleButton)
 8002994:	d102      	bne.n	800299c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    {
        //InteractionLED
        //When toggleButton clicked call virtual function
        //Call ToggleLED
        ToggleLED();
 8002996:	6803      	ldr	r3, [r0, #0]
 8002998:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800299a:	4798      	blx	r3
    }
    if (&src == &buttonUp)
 800299c:	f504 7326 	add.w	r3, r4, #664	; 0x298
 80029a0:	429d      	cmp	r5, r3
 80029a2:	d103      	bne.n	80029ac <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
    {
        //Interaction1
        //When buttonUp clicked call virtual function
        //Call GuageUp
        GuageUp();
 80029a4:	6823      	ldr	r3, [r4, #0]
 80029a6:	4620      	mov	r0, r4
 80029a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029aa:	4798      	blx	r3
    }
    if (&src == &buttonDown)
 80029ac:	f504 7335 	add.w	r3, r4, #724	; 0x2d4
 80029b0:	429d      	cmp	r5, r3
 80029b2:	d105      	bne.n	80029c0 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
    {
        //Interaction2
        //When buttonDown clicked call virtual function
        //Call GuageDown
        GuageDown();
 80029b4:	6823      	ldr	r3, [r4, #0]
 80029b6:	4620      	mov	r0, r4
 80029b8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
}
 80029ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        GuageDown();
 80029be:	4718      	bx	r3
}
 80029c0:	bd70      	pop	{r4, r5, r6, pc}
	...

080029c4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029c4:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80029c6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029c8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
    virtual void setBaselineY(int16_t baselineY)
 80029ca:	4604      	mov	r4, r0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029cc:	4b11      	ldr	r3, [pc, #68]	; (8002a14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029ce:	b28d      	uxth	r5, r1
 80029d0:	681b      	ldr	r3, [r3, #0]
 80029d2:	b92b      	cbnz	r3, 80029e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80029d4:	4b10      	ldr	r3, [pc, #64]	; (8002a18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80029d6:	216c      	movs	r1, #108	; 0x6c
 80029d8:	4a10      	ldr	r2, [pc, #64]	; (8002a1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029da:	4811      	ldr	r0, [pc, #68]	; (8002a20 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80029dc:	f019 fef0 	bl	801c7c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80029e0:	4910      	ldr	r1, [pc, #64]	; (8002a24 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80029e2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029e4:	8809      	ldrh	r1, [r1, #0]
 80029e6:	4291      	cmp	r1, r2
 80029e8:	d803      	bhi.n	80029f2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80029ea:	4b0f      	ldr	r3, [pc, #60]	; (8002a28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80029ec:	216d      	movs	r1, #109	; 0x6d
 80029ee:	4a0b      	ldr	r2, [pc, #44]	; (8002a1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029f0:	e7f3      	b.n	80029da <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80029f2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80029f6:	4b0d      	ldr	r3, [pc, #52]	; (8002a2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80029f8:	681b      	ldr	r3, [r3, #0]
 80029fa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80029fe:	6803      	ldr	r3, [r0, #0]
 8002a00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a02:	4798      	blx	r3
 8002a04:	1a28      	subs	r0, r5, r0
 8002a06:	4633      	mov	r3, r6
 8002a08:	b201      	sxth	r1, r0
 8002a0a:	4620      	mov	r0, r4
    }
 8002a0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002a10:	4718      	bx	r3
 8002a12:	bf00      	nop
 8002a14:	240089a4 	.word	0x240089a4
 8002a18:	0801e6d4 	.word	0x0801e6d4
 8002a1c:	0801e716 	.word	0x0801e716
 8002a20:	0801e751 	.word	0x0801e751
 8002a24:	240089a8 	.word	0x240089a8
 8002a28:	0801e798 	.word	0x0801e798
 8002a2c:	240089ac 	.word	0x240089ac

08002a30 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002a30:	2200      	movs	r2, #0
 8002a32:	f04f 31ff 	mov.w	r1, #4294967295
              text(0)
 8002a36:	6082      	str	r2, [r0, #8]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002a38:	e9c0 2100 	strd	r2, r1, [r0]
    }
 8002a3c:	4770      	bx	lr

08002a3e <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 8002a3e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002a40:	b570      	push	{r4, r5, r6, lr}
 8002a42:	4604      	mov	r4, r0
        setX(x);
 8002a44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002a46:	4615      	mov	r5, r2
        setX(x);
 8002a48:	4798      	blx	r3
        setY(y);
 8002a4a:	6823      	ldr	r3, [r4, #0]
 8002a4c:	4620      	mov	r0, r4
 8002a4e:	4629      	mov	r1, r5
 8002a50:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002a52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002a56:	4718      	bx	r3

08002a58 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002a58:	b570      	push	{r4, r5, r6, lr}
 8002a5a:	4604      	mov	r4, r0
 8002a5c:	461d      	mov	r5, r3
 8002a5e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002a62:	f7ff ffec 	bl	8002a3e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002a66:	6823      	ldr	r3, [r4, #0]
 8002a68:	4629      	mov	r1, r5
 8002a6a:	4620      	mov	r0, r4
 8002a6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a6e:	4798      	blx	r3
        setHeight(height);
 8002a70:	6823      	ldr	r3, [r4, #0]
 8002a72:	4631      	mov	r1, r6
 8002a74:	4620      	mov	r0, r4
 8002a76:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002a78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002a7c:	4718      	bx	r3
	...

08002a80 <_ZN8touchgfx6WidgetC1Ev>:
 8002a80:	2200      	movs	r2, #0
 8002a82:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002a86:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002a8a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002a8e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002a92:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002a96:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002a98:	4a01      	ldr	r2, [pc, #4]	; (8002aa0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002a9a:	6002      	str	r2, [r0, #0]
 8002a9c:	4770      	bx	lr
 8002a9e:	bf00      	nop
 8002aa0:	0801e81c 	.word	0x0801e81c

08002aa4 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002aa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002aa8:	4604      	mov	r4, r0
        : presenter(0)
 8002aaa:	2500      	movs	r5, #0
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002aac:	26ff      	movs	r6, #255	; 0xff
        : bitmapId(id)
 8002aae:	f64f 77ff 	movw	r7, #65535	; 0xffff
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002ab2:	46a2      	mov	sl, r4
 8002ab4:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8002ab8:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002abc:	f504 7844 	add.w	r8, r4, #784	; 0x310
Screen1ViewBase::Screen1ViewBase() :
 8002ac0:	ed2d 8b04 	vpush	{d8-d9}
 8002ac4:	b08d      	sub	sp, #52	; 0x34
 8002ac6:	f00e fb75 	bl	80111b4 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002aca:	4be0      	ldr	r3, [pc, #896]	; (8002e4c <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 8002acc:	2226      	movs	r2, #38	; 0x26
 8002ace:	4629      	mov	r1, r5
 8002ad0:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ad2:	f84a 3b40 	str.w	r3, [sl], #64
 8002ad6:	4650      	mov	r0, sl
 8002ad8:	f019 fff8 	bl	801cacc <memset>
 8002adc:	4650      	mov	r0, sl
 8002ade:	f7ff ffcf 	bl	8002a80 <_ZN8touchgfx6WidgetC1Ev>
 8002ae2:	4bdb      	ldr	r3, [pc, #876]	; (8002e50 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002ae4:	2226      	movs	r2, #38	; 0x26
 8002ae6:	4629      	mov	r1, r5
 8002ae8:	6423      	str	r3, [r4, #64]	; 0x40
 8002aea:	4648      	mov	r0, r9
 8002aec:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
        : color(col)
 8002af0:	66a5      	str	r5, [r4, #104]	; 0x68
 8002af2:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8002af6:	f019 ffe9 	bl	801cacc <memset>
 8002afa:	4648      	mov	r0, r9
 8002afc:	f7ff ffc0 	bl	8002a80 <_ZN8touchgfx6WidgetC1Ev>
 8002b00:	4bd4      	ldr	r3, [pc, #848]	; (8002e54 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
    {
        Image::setBitmap(bmp);
 8002b02:	4648      	mov	r0, r9
 8002b04:	a90a      	add	r1, sp, #40	; 0x28
        : Widget(), bitmap(bmp), alpha(255)
 8002b06:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002b08:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002b0c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 8002b10:	f104 06d0 	add.w	r6, r4, #208	; 0xd0
 8002b14:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002b18:	f00a fb87 	bl	800d22a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8002b1c:	2226      	movs	r2, #38	; 0x26
 8002b1e:	4629      	mov	r1, r5
 8002b20:	4658      	mov	r0, fp
 8002b22:	f019 ffd3 	bl	801cacc <memset>
 8002b26:	4658      	mov	r0, fp
 8002b28:	f7ff ffaa 	bl	8002a80 <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 8002b2c:	f04f 0301 	mov.w	r3, #1
 8002b30:	4630      	mov	r0, r6
 8002b32:	f8a4 70c6 	strh.w	r7, [r4, #198]	; 0xc6
 8002b36:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8002b3a:	4bc7      	ldr	r3, [pc, #796]	; (8002e58 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002b3c:	f8a4 70c8 	strh.w	r7, [r4, #200]	; 0xc8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8002b40:	f884 70ca 	strb.w	r7, [r4, #202]	; 0xca
 8002b44:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002b48:	f8a4 70cc 	strh.w	r7, [r4, #204]	; 0xcc
 8002b4c:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 8002b50:	f884 50c4 	strb.w	r5, [r4, #196]	; 0xc4
 8002b54:	f00a f81c 	bl	800cb90 <_ZN8touchgfx5GaugeC1Ev>
 8002b58:	f504 731c 	add.w	r3, r4, #624	; 0x270
 8002b5c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
     * Constructor.
     *
     * @param  bmp (Optional) The bitmap to use in the painter.
     */
    PainterRGB888Bitmap(const Bitmap& bmp = Bitmap(BITMAP_INVALID))
        : AbstractPainterRGB888(), AbstractPainterBitmap(bmp)
 8002b60:	4618      	mov	r0, r3
 8002b62:	ee09 3a10 	vmov	s18, r3
 8002b66:	f7ff fbe9 	bl	800233c <_ZN8touchgfx21AbstractPainterRGB888C1Ev>
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
 8002b6a:	4bbc      	ldr	r3, [pc, #752]	; (8002e5c <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
        setBitmap(bmp);
 8002b6c:	a90a      	add	r1, sp, #40	; 0x28
 8002b6e:	f504 701e 	add.w	r0, r4, #632	; 0x278
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
 8002b72:	f8c4 3278 	str.w	r3, [r4, #632]	; 0x278
 8002b76:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002b7a:	f884 527e 	strb.w	r5, [r4, #638]	; 0x27e
 8002b7e:	f8a4 327c 	strh.w	r3, [r4, #636]	; 0x27c
 8002b82:	f884 5290 	strb.w	r5, [r4, #656]	; 0x290
        : x(0), y(0), width(0), height(0)
 8002b86:	e9c4 55a0 	strd	r5, r5, [r4, #640]	; 0x280
 8002b8a:	e9c4 55a2 	strd	r5, r5, [r4, #648]	; 0x288
        setBitmap(bmp);
 8002b8e:	f7ff febc 	bl	800290a <_ZN8touchgfx21AbstractPainterBitmap9setBitmapERKNS_6BitmapE>
 8002b92:	4bb3      	ldr	r3, [pc, #716]	; (8002e60 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8002b94:	f8c4 3270 	str.w	r3, [r4, #624]	; 0x270
 8002b98:	3324      	adds	r3, #36	; 0x24
 8002b9a:	f8c4 3278 	str.w	r3, [r4, #632]	; 0x278
 8002b9e:	f504 7326 	add.w	r3, r4, #664	; 0x298
 8002ba2:	4618      	mov	r0, r3
 8002ba4:	ee08 3a10 	vmov	s16, r3
 8002ba8:	f00a fb18 	bl	800d1dc <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002bac:	f504 7335 	add.w	r3, r4, #724	; 0x2d4
 8002bb0:	4618      	mov	r0, r3
 8002bb2:	ee08 3a90 	vmov	s17, r3
 8002bb6:	f00a fb11 	bl	800d1dc <_ZN8touchgfx14ButtonWithIconC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002bba:	2226      	movs	r2, #38	; 0x26
 8002bbc:	4629      	mov	r1, r5
 8002bbe:	4640      	mov	r0, r8
 8002bc0:	f019 ff84 	bl	801cacc <memset>
 8002bc4:	4640      	mov	r0, r8
 8002bc6:	f7ff ff5b 	bl	8002a80 <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 8002bca:	4ba6      	ldr	r3, [pc, #664]	; (8002e64 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
        : pobject(pObject), pmemfun(pmemfun_1)
 8002bcc:	4aa6      	ldr	r2, [pc, #664]	; (8002e68 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002bce:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
 8002bd2:	f8c4 3338 	str.w	r3, [r4, #824]	; 0x338
 8002bd6:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002bda:	f8a4 733c 	strh.w	r7, [r4, #828]	; 0x33c
 8002bde:	f204 3066 	addw	r0, r4, #870	; 0x366
 8002be2:	f8c4 3344 	str.w	r3, [r4, #836]	; 0x344
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002be6:	1d27      	adds	r7, r4, #4
        : TextAreaWithWildcardBase(), wc1(0)
 8002be8:	4ba0      	ldr	r3, [pc, #640]	; (8002e6c <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
        : color(col)
 8002bea:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8002bee:	f8c4 3310 	str.w	r3, [r4, #784]	; 0x310
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002bf2:	f04f 33ff 	mov.w	r3, #4294967295
 8002bf6:	f8a4 5348 	strh.w	r5, [r4, #840]	; 0x348
 8002bfa:	f8c4 534c 	str.w	r5, [r4, #844]	; 0x34c
 8002bfe:	f8c4 5358 	str.w	r5, [r4, #856]	; 0x358
              text(0)
 8002c02:	e9c4 35d4 	strd	r3, r5, [r4, #848]	; 0x350
 8002c06:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002c0a:	f8c3 2f88 	str.w	r2, [r3, #3976]	; 0xf88
 8002c0e:	4a98      	ldr	r2, [pc, #608]	; (8002e70 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8002c10:	f8c3 4f8c 	str.w	r4, [r3, #3980]	; 0xf8c
 8002c14:	f8c3 2f90 	str.w	r2, [r3, #3984]	; 0xf90
 8002c18:	f8c3 5f94 	str.w	r5, [r3, #3988]	; 0xf94
 8002c1c:	f00b fa00 	bl	800e020 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 480, 272);
 8002c20:	f44f 7388 	mov.w	r3, #272	; 0x110
 8002c24:	462a      	mov	r2, r5
 8002c26:	4650      	mov	r0, sl
 8002c28:	4629      	mov	r1, r5
 8002c2a:	9300      	str	r3, [sp, #0]
 8002c2c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002c30:	f7ff ff12 	bl	8002a58 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002c34:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002c38:	4651      	mov	r1, sl
 8002c3a:	4638      	mov	r0, r7
 8002c3c:	66a3      	str	r3, [r4, #104]	; 0x68
 8002c3e:	f04f 0a05 	mov.w	sl, #5
 8002c42:	f007 fd5f 	bl	800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002c46:	462a      	mov	r2, r5
 8002c48:	4648      	mov	r0, r9
 8002c4a:	4629      	mov	r1, r5
 8002c4c:	f7ff fef7 	bl	8002a3e <_ZN8touchgfx8Drawable5setXYEss>
 8002c50:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUEFON_TOGGLE_ID));
 8002c52:	4648      	mov	r0, r9
 8002c54:	a90a      	add	r1, sp, #40	; 0x28
 8002c56:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002c5a:	f00a fae6 	bl	800d22a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002c5e:	4649      	mov	r1, r9
 8002c60:	4638      	mov	r0, r7
 8002c62:	f007 fd4f 	bl	800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    toggleButton.setAction(buttonCallback);
 8002c66:	f504 59fc 	add.w	r9, r4, #8064	; 0x1f80
    toggleButton.setXY(171, 111);
 8002c6a:	4658      	mov	r0, fp
 8002c6c:	226f      	movs	r2, #111	; 0x6f
 8002c6e:	21ab      	movs	r1, #171	; 0xab
    toggleButton.setAction(buttonCallback);
 8002c70:	f109 0908 	add.w	r9, r9, #8
    toggleButton.setXY(171, 111);
 8002c74:	f7ff fee3 	bl	8002a3e <_ZN8touchgfx8Drawable5setXYEss>
 8002c78:	2304      	movs	r3, #4
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8002c7a:	aa0a      	add	r2, sp, #40	; 0x28
 8002c7c:	4658      	mov	r0, fp
        originalPressed = bitmapPressed;
 8002c7e:	f8a4 30cc 	strh.w	r3, [r4, #204]	; 0xcc
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8002c82:	a909      	add	r1, sp, #36	; 0x24
 8002c84:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002c88:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8002c8c:	f00a f8f2 	bl	800ce74 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002c90:	4659      	mov	r1, fp
 8002c92:	4638      	mov	r0, r7
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002c94:	f8c4 90c0 	str.w	r9, [r4, #192]	; 0xc0
    gauge_test.setPosition(339, 76, 120, 120);
 8002c98:	f04f 0b78 	mov.w	fp, #120	; 0x78
 8002c9c:	f007 fd32 	bl	800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002ca0:	f04f 0301 	mov.w	r3, #1
    gauge_test.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_DARK_FILLED_ID));
 8002ca4:	4630      	mov	r0, r6
 8002ca6:	a90a      	add	r1, sp, #40	; 0x28
 8002ca8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002cac:	f007 fcbc 	bl	800a628 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    gauge_test.setPosition(339, 76, 120, 120);
 8002cb0:	465b      	mov	r3, fp
 8002cb2:	4630      	mov	r0, r6
 8002cb4:	224c      	movs	r2, #76	; 0x4c
 8002cb6:	f240 1153 	movw	r1, #339	; 0x153
 8002cba:	f8cd b000 	str.w	fp, [sp]
 8002cbe:	f7ff fecb 	bl	8002a58 <_ZN8touchgfx8Drawable11setPositionEssss>
    gauge_test.setCenter(60, 60);
 8002cc2:	223c      	movs	r2, #60	; 0x3c
 8002cc4:	4630      	mov	r0, r6
 8002cc6:	4611      	mov	r1, r2
 8002cc8:	f00a f83b 	bl	800cd42 <_ZN8touchgfx5Gauge9setCenterEii>
    gauge_test.setStartEndAngle(-119, 122);
 8002ccc:	4630      	mov	r0, r6
 8002cce:	227a      	movs	r2, #122	; 0x7a
 8002cd0:	f06f 0176 	mvn.w	r1, #118	; 0x76
 8002cd4:	f00a f8ba 	bl	800ce4c <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge_test.setRange(0, 100);
 8002cd8:	462b      	mov	r3, r5
 8002cda:	2264      	movs	r2, #100	; 0x64
 8002cdc:	4630      	mov	r0, r6
 8002cde:	4629      	mov	r1, r5
 8002ce0:	9500      	str	r5, [sp, #0]
 8002ce2:	f007 fb4e 	bl	800a382 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge_test.setValue(50);
 8002ce6:	4630      	mov	r0, r6
 8002ce8:	2132      	movs	r1, #50	; 0x32
 8002cea:	f00a f859 	bl	800cda0 <_ZN8touchgfx5Gauge8setValueEi>
    gauge_test.setEasingEquation(touchgfx::EasingEquations::linearEaseIn);
 8002cee:	4630      	mov	r0, r6
 8002cf0:	4960      	ldr	r1, [pc, #384]	; (8002e74 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 8002cf2:	f007 fb80 	bl	800a3f6 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>
    gauge_test.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
 8002cf6:	4652      	mov	r2, sl
 8002cf8:	2321      	movs	r3, #33	; 0x21
 8002cfa:	4630      	mov	r0, r6
 8002cfc:	2103      	movs	r1, #3
 8002cfe:	f00a f80b 	bl	800cd18 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge_test.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8002d02:	4630      	mov	r0, r6
 8002d04:	2101      	movs	r1, #1
 8002d06:	f009 ffa3 	bl	800cc50 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge_test.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8002d0a:	4630      	mov	r0, r6
 8002d0c:	2101      	movs	r1, #1
 8002d0e:	f009 ffa2 	bl	800cc56 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge_test.setArcVisible();
 8002d12:	4630      	mov	r0, r6
 8002d14:	2101      	movs	r1, #1
 8002d16:	f009 ffa1 	bl	800cc5c <_ZN8touchgfx5Gauge13setArcVisibleEb>
 8002d1a:	2302      	movs	r3, #2
    gauge_testPainter.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_FILLERS_SWOOP_ID));
 8002d1c:	a90a      	add	r1, sp, #40	; 0x28
 8002d1e:	ee19 0a10 	vmov	r0, s18
 8002d22:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002d26:	f008 ff62 	bl	800bbee <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE>
    gauge_test.getArc().setPainter(gauge_testPainter);
 8002d2a:	4630      	mov	r0, r6
 8002d2c:	f009 ff99 	bl	800cc62 <_ZN8touchgfx5Gauge6getArcEv>
        canvasPainter = &painter;
 8002d30:	ed80 9a0a 	vstr	s18, [r0, #40]	; 0x28
    gauge_test.getArc().setRadius(50);
 8002d34:	4630      	mov	r0, r6
 8002d36:	f009 ff94 	bl	800cc62 <_ZN8touchgfx5Gauge6getArcEv>
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
 8002d3a:	f44f 63c8 	mov.w	r3, #1600	; 0x640
 8002d3e:	6343      	str	r3, [r0, #52]	; 0x34
    gauge_test.getArc().setLineWidth(49);
 8002d40:	4630      	mov	r0, r6
 8002d42:	f009 ff8e 	bl	800cc62 <_ZN8touchgfx5Gauge6getArcEv>
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
 8002d46:	f44f 63c4 	mov.w	r3, #1568	; 0x620
 8002d4a:	6403      	str	r3, [r0, #64]	; 0x40
    gauge_test.getArc().setCapPrecision(180);
 8002d4c:	4630      	mov	r0, r6
 8002d4e:	f009 ff88 	bl	800cc62 <_ZN8touchgfx5Gauge6getArcEv>
 8002d52:	21b4      	movs	r1, #180	; 0xb4
 8002d54:	f008 ffde 	bl	800bd14 <_ZN8touchgfx6Circle15setCapPrecisionEi>
    gauge_test.setArcPosition(12, 12, 95, 71);
 8002d58:	220c      	movs	r2, #12
 8002d5a:	2347      	movs	r3, #71	; 0x47
 8002d5c:	4630      	mov	r0, r6
 8002d5e:	4611      	mov	r1, r2
 8002d60:	9300      	str	r3, [sp, #0]
 8002d62:	235f      	movs	r3, #95	; 0x5f
 8002d64:	f009 ff4c 	bl	800cc00 <_ZN8touchgfx5Gauge14setArcPositionEssss>
 8002d68:	4631      	mov	r1, r6
 8002d6a:	4638      	mov	r0, r7
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8002d6c:	261e      	movs	r6, #30
 8002d6e:	f007 fcc9 	bl	800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonUp.setXY(21, 26);
 8002d72:	221a      	movs	r2, #26
 8002d74:	2115      	movs	r1, #21
 8002d76:	ee18 0a10 	vmov	r0, s16
 8002d7a:	f7ff fe60 	bl	8002a3e <_ZN8touchgfx8Drawable5setXYEss>
 8002d7e:	230a      	movs	r3, #10
    buttonUp.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_000000_SVG_ID));
 8002d80:	aa08      	add	r2, sp, #32
 8002d82:	a907      	add	r1, sp, #28
 8002d84:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002d88:	2309      	movs	r3, #9
 8002d8a:	ee18 0a10 	vmov	r0, s16
 8002d8e:	f8ad 501c 	strh.w	r5, [sp, #28]
 8002d92:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002d96:	ab0a      	add	r3, sp, #40	; 0x28
 8002d98:	f8ad 5020 	strh.w	r5, [sp, #32]
 8002d9c:	9300      	str	r3, [sp, #0]
 8002d9e:	ab09      	add	r3, sp, #36	; 0x24
 8002da0:	f00a f987 	bl	800d0b2 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8002da4:	ee18 1a10 	vmov	r1, s16
 8002da8:	4638      	mov	r0, r7
 8002daa:	f8c4 62d0 	str.w	r6, [r4, #720]	; 0x2d0
 8002dae:	f8c4 92c0 	str.w	r9, [r4, #704]	; 0x2c0
 8002db2:	f007 fca7 	bl	800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonDown.setXY(21, 196);
 8002db6:	22c4      	movs	r2, #196	; 0xc4
 8002db8:	2115      	movs	r1, #21
 8002dba:	ee18 0a90 	vmov	r0, s17
 8002dbe:	f7ff fe3e 	bl	8002a3e <_ZN8touchgfx8Drawable5setXYEss>
 8002dc2:	2308      	movs	r3, #8
    buttonDown.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_000000_SVG_ID));
 8002dc4:	aa08      	add	r2, sp, #32
 8002dc6:	a907      	add	r1, sp, #28
 8002dc8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002dcc:	2307      	movs	r3, #7
 8002dce:	ee18 0a90 	vmov	r0, s17
 8002dd2:	f8ad 501c 	strh.w	r5, [sp, #28]
 8002dd6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002dda:	ab0a      	add	r3, sp, #40	; 0x28
 8002ddc:	f8ad 5020 	strh.w	r5, [sp, #32]
 8002de0:	9300      	str	r3, [sp, #0]
 8002de2:	ab09      	add	r3, sp, #36	; 0x24
 8002de4:	f00a f965 	bl	800d0b2 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8002de8:	ee18 1a90 	vmov	r1, s17
 8002dec:	4638      	mov	r0, r7
 8002dee:	f8c4 630c 	str.w	r6, [r4, #780]	; 0x30c
 8002df2:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8002df6:	ae02      	add	r6, sp, #8
 8002df8:	f007 fc84 	bl	800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    GLabel.setPosition(339, 197, 120, 49);
 8002dfc:	2331      	movs	r3, #49	; 0x31
 8002dfe:	22c5      	movs	r2, #197	; 0xc5
 8002e00:	f240 1153 	movw	r1, #339	; 0x153
 8002e04:	4640      	mov	r0, r8
 8002e06:	9300      	str	r3, [sp, #0]
 8002e08:	465b      	mov	r3, fp
 8002e0a:	f7ff fe25 	bl	8002a58 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002e0e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8002e12:	4630      	mov	r0, r6
 8002e14:	4641      	mov	r1, r8
        color = newColor;
 8002e16:	f8c4 3340 	str.w	r3, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8002e1a:	f8d4 3310 	ldr.w	r3, [r4, #784]	; 0x310
        linespace = space;
 8002e1e:	f8a4 5344 	strh.w	r5, [r4, #836]	; 0x344
        boundingArea = calculateBoundingArea();
 8002e22:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002e26:	4798      	blx	r3
 8002e28:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8002e2c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8002e30:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002e34:	4b10      	ldr	r3, [pc, #64]	; (8002e78 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
    Unicode::snprintf(GLabelBuffer, GLABEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XH9D).getText());
 8002e36:	f504 7657 	add.w	r6, r4, #860	; 0x35c
 8002e3a:	681b      	ldr	r3, [r3, #0]
 8002e3c:	bb23      	cbnz	r3, 8002e88 <_ZN15Screen1ViewBaseC1Ev+0x3e4>
 8002e3e:	4b0f      	ldr	r3, [pc, #60]	; (8002e7c <_ZN15Screen1ViewBaseC1Ev+0x3d8>)
 8002e40:	2160      	movs	r1, #96	; 0x60
 8002e42:	4a0f      	ldr	r2, [pc, #60]	; (8002e80 <_ZN15Screen1ViewBaseC1Ev+0x3dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002e44:	480f      	ldr	r0, [pc, #60]	; (8002e84 <_ZN15Screen1ViewBaseC1Ev+0x3e0>)
 8002e46:	f019 fcbb 	bl	801c7c0 <__assert_func>
 8002e4a:	bf00      	nop
 8002e4c:	0801e948 	.word	0x0801e948
 8002e50:	0801f11c 	.word	0x0801f11c
 8002e54:	0801f2e4 	.word	0x0801f2e4
 8002e58:	0801f0a8 	.word	0x0801f0a8
 8002e5c:	0801e884 	.word	0x0801e884
 8002e60:	0801eec0 	.word	0x0801eec0
 8002e64:	0801e2c4 	.word	0x0801e2c4
 8002e68:	0801e930 	.word	0x0801e930
 8002e6c:	0801e8a0 	.word	0x0801e8a0
 8002e70:	08002989 	.word	0x08002989
 8002e74:	08011573 	.word	0x08011573
 8002e78:	240089a4 	.word	0x240089a4
 8002e7c:	0801e6d4 	.word	0x0801e6d4
 8002e80:	0801e7d6 	.word	0x0801e7d6
 8002e84:	0801e751 	.word	0x0801e751
        return typedTextId < numberOfTypedTexts;
 8002e88:	4b13      	ldr	r3, [pc, #76]	; (8002ed8 <_ZN15Screen1ViewBaseC1Ev+0x434>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002e8a:	881b      	ldrh	r3, [r3, #0]
 8002e8c:	b91b      	cbnz	r3, 8002e96 <_ZN15Screen1ViewBaseC1Ev+0x3f2>
 8002e8e:	4b13      	ldr	r3, [pc, #76]	; (8002edc <_ZN15Screen1ViewBaseC1Ev+0x438>)
 8002e90:	2161      	movs	r1, #97	; 0x61
 8002e92:	4a13      	ldr	r2, [pc, #76]	; (8002ee0 <_ZN15Screen1ViewBaseC1Ev+0x43c>)
 8002e94:	e7d6      	b.n	8002e44 <_ZN15Screen1ViewBaseC1Ev+0x3a0>
        return texts->getText(typedTextId);
 8002e96:	4b13      	ldr	r3, [pc, #76]	; (8002ee4 <_ZN15Screen1ViewBaseC1Ev+0x440>)
 8002e98:	4629      	mov	r1, r5
 8002e9a:	6818      	ldr	r0, [r3, #0]
 8002e9c:	f000 f990 	bl	80031c0 <_ZNK8touchgfx5Texts7getTextEt>
 8002ea0:	4a11      	ldr	r2, [pc, #68]	; (8002ee8 <_ZN15Screen1ViewBaseC1Ev+0x444>)
 8002ea2:	4603      	mov	r3, r0
 8002ea4:	4651      	mov	r1, sl
 8002ea6:	4630      	mov	r0, r6
 8002ea8:	f00f fe24 	bl	8012af4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8002eac:	4b0f      	ldr	r3, [pc, #60]	; (8002eec <_ZN15Screen1ViewBaseC1Ev+0x448>)
    GLabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YUC8));
 8002eae:	a90a      	add	r1, sp, #40	; 0x28
 8002eb0:	4640      	mov	r0, r8
 8002eb2:	930a      	str	r3, [sp, #40]	; 0x28
 8002eb4:	f04f 0301 	mov.w	r3, #1
        wc1 = value;
 8002eb8:	f8c4 6358 	str.w	r6, [r4, #856]	; 0x358
 8002ebc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002ec0:	f009 fdc8 	bl	800ca54 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002ec4:	4638      	mov	r0, r7
 8002ec6:	4641      	mov	r1, r8
 8002ec8:	f007 fc1c 	bl	800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002ecc:	4620      	mov	r0, r4
 8002ece:	b00d      	add	sp, #52	; 0x34
 8002ed0:	ecbd 8b04 	vpop	{d8-d9}
 8002ed4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ed8:	240089a8 	.word	0x240089a8
 8002edc:	0801e798 	.word	0x0801e798
 8002ee0:	0801e7d6 	.word	0x0801e7d6
 8002ee4:	240089b0 	.word	0x240089b0
 8002ee8:	0801e80e 	.word	0x0801e80e
 8002eec:	0801e2c4 	.word	0x0801e2c4

08002ef0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002ef0:	4770      	bx	lr
	...

08002ef4 <_Z23getFont_verdana_10_4bppv>:
{
 8002ef4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002ef6:	4d16      	ldr	r5, [pc, #88]	; (8002f50 <_Z23getFont_verdana_10_4bppv+0x5c>)
{
 8002ef8:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002efa:	782c      	ldrb	r4, [r5, #0]
 8002efc:	f3bf 8f5b 	dmb	ish
 8002f00:	f014 0401 	ands.w	r4, r4, #1
 8002f04:	d120      	bne.n	8002f48 <_Z23getFont_verdana_10_4bppv+0x54>
 8002f06:	4628      	mov	r0, r5
 8002f08:	f019 fa7f 	bl	801c40a <__cxa_guard_acquire>
 8002f0c:	b1e0      	cbz	r0, 8002f48 <_Z23getFont_verdana_10_4bppv+0x54>
 8002f0e:	233f      	movs	r3, #63	; 0x3f
 8002f10:	2201      	movs	r2, #1
 8002f12:	4910      	ldr	r1, [pc, #64]	; (8002f54 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002f14:	9309      	str	r3, [sp, #36]	; 0x24
 8002f16:	4b10      	ldr	r3, [pc, #64]	; (8002f58 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002f18:	4810      	ldr	r0, [pc, #64]	; (8002f5c <_Z23getFont_verdana_10_4bppv+0x68>)
 8002f1a:	9308      	str	r3, [sp, #32]
 8002f1c:	4b10      	ldr	r3, [pc, #64]	; (8002f60 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002f1e:	940a      	str	r4, [sp, #40]	; 0x28
 8002f20:	9405      	str	r4, [sp, #20]
 8002f22:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002f26:	2304      	movs	r3, #4
 8002f28:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002f2c:	230a      	movs	r3, #10
 8002f2e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8002f32:	9300      	str	r3, [sp, #0]
 8002f34:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002f38:	f7ff fc38 	bl	80027ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002f3c:	4809      	ldr	r0, [pc, #36]	; (8002f64 <_Z23getFont_verdana_10_4bppv+0x70>)
 8002f3e:	f019 fc5d 	bl	801c7fc <atexit>
 8002f42:	4628      	mov	r0, r5
 8002f44:	f019 fa6d 	bl	801c422 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002f48:	4804      	ldr	r0, [pc, #16]	; (8002f5c <_Z23getFont_verdana_10_4bppv+0x68>)
 8002f4a:	b00f      	add	sp, #60	; 0x3c
 8002f4c:	bd30      	pop	{r4, r5, pc}
 8002f4e:	bf00      	nop
 8002f50:	24003364 	.word	0x24003364
 8002f54:	08020850 	.word	0x08020850
 8002f58:	0802090c 	.word	0x0802090c
 8002f5c:	24003368 	.word	0x24003368
 8002f60:	08020918 	.word	0x08020918
 8002f64:	08002ef1 	.word	0x08002ef1

08002f68 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002f68:	4770      	bx	lr
	...

08002f6c <_Z23getFont_verdana_20_4bppv>:
{
 8002f6c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002f6e:	4d16      	ldr	r5, [pc, #88]	; (8002fc8 <_Z23getFont_verdana_20_4bppv+0x5c>)
{
 8002f70:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002f72:	782c      	ldrb	r4, [r5, #0]
 8002f74:	f3bf 8f5b 	dmb	ish
 8002f78:	f014 0401 	ands.w	r4, r4, #1
 8002f7c:	d120      	bne.n	8002fc0 <_Z23getFont_verdana_20_4bppv+0x54>
 8002f7e:	4628      	mov	r0, r5
 8002f80:	f019 fa43 	bl	801c40a <__cxa_guard_acquire>
 8002f84:	b1e0      	cbz	r0, 8002fc0 <_Z23getFont_verdana_20_4bppv+0x54>
 8002f86:	233f      	movs	r3, #63	; 0x3f
 8002f88:	2201      	movs	r2, #1
 8002f8a:	4910      	ldr	r1, [pc, #64]	; (8002fcc <_Z23getFont_verdana_20_4bppv+0x60>)
 8002f8c:	9309      	str	r3, [sp, #36]	; 0x24
 8002f8e:	4b10      	ldr	r3, [pc, #64]	; (8002fd0 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002f90:	4810      	ldr	r0, [pc, #64]	; (8002fd4 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002f92:	9308      	str	r3, [sp, #32]
 8002f94:	4b10      	ldr	r3, [pc, #64]	; (8002fd8 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002f96:	940a      	str	r4, [sp, #40]	; 0x28
 8002f98:	9405      	str	r4, [sp, #20]
 8002f9a:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002f9e:	2304      	movs	r3, #4
 8002fa0:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002fa4:	2314      	movs	r3, #20
 8002fa6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8002faa:	9300      	str	r3, [sp, #0]
 8002fac:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002fb0:	f7ff fbfc 	bl	80027ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002fb4:	4809      	ldr	r0, [pc, #36]	; (8002fdc <_Z23getFont_verdana_20_4bppv+0x70>)
 8002fb6:	f019 fc21 	bl	801c7fc <atexit>
 8002fba:	4628      	mov	r0, r5
 8002fbc:	f019 fa31 	bl	801c422 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8002fc0:	4804      	ldr	r0, [pc, #16]	; (8002fd4 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002fc2:	b00f      	add	sp, #60	; 0x3c
 8002fc4:	bd30      	pop	{r4, r5, pc}
 8002fc6:	bf00      	nop
 8002fc8:	24003394 	.word	0x24003394
 8002fcc:	08020860 	.word	0x08020860
 8002fd0:	08020910 	.word	0x08020910
 8002fd4:	24003398 	.word	0x24003398
 8002fd8:	0802091c 	.word	0x0802091c
 8002fdc:	08002f69 	.word	0x08002f69

08002fe0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002fe0:	4770      	bx	lr
	...

08002fe4 <_Z23getFont_verdana_40_4bppv>:
{
 8002fe4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002fe6:	4d17      	ldr	r5, [pc, #92]	; (8003044 <_Z23getFont_verdana_40_4bppv+0x60>)
{
 8002fe8:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002fea:	782c      	ldrb	r4, [r5, #0]
 8002fec:	f3bf 8f5b 	dmb	ish
 8002ff0:	f014 0401 	ands.w	r4, r4, #1
 8002ff4:	d122      	bne.n	800303c <_Z23getFont_verdana_40_4bppv+0x58>
 8002ff6:	4628      	mov	r0, r5
 8002ff8:	f019 fa07 	bl	801c40a <__cxa_guard_acquire>
 8002ffc:	b1f0      	cbz	r0, 800303c <_Z23getFont_verdana_40_4bppv+0x58>
 8002ffe:	233f      	movs	r3, #63	; 0x3f
 8003000:	2201      	movs	r2, #1
 8003002:	4911      	ldr	r1, [pc, #68]	; (8003048 <_Z23getFont_verdana_40_4bppv+0x64>)
 8003004:	9309      	str	r3, [sp, #36]	; 0x24
 8003006:	4b11      	ldr	r3, [pc, #68]	; (800304c <_Z23getFont_verdana_40_4bppv+0x68>)
 8003008:	4811      	ldr	r0, [pc, #68]	; (8003050 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800300a:	9308      	str	r3, [sp, #32]
 800300c:	4b11      	ldr	r3, [pc, #68]	; (8003054 <_Z23getFont_verdana_40_4bppv+0x70>)
 800300e:	940a      	str	r4, [sp, #40]	; 0x28
 8003010:	9405      	str	r4, [sp, #20]
 8003012:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003016:	2304      	movs	r3, #4
 8003018:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800301c:	2328      	movs	r3, #40	; 0x28
 800301e:	220b      	movs	r2, #11
 8003020:	9300      	str	r3, [sp, #0]
 8003022:	2329      	movs	r3, #41	; 0x29
 8003024:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8003028:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800302c:	f7ff fbbe 	bl	80027ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003030:	4809      	ldr	r0, [pc, #36]	; (8003058 <_Z23getFont_verdana_40_4bppv+0x74>)
 8003032:	f019 fbe3 	bl	801c7fc <atexit>
 8003036:	4628      	mov	r0, r5
 8003038:	f019 f9f3 	bl	801c422 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800303c:	4804      	ldr	r0, [pc, #16]	; (8003050 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800303e:	b00f      	add	sp, #60	; 0x3c
 8003040:	bd30      	pop	{r4, r5, pc}
 8003042:	bf00      	nop
 8003044:	240033c4 	.word	0x240033c4
 8003048:	08020870 	.word	0x08020870
 800304c:	08020914 	.word	0x08020914
 8003050:	240033c8 	.word	0x240033c8
 8003054:	08020920 	.word	0x08020920
 8003058:	08002fe1 	.word	0x08002fe1

0800305c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800305c:	2000      	movs	r0, #0
 800305e:	4770      	bx	lr

08003060 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8003060:	2000      	movs	r0, #0
 8003062:	4770      	bx	lr

08003064 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003064:	b40e      	push	{r1, r2, r3}
 8003066:	b503      	push	{r0, r1, lr}
 8003068:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800306a:	2100      	movs	r1, #0
{
 800306c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003070:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003072:	f00d fc23 	bl	80108bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003076:	b002      	add	sp, #8
 8003078:	f85d eb04 	ldr.w	lr, [sp], #4
 800307c:	b003      	add	sp, #12
 800307e:	4770      	bx	lr

08003080 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003080:	b40c      	push	{r2, r3}
 8003082:	b507      	push	{r0, r1, r2, lr}
 8003084:	ab04      	add	r3, sp, #16
 8003086:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800308a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800308c:	f00d fc16 	bl	80108bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003090:	b003      	add	sp, #12
 8003092:	f85d eb04 	ldr.w	lr, [sp], #4
 8003096:	b002      	add	sp, #8
 8003098:	4770      	bx	lr
	...

0800309c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800309c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800309e:	b510      	push	{r4, lr}
 80030a0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80030a2:	b373      	cbz	r3, 8003102 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80030a4:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80030a6:	b92b      	cbnz	r3, 80030b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80030a8:	4b18      	ldr	r3, [pc, #96]	; (800310c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80030aa:	21c5      	movs	r1, #197	; 0xc5
 80030ac:	4a18      	ldr	r2, [pc, #96]	; (8003110 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80030ae:	4819      	ldr	r0, [pc, #100]	; (8003114 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80030b0:	f019 fb86 	bl	801c7c0 <__assert_func>
            return buffer[pos];
 80030b4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80030b6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80030ba:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80030bc:	b30b      	cbz	r3, 8003102 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80030be:	f00e ff6b 	bl	8011f98 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80030c2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80030c4:	2b01      	cmp	r3, #1
 80030c6:	d803      	bhi.n	80030d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80030c8:	4b13      	ldr	r3, [pc, #76]	; (8003118 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80030ca:	21cb      	movs	r1, #203	; 0xcb
 80030cc:	4a13      	ldr	r2, [pc, #76]	; (800311c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80030ce:	e7ee      	b.n	80030ae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80030d0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80030d2:	f640 103f 	movw	r0, #2367	; 0x93f
 80030d6:	1c53      	adds	r3, r2, #1
 80030d8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80030da:	2b09      	cmp	r3, #9
 80030dc:	4619      	mov	r1, r3
 80030de:	bf88      	it	hi
 80030e0:	f1a3 010a 	subhi.w	r1, r3, #10
 80030e4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80030e8:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80030ea:	4281      	cmp	r1, r0
 80030ec:	d109      	bne.n	8003102 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80030ee:	2b0a      	cmp	r3, #10
 80030f0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80030f4:	bf28      	it	cs
 80030f6:	2300      	movcs	r3, #0
            return buffer[pos];
 80030f8:	8c50      	ldrh	r0, [r2, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80030fa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80030fe:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8003100:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8003102:	4620      	mov	r0, r4
}
 8003104:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003108:	f00e be48 	b.w	8011d9c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800310c:	0801e980 	.word	0x0801e980
 8003110:	0801e989 	.word	0x0801e989
 8003114:	0801ea34 	.word	0x0801ea34
 8003118:	0801ea7e 	.word	0x0801ea7e
 800311c:	0801ea8c 	.word	0x0801ea8c

08003120 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003120:	f00e be05 	b.w	8011d2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003124 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003124:	b510      	push	{r4, lr}
 8003126:	b086      	sub	sp, #24
 8003128:	ac02      	add	r4, sp, #8
 800312a:	e884 0006 	stmia.w	r4, {r1, r2}
 800312e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003130:	ab0a      	add	r3, sp, #40	; 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003132:	4621      	mov	r1, r4
    va_start(pArg, format);
 8003134:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003136:	9301      	str	r3, [sp, #4]
 8003138:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800313a:	9300      	str	r3, [sp, #0]
 800313c:	9b08      	ldr	r3, [sp, #32]
 800313e:	f00b fffb 	bl	800f138 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8003142:	b006      	add	sp, #24
 8003144:	bd10      	pop	{r4, pc}
	...

08003148 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003148:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800314a:	bb18      	cbnz	r0, 8003194 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800314c:	4b12      	ldr	r3, [pc, #72]	; (8003198 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800314e:	4813      	ldr	r0, [pc, #76]	; (800319c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	4913      	ldr	r1, [pc, #76]	; (80031a0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003154:	b1b3      	cbz	r3, 8003184 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003156:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003158:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800315a:	441a      	add	r2, r3
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800315c:	441c      	add	r4, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800315e:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003160:	685a      	ldr	r2, [r3, #4]
 8003162:	441a      	add	r2, r3
 8003164:	600a      	str	r2, [r1, #0]
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003166:	4b0f      	ldr	r3, [pc, #60]	; (80031a4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003168:	2200      	movs	r2, #0
 800316a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800316c:	f000 f838 	bl	80031e0 <_ZN17TypedTextDatabase8getFontsEv>
 8003170:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003172:	f000 f833 	bl	80031dc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003176:	4b0c      	ldr	r3, [pc, #48]	; (80031a8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003178:	601c      	str	r4, [r3, #0]
        fonts = f;
 800317a:	4b0c      	ldr	r3, [pc, #48]	; (80031ac <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800317c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800317e:	4b0c      	ldr	r3, [pc, #48]	; (80031b0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003180:	8018      	strh	r0, [r3, #0]
    }
}
 8003182:	e007      	b.n	8003194 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003184:	4b0b      	ldr	r3, [pc, #44]	; (80031b4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003186:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003188:	4b0b      	ldr	r3, [pc, #44]	; (80031b8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800318a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800318c:	4b0b      	ldr	r3, [pc, #44]	; (80031bc <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800318e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003190:	2c00      	cmp	r4, #0
 8003192:	d1e8      	bne.n	8003166 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003194:	bd38      	pop	{r3, r4, r5, pc}
 8003196:	bf00      	nop
 8003198:	240033f4 	.word	0x240033f4
 800319c:	240033f8 	.word	0x240033f8
 80031a0:	240033fc 	.word	0x240033fc
 80031a4:	24003400 	.word	0x24003400
 80031a8:	240089a4 	.word	0x240089a4
 80031ac:	240089ac 	.word	0x240089ac
 80031b0:	240089a8 	.word	0x240089a8
 80031b4:	0802092c 	.word	0x0802092c
 80031b8:	08020924 	.word	0x08020924
 80031bc:	0802093c 	.word	0x0802093c

080031c0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80031c0:	4b04      	ldr	r3, [pc, #16]	; (80031d4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80031c2:	681b      	ldr	r3, [r3, #0]
 80031c4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80031c8:	4b03      	ldr	r3, [pc, #12]	; (80031d8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80031ca:	681b      	ldr	r3, [r3, #0]
}
 80031cc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80031d0:	4770      	bx	lr
 80031d2:	bf00      	nop
 80031d4:	240033fc 	.word	0x240033fc
 80031d8:	240033f8 	.word	0x240033f8

080031dc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80031dc:	2002      	movs	r0, #2
 80031de:	4770      	bx	lr

080031e0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80031e0:	4800      	ldr	r0, [pc, #0]	; (80031e4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80031e2:	4770      	bx	lr
 80031e4:	24003404 	.word	0x24003404

080031e8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80031e8:	b510      	push	{r4, lr}
};
 80031ea:	4c05      	ldr	r4, [pc, #20]	; (8003200 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
 80031ec:	f7ff febe 	bl	8002f6c <_Z23getFont_verdana_20_4bppv>
};
 80031f0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80031f2:	f7ff fef7 	bl	8002fe4 <_Z23getFont_verdana_40_4bppv>
};
 80031f6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80031f8:	f7ff fe7c 	bl	8002ef4 <_Z23getFont_verdana_10_4bppv>
};
 80031fc:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80031fe:	bd10      	pop	{r4, pc}
 8003200:	24003404 	.word	0x24003404

08003204 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003204:	4770      	bx	lr

08003206 <_ZN19FrontendApplicationD0Ev>:
 8003206:	b510      	push	{r4, lr}
 8003208:	4604      	mov	r4, r0
 800320a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800320e:	f019 f8fa 	bl	801c406 <_ZdlPvj>
 8003212:	4620      	mov	r0, r4
 8003214:	bd10      	pop	{r4, pc}

08003216 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003216:	b510      	push	{r4, lr}
 8003218:	4604      	mov	r4, r0
    {
        model.tick();
 800321a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800321e:	f000 f812 	bl	8003246 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003222:	4620      	mov	r0, r4
    }
 8003224:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003228:	f00c bc80 	b.w	800fb2c <_ZN8touchgfx11Application15handleTickEventEv>

0800322c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800322c:	b510      	push	{r4, lr}
 800322e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003230:	f7ff fa4a 	bl	80026c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003234:	4b01      	ldr	r3, [pc, #4]	; (800323c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8003236:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8003238:	6023      	str	r3, [r4, #0]
}
 800323a:	bd10      	pop	{r4, pc}
 800323c:	0801eb68 	.word	0x0801eb68

08003240 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003240:	2200      	movs	r2, #0
 8003242:	6002      	str	r2, [r0, #0]
{

}
 8003244:	4770      	bx	lr

08003246 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003246:	4770      	bx	lr

08003248 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8003248:	4770      	bx	lr

0800324a <_ZThn4_N16Screen1PresenterD1Ev>:
 800324a:	3804      	subs	r0, #4
 800324c:	4770      	bx	lr

0800324e <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 800324e:	4770      	bx	lr

08003250 <_ZN16Screen1PresenterD0Ev>:
 8003250:	b510      	push	{r4, lr}
 8003252:	4604      	mov	r4, r0
 8003254:	2110      	movs	r1, #16
 8003256:	f019 f8d6 	bl	801c406 <_ZdlPvj>
 800325a:	4620      	mov	r0, r4
 800325c:	bd10      	pop	{r4, pc}

0800325e <_ZThn4_N16Screen1PresenterD0Ev>:
 800325e:	f1a0 0004 	sub.w	r0, r0, #4
 8003262:	e7f5      	b.n	8003250 <_ZN16Screen1PresenterD0Ev>

08003264 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8003264:	2200      	movs	r2, #0
    : view(v)
 8003266:	60c1      	str	r1, [r0, #12]
 8003268:	6082      	str	r2, [r0, #8]
 800326a:	4a04      	ldr	r2, [pc, #16]	; (800327c <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
Screen1Presenter::Screen1Presenter(Screen1View& v)
 800326c:	b510      	push	{r4, lr}
    : view(v)
 800326e:	f102 0408 	add.w	r4, r2, #8
 8003272:	3220      	adds	r2, #32
 8003274:	6004      	str	r4, [r0, #0]
 8003276:	6042      	str	r2, [r0, #4]
}
 8003278:	bd10      	pop	{r4, pc}
 800327a:	bf00      	nop
 800327c:	0801ebac 	.word	0x0801ebac

08003280 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8003280:	4770      	bx	lr
	...

08003284 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8003284:	4b03      	ldr	r3, [pc, #12]	; (8003294 <_ZN11Screen1ViewD1Ev+0x10>)
 8003286:	b510      	push	{r4, lr}
 8003288:	4604      	mov	r4, r0
 800328a:	6003      	str	r3, [r0, #0]
 800328c:	f7ff fb5c 	bl	8002948 <_ZN15Screen1ViewBaseD1Ev>
 8003290:	4620      	mov	r0, r4
 8003292:	bd10      	pop	{r4, pc}
 8003294:	0801ec94 	.word	0x0801ec94

08003298 <_ZN11Screen1ViewD0Ev>:
 8003298:	b510      	push	{r4, lr}
 800329a:	4604      	mov	r4, r0
 800329c:	f7ff fff2 	bl	8003284 <_ZN11Screen1ViewD1Ev>
 80032a0:	f641 7198 	movw	r1, #8088	; 0x1f98
 80032a4:	4620      	mov	r0, r4
 80032a6:	f019 f8ae 	bl	801c406 <_ZdlPvj>
 80032aa:	4620      	mov	r0, r4
 80032ac:	bd10      	pop	{r4, pc}
	...

080032b0 <_ZNK8touchgfx6Bitmap5getIdEv>:
    BitmapId getId() const
 80032b0:	b508      	push	{r3, lr}
        assert(bitmaps != 0 && "Bitmap database has not been initialized.");
 80032b2:	4b05      	ldr	r3, [pc, #20]	; (80032c8 <_ZNK8touchgfx6Bitmap5getIdEv+0x18>)
 80032b4:	681b      	ldr	r3, [r3, #0]
 80032b6:	b92b      	cbnz	r3, 80032c4 <_ZNK8touchgfx6Bitmap5getIdEv+0x14>
 80032b8:	4b04      	ldr	r3, [pc, #16]	; (80032cc <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
 80032ba:	2187      	movs	r1, #135	; 0x87
 80032bc:	4a04      	ldr	r2, [pc, #16]	; (80032d0 <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 80032be:	4805      	ldr	r0, [pc, #20]	; (80032d4 <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 80032c0:	f019 fa7e 	bl	801c7c0 <__assert_func>
    }
 80032c4:	8800      	ldrh	r0, [r0, #0]
 80032c6:	bd08      	pop	{r3, pc}
 80032c8:	240089dc 	.word	0x240089dc
 80032cc:	0801ebd4 	.word	0x0801ebd4
 80032d0:	0801ec10 	.word	0x0801ec10
 80032d4:	0801ec43 	.word	0x0801ec43

080032d8 <_ZN11Screen1View9ToggleLEDEv>:


//Toggle LED function
//PC2 RED LED
//PC3 GRN LED
void Screen1View::ToggleLED(){
 80032d8:	b538      	push	{r3, r4, r5, lr}
 80032da:	4604      	mov	r4, r0
     * @return True if the button has been toggled, i.e. the pressed state is shown when the
     *         button is not pressed.
     */
    bool getState() const
    {
        return up.getId() == originalPressed.getId();
 80032dc:	30c6      	adds	r0, #198	; 0xc6
 80032de:	f7ff ffe7 	bl	80032b0 <_ZNK8touchgfx6Bitmap5getIdEv>
 80032e2:	4605      	mov	r5, r0
 80032e4:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 80032e8:	f7ff ffe2 	bl	80032b0 <_ZNK8touchgfx6Bitmap5getIdEv>
	if( toggleButton.getState() == true ){
 80032ec:	4285      	cmp	r5, r0
 80032ee:	d10b      	bne.n	8003308 <_ZN11Screen1View9ToggleLEDEv+0x30>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
 80032f0:	2201      	movs	r2, #1
 80032f2:	2108      	movs	r1, #8
 80032f4:	4808      	ldr	r0, [pc, #32]	; (8003318 <_ZN11Screen1View9ToggleLEDEv+0x40>)
 80032f6:	f001 fec3 	bl	8005080 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80032fa:	2200      	movs	r2, #0
	}else{
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80032fc:	2104      	movs	r1, #4
 80032fe:	4806      	ldr	r0, [pc, #24]	; (8003318 <_ZN11Screen1View9ToggleLEDEv+0x40>)
	}
}
 8003300:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8003304:	f001 bebc 	b.w	8005080 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_RESET);
 8003308:	2200      	movs	r2, #0
 800330a:	2108      	movs	r1, #8
 800330c:	4802      	ldr	r0, [pc, #8]	; (8003318 <_ZN11Screen1View9ToggleLEDEv+0x40>)
 800330e:	f001 feb7 	bl	8005080 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8003312:	2201      	movs	r2, #1
 8003314:	e7f2      	b.n	80032fc <_ZN11Screen1View9ToggleLEDEv+0x24>
 8003316:	bf00      	nop
 8003318:	58020800 	.word	0x58020800

0800331c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 800331c:	b510      	push	{r4, lr}
 800331e:	4604      	mov	r4, r0
 8003320:	f7ff fbc0 	bl	8002aa4 <_ZN15Screen1ViewBaseC1Ev>
 8003324:	4b01      	ldr	r3, [pc, #4]	; (800332c <_ZN11Screen1ViewC1Ev+0x10>)
}
 8003326:	4620      	mov	r0, r4
Screen1View::Screen1View()
 8003328:	6023      	str	r3, [r4, #0]
}
 800332a:	bd10      	pop	{r4, pc}
 800332c:	0801ec94 	.word	0x0801ec94

08003330 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8003330:	f7ff bab8 	b.w	80028a4 <_ZN15Screen1ViewBase11setupScreenEv>

08003334 <_ZN11Screen1View7GuageUpEv>:

void Screen1View::GuageUp(){
 8003334:	b538      	push	{r3, r4, r5, lr}
	if( guv<100 ){
 8003336:	4d0c      	ldr	r5, [pc, #48]	; (8003368 <_ZN11Screen1View7GuageUpEv+0x34>)
void Screen1View::GuageUp(){
 8003338:	4604      	mov	r4, r0
	if( guv<100 ){
 800333a:	6829      	ldr	r1, [r5, #0]
 800333c:	2963      	cmp	r1, #99	; 0x63
 800333e:	dc11      	bgt.n	8003364 <_ZN11Screen1View7GuageUpEv+0x30>
		guv++;
 8003340:	3101      	adds	r1, #1
		gauge_test.setValue(guv);
 8003342:	30d0      	adds	r0, #208	; 0xd0
		guv++;
 8003344:	6029      	str	r1, [r5, #0]
		gauge_test.setValue(guv);
 8003346:	f009 fd2b 	bl	800cda0 <_ZN8touchgfx5Gauge8setValueEi>
		Unicode::snprintf(GLabelBuffer, GLABEL_SIZE, "%u", guv);
 800334a:	682b      	ldr	r3, [r5, #0]
 800334c:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8003350:	4a06      	ldr	r2, [pc, #24]	; (800336c <_ZN11Screen1View7GuageUpEv+0x38>)
 8003352:	2105      	movs	r1, #5
 8003354:	f00f fbce 	bl	8012af4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		GLabel.invalidate();
 8003358:	f504 7044 	add.w	r0, r4, #784	; 0x310
	}
}
 800335c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		GLabel.invalidate();
 8003360:	f00d bbd7 	b.w	8010b12 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8003364:	bd38      	pop	{r3, r4, r5, pc}
 8003366:	bf00      	nop
 8003368:	2400000c 	.word	0x2400000c
 800336c:	0801ec87 	.word	0x0801ec87

08003370 <_ZN11Screen1View9GuageDownEv>:

void Screen1View::GuageDown(){
 8003370:	b538      	push	{r3, r4, r5, lr}
	if( guv>0 ){
 8003372:	4d0c      	ldr	r5, [pc, #48]	; (80033a4 <_ZN11Screen1View9GuageDownEv+0x34>)
void Screen1View::GuageDown(){
 8003374:	4604      	mov	r4, r0
	if( guv>0 ){
 8003376:	6829      	ldr	r1, [r5, #0]
 8003378:	2900      	cmp	r1, #0
 800337a:	dd11      	ble.n	80033a0 <_ZN11Screen1View9GuageDownEv+0x30>
		guv--;
 800337c:	3901      	subs	r1, #1
		gauge_test.setValue(guv);
 800337e:	30d0      	adds	r0, #208	; 0xd0
		guv--;
 8003380:	6029      	str	r1, [r5, #0]
		gauge_test.setValue(guv);
 8003382:	f009 fd0d 	bl	800cda0 <_ZN8touchgfx5Gauge8setValueEi>
		Unicode::snprintf(GLabelBuffer, GLABEL_SIZE, "%u", guv);
 8003386:	682b      	ldr	r3, [r5, #0]
 8003388:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 800338c:	4a06      	ldr	r2, [pc, #24]	; (80033a8 <_ZN11Screen1View9GuageDownEv+0x38>)
 800338e:	2105      	movs	r1, #5
 8003390:	f00f fbb0 	bl	8012af4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		GLabel.invalidate();
 8003394:	f504 7044 	add.w	r0, r4, #784	; 0x310
	}
}
 8003398:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		GLabel.invalidate();
 800339c:	f00d bbb9 	b.w	8010b12 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80033a0:	bd38      	pop	{r3, r4, r5, pc}
 80033a2:	bf00      	nop
 80033a4:	2400000c 	.word	0x2400000c
 80033a8:	0801ec87 	.word	0x0801ec87

080033ac <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
 80033ac:	f240 1301 	movw	r3, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
 80033b0:	f44f 72f0 	mov.w	r2, #480	; 0x1e0

  return FT5336_OK;
}
 80033b4:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
 80033b6:	800b      	strh	r3, [r1, #0]
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
 80033b8:	2305      	movs	r3, #5
 80033ba:	708b      	strb	r3, [r1, #2]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
 80033bc:	f44f 7388 	mov.w	r3, #272	; 0x110
 80033c0:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
 80033c4:	4770      	bx	lr

080033c6 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
 80033c6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80033ca:	2b01      	cmp	r3, #1
  {
    pObj->IsInitialized = 0;
 80033cc:	bf04      	itt	eq
 80033ce:	2300      	moveq	r3, #0
 80033d0:	f880 3024 	strbeq.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
 80033d4:	2000      	movs	r0, #0
 80033d6:	4770      	bx	lr

080033d8 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
 80033d8:	2000      	movs	r0, #0
 80033da:	4770      	bx	lr

080033dc <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 80033dc:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 80033de:	6904      	ldr	r4, [r0, #16]
 80033e0:	8900      	ldrh	r0, [r0, #8]
 80033e2:	46a4      	mov	ip, r4
}
 80033e4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 80033e8:	4760      	bx	ip

080033ea <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 80033ea:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 80033ec:	68c4      	ldr	r4, [r0, #12]
 80033ee:	8900      	ldrh	r0, [r0, #8]
 80033f0:	46a4      	mov	ip, r4
}
 80033f2:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 80033f6:	4760      	bx	ip

080033f8 <FT5336_GestureConfig>:
{
 80033f8:	e92d 4320 	stmdb	sp!, {r5, r8, r9, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
 80033fc:	f100 0818 	add.w	r8, r0, #24
{
 8003400:	4689      	mov	r9, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
 8003402:	7809      	ldrb	r1, [r1, #0]
 8003404:	4640      	mov	r0, r8
 8003406:	f000 f8fb 	bl	8003600 <ft5336_radian_value>
 800340a:	4605      	mov	r5, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
 800340c:	f899 1004 	ldrb.w	r1, [r9, #4]
 8003410:	4640      	mov	r0, r8
 8003412:	f000 f901 	bl	8003618 <ft5336_offset_left_right>
 8003416:	4405      	add	r5, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
 8003418:	f899 1008 	ldrb.w	r1, [r9, #8]
 800341c:	4640      	mov	r0, r8
 800341e:	f000 f907 	bl	8003630 <ft5336_offset_up_down>
 8003422:	4405      	add	r5, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
 8003424:	f899 100c 	ldrb.w	r1, [r9, #12]
 8003428:	4640      	mov	r0, r8
 800342a:	f000 f90d 	bl	8003648 <ft5336_disatnce_left_right>
 800342e:	4405      	add	r5, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
 8003430:	f899 1010 	ldrb.w	r1, [r9, #16]
 8003434:	4640      	mov	r0, r8
 8003436:	f000 f913 	bl	8003660 <ft5336_distance_up_down>
 800343a:	4405      	add	r5, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
 800343c:	f899 1014 	ldrb.w	r1, [r9, #20]
 8003440:	4640      	mov	r0, r8
 8003442:	f000 f919 	bl	8003678 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
 8003446:	42c5      	cmn	r5, r0
}
 8003448:	bf14      	ite	ne
 800344a:	f04f 30ff 	movne.w	r0, #4294967295
 800344e:	2000      	moveq	r0, #0
 8003450:	e8bd 8320 	ldmia.w	sp!, {r5, r8, r9, pc}

08003454 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
 8003454:	3018      	adds	r0, #24
 8003456:	f000 b927 	b.w	80036a8 <ft5336_chip_id>

0800345a <FT5336_GetState>:
{
 800345a:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 800345c:	f100 0518 	add.w	r5, r0, #24
{
 8003460:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 8003462:	a901      	add	r1, sp, #4
 8003464:	4628      	mov	r0, r5
 8003466:	f000 f8be 	bl	80035e6 <ft5336_td_status>
 800346a:	bb08      	cbnz	r0, 80034b0 <FT5336_GetState+0x56>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
 800346c:	f89d 3004 	ldrb.w	r3, [sp, #4]
      ret = (int32_t)nb_touch;
 8003470:	2b05      	cmp	r3, #5
 8003472:	bf98      	it	ls
 8003474:	4618      	movls	r0, r3
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
 8003476:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
 8003478:	6020      	str	r0, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
 800347a:	2103      	movs	r1, #3
 800347c:	4628      	mov	r0, r5
 800347e:	eb0d 0203 	add.w	r2, sp, r3
 8003482:	f000 f89d 	bl	80035c0 <ft5336_read_reg>
 8003486:	b9b0      	cbnz	r0, 80034b6 <FT5336_GetState+0x5c>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
 8003488:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800348c:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8003490:	021b      	lsls	r3, r3, #8
 8003492:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003496:	4313      	orrs	r3, r2
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
 8003498:	f89d 2007 	ldrb.w	r2, [sp, #7]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
 800349c:	6063      	str	r3, [r4, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
 800349e:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80034a2:	021b      	lsls	r3, r3, #8
 80034a4:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80034a8:	4313      	orrs	r3, r2
 80034aa:	60a3      	str	r3, [r4, #8]
}
 80034ac:	b003      	add	sp, #12
 80034ae:	bd30      	pop	{r4, r5, pc}
    ret = FT5336_ERROR;
 80034b0:	f04f 30ff 	mov.w	r0, #4294967295
 80034b4:	e7df      	b.n	8003476 <FT5336_GetState+0x1c>
    ret = FT5336_ERROR;
 80034b6:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 80034ba:	e7f7      	b.n	80034ac <FT5336_GetState+0x52>

080034bc <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
 80034bc:	3018      	adds	r0, #24
 80034be:	f000 b88d 	b.w	80035dc <ft5336_gest_id>

080034c2 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
 80034c2:	2101      	movs	r1, #1
 80034c4:	3018      	adds	r0, #24
 80034c6:	f000 b8e3 	b.w	8003690 <ft5336_g_mode>

080034ca <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
 80034ca:	2100      	movs	r1, #0
 80034cc:	3018      	adds	r0, #24
 80034ce:	f000 b8df 	b.w	8003690 <ft5336_g_mode>

080034d2 <FT5336_Init>:
{
 80034d2:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 0U)
 80034d4:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 80034d8:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 0U)
 80034da:	b96b      	cbnz	r3, 80034f8 <FT5336_Init+0x26>
    pObj->IO.Init();
 80034dc:	6803      	ldr	r3, [r0, #0]
 80034de:	4798      	blx	r3
    ret += FT5336_DisableIT(pObj);
 80034e0:	4620      	mov	r0, r4
 80034e2:	f7ff fff2 	bl	80034ca <FT5336_DisableIT>
  if(ret != FT5336_OK)
 80034e6:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
 80034e8:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
 80034ec:	bf18      	it	ne
 80034ee:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
 80034f0:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
 80034f4:	4240      	negs	r0, r0
}
 80034f6:	bd10      	pop	{r4, pc}
  int32_t ret = FT5336_OK;
 80034f8:	2000      	movs	r0, #0
  return ret;
 80034fa:	e7fc      	b.n	80034f6 <FT5336_Init+0x24>

080034fc <FT5336_ClearIT>:
 80034fc:	2000      	movs	r0, #0
 80034fe:	4770      	bx	lr

08003500 <FT5336_GetMultiTouchState>:
{
 8003500:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 8003502:	f100 0518 	add.w	r5, r0, #24
{
 8003506:	b088      	sub	sp, #32
 8003508:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 800350a:	4628      	mov	r0, r5
 800350c:	4669      	mov	r1, sp
 800350e:	f000 f86a 	bl	80035e6 <ft5336_td_status>
 8003512:	bb90      	cbnz	r0, 800357a <FT5336_GetMultiTouchState+0x7a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
 8003514:	f89d 3000 	ldrb.w	r3, [sp]
      ret = (int32_t)nb_touch;
 8003518:	2b05      	cmp	r3, #5
 800351a:	bf98      	it	ls
 800351c:	4618      	movls	r0, r3
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
 800351e:	6020      	str	r0, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
 8003520:	231e      	movs	r3, #30
 8003522:	466a      	mov	r2, sp
 8003524:	2103      	movs	r1, #3
 8003526:	4628      	mov	r0, r5
 8003528:	f000 f84a 	bl	80035c0 <ft5336_read_reg>
 800352c:	bb40      	cbnz	r0, 8003580 <FT5336_GetMultiTouchState+0x80>
 800352e:	1d22      	adds	r2, r4, #4
 8003530:	466b      	mov	r3, sp
 8003532:	3418      	adds	r4, #24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 8003534:	781d      	ldrb	r5, [r3, #0]
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
 8003536:	3306      	adds	r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 8003538:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 800353c:	0229      	lsls	r1, r5, #8
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
 800353e:	09ad      	lsrs	r5, r5, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 8003540:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
 8003544:	4331      	orrs	r1, r6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
 8003546:	f813 6c03 	ldrb.w	r6, [r3, #-3]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 800354a:	f842 1b04 	str.w	r1, [r2], #4
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
 800354e:	4294      	cmp	r4, r2
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
 8003550:	f813 1c04 	ldrb.w	r1, [r3, #-4]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
 8003554:	6395      	str	r5, [r2, #56]	; 0x38
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
 8003556:	ea4f 2101 	mov.w	r1, r1, lsl #8
 800355a:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
 800355e:	ea41 0106 	orr.w	r1, r1, r6
 8003562:	6111      	str	r1, [r2, #16]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
 8003564:	f813 1c02 	ldrb.w	r1, [r3, #-2]
 8003568:	6251      	str	r1, [r2, #36]	; 0x24
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
 800356a:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 800356e:	ea4f 1111 	mov.w	r1, r1, lsr #4
 8003572:	64d1      	str	r1, [r2, #76]	; 0x4c
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
 8003574:	d1de      	bne.n	8003534 <FT5336_GetMultiTouchState+0x34>
}
 8003576:	b008      	add	sp, #32
 8003578:	bd70      	pop	{r4, r5, r6, pc}
    ret = FT5336_ERROR;
 800357a:	f04f 30ff 	mov.w	r0, #4294967295
 800357e:	e7ce      	b.n	800351e <FT5336_GetMultiTouchState+0x1e>
    ret = FT5336_ERROR;
 8003580:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8003584:	e7f7      	b.n	8003576 <FT5336_GetMultiTouchState+0x76>
	...

08003588 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
 8003588:	b190      	cbz	r0, 80035b0 <FT5336_RegisterBusIO+0x28>
    pObj->IO.DeInit    = pIO->DeInit;
 800358a:	684a      	ldr	r2, [r1, #4]
    pObj->IO.Init      = pIO->Init;
 800358c:	680b      	ldr	r3, [r1, #0]
    pObj->IO.DeInit    = pIO->DeInit;
 800358e:	6042      	str	r2, [r0, #4]
    pObj->IO.Address   = pIO->Address;
 8003590:	890a      	ldrh	r2, [r1, #8]
    pObj->IO.Init      = pIO->Init;
 8003592:	6003      	str	r3, [r0, #0]
    pObj->IO.Address   = pIO->Address;
 8003594:	8102      	strh	r2, [r0, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
 8003596:	68ca      	ldr	r2, [r1, #12]
 8003598:	60c2      	str	r2, [r0, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
 800359a:	690a      	ldr	r2, [r1, #16]
 800359c:	6102      	str	r2, [r0, #16]
    pObj->IO.GetTick   = pIO->GetTick;
 800359e:	694a      	ldr	r2, [r1, #20]
    pObj->Ctx.handle   = pObj;
 80035a0:	6200      	str	r0, [r0, #32]
    pObj->IO.GetTick   = pIO->GetTick;
 80035a2:	6142      	str	r2, [r0, #20]
    pObj->Ctx.ReadReg  = ReadRegWrap;
 80035a4:	4a04      	ldr	r2, [pc, #16]	; (80035b8 <FT5336_RegisterBusIO+0x30>)
 80035a6:	61c2      	str	r2, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
 80035a8:	4a04      	ldr	r2, [pc, #16]	; (80035bc <FT5336_RegisterBusIO+0x34>)
 80035aa:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
 80035ac:	b103      	cbz	r3, 80035b0 <FT5336_RegisterBusIO+0x28>
      ret = pObj->IO.Init();
 80035ae:	4718      	bx	r3
}
 80035b0:	f04f 30ff 	mov.w	r0, #4294967295
 80035b4:	4770      	bx	lr
 80035b6:	bf00      	nop
 80035b8:	080033dd 	.word	0x080033dd
 80035bc:	080033eb 	.word	0x080033eb

080035c0 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
 80035c0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 80035c2:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
 80035c6:	46a4      	mov	ip, r4
}
 80035c8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 80035cc:	4760      	bx	ip

080035ce <ft5336_write_reg>:
  * @param  pdata pointer to data to be written
  * @param  length Length of data to write   
  * @retval Component status
  */
int32_t ft5336_write_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t *pdata, uint16_t length)
{
 80035ce:	b410      	push	{r4}
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 80035d0:	6804      	ldr	r4, [r0, #0]
 80035d2:	6880      	ldr	r0, [r0, #8]
 80035d4:	46a4      	mov	ip, r4
}
 80035d6:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 80035da:	4760      	bx	ip

080035dc <ft5336_gest_id>:
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
 80035dc:	2301      	movs	r3, #1
{
 80035de:	460a      	mov	r2, r1
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
 80035e0:	4619      	mov	r1, r3
 80035e2:	f7ff bfed 	b.w	80035c0 <ft5336_read_reg>

080035e6 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
 80035e6:	b510      	push	{r4, lr}
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
 80035e8:	460a      	mov	r2, r1
{
 80035ea:	460c      	mov	r4, r1
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
 80035ec:	2301      	movs	r3, #1
 80035ee:	2102      	movs	r1, #2
 80035f0:	f7ff ffe6 	bl	80035c0 <ft5336_read_reg>
  
  if(ret == 0)
 80035f4:	b918      	cbnz	r0, 80035fe <ft5336_td_status+0x18>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
 80035f6:	7823      	ldrb	r3, [r4, #0]
 80035f8:	f003 030f 	and.w	r3, r3, #15
 80035fc:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
 80035fe:	bd10      	pop	{r4, pc}

08003600 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
 8003600:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
 8003602:	2301      	movs	r3, #1
{
 8003604:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
 8003608:	f10d 0207 	add.w	r2, sp, #7
 800360c:	2191      	movs	r1, #145	; 0x91
 800360e:	f7ff ffde 	bl	80035ce <ft5336_write_reg>
}
 8003612:	b003      	add	sp, #12
 8003614:	f85d fb04 	ldr.w	pc, [sp], #4

08003618 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
 8003618:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
 800361a:	2301      	movs	r3, #1
{
 800361c:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
 8003620:	f10d 0207 	add.w	r2, sp, #7
 8003624:	2192      	movs	r1, #146	; 0x92
 8003626:	f7ff ffd2 	bl	80035ce <ft5336_write_reg>
}
 800362a:	b003      	add	sp, #12
 800362c:	f85d fb04 	ldr.w	pc, [sp], #4

08003630 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
 8003630:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
 8003632:	2301      	movs	r3, #1
{
 8003634:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
 8003638:	f10d 0207 	add.w	r2, sp, #7
 800363c:	2193      	movs	r1, #147	; 0x93
 800363e:	f7ff ffc6 	bl	80035ce <ft5336_write_reg>
}
 8003642:	b003      	add	sp, #12
 8003644:	f85d fb04 	ldr.w	pc, [sp], #4

08003648 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
 8003648:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
 800364a:	2301      	movs	r3, #1
{
 800364c:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
 8003650:	f10d 0207 	add.w	r2, sp, #7
 8003654:	2194      	movs	r1, #148	; 0x94
 8003656:	f7ff ffba 	bl	80035ce <ft5336_write_reg>
}
 800365a:	b003      	add	sp, #12
 800365c:	f85d fb04 	ldr.w	pc, [sp], #4

08003660 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
 8003660:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
 8003662:	2301      	movs	r3, #1
{
 8003664:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
 8003668:	f10d 0207 	add.w	r2, sp, #7
 800366c:	2195      	movs	r1, #149	; 0x95
 800366e:	f7ff ffae 	bl	80035ce <ft5336_write_reg>
}
 8003672:	b003      	add	sp, #12
 8003674:	f85d fb04 	ldr.w	pc, [sp], #4

08003678 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
 8003678:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
 800367a:	2301      	movs	r3, #1
{
 800367c:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
 8003680:	f10d 0207 	add.w	r2, sp, #7
 8003684:	2196      	movs	r1, #150	; 0x96
 8003686:	f7ff ffa2 	bl	80035ce <ft5336_write_reg>
}
 800368a:	b003      	add	sp, #12
 800368c:	f85d fb04 	ldr.w	pc, [sp], #4

08003690 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
 8003690:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
 8003692:	2301      	movs	r3, #1
{
 8003694:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
 8003698:	f10d 0207 	add.w	r2, sp, #7
 800369c:	21a4      	movs	r1, #164	; 0xa4
 800369e:	f7ff ff96 	bl	80035ce <ft5336_write_reg>
}
 80036a2:	b003      	add	sp, #12
 80036a4:	f85d fb04 	ldr.w	pc, [sp], #4

080036a8 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
 80036a8:	460a      	mov	r2, r1
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_CHIP_ID_REG, (uint8_t *)value, 1);
 80036aa:	2301      	movs	r3, #1
 80036ac:	21a8      	movs	r1, #168	; 0xa8
 80036ae:	f7ff bf87 	b.w	80035c0 <ft5336_read_reg>

080036b2 <MX25LM51245G_GetFlashInfo>:
  */
int32_t MX25LM51245G_GetFlashInfo(MX25LM51245G_Info_t *pInfo)
{
  /* Configure the structure with the memory configuration */
  pInfo->FlashSize              = MX25LM51245G_FLASH_SIZE;
  pInfo->EraseSectorSize        = MX25LM51245G_SECTOR_64K;
 80036b2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80036b6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  pInfo->EraseSubSectorSize     = MX25LM51245G_SUBSECTOR_4K;
  pInfo->EraseSubSectorNumber   = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
  pInfo->EraseSubSector1Size    = MX25LM51245G_SUBSECTOR_4K;
  pInfo->EraseSubSector1Number  = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
  pInfo->ProgPageSize           = MX25LM51245G_PAGE_SIZE;
  pInfo->ProgPagesNumber        = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_PAGE_SIZE);
 80036ba:	f44f 7180 	mov.w	r1, #256	; 0x100
  pInfo->EraseSectorSize        = MX25LM51245G_SECTOR_64K;
 80036be:	e9c0 2300 	strd	r2, r3, [r0]
  pInfo->EraseSubSectorSize     = MX25LM51245G_SUBSECTOR_4K;
 80036c2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80036c6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80036ca:	e9c0 3202 	strd	r3, r2, [r0, #8]
  pInfo->EraseSubSectorNumber   = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
 80036ce:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  pInfo->EraseSubSector1Size    = MX25LM51245G_SUBSECTOR_4K;
 80036d2:	e9c0 3204 	strd	r3, r2, [r0, #16]
  pInfo->EraseSubSector1Number  = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
 80036d6:	6183      	str	r3, [r0, #24]
  pInfo->ProgPagesNumber        = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_PAGE_SIZE);
 80036d8:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 80036dc:	e9c0 1307 	strd	r1, r3, [r0, #28]

  return MX25LM51245G_OK;
};
 80036e0:	2000      	movs	r0, #0
 80036e2:	4770      	bx	lr

080036e4 <MX25LM51245G_AutoPollingMemReady>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate
  * @retval error status
  */
int32_t MX25LM51245G_AutoPollingMemReady(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 80036e4:	b570      	push	{r4, r5, r6, lr}
 80036e6:	b09a      	sub	sp, #104	; 0x68
 80036e8:	460d      	mov	r5, r1
 80036ea:	4606      	mov	r6, r0
  OSPI_RegularCmdTypeDef  s_command = {0};
 80036ec:	2100      	movs	r1, #0
{
 80036ee:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef  s_command = {0};
 80036f0:	a806      	add	r0, sp, #24
 80036f2:	2250      	movs	r2, #80	; 0x50
 80036f4:	f019 f9ea 	bl	801cacc <memset>
  OSPI_AutoPollingTypeDef s_config = {0};
 80036f8:	2214      	movs	r2, #20
 80036fa:	2100      	movs	r1, #0
 80036fc:	a801      	add	r0, sp, #4
 80036fe:	f019 f9e5 	bl	801cacc <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003702:	b92d      	cbnz	r5, 8003710 <MX25LM51245G_AutoPollingMemReady+0x2c>
 8003704:	2c01      	cmp	r4, #1
 8003706:	d159      	bne.n	80037bc <MX25LM51245G_AutoPollingMemReady+0xd8>
  {
    return MX25LM51245G_ERROR;
 8003708:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 800370c:	b01a      	add	sp, #104	; 0x68
 800370e:	bd70      	pop	{r4, r5, r6, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003710:	2304      	movs	r3, #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003712:	2c01      	cmp	r4, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003714:	9309      	str	r3, [sp, #36]	; 0x24
  s_config.AutomaticStop = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 8003716:	f04f 0110 	mov.w	r1, #16
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800371a:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 800371e:	bf0c      	ite	eq
 8003720:	2308      	moveq	r3, #8
 8003722:	2300      	movne	r3, #0
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003724:	2d00      	cmp	r5, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003726:	4630      	mov	r0, r6
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003728:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800372a:	bf0c      	ite	eq
 800372c:	2300      	moveq	r3, #0
 800372e:	2310      	movne	r3, #16
 8003730:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 8003732:	f240 53fa 	movw	r3, #1530	; 0x5fa
 8003736:	bf08      	it	eq
 8003738:	2305      	moveq	r3, #5
 800373a:	9308      	str	r3, [sp, #32]
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
 800373c:	bf0c      	ite	eq
 800373e:	2300      	moveq	r3, #0
 8003740:	f44f 6380 	movne.w	r3, #1024	; 0x400
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003744:	2c01      	cmp	r4, #1
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
 8003746:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003748:	bf0c      	ite	eq
 800374a:	f44f 6300 	moveq.w	r3, #2048	; 0x800
 800374e:	2300      	movne	r3, #0
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 8003750:	2d00      	cmp	r5, #0
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003752:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 8003754:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8003758:	930e      	str	r3, [sp, #56]	; 0x38
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 800375a:	bf0c      	ite	eq
 800375c:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 8003760:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003764:	2c01      	cmp	r4, #1
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 8003766:	9314      	str	r3, [sp, #80]	; 0x50
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003768:	bf0c      	ite	eq
 800376a:	f04f 6300 	moveq.w	r3, #134217728	; 0x8000000
 800376e:	2300      	movne	r3, #0
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 8003770:	2d00      	cmp	r5, #0
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003772:	9316      	str	r3, [sp, #88]	; 0x58
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 8003774:	bf0c      	ite	eq
 8003776:	2300      	moveq	r3, #0
 8003778:	2305      	movne	r3, #5
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 800377a:	2c01      	cmp	r4, #1
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 800377c:	9317      	str	r3, [sp, #92]	; 0x5c
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 800377e:	bf0c      	ite	eq
 8003780:	2302      	moveq	r3, #2
 8003782:	2301      	movne	r3, #1
 8003784:	9315      	str	r3, [sp, #84]	; 0x54
  s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 8003786:	bf0c      	ite	eq
 8003788:	f04f 5300 	moveq.w	r3, #536870912	; 0x20000000
 800378c:	2300      	movne	r3, #0
 800378e:	9318      	str	r3, [sp, #96]	; 0x60
  s_config.Mask          = MX25LM51245G_SR_WIP;
 8003790:	2301      	movs	r3, #1
 8003792:	9302      	str	r3, [sp, #8]
  s_config.AutomaticStop = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 8003794:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003798:	e9cd 3104 	strd	r3, r1, [sp, #16]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800379c:	a906      	add	r1, sp, #24
 800379e:	f002 fb82 	bl	8005ea6 <HAL_OSPI_Command>
 80037a2:	2800      	cmp	r0, #0
 80037a4:	d1b0      	bne.n	8003708 <MX25LM51245G_AutoPollingMemReady+0x24>
  if (HAL_OSPI_AutoPolling(Ctx, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80037a6:	f241 3288 	movw	r2, #5000	; 0x1388
 80037aa:	a901      	add	r1, sp, #4
 80037ac:	4630      	mov	r0, r6
 80037ae:	f002 fcb7 	bl	8006120 <HAL_OSPI_AutoPolling>
 80037b2:	3800      	subs	r0, #0
 80037b4:	bf18      	it	ne
 80037b6:	2001      	movne	r0, #1
 80037b8:	4240      	negs	r0, r0
 80037ba:	e7a7      	b.n	800370c <MX25LM51245G_AutoPollingMemReady+0x28>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80037bc:	2301      	movs	r3, #1
 80037be:	e7a8      	b.n	8003712 <MX25LM51245G_AutoPollingMemReady+0x2e>

080037c0 <MX25LM51245G_EnableSTRMemoryMappedMode>:
  * @param  Mode Interface mode
  * @param  AddressSize Address size
  * @retval OSPI memory status
  */
int32_t MX25LM51245G_EnableSTRMemoryMappedMode(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_AddressSize_t AddressSize)
{
 80037c0:	b570      	push	{r4, r5, r6, lr}
 80037c2:	b096      	sub	sp, #88	; 0x58
 80037c4:	460c      	mov	r4, r1
 80037c6:	4606      	mov	r6, r0
 80037c8:	4615      	mov	r5, r2
  OSPI_RegularCmdTypeDef      s_command = {0};
 80037ca:	2100      	movs	r1, #0
 80037cc:	2250      	movs	r2, #80	; 0x50
 80037ce:	a802      	add	r0, sp, #8
 80037d0:	f019 f97c 	bl	801cacc <memset>
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 80037d4:	2300      	movs	r3, #0

  /* OPI mode and 3-bytes address size not supported by memory */
  if ((Mode == MX25LM51245G_OPI_MODE) && (AddressSize == MX25LM51245G_3BYTES_SIZE))
 80037d6:	2c01      	cmp	r4, #1
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 80037d8:	e9cd 3300 	strd	r3, r3, [sp]
  if ((Mode == MX25LM51245G_OPI_MODE) && (AddressSize == MX25LM51245G_3BYTES_SIZE))
 80037dc:	d104      	bne.n	80037e8 <MX25LM51245G_EnableSTRMemoryMappedMode+0x28>
 80037de:	b91d      	cbnz	r5, 80037e8 <MX25LM51245G_EnableSTRMemoryMappedMode+0x28>
  {
    return MX25LM51245G_ERROR;
 80037e0:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 80037e4:	b016      	add	sp, #88	; 0x58
 80037e6:	bd70      	pop	{r4, r5, r6, pc}
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
 80037e8:	2301      	movs	r3, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80037ea:	2c00      	cmp	r4, #0
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
 80037ec:	9302      	str	r3, [sp, #8]
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80037ee:	bf18      	it	ne
 80037f0:	2304      	movne	r3, #4
 80037f2:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80037f4:	bf0c      	ite	eq
 80037f6:	2300      	moveq	r3, #0
 80037f8:	2310      	movne	r3, #16
 80037fa:	9306      	str	r3, [sp, #24]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_FAST_READ_CMD : MX25LM51245G_4_BYTE_ADDR_FAST_READ_CMD) : MX25LM51245G_OCTA_READ_CMD;
 80037fc:	d140      	bne.n	8003880 <MX25LM51245G_EnableSTRMemoryMappedMode+0xc0>
 80037fe:	2d00      	cmp	r5, #0
 8003800:	bf0c      	ite	eq
 8003802:	230b      	moveq	r3, #11
 8003804:	230c      	movne	r3, #12
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 8003806:	2c00      	cmp	r4, #0
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_FAST_READ_CMD : MX25LM51245G_4_BYTE_ADDR_FAST_READ_CMD) : MX25LM51245G_OCTA_READ_CMD;
 8003808:	9304      	str	r3, [sp, #16]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800380a:	f241 3288 	movw	r2, #5000	; 0x1388
 800380e:	a902      	add	r1, sp, #8
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 8003810:	bf0c      	ite	eq
 8003812:	f44f 7380 	moveq.w	r3, #256	; 0x100
 8003816:	f44f 6380 	movne.w	r3, #1024	; 0x400
  s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
 800381a:	2d00      	cmp	r5, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800381c:	4630      	mov	r0, r6
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 800381e:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
 8003820:	bf0c      	ite	eq
 8003822:	f44f 5300 	moveq.w	r3, #8192	; 0x2000
 8003826:	f44f 5340 	movne.w	r3, #12288	; 0x3000
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 800382a:	2c00      	cmp	r4, #0
  s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
 800382c:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 800382e:	bf0c      	ite	eq
 8003830:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 8003834:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 8003838:	9310      	str	r3, [sp, #64]	; 0x40
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? DUMMY_CYCLES_READ : DUMMY_CYCLES_READ_OCTAL;
 800383a:	bf0c      	ite	eq
 800383c:	2308      	moveq	r3, #8
 800383e:	2306      	movne	r3, #6
 8003840:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003842:	f002 fb30 	bl	8005ea6 <HAL_OSPI_Command>
 8003846:	2800      	cmp	r0, #0
 8003848:	d1ca      	bne.n	80037e0 <MX25LM51245G_EnableSTRMemoryMappedMode+0x20>
  s_command.OperationType      = HAL_OSPI_OPTYPE_WRITE_CFG;
 800384a:	2302      	movs	r3, #2
 800384c:	9302      	str	r3, [sp, #8]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_PAGE_PROG_CMD : MX25LM51245G_4_BYTE_PAGE_PROG_CMD) : MX25LM51245G_OCTA_PAGE_PROG_CMD;
 800384e:	b9d4      	cbnz	r4, 8003886 <MX25LM51245G_EnableSTRMemoryMappedMode+0xc6>
 8003850:	2d00      	cmp	r5, #0
 8003852:	bf18      	it	ne
 8003854:	2312      	movne	r3, #18
 8003856:	9304      	str	r3, [sp, #16]
  s_command.DummyCycles        = 0U;
 8003858:	2300      	movs	r3, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800385a:	f241 3288 	movw	r2, #5000	; 0x1388
 800385e:	a902      	add	r1, sp, #8
 8003860:	4630      	mov	r0, r6
  s_command.DummyCycles        = 0U;
 8003862:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003864:	f002 fb1f 	bl	8005ea6 <HAL_OSPI_Command>
 8003868:	2800      	cmp	r0, #0
 800386a:	d1b9      	bne.n	80037e0 <MX25LM51245G_EnableSTRMemoryMappedMode+0x20>
  s_mem_mapped_cfg.TimeOutActivation = HAL_OSPI_TIMEOUT_COUNTER_DISABLE;
 800386c:	9000      	str	r0, [sp, #0]
  if (HAL_OSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 800386e:	4669      	mov	r1, sp
 8003870:	4630      	mov	r0, r6
 8003872:	f002 fca5 	bl	80061c0 <HAL_OSPI_MemoryMapped>
 8003876:	3800      	subs	r0, #0
 8003878:	bf18      	it	ne
 800387a:	2001      	movne	r0, #1
 800387c:	4240      	negs	r0, r0
 800387e:	e7b1      	b.n	80037e4 <MX25LM51245G_EnableSTRMemoryMappedMode+0x24>
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_FAST_READ_CMD : MX25LM51245G_4_BYTE_ADDR_FAST_READ_CMD) : MX25LM51245G_OCTA_READ_CMD;
 8003880:	f64e 4313 	movw	r3, #60435	; 0xec13
 8003884:	e7bf      	b.n	8003806 <MX25LM51245G_EnableSTRMemoryMappedMode+0x46>
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_PAGE_PROG_CMD : MX25LM51245G_4_BYTE_PAGE_PROG_CMD) : MX25LM51245G_OCTA_PAGE_PROG_CMD;
 8003886:	f241 23ed 	movw	r3, #4845	; 0x12ed
 800388a:	e7e4      	b.n	8003856 <MX25LM51245G_EnableSTRMemoryMappedMode+0x96>

0800388c <MX25LM51245G_EnableDTRMemoryMappedMode>:
  * @param  AddressSize Address size
  * @note   Only OPI mode support DTR transfer rate
  * @retval OSPI memory status
  */
int32_t MX25LM51245G_EnableDTRMemoryMappedMode(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode)
{
 800388c:	b510      	push	{r4, lr}
 800388e:	b096      	sub	sp, #88	; 0x58
 8003890:	4604      	mov	r4, r0
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Mode);

  OSPI_RegularCmdTypeDef      s_command = {0};
 8003892:	224c      	movs	r2, #76	; 0x4c
 8003894:	2100      	movs	r1, #0
 8003896:	a803      	add	r0, sp, #12
 8003898:	f019 f918 	bl	801cacc <memset>
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 800389c:	2300      	movs	r3, #0
  /* Initialize the read command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_8_LINES;
  s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_ENABLE;
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_16_BITS;
 800389e:	f04f 0c08 	mov.w	ip, #8
  s_command.Instruction        = MX25LM51245G_OCTA_READ_DTR_CMD;
  s_command.AddressMode        = HAL_OSPI_ADDRESS_8_LINES;
  s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_ENABLE;
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 80038a2:	f44f 6100 	mov.w	r1, #2048	; 0x800
  s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
  s_command.DQSMode            = HAL_OSPI_DQS_ENABLE;
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80038a6:	f241 3288 	movw	r2, #5000	; 0x1388
 80038aa:	4620      	mov	r0, r4
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 80038ac:	e9cd 3300 	strd	r3, r3, [sp]
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
 80038b0:	2301      	movs	r3, #1
 80038b2:	9302      	str	r3, [sp, #8]
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_8_LINES;
 80038b4:	2304      	movs	r3, #4
 80038b6:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_16_BITS;
 80038b8:	2310      	movs	r3, #16
 80038ba:	e9cd 3c06 	strd	r3, ip, [sp, #24]
  s_command.Instruction        = MX25LM51245G_OCTA_READ_DTR_CMD;
 80038be:	f64e 6311 	movw	r3, #60945	; 0xee11
  s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
 80038c2:	f04f 6c00 	mov.w	ip, #134217728	; 0x8000000
  s_command.Instruction        = MX25LM51245G_OCTA_READ_DTR_CMD;
 80038c6:	9304      	str	r3, [sp, #16]
  s_command.AddressMode        = HAL_OSPI_ADDRESS_8_LINES;
 80038c8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80038cc:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 80038ce:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80038d2:	e9cd 310a 	strd	r3, r1, [sp, #40]	; 0x28
  s_command.DataMode           = HAL_OSPI_DATA_8_LINES;
 80038d6:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80038da:	a902      	add	r1, sp, #8
  s_command.DataMode           = HAL_OSPI_DATA_8_LINES;
 80038dc:	9310      	str	r3, [sp, #64]	; 0x40
  s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
 80038de:	2306      	movs	r3, #6
 80038e0:	e9cd c312 	strd	ip, r3, [sp, #72]	; 0x48
  s_command.DQSMode            = HAL_OSPI_DQS_ENABLE;
 80038e4:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 80038e8:	9314      	str	r3, [sp, #80]	; 0x50
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80038ea:	f002 fadc 	bl	8005ea6 <HAL_OSPI_Command>
 80038ee:	b118      	cbz	r0, 80038f8 <MX25LM51245G_EnableDTRMemoryMappedMode+0x6c>
  {
    return MX25LM51245G_ERROR;
 80038f0:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 80038f4:	b016      	add	sp, #88	; 0x58
 80038f6:	bd10      	pop	{r4, pc}
  s_command.OperationType = HAL_OSPI_OPTYPE_WRITE_CFG;
 80038f8:	2302      	movs	r3, #2
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80038fa:	f241 3288 	movw	r2, #5000	; 0x1388
 80038fe:	a902      	add	r1, sp, #8
  s_command.OperationType = HAL_OSPI_OPTYPE_WRITE_CFG;
 8003900:	9302      	str	r3, [sp, #8]
  s_command.Instruction   = MX25LM51245G_OCTA_PAGE_PROG_CMD;
 8003902:	f241 23ed 	movw	r3, #4845	; 0x12ed
  s_command.DQSMode       = HAL_OSPI_DQS_DISABLE;
 8003906:	e9cd 0013 	strd	r0, r0, [sp, #76]	; 0x4c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800390a:	4620      	mov	r0, r4
  s_command.Instruction   = MX25LM51245G_OCTA_PAGE_PROG_CMD;
 800390c:	9304      	str	r3, [sp, #16]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800390e:	f002 faca 	bl	8005ea6 <HAL_OSPI_Command>
 8003912:	2800      	cmp	r0, #0
 8003914:	d1ec      	bne.n	80038f0 <MX25LM51245G_EnableDTRMemoryMappedMode+0x64>
  s_mem_mapped_cfg.TimeOutActivation = HAL_OSPI_TIMEOUT_COUNTER_DISABLE;
 8003916:	9000      	str	r0, [sp, #0]
  if (HAL_OSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 8003918:	4669      	mov	r1, sp
 800391a:	4620      	mov	r0, r4
 800391c:	f002 fc50 	bl	80061c0 <HAL_OSPI_MemoryMapped>
 8003920:	3800      	subs	r0, #0
 8003922:	bf18      	it	ne
 8003924:	2001      	movne	r0, #1
 8003926:	4240      	negs	r0, r0
 8003928:	e7e4      	b.n	80038f4 <MX25LM51245G_EnableDTRMemoryMappedMode+0x68>

0800392a <MX25LM51245G_WriteEnable>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25LM51245G_WriteEnable(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 800392a:	b570      	push	{r4, r5, r6, lr}
 800392c:	b09a      	sub	sp, #104	; 0x68
 800392e:	460d      	mov	r5, r1
 8003930:	4606      	mov	r6, r0
  OSPI_RegularCmdTypeDef     s_command = {0};
 8003932:	2100      	movs	r1, #0
{
 8003934:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef     s_command = {0};
 8003936:	a806      	add	r0, sp, #24
 8003938:	2250      	movs	r2, #80	; 0x50
 800393a:	f019 f8c7 	bl	801cacc <memset>
  OSPI_AutoPollingTypeDef s_config = {0};
 800393e:	2214      	movs	r2, #20
 8003940:	2100      	movs	r1, #0
 8003942:	a801      	add	r0, sp, #4
 8003944:	f019 f8c2 	bl	801cacc <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003948:	b92d      	cbnz	r5, 8003956 <MX25LM51245G_WriteEnable+0x2c>
 800394a:	2c01      	cmp	r4, #1
 800394c:	d169      	bne.n	8003a22 <MX25LM51245G_WriteEnable+0xf8>
  {
    return MX25LM51245G_ERROR;
 800394e:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 8003952:	b01a      	add	sp, #104	; 0x68
 8003954:	bd70      	pop	{r4, r5, r6, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003956:	2304      	movs	r3, #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003958:	2c01      	cmp	r4, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800395a:	9309      	str	r3, [sp, #36]	; 0x24
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800395c:	f241 3288 	movw	r2, #5000	; 0x1388
 8003960:	a906      	add	r1, sp, #24
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003962:	bf0c      	ite	eq
 8003964:	2308      	moveq	r3, #8
 8003966:	2300      	movne	r3, #0
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003968:	2d00      	cmp	r5, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800396a:	4630      	mov	r0, r6
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 800396c:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800396e:	bf0c      	ite	eq
 8003970:	2300      	moveq	r3, #0
 8003972:	2310      	movne	r3, #16
 8003974:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_ENABLE_CMD : MX25LM51245G_OCTA_WRITE_ENABLE_CMD;
 8003976:	f240 63f9 	movw	r3, #1785	; 0x6f9
 800397a:	bf08      	it	eq
 800397c:	2306      	moveq	r3, #6
 800397e:	9308      	str	r3, [sp, #32]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003980:	f002 fa91 	bl	8005ea6 <HAL_OSPI_Command>
 8003984:	2800      	cmp	r0, #0
 8003986:	d1e2      	bne.n	800394e <MX25LM51245G_WriteEnable+0x24>
  s_command.Instruction    = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 8003988:	2d00      	cmp	r5, #0
 800398a:	f240 53fa 	movw	r3, #1530	; 0x5fa
  s_command.Address        = 0U;
 800398e:	900c      	str	r0, [sp, #48]	; 0x30
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003990:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.Instruction    = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 8003994:	bf08      	it	eq
 8003996:	2305      	moveq	r3, #5
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003998:	a906      	add	r1, sp, #24
 800399a:	4630      	mov	r0, r6
  s_command.Instruction    = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 800399c:	9308      	str	r3, [sp, #32]
  s_command.AddressMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
 800399e:	bf0c      	ite	eq
 80039a0:	2300      	moveq	r3, #0
 80039a2:	f44f 6380 	movne.w	r3, #1024	; 0x400
  s_command.AddressDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 80039a6:	2c01      	cmp	r4, #1
  s_command.AddressMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
 80039a8:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.AddressDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 80039aa:	bf0c      	ite	eq
 80039ac:	f44f 6300 	moveq.w	r3, #2048	; 0x800
 80039b0:	2300      	movne	r3, #0
  s_command.DataMode       = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 80039b2:	2d00      	cmp	r5, #0
  s_command.AddressDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 80039b4:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.AddressSize    = HAL_OSPI_ADDRESS_32_BITS;
 80039b6:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80039ba:	930e      	str	r3, [sp, #56]	; 0x38
  s_command.DataMode       = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 80039bc:	bf0c      	ite	eq
 80039be:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 80039c2:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
  s_command.DataDtrMode    = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80039c6:	2c01      	cmp	r4, #1
  s_command.DataMode       = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 80039c8:	9314      	str	r3, [sp, #80]	; 0x50
  s_command.DataDtrMode    = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80039ca:	bf0c      	ite	eq
 80039cc:	f04f 6300 	moveq.w	r3, #134217728	; 0x8000000
 80039d0:	2300      	movne	r3, #0
  s_command.DummyCycles    = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 80039d2:	2d00      	cmp	r5, #0
  s_command.DataDtrMode    = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80039d4:	9316      	str	r3, [sp, #88]	; 0x58
  s_command.DummyCycles    = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 80039d6:	bf0c      	ite	eq
 80039d8:	2300      	moveq	r3, #0
 80039da:	2305      	movne	r3, #5
  s_command.NbData         = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 80039dc:	2c01      	cmp	r4, #1
  s_command.DummyCycles    = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 80039de:	9317      	str	r3, [sp, #92]	; 0x5c
  s_command.NbData         = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 80039e0:	bf0c      	ite	eq
 80039e2:	2302      	moveq	r3, #2
 80039e4:	2301      	movne	r3, #1
 80039e6:	9315      	str	r3, [sp, #84]	; 0x54
  s_command.DQSMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 80039e8:	bf0c      	ite	eq
 80039ea:	f04f 5300 	moveq.w	r3, #536870912	; 0x20000000
 80039ee:	2300      	movne	r3, #0
 80039f0:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80039f2:	f002 fa58 	bl	8005ea6 <HAL_OSPI_Command>
 80039f6:	2800      	cmp	r0, #0
 80039f8:	d1a9      	bne.n	800394e <MX25LM51245G_WriteEnable+0x24>
  s_config.Match           = 2U;
 80039fa:	2302      	movs	r3, #2
  s_config.AutomaticStop   = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 80039fc:	2210      	movs	r2, #16
  s_config.MatchMode       = HAL_OSPI_MATCH_MODE_AND;
 80039fe:	9003      	str	r0, [sp, #12]
  if (HAL_OSPI_AutoPolling(Ctx, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a00:	a901      	add	r1, sp, #4
 8003a02:	4630      	mov	r0, r6
  s_config.Mask            = 2U;
 8003a04:	e9cd 3301 	strd	r3, r3, [sp, #4]
  s_config.AutomaticStop   = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 8003a08:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003a0c:	e9cd 3204 	strd	r3, r2, [sp, #16]
  if (HAL_OSPI_AutoPolling(Ctx, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a10:	f241 3288 	movw	r2, #5000	; 0x1388
 8003a14:	f002 fb84 	bl	8006120 <HAL_OSPI_AutoPolling>
 8003a18:	3800      	subs	r0, #0
 8003a1a:	bf18      	it	ne
 8003a1c:	2001      	movne	r0, #1
 8003a1e:	4240      	negs	r0, r0
 8003a20:	e797      	b.n	8003952 <MX25LM51245G_WriteEnable+0x28>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003a22:	2301      	movs	r3, #1
 8003a24:	e798      	b.n	8003958 <MX25LM51245G_WriteEnable+0x2e>

08003a26 <MX25LM51245G_WriteCfg2Register>:
  * @param  Rate Transfer rate STR or DTR
  * @param  Value Value to write to configuration register
  * @retval error status
  */
int32_t MX25LM51245G_WriteCfg2Register(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint32_t WriteAddr, uint8_t Value)
{
 8003a26:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003a28:	b095      	sub	sp, #84	; 0x54
 8003a2a:	460d      	mov	r5, r1
 8003a2c:	4606      	mov	r6, r0
 8003a2e:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 8003a30:	2100      	movs	r1, #0
 8003a32:	2250      	movs	r2, #80	; 0x50
 8003a34:	4668      	mov	r0, sp
{
 8003a36:	461f      	mov	r7, r3
  OSPI_RegularCmdTypeDef s_command = {0};
 8003a38:	f019 f848 	bl	801cacc <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003a3c:	b92d      	cbnz	r5, 8003a4a <MX25LM51245G_WriteCfg2Register+0x24>
 8003a3e:	2c01      	cmp	r4, #1
 8003a40:	d14a      	bne.n	8003ad8 <MX25LM51245G_WriteCfg2Register+0xb2>
  {
    return MX25LM51245G_ERROR;
 8003a42:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 8003a46:	b015      	add	sp, #84	; 0x54
 8003a48:	bdf0      	pop	{r4, r5, r6, r7, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003a4a:	2304      	movs	r3, #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003a4c:	2c01      	cmp	r4, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003a4e:	9303      	str	r3, [sp, #12]
  s_command.Address            = WriteAddr;
 8003a50:	9706      	str	r7, [sp, #24]
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003a52:	bf0c      	ite	eq
 8003a54:	2308      	moveq	r3, #8
 8003a56:	2300      	movne	r3, #0
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003a58:	2d00      	cmp	r5, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003a5a:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003a5c:	bf0c      	ite	eq
 8003a5e:	2300      	moveq	r3, #0
 8003a60:	2310      	movne	r3, #16
 8003a62:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_CFG_REG2_CMD : MX25LM51245G_OCTA_WRITE_CFG_REG2_CMD;
 8003a64:	f247 238d 	movw	r3, #29325	; 0x728d
 8003a68:	bf08      	it	eq
 8003a6a:	2372      	moveq	r3, #114	; 0x72
 8003a6c:	9302      	str	r3, [sp, #8]
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 8003a6e:	bf0c      	ite	eq
 8003a70:	f44f 7380 	moveq.w	r3, #256	; 0x100
 8003a74:	f44f 6380 	movne.w	r3, #1024	; 0x400
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003a78:	2c01      	cmp	r4, #1
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 8003a7a:	9307      	str	r3, [sp, #28]
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003a7c:	bf0c      	ite	eq
 8003a7e:	f44f 6300 	moveq.w	r3, #2048	; 0x800
 8003a82:	2300      	movne	r3, #0
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 8003a84:	2d00      	cmp	r5, #0
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003a86:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 8003a88:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8003a8c:	9308      	str	r3, [sp, #32]
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 8003a8e:	bf0c      	ite	eq
 8003a90:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 8003a94:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003a98:	2c01      	cmp	r4, #1
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 8003a9a:	930e      	str	r3, [sp, #56]	; 0x38
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003a9c:	bf0c      	ite	eq
 8003a9e:	f04f 6300 	moveq.w	r3, #134217728	; 0x8000000
 8003aa2:	2300      	movne	r3, #0
 8003aa4:	9310      	str	r3, [sp, #64]	; 0x40
  s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 1U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
 8003aa6:	b1cd      	cbz	r5, 8003adc <MX25LM51245G_WriteCfg2Register+0xb6>
 8003aa8:	2c01      	cmp	r4, #1
 8003aaa:	bf14      	ite	ne
 8003aac:	2301      	movne	r3, #1
 8003aae:	2302      	moveq	r3, #2
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ab0:	f241 3288 	movw	r2, #5000	; 0x1388
 8003ab4:	4669      	mov	r1, sp
 8003ab6:	4630      	mov	r0, r6
  s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 1U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
 8003ab8:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003aba:	f002 f9f4 	bl	8005ea6 <HAL_OSPI_Command>
 8003abe:	2800      	cmp	r0, #0
 8003ac0:	d1bf      	bne.n	8003a42 <MX25LM51245G_WriteCfg2Register+0x1c>
  if (HAL_OSPI_Transmit(Ctx, &Value, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ac2:	f241 3288 	movw	r2, #5000	; 0x1388
 8003ac6:	a91a      	add	r1, sp, #104	; 0x68
 8003ac8:	4630      	mov	r0, r6
 8003aca:	f002 fa97 	bl	8005ffc <HAL_OSPI_Transmit>
 8003ace:	3800      	subs	r0, #0
 8003ad0:	bf18      	it	ne
 8003ad2:	2001      	movne	r0, #1
 8003ad4:	4240      	negs	r0, r0
 8003ad6:	e7b6      	b.n	8003a46 <MX25LM51245G_WriteCfg2Register+0x20>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003ad8:	2301      	movs	r3, #1
 8003ada:	e7b7      	b.n	8003a4c <MX25LM51245G_WriteCfg2Register+0x26>
  s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 1U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
 8003adc:	2301      	movs	r3, #1
 8003ade:	e7e7      	b.n	8003ab0 <MX25LM51245G_WriteCfg2Register+0x8a>

08003ae0 <MX25LM51245G_ReadCfg2Register>:
  * @param  Rate Transfer rate STR or DTR
  * @param  Value configuration register 2 value pointer
  * @retval error status
  */
int32_t MX25LM51245G_ReadCfg2Register(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint32_t ReadAddr, uint8_t *Value)
{
 8003ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003ae2:	b095      	sub	sp, #84	; 0x54
 8003ae4:	460d      	mov	r5, r1
 8003ae6:	4606      	mov	r6, r0
 8003ae8:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 8003aea:	2100      	movs	r1, #0
 8003aec:	2250      	movs	r2, #80	; 0x50
 8003aee:	4668      	mov	r0, sp
{
 8003af0:	461f      	mov	r7, r3
  OSPI_RegularCmdTypeDef s_command = {0};
 8003af2:	f018 ffeb 	bl	801cacc <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003af6:	b92d      	cbnz	r5, 8003b04 <MX25LM51245G_ReadCfg2Register+0x24>
 8003af8:	2c01      	cmp	r4, #1
 8003afa:	d153      	bne.n	8003ba4 <MX25LM51245G_ReadCfg2Register+0xc4>
  {
    return MX25LM51245G_ERROR;
 8003afc:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 8003b00:	b015      	add	sp, #84	; 0x54
 8003b02:	bdf0      	pop	{r4, r5, r6, r7, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003b04:	2304      	movs	r3, #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003b06:	2c01      	cmp	r4, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003b08:	9303      	str	r3, [sp, #12]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b0a:	f241 3288 	movw	r2, #5000	; 0x1388
 8003b0e:	4669      	mov	r1, sp
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003b10:	bf0c      	ite	eq
 8003b12:	2308      	moveq	r3, #8
 8003b14:	2300      	movne	r3, #0
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003b16:	2d00      	cmp	r5, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b18:	4630      	mov	r0, r6
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003b1a:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003b1c:	bf0c      	ite	eq
 8003b1e:	2300      	moveq	r3, #0
 8003b20:	2310      	movne	r3, #16
  s_command.Address            = ReadAddr;
 8003b22:	9706      	str	r7, [sp, #24]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003b24:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_CFG_REG2_CMD : MX25LM51245G_OCTA_READ_CFG_REG2_CMD;
 8003b26:	f247 138e 	movw	r3, #29070	; 0x718e
 8003b2a:	bf08      	it	eq
 8003b2c:	2371      	moveq	r3, #113	; 0x71
 8003b2e:	9302      	str	r3, [sp, #8]
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 8003b30:	bf0c      	ite	eq
 8003b32:	f44f 7380 	moveq.w	r3, #256	; 0x100
 8003b36:	f44f 6380 	movne.w	r3, #1024	; 0x400
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003b3a:	2c01      	cmp	r4, #1
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 8003b3c:	9307      	str	r3, [sp, #28]
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003b3e:	bf0c      	ite	eq
 8003b40:	f44f 6300 	moveq.w	r3, #2048	; 0x800
 8003b44:	2300      	movne	r3, #0
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 8003b46:	2d00      	cmp	r5, #0
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003b48:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 8003b4a:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8003b4e:	9308      	str	r3, [sp, #32]
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 8003b50:	bf0c      	ite	eq
 8003b52:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 8003b56:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003b5a:	2c01      	cmp	r4, #1
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 8003b5c:	930e      	str	r3, [sp, #56]	; 0x38
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003b5e:	bf0c      	ite	eq
 8003b60:	f04f 6300 	moveq.w	r3, #134217728	; 0x8000000
 8003b64:	2300      	movne	r3, #0
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 8003b66:	2d00      	cmp	r5, #0
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003b68:	9310      	str	r3, [sp, #64]	; 0x40
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 8003b6a:	bf0c      	ite	eq
 8003b6c:	2300      	moveq	r3, #0
 8003b6e:	2305      	movne	r3, #5
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 8003b70:	2c01      	cmp	r4, #1
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 8003b72:	9311      	str	r3, [sp, #68]	; 0x44
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 8003b74:	bf0c      	ite	eq
 8003b76:	2302      	moveq	r3, #2
 8003b78:	2301      	movne	r3, #1
 8003b7a:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 8003b7c:	bf0c      	ite	eq
 8003b7e:	f04f 5300 	moveq.w	r3, #536870912	; 0x20000000
 8003b82:	2300      	movne	r3, #0
 8003b84:	9312      	str	r3, [sp, #72]	; 0x48
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b86:	f002 f98e 	bl	8005ea6 <HAL_OSPI_Command>
 8003b8a:	2800      	cmp	r0, #0
 8003b8c:	d1b6      	bne.n	8003afc <MX25LM51245G_ReadCfg2Register+0x1c>
  if (HAL_OSPI_Receive(Ctx, Value, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b8e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003b92:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003b94:	4630      	mov	r0, r6
 8003b96:	f002 fa71 	bl	800607c <HAL_OSPI_Receive>
 8003b9a:	3800      	subs	r0, #0
 8003b9c:	bf18      	it	ne
 8003b9e:	2001      	movne	r0, #1
 8003ba0:	4240      	negs	r0, r0
 8003ba2:	e7ad      	b.n	8003b00 <MX25LM51245G_ReadCfg2Register+0x20>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003ba4:	2301      	movs	r3, #1
 8003ba6:	e7ae      	b.n	8003b06 <MX25LM51245G_ReadCfg2Register+0x26>

08003ba8 <MX25LM51245G_ResetEnable>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25LM51245G_ResetEnable(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 8003ba8:	b570      	push	{r4, r5, r6, lr}
 8003baa:	b094      	sub	sp, #80	; 0x50
 8003bac:	460c      	mov	r4, r1
 8003bae:	4606      	mov	r6, r0
 8003bb0:	4615      	mov	r5, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 8003bb2:	2100      	movs	r1, #0
 8003bb4:	2250      	movs	r2, #80	; 0x50
 8003bb6:	4668      	mov	r0, sp
 8003bb8:	f018 ff88 	bl	801cacc <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003bbc:	b9f4      	cbnz	r4, 8003bfc <MX25LM51245G_ResetEnable+0x54>
 8003bbe:	2d01      	cmp	r5, #1
 8003bc0:	d01e      	beq.n	8003c00 <MX25LM51245G_ResetEnable+0x58>
  }

  /* Initialize the reset enable command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003bc2:	2301      	movs	r3, #1
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003bc4:	2d01      	cmp	r5, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003bc6:	9303      	str	r3, [sp, #12]
  s_command.DummyCycles        = 0U;
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bc8:	f241 3288 	movw	r2, #5000	; 0x1388
 8003bcc:	4669      	mov	r1, sp
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003bce:	bf0c      	ite	eq
 8003bd0:	2308      	moveq	r3, #8
 8003bd2:	2300      	movne	r3, #0
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003bd4:	2c00      	cmp	r4, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bd6:	4630      	mov	r0, r6
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003bd8:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003bda:	bf0c      	ite	eq
 8003bdc:	2300      	moveq	r3, #0
 8003bde:	2310      	movne	r3, #16
 8003be0:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_RESET_ENABLE_CMD : MX25LM51245G_OCTA_RESET_ENABLE_CMD;
 8003be2:	f246 6399 	movw	r3, #26265	; 0x6699
 8003be6:	bf08      	it	eq
 8003be8:	2366      	moveq	r3, #102	; 0x66
 8003bea:	9302      	str	r3, [sp, #8]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bec:	f002 f95b 	bl	8005ea6 <HAL_OSPI_Command>
 8003bf0:	3800      	subs	r0, #0
 8003bf2:	bf18      	it	ne
 8003bf4:	2001      	movne	r0, #1
 8003bf6:	4240      	negs	r0, r0
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 8003bf8:	b014      	add	sp, #80	; 0x50
 8003bfa:	bd70      	pop	{r4, r5, r6, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003bfc:	2304      	movs	r3, #4
 8003bfe:	e7e1      	b.n	8003bc4 <MX25LM51245G_ResetEnable+0x1c>
    return MX25LM51245G_ERROR;
 8003c00:	f04f 30ff 	mov.w	r0, #4294967295
 8003c04:	e7f8      	b.n	8003bf8 <MX25LM51245G_ResetEnable+0x50>

08003c06 <MX25LM51245G_ResetMemory>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25LM51245G_ResetMemory(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 8003c06:	b570      	push	{r4, r5, r6, lr}
 8003c08:	b094      	sub	sp, #80	; 0x50
 8003c0a:	460c      	mov	r4, r1
 8003c0c:	4606      	mov	r6, r0
 8003c0e:	4615      	mov	r5, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 8003c10:	2100      	movs	r1, #0
 8003c12:	2250      	movs	r2, #80	; 0x50
 8003c14:	4668      	mov	r0, sp
 8003c16:	f018 ff59 	bl	801cacc <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003c1a:	b9f4      	cbnz	r4, 8003c5a <MX25LM51245G_ResetMemory+0x54>
 8003c1c:	2d01      	cmp	r5, #1
 8003c1e:	d01e      	beq.n	8003c5e <MX25LM51245G_ResetMemory+0x58>
  }

  /* Initialize the reset enable command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003c20:	2301      	movs	r3, #1
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003c22:	2d01      	cmp	r5, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003c24:	9303      	str	r3, [sp, #12]
  s_command.DummyCycles        = 0U;
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c26:	f241 3288 	movw	r2, #5000	; 0x1388
 8003c2a:	4669      	mov	r1, sp
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003c2c:	bf0c      	ite	eq
 8003c2e:	2308      	moveq	r3, #8
 8003c30:	2300      	movne	r3, #0
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003c32:	2c00      	cmp	r4, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c34:	4630      	mov	r0, r6
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003c36:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003c38:	bf0c      	ite	eq
 8003c3a:	2300      	moveq	r3, #0
 8003c3c:	2310      	movne	r3, #16
 8003c3e:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_RESET_MEMORY_CMD : MX25LM51245G_OCTA_RESET_MEMORY_CMD;
 8003c40:	f649 1366 	movw	r3, #39270	; 0x9966
 8003c44:	bf08      	it	eq
 8003c46:	2399      	moveq	r3, #153	; 0x99
 8003c48:	9302      	str	r3, [sp, #8]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c4a:	f002 f92c 	bl	8005ea6 <HAL_OSPI_Command>
 8003c4e:	3800      	subs	r0, #0
 8003c50:	bf18      	it	ne
 8003c52:	2001      	movne	r0, #1
 8003c54:	4240      	negs	r0, r0
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 8003c56:	b014      	add	sp, #80	; 0x50
 8003c58:	bd70      	pop	{r4, r5, r6, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003c5a:	2304      	movs	r3, #4
 8003c5c:	e7e1      	b.n	8003c22 <MX25LM51245G_ResetMemory+0x1c>
    return MX25LM51245G_ERROR;
 8003c5e:	f04f 30ff 	mov.w	r0, #4294967295
 8003c62:	e7f8      	b.n	8003c56 <MX25LM51245G_ResetMemory+0x50>

08003c64 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  if (I2c4InitCounter > 0U)
 8003c64:	4a11      	ldr	r2, [pc, #68]	; (8003cac <BSP_I2C4_DeInit+0x48>)
{
 8003c66:	b508      	push	{r3, lr}
  if (I2c4InitCounter > 0U)
 8003c68:	6813      	ldr	r3, [r2, #0]
 8003c6a:	b90b      	cbnz	r3, 8003c70 <BSP_I2C4_DeInit+0xc>
  int32_t ret  = BSP_ERROR_NONE;
 8003c6c:	2000      	movs	r0, #0
      }
    }
  }

  return ret;
}
 8003c6e:	bd08      	pop	{r3, pc}
    if (--I2c4InitCounter == 0U)
 8003c70:	3b01      	subs	r3, #1
 8003c72:	6013      	str	r3, [r2, #0]
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	d1f9      	bne.n	8003c6c <BSP_I2C4_DeInit+0x8>
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
 8003c78:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003c7c:	480c      	ldr	r0, [pc, #48]	; (8003cb0 <BSP_I2C4_DeInit+0x4c>)
 8003c7e:	f001 f95d 	bl	8004f3c <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
 8003c82:	480b      	ldr	r0, [pc, #44]	; (8003cb0 <BSP_I2C4_DeInit+0x4c>)
 8003c84:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003c88:	f001 f958 	bl	8004f3c <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
 8003c8c:	4a09      	ldr	r2, [pc, #36]	; (8003cb4 <BSP_I2C4_DeInit+0x50>)
      if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
 8003c8e:	480a      	ldr	r0, [pc, #40]	; (8003cb8 <BSP_I2C4_DeInit+0x54>)
  BUS_I2C4_CLK_DISABLE();
 8003c90:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
 8003c94:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003c98:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
      if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
 8003c9c:	f001 fb7d 	bl	800539a <HAL_I2C_DeInit>
 8003ca0:	2800      	cmp	r0, #0
 8003ca2:	d0e3      	beq.n	8003c6c <BSP_I2C4_DeInit+0x8>
        ret = BSP_ERROR_BUS_FAILURE;
 8003ca4:	f06f 0007 	mvn.w	r0, #7
  return ret;
 8003ca8:	e7e1      	b.n	8003c6e <BSP_I2C4_DeInit+0xa>
 8003caa:	bf00      	nop
 8003cac:	24003410 	.word	0x24003410
 8003cb0:	58021400 	.word	0x58021400
 8003cb4:	58024400 	.word	0x58024400
 8003cb8:	24003e18 	.word	0x24003e18

08003cbc <MX_I2C4_Init>:
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	2201      	movs	r2, #1
{
 8003cc0:	b510      	push	{r4, lr}
  hI2c->Init.Timing           = timing;
 8003cc2:	6041      	str	r1, [r0, #4]
{
 8003cc4:	4604      	mov	r4, r0
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
 8003cc6:	6203      	str	r3, [r0, #32]
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8003cc8:	e9c0 3202 	strd	r3, r2, [r0, #8]
  hI2c->Init.OwnAddress2      = 0;
 8003ccc:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hI2c->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
 8003cd0:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_I2C_Init(hI2c) != HAL_OK)
 8003cd4:	f001 fb0f 	bl	80052f6 <HAL_I2C_Init>
 8003cd8:	4601      	mov	r1, r0
 8003cda:	b108      	cbz	r0, 8003ce0 <MX_I2C4_Init+0x24>
    status = HAL_ERROR;
 8003cdc:	2001      	movs	r0, #1
}
 8003cde:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
 8003ce0:	4620      	mov	r0, r4
 8003ce2:	f001 fd30 	bl	8005746 <HAL_I2CEx_ConfigAnalogFilter>
 8003ce6:	4601      	mov	r1, r0
 8003ce8:	2800      	cmp	r0, #0
 8003cea:	d1f7      	bne.n	8003cdc <MX_I2C4_Init+0x20>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
 8003cec:	4620      	mov	r0, r4
 8003cee:	f001 fd50 	bl	8005792 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
 8003cf2:	3800      	subs	r0, #0
 8003cf4:	bf18      	it	ne
 8003cf6:	2001      	movne	r0, #1
 8003cf8:	e7f1      	b.n	8003cde <MX_I2C4_Init+0x22>
	...

08003cfc <BSP_I2C4_Init>:
  hbus_i2c4.Instance = BUS_I2C4;
 8003cfc:	4b9f      	ldr	r3, [pc, #636]	; (8003f7c <BSP_I2C4_Init+0x280>)
 8003cfe:	48a0      	ldr	r0, [pc, #640]	; (8003f80 <BSP_I2C4_Init+0x284>)
{
 8003d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  hbus_i2c4.Instance = BUS_I2C4;
 8003d04:	6003      	str	r3, [r0, #0]
{
 8003d06:	b093      	sub	sp, #76	; 0x4c
  if (I2c4InitCounter++ == 0U)
 8003d08:	4b9e      	ldr	r3, [pc, #632]	; (8003f84 <BSP_I2C4_Init+0x288>)
 8003d0a:	681a      	ldr	r2, [r3, #0]
 8003d0c:	9200      	str	r2, [sp, #0]
 8003d0e:	3201      	adds	r2, #1
 8003d10:	601a      	str	r2, [r3, #0]
 8003d12:	9b00      	ldr	r3, [sp, #0]
 8003d14:	2b00      	cmp	r3, #0
 8003d16:	f040 80c3 	bne.w	8003ea0 <BSP_I2C4_Init+0x1a4>
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
 8003d1a:	f001 fd0f 	bl	800573c <HAL_I2C_GetState>
 8003d1e:	2800      	cmp	r0, #0
 8003d20:	f040 80be 	bne.w	8003ea0 <BSP_I2C4_Init+0x1a4>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 8003d24:	4d98      	ldr	r5, [pc, #608]	; (8003f88 <BSP_I2C4_Init+0x28c>)
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 8003d26:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  gpio_init_structure.Speed 	= GPIO_SPEED_FREQ_HIGH;
 8003d2a:	2101      	movs	r1, #1
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
 8003d2c:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 8003d2e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
 8003d32:	4896      	ldr	r0, [pc, #600]	; (8003f8c <BSP_I2C4_Init+0x290>)
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 8003d34:	f043 0320 	orr.w	r3, r3, #32
 8003d38:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 8003d3c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 8003d40:	f003 0320 	and.w	r3, r3, #32
 8003d44:	930a      	str	r3, [sp, #40]	; 0x28
 8003d46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
 8003d48:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 8003d4c:	f043 0320 	orr.w	r3, r3, #32
 8003d50:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 8003d54:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
 8003d58:	9611      	str	r6, [sp, #68]	; 0x44
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
 8003d5a:	f003 0320 	and.w	r3, r3, #32
 8003d5e:	930b      	str	r3, [sp, #44]	; 0x2c
 8003d60:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 8003d62:	2312      	movs	r3, #18
 8003d64:	e9cd 230d 	strd	r2, r3, [sp, #52]	; 0x34
  gpio_init_structure.Speed 	= GPIO_SPEED_FREQ_HIGH;
 8003d68:	2302      	movs	r3, #2
 8003d6a:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
 8003d6e:	a90d      	add	r1, sp, #52	; 0x34
 8003d70:	f000 fffe 	bl	8004d70 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
 8003d74:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
 8003d78:	a90d      	add	r1, sp, #52	; 0x34
 8003d7a:	4884      	ldr	r0, [pc, #528]	; (8003f8c <BSP_I2C4_Init+0x290>)
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
 8003d7c:	930d      	str	r3, [sp, #52]	; 0x34
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
 8003d7e:	9611      	str	r6, [sp, #68]	; 0x44
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
 8003d80:	f000 fff6 	bl	8004d70 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
 8003d84:	f8d5 30f4 	ldr.w	r3, [r5, #244]	; 0xf4
 8003d88:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003d8c:	f8c5 30f4 	str.w	r3, [r5, #244]	; 0xf4
 8003d90:	f8d5 30f4 	ldr.w	r3, [r5, #244]	; 0xf4
 8003d94:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003d98:	930c      	str	r3, [sp, #48]	; 0x30
 8003d9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  BUS_I2C4_FORCE_RESET();
 8003d9c:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 8003da0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003da4:	f8c5 309c 	str.w	r3, [r5, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
 8003da8:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 8003dac:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003db0:	f8c5 309c 	str.w	r3, [r5, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
 8003db4:	f003 f9cc 	bl	8007150 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
 8003db8:	2800      	cmp	r0, #0
 8003dba:	d06b      	beq.n	8003e94 <BSP_I2C4_Init+0x198>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8003dbc:	4b74      	ldr	r3, [pc, #464]	; (8003f90 <BSP_I2C4_Init+0x294>)
  uint32_t prev_presc = I2C_PRESC_MAX;
 8003dbe:	f04f 0810 	mov.w	r8, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8003dc2:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 8003f98 <BSP_I2C4_Init+0x29c>
 8003dc6:	f04f 0a14 	mov.w	sl, #20
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8003dca:	eb03 0350 	add.w	r3, r3, r0, lsr #1
 8003dce:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
 8003dd2:	0083      	lsls	r3, r0, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8003dd4:	4601      	mov	r1, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
 8003dd6:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8003dda:	f5c3 73c3 	rsb	r3, r3, #390	; 0x186
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8003dde:	f1c2 0232 	rsb	r2, r2, #50	; 0x32
  if (tsdadel_min <= 0)
 8003de2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8003de6:	ea22 7be2 	bic.w	fp, r2, r2, asr #31
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8003dea:	9a00      	ldr	r2, [sp, #0]
 8003dec:	9302      	str	r3, [sp, #8]
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 8003dee:	4b69      	ldr	r3, [pc, #420]	; (8003f94 <BSP_I2C4_Init+0x298>)
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8003df0:	4696      	mov	lr, r2
 8003df2:	681b      	ldr	r3, [r3, #0]
{
 8003df4:	468c      	mov	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 8003df6:	2600      	movs	r6, #0
      if (tscldel >= (uint32_t)tscldel_min)
 8003df8:	f5bc 7faf 	cmp.w	ip, #350	; 0x15e
 8003dfc:	9601      	str	r6, [sp, #4]
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
 8003dfe:	f106 0601 	add.w	r6, r6, #1
      if (tscldel >= (uint32_t)tscldel_min)
 8003e02:	d358      	bcc.n	8003eb6 <BSP_I2C4_Init+0x1ba>
 8003e04:	2500      	movs	r5, #0
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 8003e06:	462f      	mov	r7, r5
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
 8003e08:	45ab      	cmp	fp, r5
 8003e0a:	d850      	bhi.n	8003eae <BSP_I2C4_Init+0x1b2>
 8003e0c:	9c02      	ldr	r4, [sp, #8]
 8003e0e:	42ac      	cmp	r4, r5
 8003e10:	d34d      	bcc.n	8003eae <BSP_I2C4_Init+0x1b2>
            if(presc != prev_presc)
 8003e12:	4590      	cmp	r8, r2
 8003e14:	d04b      	beq.n	8003eae <BSP_I2C4_Init+0x1b2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8003e16:	fb0a f803 	mul.w	r8, sl, r3
              I2c_valid_timing_nbr ++;
 8003e1a:	3301      	adds	r3, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
 8003e1c:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8003e1e:	eb09 0e08 	add.w	lr, r9, r8
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 8003e22:	2b7f      	cmp	r3, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8003e24:	f849 2008 	str.w	r2, [r9, r8]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
 8003e28:	e9ce 4701 	strd	r4, r7, [lr, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 8003e2c:	d93c      	bls.n	8003ea8 <BSP_I2C4_Init+0x1ac>
 8003e2e:	4a59      	ldr	r2, [pc, #356]	; (8003f94 <BSP_I2C4_Init+0x298>)
 8003e30:	6013      	str	r3, [r2, #0]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8003e32:	4b58      	ldr	r3, [pc, #352]	; (8003f94 <BSP_I2C4_Init+0x298>)
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8003e34:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8003e38:	4957      	ldr	r1, [pc, #348]	; (8003f98 <BSP_I2C4_Init+0x29c>)
 8003e3a:	2700      	movs	r7, #0
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8003e3c:	681b      	ldr	r3, [r3, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8003e3e:	9202      	str	r2, [sp, #8]
 8003e40:	f04f 32ff 	mov.w	r2, #4294967295
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8003e44:	9304      	str	r3, [sp, #16]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8003e46:	0043      	lsls	r3, r0, #1
 8003e48:	f5c3 6b80 	rsb	fp, r3, #1024	; 0x400
 8003e4c:	f103 0432 	add.w	r4, r3, #50	; 0x32
 8003e50:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
 8003e54:	f10b 0b01 	add.w	fp, fp, #1
 8003e58:	9408      	str	r4, [sp, #32]
 8003e5a:	9309      	str	r3, [sp, #36]	; 0x24
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8003e5c:	9b04      	ldr	r3, [sp, #16]
 8003e5e:	429f      	cmp	r7, r3
 8003e60:	d134      	bne.n	8003ecc <BSP_I2C4_Init+0x1d0>
        if (idx < I2C_VALID_TIMING_NBR)
 8003e62:	2a7f      	cmp	r2, #127	; 0x7f
 8003e64:	d816      	bhi.n	8003e94 <BSP_I2C4_Init+0x198>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8003e66:	2314      	movs	r3, #20
 8003e68:	435a      	muls	r2, r3
 8003e6a:	4b4b      	ldr	r3, [pc, #300]	; (8003f98 <BSP_I2C4_Init+0x29c>)
 8003e6c:	1899      	adds	r1, r3, r2
 8003e6e:	589b      	ldr	r3, [r3, r2]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
 8003e70:	7c0c      	ldrb	r4, [r1, #16]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8003e72:	ea44 7403 	orr.w	r4, r4, r3, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
 8003e76:	684b      	ldr	r3, [r1, #4]
 8003e78:	051b      	lsls	r3, r3, #20
 8003e7a:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8003e7e:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
 8003e80:	688b      	ldr	r3, [r1, #8]
 8003e82:	041b      	lsls	r3, r3, #16
 8003e84:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8003e88:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
 8003e8a:	68cb      	ldr	r3, [r1, #12]
 8003e8c:	021b      	lsls	r3, r3, #8
 8003e8e:	b29b      	uxth	r3, r3
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8003e90:	4323      	orrs	r3, r4
 8003e92:	9300      	str	r3, [sp, #0]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
 8003e94:	9900      	ldr	r1, [sp, #0]
 8003e96:	483a      	ldr	r0, [pc, #232]	; (8003f80 <BSP_I2C4_Init+0x284>)
 8003e98:	f7ff ff10 	bl	8003cbc <MX_I2C4_Init>
 8003e9c:	2800      	cmp	r0, #0
 8003e9e:	d169      	bne.n	8003f74 <BSP_I2C4_Init+0x278>
  int32_t ret = BSP_ERROR_NONE;
 8003ea0:	2000      	movs	r0, #0
}
 8003ea2:	b013      	add	sp, #76	; 0x4c
 8003ea4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ea8:	4690      	mov	r8, r2
 8003eaa:	f04f 0e01 	mov.w	lr, #1
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 8003eae:	3701      	adds	r7, #1
 8003eb0:	440d      	add	r5, r1
 8003eb2:	2f10      	cmp	r7, #16
 8003eb4:	d1a8      	bne.n	8003e08 <BSP_I2C4_Init+0x10c>
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 8003eb6:	2e10      	cmp	r6, #16
 8003eb8:	448c      	add	ip, r1
 8003eba:	d19d      	bne.n	8003df8 <BSP_I2C4_Init+0xfc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 8003ebc:	3201      	adds	r2, #1
 8003ebe:	4401      	add	r1, r0
 8003ec0:	2a10      	cmp	r2, #16
 8003ec2:	d197      	bne.n	8003df4 <BSP_I2C4_Init+0xf8>
 8003ec4:	f1be 0f00 	cmp.w	lr, #0
 8003ec8:	d1b1      	bne.n	8003e2e <BSP_I2C4_Init+0x132>
 8003eca:	e7b2      	b.n	8003e32 <BSP_I2C4_Init+0x136>
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8003ecc:	680b      	ldr	r3, [r1, #0]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8003ece:	f04f 0c00 	mov.w	ip, #0
 8003ed2:	9c08      	ldr	r4, [sp, #32]
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8003ed4:	fb03 0300 	mla	r3, r3, r0, r0
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8003ed8:	441c      	add	r4, r3
 8003eda:	ebab 0503 	sub.w	r5, fp, r3
 8003ede:	9403      	str	r4, [sp, #12]
 8003ee0:	006c      	lsls	r4, r5, #1
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8003ee2:	9d03      	ldr	r5, [sp, #12]
 8003ee4:	9401      	str	r4, [sp, #4]
 8003ee6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8003ee8:	441c      	add	r4, r3
 8003eea:	9407      	str	r4, [sp, #28]
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8003eec:	f240 5414 	movw	r4, #1300	; 0x514
 8003ef0:	f8cd c014 	str.w	ip, [sp, #20]
 8003ef4:	f1a5 0632 	sub.w	r6, r5, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8003ef8:	f10c 0c01 	add.w	ip, ip, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8003efc:	42a5      	cmp	r5, r4
 8003efe:	d92e      	bls.n	8003f5e <BSP_I2C4_Init+0x262>
 8003f00:	ebb0 0f96 	cmp.w	r0, r6, lsr #2
 8003f04:	d22b      	bcs.n	8003f5e <BSP_I2C4_Init+0x262>
 8003f06:	9c07      	ldr	r4, [sp, #28]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 8003f08:	f04f 0e00 	mov.w	lr, #0
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8003f0c:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8003f10:	1966      	adds	r6, r4, r5
 8003f12:	f8dd 9004 	ldr.w	r9, [sp, #4]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 8003f16:	f206 1aa1 	addw	sl, r6, #417	; 0x1a1
 8003f1a:	f240 4412 	movw	r4, #1042	; 0x412
 8003f1e:	f8cd e018 	str.w	lr, [sp, #24]
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
 8003f22:	f10e 0e01 	add.w	lr, lr, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 8003f26:	45a2      	cmp	sl, r4
 8003f28:	d812      	bhi.n	8003f50 <BSP_I2C4_Init+0x254>
 8003f2a:	f5b8 7f16 	cmp.w	r8, #600	; 0x258
 8003f2e:	d30f      	bcc.n	8003f50 <BSP_I2C4_Init+0x254>
 8003f30:	4540      	cmp	r0, r8
 8003f32:	d20d      	bcs.n	8003f50 <BSP_I2C4_Init+0x254>
              error = -error;
 8003f34:	ea36 0a26 	bics.w	sl, r6, r6, asr #32
 8003f38:	bf28      	it	cs
 8003f3a:	46ca      	movcs	sl, r9
            if ((uint32_t)error < prev_error)
 8003f3c:	9c02      	ldr	r4, [sp, #8]
 8003f3e:	45a2      	cmp	sl, r4
 8003f40:	d206      	bcs.n	8003f50 <BSP_I2C4_Init+0x254>
              I2c_valid_timing[count].scll = scll;
 8003f42:	9a05      	ldr	r2, [sp, #20]
              I2c_valid_timing[count].sclh = sclh;
 8003f44:	f8cd a008 	str.w	sl, [sp, #8]
              I2c_valid_timing[count].scll = scll;
 8003f48:	610a      	str	r2, [r1, #16]
              I2c_valid_timing[count].sclh = sclh;
 8003f4a:	9a06      	ldr	r2, [sp, #24]
 8003f4c:	60ca      	str	r2, [r1, #12]
 8003f4e:	463a      	mov	r2, r7
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 8003f50:	f5be 7f80 	cmp.w	lr, #256	; 0x100
 8003f54:	eba9 0903 	sub.w	r9, r9, r3
 8003f58:	441e      	add	r6, r3
 8003f5a:	4498      	add	r8, r3
 8003f5c:	d1db      	bne.n	8003f16 <BSP_I2C4_Init+0x21a>
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8003f5e:	9c01      	ldr	r4, [sp, #4]
 8003f60:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8003f64:	441d      	add	r5, r3
 8003f66:	eba4 0403 	sub.w	r4, r4, r3
 8003f6a:	9401      	str	r4, [sp, #4]
 8003f6c:	d1be      	bne.n	8003eec <BSP_I2C4_Init+0x1f0>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8003f6e:	3701      	adds	r7, #1
 8003f70:	3114      	adds	r1, #20
 8003f72:	e773      	b.n	8003e5c <BSP_I2C4_Init+0x160>
          ret = BSP_ERROR_BUS_FAILURE;
 8003f74:	f06f 0007 	mvn.w	r0, #7
  return ret;
 8003f78:	e793      	b.n	8003ea2 <BSP_I2C4_Init+0x1a6>
 8003f7a:	bf00      	nop
 8003f7c:	58001c00 	.word	0x58001c00
 8003f80:	24003e18 	.word	0x24003e18
 8003f84:	24003410 	.word	0x24003410
 8003f88:	58024400 	.word	0x58024400
 8003f8c:	58021400 	.word	0x58021400
 8003f90:	3b9aca00 	.word	0x3b9aca00
 8003f94:	24003e14 	.word	0x24003e14
 8003f98:	24003414 	.word	0x24003414

08003f9c <BSP_I2C4_WriteReg>:
{
 8003f9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
 8003f9e:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8003fa2:	9200      	str	r2, [sp, #0]
 8003fa4:	460a      	mov	r2, r1
 8003fa6:	4601      	mov	r1, r0
 8003fa8:	4808      	ldr	r0, [pc, #32]	; (8003fcc <BSP_I2C4_WriteReg+0x30>)
 8003faa:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003fae:	2301      	movs	r3, #1
 8003fb0:	f001 fa0c 	bl	80053cc <HAL_I2C_Mem_Write>
 8003fb4:	b140      	cbz	r0, 8003fc8 <BSP_I2C4_WriteReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
 8003fb6:	4805      	ldr	r0, [pc, #20]	; (8003fcc <BSP_I2C4_WriteReg+0x30>)
 8003fb8:	f001 fbc3 	bl	8005742 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 8003fbc:	2804      	cmp	r0, #4
 8003fbe:	bf0c      	ite	eq
 8003fc0:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 8003fc4:	f06f 0003 	mvnne.w	r0, #3
}
 8003fc8:	b004      	add	sp, #16
 8003fca:	bd10      	pop	{r4, pc}
 8003fcc:	24003e18 	.word	0x24003e18

08003fd0 <BSP_I2C4_ReadReg>:
{
 8003fd0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Reg        The target register address to read
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
 8003fd2:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8003fd6:	9200      	str	r2, [sp, #0]
 8003fd8:	460a      	mov	r2, r1
 8003fda:	4601      	mov	r1, r0
 8003fdc:	4808      	ldr	r0, [pc, #32]	; (8004000 <BSP_I2C4_ReadReg+0x30>)
 8003fde:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003fe2:	2301      	movs	r3, #1
 8003fe4:	f001 facc 	bl	8005580 <HAL_I2C_Mem_Read>
 8003fe8:	b140      	cbz	r0, 8003ffc <BSP_I2C4_ReadReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
 8003fea:	4805      	ldr	r0, [pc, #20]	; (8004000 <BSP_I2C4_ReadReg+0x30>)
 8003fec:	f001 fba9 	bl	8005742 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 8003ff0:	2804      	cmp	r0, #4
 8003ff2:	bf0c      	ite	eq
 8003ff4:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 8003ff8:	f06f 0003 	mvnne.w	r0, #3
}
 8003ffc:	b004      	add	sp, #16
 8003ffe:	bd10      	pop	{r4, pc}
 8004000:	24003e18 	.word	0x24003e18

08004004 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
 8004004:	f000 bcd6 	b.w	80049b4 <HAL_GetTick>

08004008 <OSPI_NOR_EnterSOPIMode.constprop.0>:
/**
  * @brief  This function enables the octal STR mode of the memory.
  * @param  Instance  OSPI instance
  * @retval BSP status
  */
static int32_t OSPI_NOR_EnterSOPIMode(uint32_t Instance)
 8004008:	b530      	push	{r4, r5, lr}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
  {
    ret = BSP_ERROR_WRONG_PARAM;
  }
  /* Enable write operations */
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 800400a:	4c21      	ldr	r4, [pc, #132]	; (8004090 <OSPI_NOR_EnterSOPIMode.constprop.0+0x88>)
static int32_t OSPI_NOR_EnterSOPIMode(uint32_t Instance)
 800400c:	b085      	sub	sp, #20
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 800400e:	4821      	ldr	r0, [pc, #132]	; (8004094 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 8004010:	78a2      	ldrb	r2, [r4, #2]
 8004012:	7861      	ldrb	r1, [r4, #1]
 8004014:	f7ff fc89 	bl	800392a <MX25LM51245G_WriteEnable>
 8004018:	b118      	cbz	r0, 8004022 <OSPI_NOR_EnterSOPIMode.constprop.0+0x1a>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
 800401a:	f06f 0004 	mvn.w	r0, #4
    }
  }

  /* Return BSP status */
  return ret;
}
 800401e:	b005      	add	sp, #20
 8004020:	bd30      	pop	{r4, r5, pc}
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG3_ADDR, CONF_OSPI_DUMMY_CYCLES) != MX25LM51245G_OK)
 8004022:	2303      	movs	r3, #3
 8004024:	481b      	ldr	r0, [pc, #108]	; (8004094 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 8004026:	9300      	str	r3, [sp, #0]
 8004028:	f44f 7340 	mov.w	r3, #768	; 0x300
 800402c:	78a2      	ldrb	r2, [r4, #2]
 800402e:	7861      	ldrb	r1, [r4, #1]
 8004030:	f7ff fcf9 	bl	8003a26 <MX25LM51245G_WriteCfg2Register>
 8004034:	2800      	cmp	r0, #0
 8004036:	d1f0      	bne.n	800401a <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8004038:	78a2      	ldrb	r2, [r4, #2]
 800403a:	7861      	ldrb	r1, [r4, #1]
 800403c:	4815      	ldr	r0, [pc, #84]	; (8004094 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 800403e:	f7ff fc74 	bl	800392a <MX25LM51245G_WriteEnable>
 8004042:	4603      	mov	r3, r0
 8004044:	2800      	cmp	r0, #0
 8004046:	d1e8      	bne.n	800401a <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG1_ADDR, MX25LM51245G_CR2_SOPI) != MX25LM51245G_OK)
 8004048:	2501      	movs	r5, #1
 800404a:	4812      	ldr	r0, [pc, #72]	; (8004094 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 800404c:	9500      	str	r5, [sp, #0]
 800404e:	78a2      	ldrb	r2, [r4, #2]
 8004050:	7861      	ldrb	r1, [r4, #1]
 8004052:	f7ff fce8 	bl	8003a26 <MX25LM51245G_WriteCfg2Register>
 8004056:	4604      	mov	r4, r0
 8004058:	2800      	cmp	r0, #0
 800405a:	d1de      	bne.n	800401a <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
    HAL_Delay(MX25LM51245G_WRITE_REG_MAX_TIME);
 800405c:	2028      	movs	r0, #40	; 0x28
 800405e:	f000 fcaf 	bl	80049c0 <HAL_Delay>
    if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004062:	4622      	mov	r2, r4
 8004064:	4629      	mov	r1, r5
 8004066:	480b      	ldr	r0, [pc, #44]	; (8004094 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 8004068:	f7ff fb3c 	bl	80036e4 <MX25LM51245G_AutoPollingMemReady>
 800406c:	2800      	cmp	r0, #0
 800406e:	d1d4      	bne.n	800401a <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
    else if (MX25LM51245G_ReadCfg2Register(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER, MX25LM51245G_CR2_REG1_ADDR, reg) != MX25LM51245G_OK)
 8004070:	ab03      	add	r3, sp, #12
 8004072:	4602      	mov	r2, r0
 8004074:	4629      	mov	r1, r5
 8004076:	9300      	str	r3, [sp, #0]
 8004078:	4603      	mov	r3, r0
 800407a:	4806      	ldr	r0, [pc, #24]	; (8004094 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 800407c:	f7ff fd30 	bl	8003ae0 <MX25LM51245G_ReadCfg2Register>
 8004080:	2800      	cmp	r0, #0
 8004082:	d1ca      	bne.n	800401a <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
    else if (reg[0] != MX25LM51245G_CR2_SOPI)
 8004084:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8004088:	42ab      	cmp	r3, r5
 800408a:	d0c8      	beq.n	800401e <OSPI_NOR_EnterSOPIMode.constprop.0+0x16>
 800408c:	e7c5      	b.n	800401a <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
 800408e:	bf00      	nop
 8004090:	24003e6c 	.word	0x24003e6c
 8004094:	24003e74 	.word	0x24003e74

08004098 <OSPI_NOR_EnterDOPIMode.constprop.0>:
static int32_t OSPI_NOR_EnterDOPIMode(uint32_t Instance)
 8004098:	b530      	push	{r4, r5, lr}
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 800409a:	4d27      	ldr	r5, [pc, #156]	; (8004138 <OSPI_NOR_EnterDOPIMode.constprop.0+0xa0>)
static int32_t OSPI_NOR_EnterDOPIMode(uint32_t Instance)
 800409c:	b085      	sub	sp, #20
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 800409e:	4c27      	ldr	r4, [pc, #156]	; (800413c <OSPI_NOR_EnterDOPIMode.constprop.0+0xa4>)
 80040a0:	78aa      	ldrb	r2, [r5, #2]
 80040a2:	7869      	ldrb	r1, [r5, #1]
 80040a4:	4620      	mov	r0, r4
 80040a6:	f7ff fc40 	bl	800392a <MX25LM51245G_WriteEnable>
 80040aa:	b118      	cbz	r0, 80040b4 <OSPI_NOR_EnterDOPIMode.constprop.0+0x1c>
    ret = BSP_ERROR_COMPONENT_FAILURE;
 80040ac:	f06f 0004 	mvn.w	r0, #4
}
 80040b0:	b005      	add	sp, #20
 80040b2:	bd30      	pop	{r4, r5, pc}
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG3_ADDR, CONF_OSPI_DUMMY_CYCLES) != MX25LM51245G_OK)
 80040b4:	2303      	movs	r3, #3
 80040b6:	78aa      	ldrb	r2, [r5, #2]
 80040b8:	7869      	ldrb	r1, [r5, #1]
 80040ba:	4620      	mov	r0, r4
 80040bc:	9300      	str	r3, [sp, #0]
 80040be:	f44f 7340 	mov.w	r3, #768	; 0x300
 80040c2:	f7ff fcb0 	bl	8003a26 <MX25LM51245G_WriteCfg2Register>
 80040c6:	2800      	cmp	r0, #0
 80040c8:	d1f0      	bne.n	80040ac <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 80040ca:	78aa      	ldrb	r2, [r5, #2]
 80040cc:	4620      	mov	r0, r4
 80040ce:	7869      	ldrb	r1, [r5, #1]
 80040d0:	f7ff fc2b 	bl	800392a <MX25LM51245G_WriteEnable>
 80040d4:	2800      	cmp	r0, #0
 80040d6:	d1e9      	bne.n	80040ac <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG1_ADDR, MX25LM51245G_CR2_DOPI) != MX25LM51245G_OK)
 80040d8:	2302      	movs	r3, #2
 80040da:	78aa      	ldrb	r2, [r5, #2]
 80040dc:	7869      	ldrb	r1, [r5, #1]
 80040de:	9300      	str	r3, [sp, #0]
 80040e0:	4603      	mov	r3, r0
 80040e2:	4620      	mov	r0, r4
 80040e4:	f7ff fc9f 	bl	8003a26 <MX25LM51245G_WriteCfg2Register>
 80040e8:	2800      	cmp	r0, #0
 80040ea:	d1df      	bne.n	80040ac <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
    HAL_Delay(MX25LM51245G_WRITE_REG_MAX_TIME);
 80040ec:	2028      	movs	r0, #40	; 0x28
 80040ee:	f000 fc67 	bl	80049c0 <HAL_Delay>
    hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MACRONIX;
 80040f2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 80040f6:	4620      	mov	r0, r4
    hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MACRONIX;
 80040f8:	60e3      	str	r3, [r4, #12]
    hospi_nor[Instance].Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_ENABLE;
 80040fa:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80040fe:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 8004100:	f001 fe4a 	bl	8005d98 <HAL_OSPI_Init>
 8004104:	b9a8      	cbnz	r0, 8004132 <OSPI_NOR_EnterDOPIMode.constprop.0+0x9a>
    else if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER) != MX25LM51245G_OK)
 8004106:	2201      	movs	r2, #1
 8004108:	4620      	mov	r0, r4
 800410a:	4611      	mov	r1, r2
 800410c:	f7ff faea 	bl	80036e4 <MX25LM51245G_AutoPollingMemReady>
 8004110:	2800      	cmp	r0, #0
 8004112:	d1cb      	bne.n	80040ac <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
    else if (MX25LM51245G_ReadCfg2Register(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER, MX25LM51245G_CR2_REG1_ADDR, reg) != MX25LM51245G_OK)
 8004114:	ab03      	add	r3, sp, #12
 8004116:	2201      	movs	r2, #1
 8004118:	9300      	str	r3, [sp, #0]
 800411a:	4611      	mov	r1, r2
 800411c:	4603      	mov	r3, r0
 800411e:	4620      	mov	r0, r4
 8004120:	f7ff fcde 	bl	8003ae0 <MX25LM51245G_ReadCfg2Register>
 8004124:	2800      	cmp	r0, #0
 8004126:	d1c1      	bne.n	80040ac <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
    else if (reg[0] != MX25LM51245G_CR2_DOPI)
 8004128:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800412c:	2b02      	cmp	r3, #2
 800412e:	d0bf      	beq.n	80040b0 <OSPI_NOR_EnterDOPIMode.constprop.0+0x18>
 8004130:	e7bc      	b.n	80040ac <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
      ret = BSP_ERROR_PERIPH_FAILURE;
 8004132:	f06f 0003 	mvn.w	r0, #3
  return ret;
 8004136:	e7bb      	b.n	80040b0 <OSPI_NOR_EnterDOPIMode.constprop.0+0x18>
 8004138:	24003e6c 	.word	0x24003e6c
 800413c:	24003e74 	.word	0x24003e74

08004140 <MX_OSPI_NOR_Init>:
  hospi->Init.FifoThreshold      = 4;
 8004140:	4a0e      	ldr	r2, [pc, #56]	; (800417c <MX_OSPI_NOR_Init+0x3c>)
 8004142:	2304      	movs	r3, #4
 8004144:	e9c0 2300 	strd	r2, r3, [r0]
  hospi->Init.DeviceSize         = Config->MemorySize; /* 512 MBits */
 8004148:	680a      	ldr	r2, [r1, #0]
  hospi->Init.DualQuad           = HAL_OSPI_DUALQUAD_DISABLE;
 800414a:	2300      	movs	r3, #0
  hospi->Init.DeviceSize         = Config->MemorySize; /* 512 MBits */
 800414c:	6102      	str	r2, [r0, #16]
  hospi->Init.ChipSelectHighTime = 2;
 800414e:	2202      	movs	r2, #2
  hospi->Init.DualQuad           = HAL_OSPI_DUALQUAD_DISABLE;
 8004150:	6083      	str	r3, [r0, #8]
  hospi->Init.FreeRunningClock   = HAL_OSPI_FREERUNCLK_DISABLE;
 8004152:	e9c0 2305 	strd	r2, r3, [r0, #20]
  hospi->Init.ClockPrescaler     = Config->ClockPrescaler;
 8004156:	684a      	ldr	r2, [r1, #4]
 8004158:	6242      	str	r2, [r0, #36]	; 0x24
  hospi->Init.SampleShifting     = Config->SampleShifting;
 800415a:	688a      	ldr	r2, [r1, #8]
  hospi->Init.ChipSelectBoundary = 0;
 800415c:	6303      	str	r3, [r0, #48]	; 0x30
  hospi->Init.SampleShifting     = Config->SampleShifting;
 800415e:	6282      	str	r2, [r0, #40]	; 0x28
  if (Config->TransferRate == BSP_OSPI_NOR_DTR_TRANSFER)
 8004160:	68ca      	ldr	r2, [r1, #12]
 8004162:	2a01      	cmp	r2, #1
  hospi->Init.WrapSize           = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8004164:	e9c0 3307 	strd	r3, r3, [r0, #28]
    hospi->Init.MemoryType            = HAL_OSPI_MEMTYPE_MACRONIX;
 8004168:	bf09      	itett	eq
 800416a:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
    hospi->Init.MemoryType            = HAL_OSPI_MEMTYPE_MICRON;
 800416e:	60c3      	strne	r3, [r0, #12]
    hospi->Init.MemoryType            = HAL_OSPI_MEMTYPE_MACRONIX;
 8004170:	60c3      	streq	r3, [r0, #12]
    hospi->Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_ENABLE;
 8004172:	f04f 5380 	moveq.w	r3, #268435456	; 0x10000000
    hospi->Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
 8004176:	62c3      	str	r3, [r0, #44]	; 0x2c
  return HAL_OSPI_Init(hospi);
 8004178:	f001 be0e 	b.w	8005d98 <HAL_OSPI_Init>
 800417c:	52005000 	.word	0x52005000

08004180 <BSP_OSPI_NOR_EnableMemoryMappedMode>:
{
 8004180:	b510      	push	{r4, lr}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 8004182:	b998      	cbnz	r0, 80041ac <BSP_OSPI_NOR_EnableMemoryMappedMode+0x2c>
      if(MX25LM51245G_EnableMemoryMappedModeSTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, MX25LM51245G_4BYTES_SIZE) != MX25LM51245G_OK)
 8004184:	4c0b      	ldr	r4, [pc, #44]	; (80041b4 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x34>)
    if(Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_STR_TRANSFER)
 8004186:	78a3      	ldrb	r3, [r4, #2]
      if(MX25LM51245G_EnableMemoryMappedModeSTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, MX25LM51245G_4BYTES_SIZE) != MX25LM51245G_OK)
 8004188:	7861      	ldrb	r1, [r4, #1]
    if(Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_STR_TRANSFER)
 800418a:	b95b      	cbnz	r3, 80041a4 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x24>
      if(MX25LM51245G_EnableMemoryMappedModeSTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, MX25LM51245G_4BYTES_SIZE) != MX25LM51245G_OK)
 800418c:	2201      	movs	r2, #1
 800418e:	480a      	ldr	r0, [pc, #40]	; (80041b8 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x38>)
 8004190:	f7ff fb16 	bl	80037c0 <MX25LM51245G_EnableSTRMemoryMappedMode>
 8004194:	b110      	cbz	r0, 800419c <BSP_OSPI_NOR_EnableMemoryMappedMode+0x1c>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8004196:	f06f 0004 	mvn.w	r0, #4
}
 800419a:	bd10      	pop	{r4, pc}
        Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_MMP;
 800419c:	2302      	movs	r3, #2
  int32_t ret = BSP_ERROR_NONE;
 800419e:	2000      	movs	r0, #0
        Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_MMP;
 80041a0:	7023      	strb	r3, [r4, #0]
 80041a2:	e7fa      	b.n	800419a <BSP_OSPI_NOR_EnableMemoryMappedMode+0x1a>
      if(MX25LM51245G_EnableMemoryMappedModeDTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode) != MX25LM51245G_OK)
 80041a4:	4804      	ldr	r0, [pc, #16]	; (80041b8 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x38>)
 80041a6:	f7ff fb71 	bl	800388c <MX25LM51245G_EnableDTRMemoryMappedMode>
 80041aa:	e7f3      	b.n	8004194 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x14>
    ret = BSP_ERROR_WRONG_PARAM;
 80041ac:	f06f 0001 	mvn.w	r0, #1
  return ret;
 80041b0:	e7f3      	b.n	800419a <BSP_OSPI_NOR_EnableMemoryMappedMode+0x1a>
 80041b2:	bf00      	nop
 80041b4:	24003e6c 	.word	0x24003e6c
 80041b8:	24003e74 	.word	0x24003e74

080041bc <BSP_OSPI_NOR_DisableMemoryMappedMode>:
{
 80041bc:	b510      	push	{r4, lr}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 80041be:	b950      	cbnz	r0, 80041d6 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x1a>
    if(Ospi_Nor_Ctx[Instance].IsInitialized != OSPI_ACCESS_MMP)
 80041c0:	4c09      	ldr	r4, [pc, #36]	; (80041e8 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x2c>)
 80041c2:	7823      	ldrb	r3, [r4, #0]
 80041c4:	2b02      	cmp	r3, #2
 80041c6:	d109      	bne.n	80041dc <BSP_OSPI_NOR_DisableMemoryMappedMode+0x20>
    else if(HAL_OSPI_Abort(&hospi_nor[Instance]) != HAL_OK)
 80041c8:	4808      	ldr	r0, [pc, #32]	; (80041ec <BSP_OSPI_NOR_DisableMemoryMappedMode+0x30>)
 80041ca:	f002 f828 	bl	800621e <HAL_OSPI_Abort>
 80041ce:	b940      	cbnz	r0, 80041e2 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x26>
      Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;
 80041d0:	2301      	movs	r3, #1
 80041d2:	7023      	strb	r3, [r4, #0]
}
 80041d4:	bd10      	pop	{r4, pc}
    ret = BSP_ERROR_WRONG_PARAM;
 80041d6:	f06f 0001 	mvn.w	r0, #1
 80041da:	e7fb      	b.n	80041d4 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x18>
      ret = BSP_ERROR_OSPI_MMP_UNLOCK_FAILURE;
 80041dc:	f06f 001a 	mvn.w	r0, #26
 80041e0:	e7f8      	b.n	80041d4 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x18>
      ret = BSP_ERROR_PERIPH_FAILURE;
 80041e2:	f06f 0003 	mvn.w	r0, #3
  return ret;
 80041e6:	e7f5      	b.n	80041d4 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x18>
 80041e8:	24003e6c 	.word	0x24003e6c
 80041ec:	24003e74 	.word	0x24003e74

080041f0 <BSP_OSPI_NOR_DeInit>:
{
 80041f0:	b510      	push	{r4, lr}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 80041f2:	2800      	cmp	r0, #0
 80041f4:	d156      	bne.n	80042a4 <BSP_OSPI_NOR_DeInit+0xb4>
    if(Ospi_Nor_Ctx[Instance].IsInitialized == OSPI_ACCESS_MMP)
 80041f6:	4c2d      	ldr	r4, [pc, #180]	; (80042ac <BSP_OSPI_NOR_DeInit+0xbc>)
 80041f8:	7823      	ldrb	r3, [r4, #0]
 80041fa:	2b02      	cmp	r3, #2
 80041fc:	d04b      	beq.n	8004296 <BSP_OSPI_NOR_DeInit+0xa6>
    Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_NONE;
 80041fe:	2300      	movs	r3, #0
  HAL_GPIO_DeInit(OSPI_NOR_CLK_GPIO_PORT, OSPI_NOR_CLK_PIN);
 8004200:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8004204:	482a      	ldr	r0, [pc, #168]	; (80042b0 <BSP_OSPI_NOR_DeInit+0xc0>)
    Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_NONE;
 8004206:	8023      	strh	r3, [r4, #0]
    Ospi_Nor_Ctx[Instance].TransferRate  = BSP_OSPI_NOR_STR_TRANSFER;
 8004208:	70a3      	strb	r3, [r4, #2]
  HAL_GPIO_DeInit(OSPI_NOR_CLK_GPIO_PORT, OSPI_NOR_CLK_PIN);
 800420a:	f000 fe97 	bl	8004f3c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_DQS_GPIO_PORT, OSPI_NOR_DQS_PIN);
 800420e:	2104      	movs	r1, #4
 8004210:	4828      	ldr	r0, [pc, #160]	; (80042b4 <BSP_OSPI_NOR_DeInit+0xc4>)
 8004212:	f000 fe93 	bl	8004f3c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_CS_GPIO_PORT, OSPI_NOR_CS_PIN);
 8004216:	2140      	movs	r1, #64	; 0x40
 8004218:	4827      	ldr	r0, [pc, #156]	; (80042b8 <BSP_OSPI_NOR_DeInit+0xc8>)
 800421a:	f000 fe8f 	bl	8004f3c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D0_GPIO_PORT, OSPI_NOR_D0_PIN);
 800421e:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8004222:	4826      	ldr	r0, [pc, #152]	; (80042bc <BSP_OSPI_NOR_DeInit+0xcc>)
 8004224:	f000 fe8a 	bl	8004f3c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D1_GPIO_PORT, OSPI_NOR_D1_PIN);
 8004228:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800422c:	4823      	ldr	r0, [pc, #140]	; (80042bc <BSP_OSPI_NOR_DeInit+0xcc>)
 800422e:	f000 fe85 	bl	8004f3c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D2_GPIO_PORT, OSPI_NOR_D2_PIN);
 8004232:	2104      	movs	r1, #4
 8004234:	4822      	ldr	r0, [pc, #136]	; (80042c0 <BSP_OSPI_NOR_DeInit+0xd0>)
 8004236:	f000 fe81 	bl	8004f3c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D3_GPIO_PORT, OSPI_NOR_D3_PIN);
 800423a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800423e:	481f      	ldr	r0, [pc, #124]	; (80042bc <BSP_OSPI_NOR_DeInit+0xcc>)
 8004240:	f000 fe7c 	bl	8004f3c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D4_GPIO_PORT, OSPI_NOR_D4_PIN);
 8004244:	2110      	movs	r1, #16
 8004246:	481d      	ldr	r0, [pc, #116]	; (80042bc <BSP_OSPI_NOR_DeInit+0xcc>)
 8004248:	f000 fe78 	bl	8004f3c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D5_GPIO_PORT, OSPI_NOR_D5_PIN);
 800424c:	2120      	movs	r1, #32
 800424e:	481b      	ldr	r0, [pc, #108]	; (80042bc <BSP_OSPI_NOR_DeInit+0xcc>)
 8004250:	f000 fe74 	bl	8004f3c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D6_GPIO_PORT, OSPI_NOR_D6_PIN);
 8004254:	f44f 7100 	mov.w	r1, #512	; 0x200
 8004258:	4817      	ldr	r0, [pc, #92]	; (80042b8 <BSP_OSPI_NOR_DeInit+0xc8>)
 800425a:	f000 fe6f 	bl	8004f3c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D7_GPIO_PORT, OSPI_NOR_D7_PIN);
 800425e:	2180      	movs	r1, #128	; 0x80
 8004260:	4816      	ldr	r0, [pc, #88]	; (80042bc <BSP_OSPI_NOR_DeInit+0xcc>)
 8004262:	f000 fe6b 	bl	8004f3c <HAL_GPIO_DeInit>
  OSPI_NOR_FORCE_RESET();
 8004266:	4b17      	ldr	r3, [pc, #92]	; (80042c4 <BSP_OSPI_NOR_DeInit+0xd4>)
    if (HAL_OSPI_DeInit(&hospi_nor[Instance]) != HAL_OK)
 8004268:	4817      	ldr	r0, [pc, #92]	; (80042c8 <BSP_OSPI_NOR_DeInit+0xd8>)
  OSPI_NOR_FORCE_RESET();
 800426a:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 800426c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004270:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_NOR_RELEASE_RESET();
 8004272:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8004274:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8004278:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_NOR_CLK_DISABLE();
 800427a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 800427e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8004282:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    if (HAL_OSPI_DeInit(&hospi_nor[Instance]) != HAL_OK)
 8004286:	f001 fdfb 	bl	8005e80 <HAL_OSPI_DeInit>
      ret = BSP_ERROR_PERIPH_FAILURE;
 800428a:	2800      	cmp	r0, #0
 800428c:	bf0c      	ite	eq
 800428e:	2000      	moveq	r0, #0
 8004290:	f06f 0003 	mvnne.w	r0, #3
}
 8004294:	bd10      	pop	{r4, pc}
      if(BSP_OSPI_NOR_DisableMemoryMappedMode(Instance) != BSP_ERROR_NONE)
 8004296:	f7ff ff91 	bl	80041bc <BSP_OSPI_NOR_DisableMemoryMappedMode>
 800429a:	2800      	cmp	r0, #0
 800429c:	d0af      	beq.n	80041fe <BSP_OSPI_NOR_DeInit+0xe>
        return BSP_ERROR_COMPONENT_FAILURE;
 800429e:	f06f 0004 	mvn.w	r0, #4
 80042a2:	e7f7      	b.n	8004294 <BSP_OSPI_NOR_DeInit+0xa4>
    ret = BSP_ERROR_WRONG_PARAM;
 80042a4:	f06f 0001 	mvn.w	r0, #1
 80042a8:	e7f4      	b.n	8004294 <BSP_OSPI_NOR_DeInit+0xa4>
 80042aa:	bf00      	nop
 80042ac:	24003e6c 	.word	0x24003e6c
 80042b0:	58021400 	.word	0x58021400
 80042b4:	58020400 	.word	0x58020400
 80042b8:	58021800 	.word	0x58021800
 80042bc:	58020c00 	.word	0x58020c00
 80042c0:	58021000 	.word	0x58021000
 80042c4:	58024400 	.word	0x58024400
 80042c8:	24003e74 	.word	0x24003e74

080042cc <BSP_OSPI_NOR_ConfigFlash>:
{
 80042cc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80042d0:	460d      	mov	r5, r1
 80042d2:	4616      	mov	r6, r2
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 80042d4:	2800      	cmp	r0, #0
 80042d6:	d158      	bne.n	800438a <BSP_OSPI_NOR_ConfigFlash+0xbe>
    if(Ospi_Nor_Ctx[Instance].IsInitialized == OSPI_ACCESS_MMP)
 80042d8:	4c2f      	ldr	r4, [pc, #188]	; (8004398 <BSP_OSPI_NOR_ConfigFlash+0xcc>)
 80042da:	7823      	ldrb	r3, [r4, #0]
 80042dc:	2b02      	cmp	r3, #2
 80042de:	d057      	beq.n	8004390 <BSP_OSPI_NOR_ConfigFlash+0xc4>
      switch(Ospi_Nor_Ctx[Instance].InterfaceMode)
 80042e0:	7863      	ldrb	r3, [r4, #1]
 80042e2:	2b01      	cmp	r3, #1
 80042e4:	d148      	bne.n	8004378 <BSP_OSPI_NOR_ConfigFlash+0xac>
        if((Mode != BSP_OSPI_NOR_OPI_MODE) || (Rate != Ospi_Nor_Ctx[Instance].TransferRate))
 80042e6:	2901      	cmp	r1, #1
 80042e8:	78a2      	ldrb	r2, [r4, #2]
 80042ea:	d109      	bne.n	8004300 <BSP_OSPI_NOR_ConfigFlash+0x34>
 80042ec:	4296      	cmp	r6, r2
 80042ee:	d107      	bne.n	8004300 <BSP_OSPI_NOR_ConfigFlash+0x34>
        Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;
 80042f0:	2301      	movs	r3, #1
        Ospi_Nor_Ctx[Instance].TransferRate  = Rate;
 80042f2:	2000      	movs	r0, #0
        Ospi_Nor_Ctx[Instance].InterfaceMode = Mode;
 80042f4:	7065      	strb	r5, [r4, #1]
        Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;
 80042f6:	7023      	strb	r3, [r4, #0]
        Ospi_Nor_Ctx[Instance].TransferRate  = Rate;
 80042f8:	70a6      	strb	r6, [r4, #2]
}
 80042fa:	b004      	add	sp, #16
 80042fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
  {
    ret = BSP_ERROR_WRONG_PARAM;
  }
  /* Enable write operations */
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8004300:	4f26      	ldr	r7, [pc, #152]	; (800439c <BSP_OSPI_NOR_ConfigFlash+0xd0>)
 8004302:	2101      	movs	r1, #1
 8004304:	4638      	mov	r0, r7
 8004306:	f7ff fb10 	bl	800392a <MX25LM51245G_WriteEnable>
 800430a:	4603      	mov	r3, r0
 800430c:	bb88      	cbnz	r0, 8004372 <BSP_OSPI_NOR_ConfigFlash+0xa6>
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else
  {
    /* Write Configuration register 2 (with SPI protocol) */
    reg[0] = 0;
 800430e:	f88d 000c 	strb.w	r0, [sp, #12]
    reg[1] = 0;
 8004312:	f88d 000d 	strb.w	r0, [sp, #13]
    if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG1_ADDR, reg[0]) != MX25LM51245G_OK)
 8004316:	9000      	str	r0, [sp, #0]
 8004318:	4638      	mov	r0, r7
 800431a:	78a2      	ldrb	r2, [r4, #2]
 800431c:	7861      	ldrb	r1, [r4, #1]
 800431e:	f7ff fb82 	bl	8003a26 <MX25LM51245G_WriteCfg2Register>
 8004322:	4680      	mov	r8, r0
 8004324:	bb28      	cbnz	r0, 8004372 <BSP_OSPI_NOR_ConfigFlash+0xa6>
      ret = BSP_ERROR_COMPONENT_FAILURE;
    }
    else
    {
      /* Wait that the configuration is effective and check that memory is ready */
      HAL_Delay(MX25LM51245G_WRITE_REG_MAX_TIME);
 8004326:	2028      	movs	r0, #40	; 0x28
 8004328:	f000 fb4a 	bl	80049c0 <HAL_Delay>

      if (Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_DTR_TRANSFER)
 800432c:	78a3      	ldrb	r3, [r4, #2]
 800432e:	2b01      	cmp	r3, #1
 8004330:	d106      	bne.n	8004340 <BSP_OSPI_NOR_ConfigFlash+0x74>
      {
        /* Reconfigure the memory type of the peripheral */
        hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MICRON;
        hospi_nor[Instance].Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
        if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 8004332:	4638      	mov	r0, r7
        hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MICRON;
 8004334:	f8c7 800c 	str.w	r8, [r7, #12]
        hospi_nor[Instance].Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
 8004338:	f8c7 802c 	str.w	r8, [r7, #44]	; 0x2c
        if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 800433c:	f001 fd2c 	bl	8005d98 <HAL_OSPI_Init>
          ret = BSP_ERROR_PERIPH_FAILURE;
        }
      }

      /* Check Flash busy ? */
      if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004340:	2200      	movs	r2, #0
 8004342:	4816      	ldr	r0, [pc, #88]	; (800439c <BSP_OSPI_NOR_ConfigFlash+0xd0>)
 8004344:	4611      	mov	r1, r2
 8004346:	f7ff f9cd 	bl	80036e4 <MX25LM51245G_AutoPollingMemReady>
 800434a:	b990      	cbnz	r0, 8004372 <BSP_OSPI_NOR_ConfigFlash+0xa6>
      {
        ret = BSP_ERROR_COMPONENT_FAILURE;
      }
      /* Check the configuration has been correctly done */
      else if (MX25LM51245G_ReadCfg2Register(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER, MX25LM51245G_CR2_REG1_ADDR, reg) != MX25LM51245G_OK)
 800434c:	ab03      	add	r3, sp, #12
 800434e:	4602      	mov	r2, r0
 8004350:	4601      	mov	r1, r0
 8004352:	9300      	str	r3, [sp, #0]
 8004354:	4603      	mov	r3, r0
 8004356:	4811      	ldr	r0, [pc, #68]	; (800439c <BSP_OSPI_NOR_ConfigFlash+0xd0>)
 8004358:	f7ff fbc2 	bl	8003ae0 <MX25LM51245G_ReadCfg2Register>
 800435c:	b948      	cbnz	r0, 8004372 <BSP_OSPI_NOR_ConfigFlash+0xa6>
      {
        ret = BSP_ERROR_COMPONENT_FAILURE;
      }
      else if (reg[0] != 0)
 800435e:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8004362:	b933      	cbnz	r3, 8004372 <BSP_OSPI_NOR_ConfigFlash+0xa6>
          if ((ret == BSP_ERROR_NONE) && (Mode == BSP_OSPI_NOR_OPI_MODE))
 8004364:	2d01      	cmp	r5, #1
 8004366:	d1c3      	bne.n	80042f0 <BSP_OSPI_NOR_ConfigFlash+0x24>
            if (Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_STR_TRANSFER)
 8004368:	78a3      	ldrb	r3, [r4, #2]
 800436a:	b94b      	cbnz	r3, 8004380 <BSP_OSPI_NOR_ConfigFlash+0xb4>
            ret = OSPI_NOR_EnterDOPIMode(Instance);
 800436c:	f7ff fe94 	bl	8004098 <OSPI_NOR_EnterDOPIMode.constprop.0>
 8004370:	e008      	b.n	8004384 <BSP_OSPI_NOR_ConfigFlash+0xb8>
          if ((ret == BSP_ERROR_NONE) && (Mode == BSP_OSPI_NOR_OPI_MODE))
 8004372:	f06f 0004 	mvn.w	r0, #4
 8004376:	e7c0      	b.n	80042fa <BSP_OSPI_NOR_ConfigFlash+0x2e>
        if(Mode == BSP_OSPI_NOR_OPI_MODE)
 8004378:	2901      	cmp	r1, #1
 800437a:	d1b9      	bne.n	80042f0 <BSP_OSPI_NOR_ConfigFlash+0x24>
          if(Rate == BSP_OSPI_NOR_STR_TRANSFER)
 800437c:	2a00      	cmp	r2, #0
 800437e:	d1f5      	bne.n	800436c <BSP_OSPI_NOR_ConfigFlash+0xa0>
            ret = OSPI_NOR_EnterSOPIMode(Instance);
 8004380:	f7ff fe42 	bl	8004008 <OSPI_NOR_EnterSOPIMode.constprop.0>
      if(ret == BSP_ERROR_NONE)
 8004384:	2800      	cmp	r0, #0
 8004386:	d1b8      	bne.n	80042fa <BSP_OSPI_NOR_ConfigFlash+0x2e>
 8004388:	e7b2      	b.n	80042f0 <BSP_OSPI_NOR_ConfigFlash+0x24>
    ret = BSP_ERROR_WRONG_PARAM;
 800438a:	f06f 0001 	mvn.w	r0, #1
 800438e:	e7b4      	b.n	80042fa <BSP_OSPI_NOR_ConfigFlash+0x2e>
      ret = BSP_ERROR_OSPI_MMP_LOCK_FAILURE;
 8004390:	f06f 0019 	mvn.w	r0, #25
  return ret;
 8004394:	e7b1      	b.n	80042fa <BSP_OSPI_NOR_ConfigFlash+0x2e>
 8004396:	bf00      	nop
 8004398:	24003e6c 	.word	0x24003e6c
 800439c:	24003e74 	.word	0x24003e74

080043a0 <MX_OSPI_ClockConfig>:
{
 80043a0:	b500      	push	{lr}
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI ;
 80043a2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
{
 80043a6:	b0af      	sub	sp, #188	; 0xbc
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI ;
 80043a8:	2300      	movs	r3, #0
  return HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 80043aa:	4668      	mov	r0, sp
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI ;
 80043ac:	e9cd 2300 	strd	r2, r3, [sp]
  PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_PLL2;
 80043b0:	2320      	movs	r3, #32
  PeriphClkInitStruct.PLL2.PLL2N = 80;
 80043b2:	2250      	movs	r2, #80	; 0x50
  PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_PLL2;
 80043b4:	9313      	str	r3, [sp, #76]	; 0x4c
  PeriphClkInitStruct.PLL2.PLL2N = 80;
 80043b6:	2305      	movs	r3, #5
 80043b8:	e9cd 3202 	strd	r3, r2, [sp, #8]
  PeriphClkInitStruct.PLL2.PLL2P = 5;
 80043bc:	9304      	str	r3, [sp, #16]
  PeriphClkInitStruct.PLL2.PLL2Q = 2;
 80043be:	2302      	movs	r3, #2
  PeriphClkInitStruct.PLL2.PLL2R = 2;
 80043c0:	e9cd 3305 	strd	r3, r3, [sp, #20]
  PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 80043c4:	2300      	movs	r3, #0
  PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 80043c6:	e9cd 3308 	strd	r3, r3, [sp, #32]
  PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_0;
 80043ca:	9307      	str	r3, [sp, #28]
  return HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 80043cc:	f002 ffec 	bl	80073a8 <HAL_RCCEx_PeriphCLKConfig>
}
 80043d0:	b02f      	add	sp, #188	; 0xbc
 80043d2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080043d8 <BSP_OSPI_NOR_Init>:
{
 80043d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80043dc:	460d      	mov	r5, r1
 80043de:	b09b      	sub	sp, #108	; 0x6c
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 80043e0:	2800      	cmp	r0, #0
 80043e2:	f040 8160 	bne.w	80046a6 <BSP_OSPI_NOR_Init+0x2ce>
    if (Ospi_Nor_Ctx[Instance].IsInitialized == OSPI_ACCESS_NONE)
 80043e6:	4eb1      	ldr	r6, [pc, #708]	; (80046ac <BSP_OSPI_NOR_Init+0x2d4>)
 80043e8:	7834      	ldrb	r4, [r6, #0]
 80043ea:	2c00      	cmp	r4, #0
 80043ec:	f040 8159 	bne.w	80046a2 <BSP_OSPI_NOR_Init+0x2ca>
  OSPI_NOR_CLK_ENABLE();
 80043f0:	4baf      	ldr	r3, [pc, #700]	; (80046b0 <BSP_OSPI_NOR_Init+0x2d8>)
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 80043f2:	f04f 0902 	mov.w	r9, #2
  GPIO_InitStruct.Alternate = OSPI_NOR_CS_PIN_AF;
 80043f6:	f04f 080a 	mov.w	r8, #10
  HAL_GPIO_Init(OSPI_NOR_CS_GPIO_PORT, &GPIO_InitStruct);
 80043fa:	a911      	add	r1, sp, #68	; 0x44
  OSPI_NOR_CLK_ENABLE();
 80043fc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin       = OSPI_NOR_DQS_PIN;
 8004400:	2704      	movs	r7, #4
  HAL_GPIO_Init(OSPI_NOR_CS_GPIO_PORT, &GPIO_InitStruct);
 8004402:	48ac      	ldr	r0, [pc, #688]	; (80046b4 <BSP_OSPI_NOR_Init+0x2dc>)
  OSPI_NOR_CLK_ENABLE();
 8004404:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004408:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 800440c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8004410:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8004414:	9201      	str	r2, [sp, #4]
 8004416:	9a01      	ldr	r2, [sp, #4]
  OSPI_NOR_FORCE_RESET();
 8004418:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 800441a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800441e:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_NOR_RELEASE_RESET();
 8004420:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8004422:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8004426:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_NOR_CLK_GPIO_CLK_ENABLE();
 8004428:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800442c:	f042 0220 	orr.w	r2, r2, #32
 8004430:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004434:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004438:	f002 0220 	and.w	r2, r2, #32
 800443c:	9202      	str	r2, [sp, #8]
 800443e:	9a02      	ldr	r2, [sp, #8]
  OSPI_NOR_DQS_GPIO_CLK_ENABLE();
 8004440:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004444:	f042 0202 	orr.w	r2, r2, #2
 8004448:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800444c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004450:	f002 0202 	and.w	r2, r2, #2
 8004454:	9203      	str	r2, [sp, #12]
 8004456:	9a03      	ldr	r2, [sp, #12]
  OSPI_NOR_CS_GPIO_CLK_ENABLE();
 8004458:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800445c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004460:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004464:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004468:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800446c:	9204      	str	r2, [sp, #16]
 800446e:	9a04      	ldr	r2, [sp, #16]
  OSPI_NOR_D0_GPIO_CLK_ENABLE();
 8004470:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004474:	f042 0208 	orr.w	r2, r2, #8
 8004478:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800447c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004480:	f002 0208 	and.w	r2, r2, #8
 8004484:	9205      	str	r2, [sp, #20]
 8004486:	9a05      	ldr	r2, [sp, #20]
  OSPI_NOR_D1_GPIO_CLK_ENABLE();
 8004488:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800448c:	f042 0208 	orr.w	r2, r2, #8
 8004490:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004494:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004498:	f002 0208 	and.w	r2, r2, #8
 800449c:	9206      	str	r2, [sp, #24]
 800449e:	9a06      	ldr	r2, [sp, #24]
  OSPI_NOR_D2_GPIO_CLK_ENABLE();
 80044a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80044a4:	f042 0210 	orr.w	r2, r2, #16
 80044a8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80044ac:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80044b0:	f002 0210 	and.w	r2, r2, #16
 80044b4:	9207      	str	r2, [sp, #28]
 80044b6:	9a07      	ldr	r2, [sp, #28]
  OSPI_NOR_D3_GPIO_CLK_ENABLE();
 80044b8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80044bc:	f042 0208 	orr.w	r2, r2, #8
 80044c0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80044c4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80044c8:	f002 0208 	and.w	r2, r2, #8
 80044cc:	9208      	str	r2, [sp, #32]
 80044ce:	9a08      	ldr	r2, [sp, #32]
  OSPI_NOR_D4_GPIO_CLK_ENABLE();
 80044d0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80044d4:	f042 0208 	orr.w	r2, r2, #8
 80044d8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80044dc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80044e0:	f002 0208 	and.w	r2, r2, #8
 80044e4:	9209      	str	r2, [sp, #36]	; 0x24
 80044e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
  OSPI_NOR_D5_GPIO_CLK_ENABLE();
 80044e8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80044ec:	f042 0208 	orr.w	r2, r2, #8
 80044f0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80044f4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80044f8:	f002 0208 	and.w	r2, r2, #8
 80044fc:	920a      	str	r2, [sp, #40]	; 0x28
 80044fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  OSPI_NOR_D6_GPIO_CLK_ENABLE();
 8004500:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004504:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004508:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800450c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004510:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8004514:	920b      	str	r2, [sp, #44]	; 0x2c
 8004516:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  OSPI_NOR_D7_GPIO_CLK_ENABLE();
 8004518:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800451c:	f042 0208 	orr.w	r2, r2, #8
 8004520:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 8004524:	2201      	movs	r2, #1
  OSPI_NOR_D7_GPIO_CLK_ENABLE();
 8004526:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800452a:	f003 0308 	and.w	r3, r3, #8
 800452e:	930c      	str	r3, [sp, #48]	; 0x30
 8004530:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 8004532:	2340      	movs	r3, #64	; 0x40
 8004534:	e9cd 3911 	strd	r3, r9, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 8004538:	2303      	movs	r3, #3
  GPIO_InitStruct.Alternate = OSPI_NOR_CS_PIN_AF;
 800453a:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 800453e:	e9cd 2313 	strd	r2, r3, [sp, #76]	; 0x4c
  HAL_GPIO_Init(OSPI_NOR_CS_GPIO_PORT, &GPIO_InitStruct);
 8004542:	f000 fc15 	bl	8004d70 <HAL_GPIO_Init>
  HAL_GPIO_Init(OSPI_NOR_DQS_GPIO_PORT, &GPIO_InitStruct);
 8004546:	a911      	add	r1, sp, #68	; 0x44
 8004548:	485b      	ldr	r0, [pc, #364]	; (80046b8 <BSP_OSPI_NOR_Init+0x2e0>)
  GPIO_InitStruct.Pin       = OSPI_NOR_DQS_PIN;
 800454a:	9711      	str	r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
 800454c:	9413      	str	r4, [sp, #76]	; 0x4c
  GPIO_InitStruct.Alternate = OSPI_NOR_DQS_PIN_AF;
 800454e:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_DQS_GPIO_PORT, &GPIO_InitStruct);
 8004552:	f000 fc0d 	bl	8004d70 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_CLK_PIN;
 8004556:	f44f 6380 	mov.w	r3, #1024	; 0x400
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
 800455a:	9413      	str	r4, [sp, #76]	; 0x4c
  GPIO_InitStruct.Alternate = OSPI_NOR_CLK_PIN_AF;
 800455c:	2409      	movs	r4, #9
  HAL_GPIO_Init(OSPI_NOR_CLK_GPIO_PORT, &GPIO_InitStruct);
 800455e:	a911      	add	r1, sp, #68	; 0x44
 8004560:	4856      	ldr	r0, [pc, #344]	; (80046bc <BSP_OSPI_NOR_Init+0x2e4>)
  GPIO_InitStruct.Pin       = OSPI_NOR_CLK_PIN;
 8004562:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_CLK_PIN_AF;
 8004564:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_CLK_GPIO_PORT, &GPIO_InitStruct);
 8004566:	f000 fc03 	bl	8004d70 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D0_PIN;
 800456a:	f44f 6300 	mov.w	r3, #2048	; 0x800
  HAL_GPIO_Init(OSPI_NOR_D0_GPIO_PORT, &GPIO_InitStruct);
 800456e:	a911      	add	r1, sp, #68	; 0x44
 8004570:	4853      	ldr	r0, [pc, #332]	; (80046c0 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D0_PIN;
 8004572:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D0_PIN_AF;
 8004574:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D0_GPIO_PORT, &GPIO_InitStruct);
 8004576:	f000 fbfb 	bl	8004d70 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D1_PIN;
 800457a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(OSPI_NOR_D1_GPIO_PORT, &GPIO_InitStruct);
 800457e:	a911      	add	r1, sp, #68	; 0x44
 8004580:	484f      	ldr	r0, [pc, #316]	; (80046c0 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D1_PIN;
 8004582:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D1_PIN_AF;
 8004584:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D1_GPIO_PORT, &GPIO_InitStruct);
 8004586:	f000 fbf3 	bl	8004d70 <HAL_GPIO_Init>
  HAL_GPIO_Init(OSPI_NOR_D2_GPIO_PORT, &GPIO_InitStruct);
 800458a:	a911      	add	r1, sp, #68	; 0x44
 800458c:	484d      	ldr	r0, [pc, #308]	; (80046c4 <BSP_OSPI_NOR_Init+0x2ec>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D2_PIN;
 800458e:	9711      	str	r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Pin       = OSPI_NOR_D5_PIN;
 8004590:	2720      	movs	r7, #32
  GPIO_InitStruct.Alternate = OSPI_NOR_D2_PIN_AF;
 8004592:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D2_GPIO_PORT, &GPIO_InitStruct);
 8004594:	f000 fbec 	bl	8004d70 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D3_PIN;
 8004598:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(OSPI_NOR_D3_GPIO_PORT, &GPIO_InitStruct);
 800459c:	a911      	add	r1, sp, #68	; 0x44
 800459e:	4848      	ldr	r0, [pc, #288]	; (80046c0 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D3_PIN;
 80045a0:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D3_PIN_AF;
 80045a2:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D3_GPIO_PORT, &GPIO_InitStruct);
 80045a4:	f000 fbe4 	bl	8004d70 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D4_PIN;
 80045a8:	2310      	movs	r3, #16
  HAL_GPIO_Init(OSPI_NOR_D4_GPIO_PORT, &GPIO_InitStruct);
 80045aa:	a911      	add	r1, sp, #68	; 0x44
 80045ac:	4844      	ldr	r0, [pc, #272]	; (80046c0 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D4_PIN;
 80045ae:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D4_PIN_AF;
 80045b0:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D4_GPIO_PORT, &GPIO_InitStruct);
 80045b4:	f000 fbdc 	bl	8004d70 <HAL_GPIO_Init>
  HAL_GPIO_Init(OSPI_NOR_D5_GPIO_PORT, &GPIO_InitStruct);
 80045b8:	a911      	add	r1, sp, #68	; 0x44
 80045ba:	4841      	ldr	r0, [pc, #260]	; (80046c0 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D5_PIN;
 80045bc:	9711      	str	r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D5_PIN_AF;
 80045be:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D5_GPIO_PORT, &GPIO_InitStruct);
 80045c2:	f000 fbd5 	bl	8004d70 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D6_PIN;
 80045c6:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(OSPI_NOR_D6_GPIO_PORT, &GPIO_InitStruct);
 80045ca:	a911      	add	r1, sp, #68	; 0x44
 80045cc:	4839      	ldr	r0, [pc, #228]	; (80046b4 <BSP_OSPI_NOR_Init+0x2dc>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D6_PIN;
 80045ce:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D6_PIN_AF;
 80045d0:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D6_GPIO_PORT, &GPIO_InitStruct);
 80045d2:	f000 fbcd 	bl	8004d70 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D7_PIN;
 80045d6:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(OSPI_NOR_D7_GPIO_PORT, &GPIO_InitStruct);
 80045d8:	a911      	add	r1, sp, #68	; 0x44
 80045da:	4839      	ldr	r0, [pc, #228]	; (80046c0 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D7_PIN;
 80045dc:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D7_PIN_AF;
 80045de:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D7_GPIO_PORT, &GPIO_InitStruct);
 80045e2:	f000 fbc5 	bl	8004d70 <HAL_GPIO_Init>
      (void)MX25LM51245G_GetFlashInfo(&pInfo);
 80045e6:	a811      	add	r0, sp, #68	; 0x44
 80045e8:	f7ff f863 	bl	80036b2 <MX25LM51245G_GetFlashInfo>
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80045ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
      ospi_config.ClockPrescaler = 2U;
 80045ee:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80045f2:	fa93 f3a3 	rbit	r3, r3
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 80045f6:	b10b      	cbz	r3, 80045fc <BSP_OSPI_NOR_Init+0x224>
  {
    return 32U;
  }
  return __builtin_clz(value);
 80045f8:	fab3 f783 	clz	r7, r3
      ospi_config.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 80045fc:	2300      	movs	r3, #0
      if (MX_OSPI_ClockConfig(&hospi_nor[Instance]) != HAL_OK)
 80045fe:	4832      	ldr	r0, [pc, #200]	; (80046c8 <BSP_OSPI_NOR_Init+0x2f0>)
      ospi_config.MemorySize     = (uint32_t)POSITION_VAL((uint32_t)pInfo.FlashSize);
 8004600:	970d      	str	r7, [sp, #52]	; 0x34
      ospi_config.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8004602:	930f      	str	r3, [sp, #60]	; 0x3c
      ospi_config.TransferRate   = Init->TransferRate;
 8004604:	786b      	ldrb	r3, [r5, #1]
 8004606:	9310      	str	r3, [sp, #64]	; 0x40
      if (MX_OSPI_ClockConfig(&hospi_nor[Instance]) != HAL_OK)
 8004608:	f7ff feca 	bl	80043a0 <MX_OSPI_ClockConfig>
 800460c:	b120      	cbz	r0, 8004618 <BSP_OSPI_NOR_Init+0x240>
        ret = BSP_ERROR_PERIPH_FAILURE;
 800460e:	f06f 0003 	mvn.w	r0, #3
}
 8004612:	b01b      	add	sp, #108	; 0x6c
 8004614:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      else if (MX_OSPI_NOR_Init(&hospi_nor[Instance], &ospi_config) != HAL_OK)
 8004618:	a90d      	add	r1, sp, #52	; 0x34
 800461a:	482b      	ldr	r0, [pc, #172]	; (80046c8 <BSP_OSPI_NOR_Init+0x2f0>)
 800461c:	f7ff fd90 	bl	8004140 <MX_OSPI_NOR_Init>
 8004620:	4602      	mov	r2, r0
 8004622:	2800      	cmp	r0, #0
 8004624:	d1f3      	bne.n	800460e <BSP_OSPI_NOR_Init+0x236>
  else if(MX25LM51245G_ResetEnable(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004626:	4601      	mov	r1, r0
 8004628:	4827      	ldr	r0, [pc, #156]	; (80046c8 <BSP_OSPI_NOR_Init+0x2f0>)
 800462a:	f7ff fabd 	bl	8003ba8 <MX25LM51245G_ResetEnable>
 800462e:	4602      	mov	r2, r0
 8004630:	b110      	cbz	r0, 8004638 <BSP_OSPI_NOR_Init+0x260>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8004632:	f06f 0004 	mvn.w	r0, #4
 8004636:	e7ec      	b.n	8004612 <BSP_OSPI_NOR_Init+0x23a>
  else if(MX25LM51245G_ResetMemory(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004638:	4601      	mov	r1, r0
 800463a:	4823      	ldr	r0, [pc, #140]	; (80046c8 <BSP_OSPI_NOR_Init+0x2f0>)
 800463c:	f7ff fae3 	bl	8003c06 <MX25LM51245G_ResetMemory>
 8004640:	4602      	mov	r2, r0
 8004642:	2800      	cmp	r0, #0
 8004644:	d1f5      	bne.n	8004632 <BSP_OSPI_NOR_Init+0x25a>
  else if(MX25LM51245G_ResetEnable(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004646:	2101      	movs	r1, #1
 8004648:	481f      	ldr	r0, [pc, #124]	; (80046c8 <BSP_OSPI_NOR_Init+0x2f0>)
 800464a:	f7ff faad 	bl	8003ba8 <MX25LM51245G_ResetEnable>
 800464e:	4602      	mov	r2, r0
 8004650:	2800      	cmp	r0, #0
 8004652:	d1ee      	bne.n	8004632 <BSP_OSPI_NOR_Init+0x25a>
  else if(MX25LM51245G_ResetMemory(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004654:	2101      	movs	r1, #1
 8004656:	481c      	ldr	r0, [pc, #112]	; (80046c8 <BSP_OSPI_NOR_Init+0x2f0>)
 8004658:	f7ff fad5 	bl	8003c06 <MX25LM51245G_ResetMemory>
 800465c:	2800      	cmp	r0, #0
 800465e:	d1e8      	bne.n	8004632 <BSP_OSPI_NOR_Init+0x25a>
  else if(MX25LM51245G_ResetEnable(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER) != MX25LM51245G_OK)
 8004660:	2201      	movs	r2, #1
 8004662:	4819      	ldr	r0, [pc, #100]	; (80046c8 <BSP_OSPI_NOR_Init+0x2f0>)
 8004664:	4611      	mov	r1, r2
 8004666:	f7ff fa9f 	bl	8003ba8 <MX25LM51245G_ResetEnable>
 800466a:	2800      	cmp	r0, #0
 800466c:	d1e1      	bne.n	8004632 <BSP_OSPI_NOR_Init+0x25a>
  else if(MX25LM51245G_ResetMemory(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER) != MX25LM51245G_OK)
 800466e:	2201      	movs	r2, #1
 8004670:	4815      	ldr	r0, [pc, #84]	; (80046c8 <BSP_OSPI_NOR_Init+0x2f0>)
 8004672:	4611      	mov	r1, r2
 8004674:	f7ff fac7 	bl	8003c06 <MX25LM51245G_ResetMemory>
 8004678:	2800      	cmp	r0, #0
 800467a:	d1da      	bne.n	8004632 <BSP_OSPI_NOR_Init+0x25a>
    Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;      /* After reset S/W setting to indirect access   */
 800467c:	2301      	movs	r3, #1
    Ospi_Nor_Ctx[Instance].TransferRate  = BSP_OSPI_NOR_STR_TRANSFER;     /* After reset S/W setting to STR mode          */
 800467e:	70b0      	strb	r0, [r6, #2]
    HAL_Delay(MX25LM51245G_RESET_MAX_TIME);
 8004680:	2064      	movs	r0, #100	; 0x64
    Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;      /* After reset S/W setting to indirect access   */
 8004682:	8033      	strh	r3, [r6, #0]
    HAL_Delay(MX25LM51245G_RESET_MAX_TIME);
 8004684:	f000 f99c 	bl	80049c0 <HAL_Delay>
      else if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8004688:	78b2      	ldrb	r2, [r6, #2]
 800468a:	7871      	ldrb	r1, [r6, #1]
 800468c:	480e      	ldr	r0, [pc, #56]	; (80046c8 <BSP_OSPI_NOR_Init+0x2f0>)
 800468e:	f7ff f829 	bl	80036e4 <MX25LM51245G_AutoPollingMemReady>
 8004692:	2800      	cmp	r0, #0
 8004694:	d1cd      	bne.n	8004632 <BSP_OSPI_NOR_Init+0x25a>
      else if (BSP_OSPI_NOR_ConfigFlash(Instance, Init->InterfaceMode, Init->TransferRate) != BSP_ERROR_NONE)
 8004696:	786a      	ldrb	r2, [r5, #1]
 8004698:	7829      	ldrb	r1, [r5, #0]
 800469a:	f7ff fe17 	bl	80042cc <BSP_OSPI_NOR_ConfigFlash>
 800469e:	2800      	cmp	r0, #0
 80046a0:	d1c7      	bne.n	8004632 <BSP_OSPI_NOR_Init+0x25a>
        ret = BSP_ERROR_NONE;
 80046a2:	2000      	movs	r0, #0
 80046a4:	e7b5      	b.n	8004612 <BSP_OSPI_NOR_Init+0x23a>
    ret = BSP_ERROR_WRONG_PARAM;
 80046a6:	f06f 0001 	mvn.w	r0, #1
  return ret;
 80046aa:	e7b2      	b.n	8004612 <BSP_OSPI_NOR_Init+0x23a>
 80046ac:	24003e6c 	.word	0x24003e6c
 80046b0:	58024400 	.word	0x58024400
 80046b4:	58021800 	.word	0x58021800
 80046b8:	58020400 	.word	0x58020400
 80046bc:	58021400 	.word	0x58021400
 80046c0:	58020c00 	.word	0x58020c00
 80046c4:	58021000 	.word	0x58021000
 80046c8:	24003e74 	.word	0x24003e74

080046cc <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
 80046cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80046d0:	460c      	mov	r4, r1
 80046d2:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >= TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 80046d4:	2800      	cmp	r0, #0
 80046d6:	d163      	bne.n	80047a0 <BSP_TS_Init+0xd4>
 80046d8:	680b      	ldr	r3, [r1, #0]
 80046da:	1e5a      	subs	r2, r3, #1
 80046dc:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
 80046e0:	d25e      	bcs.n	80047a0 <BSP_TS_Init+0xd4>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 80046e2:	684a      	ldr	r2, [r1, #4]
  if((Instance >= TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 80046e4:	1e51      	subs	r1, r2, #1
 80046e6:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
 80046ea:	d259      	bcs.n	80047a0 <BSP_TS_Init+0xd4>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
 80046ec:	4293      	cmp	r3, r2
 80046ee:	bf28      	it	cs
 80046f0:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 80046f2:	68e2      	ldr	r2, [r4, #12]
 80046f4:	429a      	cmp	r2, r3
 80046f6:	d853      	bhi.n	80047a0 <BSP_TS_Init+0xd4>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
 80046f8:	2370      	movs	r3, #112	; 0x70
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 80046fa:	4d2b      	ldr	r5, [pc, #172]	; (80047a8 <BSP_TS_Init+0xdc>)
  uint32_t ft5336_id       = 0;
 80046fc:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 80046fe:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
 8004700:	f8ad 3010 	strh.w	r3, [sp, #16]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 8004704:	4628      	mov	r0, r5
  IOCtx.Init        = BSP_I2C4_Init;
 8004706:	4b29      	ldr	r3, [pc, #164]	; (80047ac <BSP_TS_Init+0xe0>)
 8004708:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
 800470a:	4b29      	ldr	r3, [pc, #164]	; (80047b0 <BSP_TS_Init+0xe4>)
 800470c:	9303      	str	r3, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
 800470e:	4b29      	ldr	r3, [pc, #164]	; (80047b4 <BSP_TS_Init+0xe8>)
 8004710:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
 8004712:	4b29      	ldr	r3, [pc, #164]	; (80047b8 <BSP_TS_Init+0xec>)
 8004714:	9305      	str	r3, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
 8004716:	4b29      	ldr	r3, [pc, #164]	; (80047bc <BSP_TS_Init+0xf0>)
 8004718:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 800471a:	f7fe ff35 	bl	8003588 <FT5336_RegisterBusIO>
 800471e:	b128      	cbz	r0, 800472c <BSP_TS_Init+0x60>
      ret = BSP_ERROR_NO_INIT;
 8004720:	f04f 35ff 	mov.w	r5, #4294967295
}
 8004724:	4628      	mov	r0, r5
 8004726:	b008      	add	sp, #32
 8004728:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
 800472c:	a901      	add	r1, sp, #4
 800472e:	4628      	mov	r0, r5
 8004730:	f7fe fe90 	bl	8003454 <FT5336_ReadID>
 8004734:	2800      	cmp	r0, #0
 8004736:	d1f3      	bne.n	8004720 <BSP_TS_Init+0x54>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
 8004738:	9b01      	ldr	r3, [sp, #4]
 800473a:	2b51      	cmp	r3, #81	; 0x51
 800473c:	d1f0      	bne.n	8004720 <BSP_TS_Init+0x54>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
 800473e:	4b20      	ldr	r3, [pc, #128]	; (80047c0 <BSP_TS_Init+0xf4>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
 8004740:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
 8004742:	4f20      	ldr	r7, [pc, #128]	; (80047c4 <BSP_TS_Init+0xf8>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
 8004744:	f8df 8084 	ldr.w	r8, [pc, #132]	; 80047cc <BSP_TS_Init+0x100>
    Ts_CompObj[Instance] = &FT5336Obj;
 8004748:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
 800474a:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	4798      	blx	r3
 8004752:	4605      	mov	r5, r0
 8004754:	2800      	cmp	r0, #0
 8004756:	d1e3      	bne.n	8004720 <BSP_TS_Init+0x54>
      Ts_Ctx[Instance].Width       = TS_Init->Width;
 8004758:	6823      	ldr	r3, [r4, #0]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 800475a:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width       = TS_Init->Width;
 800475c:	4e1a      	ldr	r6, [pc, #104]	; (80047c8 <BSP_TS_Init+0xfc>)
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 800475e:	6838      	ldr	r0, [r7, #0]
      Ts_Ctx[Instance].Width       = TS_Init->Width;
 8004760:	6033      	str	r3, [r6, #0]
      Ts_Ctx[Instance].Height      = TS_Init->Height;
 8004762:	6863      	ldr	r3, [r4, #4]
 8004764:	6073      	str	r3, [r6, #4]
      Ts_Ctx[Instance].Orientation = TS_Init->Orientation;
 8004766:	68a3      	ldr	r3, [r4, #8]
 8004768:	60b3      	str	r3, [r6, #8]
      Ts_Ctx[Instance].Accuracy    = TS_Init->Accuracy;
 800476a:	68e3      	ldr	r3, [r4, #12]
 800476c:	60f3      	str	r3, [r6, #12]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 800476e:	f8d8 3000 	ldr.w	r3, [r8]
 8004772:	69db      	ldr	r3, [r3, #28]
 8004774:	4798      	blx	r3
 8004776:	2800      	cmp	r0, #0
 8004778:	db0f      	blt.n	800479a <BSP_TS_Init+0xce>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 800477a:	9b03      	ldr	r3, [sp, #12]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 800477c:	6822      	ldr	r2, [r4, #0]
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 800477e:	6133      	str	r3, [r6, #16]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 8004780:	9b04      	ldr	r3, [sp, #16]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8004782:	6861      	ldr	r1, [r4, #4]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 8004784:	6173      	str	r3, [r6, #20]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004786:	68e3      	ldr	r3, [r4, #12]
 8004788:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 800478a:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 800478c:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 800478e:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004790:	61b2      	str	r2, [r6, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8004792:	6273      	str	r3, [r6, #36]	; 0x24
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004794:	e9c6 2307 	strd	r2, r3, [r6, #28]
        for(i = 0; i < TS_TOUCH_NBR; i++)
 8004798:	e7c4      	b.n	8004724 <BSP_TS_Init+0x58>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 800479a:	f06f 0504 	mvn.w	r5, #4
 800479e:	e7c1      	b.n	8004724 <BSP_TS_Init+0x58>
    ret = BSP_ERROR_WRONG_PARAM;
 80047a0:	f06f 0501 	mvn.w	r5, #1
  return ret;
 80047a4:	e7be      	b.n	8004724 <BSP_TS_Init+0x58>
 80047a6:	bf00      	nop
 80047a8:	24003ed0 	.word	0x24003ed0
 80047ac:	08003cfd 	.word	0x08003cfd
 80047b0:	08003c65 	.word	0x08003c65
 80047b4:	08003fd1 	.word	0x08003fd1
 80047b8:	08003f9d 	.word	0x08003f9d
 80047bc:	08004005 	.word	0x08004005
 80047c0:	24000010 	.word	0x24000010
 80047c4:	24003ef8 	.word	0x24003ef8
 80047c8:	24003efc 	.word	0x24003efc
 80047cc:	24003f24 	.word	0x24003f24

080047d0 <BSP_TS_GetState>:
{
 80047d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80047d4:	460d      	mov	r5, r1
  if(Instance >= TS_INSTANCES_NBR)
 80047d6:	2800      	cmp	r0, #0
 80047d8:	d153      	bne.n	8004882 <BSP_TS_GetState+0xb2>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
 80047da:	4b2b      	ldr	r3, [pc, #172]	; (8004888 <BSP_TS_GetState+0xb8>)
 80047dc:	a901      	add	r1, sp, #4
 80047de:	4a2b      	ldr	r2, [pc, #172]	; (800488c <BSP_TS_GetState+0xbc>)
 80047e0:	681b      	ldr	r3, [r3, #0]
 80047e2:	6810      	ldr	r0, [r2, #0]
 80047e4:	691b      	ldr	r3, [r3, #16]
 80047e6:	4798      	blx	r3
 80047e8:	2800      	cmp	r0, #0
 80047ea:	db47      	blt.n	800487c <BSP_TS_GetState+0xac>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 80047ec:	4928      	ldr	r1, [pc, #160]	; (8004890 <BSP_TS_GetState+0xc0>)
    else if(state.TouchDetected != 0U)
 80047ee:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 80047f0:	698f      	ldr	r7, [r1, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
 80047f2:	6a0e      	ldr	r6, [r1, #32]
    else if(state.TouchDetected != 0U)
 80047f4:	2800      	cmp	r0, #0
 80047f6:	d03d      	beq.n	8004874 <BSP_TS_GetState+0xa4>
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 80047f8:	f8d1 e008 	ldr.w	lr, [r1, #8]
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
 80047fc:	f8d1 8010 	ldr.w	r8, [r1, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8004800:	f01e 0f08 	tst.w	lr, #8
      y_oriented = state.TouchY;
 8004804:	e9dd c302 	ldrd	ip, r3, [sp, #8]
        x_oriented = state.TouchY;
 8004808:	bf19      	ittee	ne
 800480a:	461a      	movne	r2, r3
        y_oriented = state.TouchX;
 800480c:	4664      	movne	r4, ip
      y_oriented = state.TouchY;
 800480e:	461c      	moveq	r4, r3
      x_oriented = state.TouchX;
 8004810:	4662      	moveq	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
 8004812:	f01e 0f02 	tst.w	lr, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
 8004816:	bf1c      	itt	ne
 8004818:	f108 32ff 	addne.w	r2, r8, #4294967295
 800481c:	eba2 020c 	subne.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
 8004820:	f8d1 c014 	ldr.w	ip, [r1, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
 8004824:	f01e 0f04 	tst.w	lr, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
 8004828:	bf18      	it	ne
 800482a:	ebac 0403 	subne.w	r4, ip, r3
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 800482e:	680b      	ldr	r3, [r1, #0]
 8004830:	4353      	muls	r3, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004832:	684a      	ldr	r2, [r1, #4]
      TS_State->TouchDetected = state.TouchDetected;
 8004834:	6028      	str	r0, [r5, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004836:	4362      	muls	r2, r4
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8004838:	68cc      	ldr	r4, [r1, #12]
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 800483a:	fbb3 f3f8 	udiv	r3, r3, r8
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 800483e:	fbb2 f2fc 	udiv	r2, r2, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8004842:	42bb      	cmp	r3, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8004844:	606b      	str	r3, [r5, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004846:	60aa      	str	r2, [r5, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8004848:	bf8c      	ite	hi
 800484a:	eba3 0c07 	subhi.w	ip, r3, r7
 800484e:	eba7 0c03 	subls.w	ip, r7, r3
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
 8004852:	42b2      	cmp	r2, r6
 8004854:	bf8c      	ite	hi
 8004856:	1b90      	subhi	r0, r2, r6
 8004858:	1ab0      	subls	r0, r6, r2
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 800485a:	4564      	cmp	r4, ip
 800485c:	d301      	bcc.n	8004862 <BSP_TS_GetState+0x92>
 800485e:	4284      	cmp	r4, r0
 8004860:	d205      	bcs.n	800486e <BSP_TS_GetState+0x9e>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
 8004862:	618b      	str	r3, [r1, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
 8004864:	620a      	str	r2, [r1, #32]
  int32_t ret = BSP_ERROR_NONE;
 8004866:	2000      	movs	r0, #0
}
 8004868:	b004      	add	sp, #16
 800486a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 800486e:	e9c5 7601 	strd	r7, r6, [r5, #4]
 8004872:	e7f8      	b.n	8004866 <BSP_TS_GetState+0x96>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
 8004874:	e9c5 0700 	strd	r0, r7, [r5]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 8004878:	60ae      	str	r6, [r5, #8]
 800487a:	e7f5      	b.n	8004868 <BSP_TS_GetState+0x98>
      ret = BSP_ERROR_COMPONENT_FAILURE;
 800487c:	f06f 0004 	mvn.w	r0, #4
 8004880:	e7f2      	b.n	8004868 <BSP_TS_GetState+0x98>
    ret = BSP_ERROR_WRONG_PARAM;
 8004882:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8004886:	e7ef      	b.n	8004868 <BSP_TS_GetState+0x98>
 8004888:	24003f24 	.word	0x24003f24
 800488c:	24003ef8 	.word	0x24003ef8
 8004890:	24003efc 	.word	0x24003efc

08004894 <SystemInit>:
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8004894:	4a22      	ldr	r2, [pc, #136]	; (8004920 <SystemInit+0x8c>)
 8004896:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800489a:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800489e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80048a2:	4a20      	ldr	r2, [pc, #128]	; (8004924 <SystemInit+0x90>)
 80048a4:	6813      	ldr	r3, [r2, #0]
 80048a6:	f003 030f 	and.w	r3, r3, #15
 80048aa:	2b06      	cmp	r3, #6
 80048ac:	d805      	bhi.n	80048ba <SystemInit+0x26>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80048ae:	6813      	ldr	r3, [r2, #0]
 80048b0:	f023 030f 	bic.w	r3, r3, #15
 80048b4:	f043 0307 	orr.w	r3, r3, #7
 80048b8:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 80048ba:	4b1b      	ldr	r3, [pc, #108]	; (8004928 <SystemInit+0x94>)
 80048bc:	681a      	ldr	r2, [r3, #0]
 80048be:	f042 0201 	orr.w	r2, r2, #1
 80048c2:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80048c4:	2200      	movs	r2, #0
 80048c6:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 80048c8:	4a18      	ldr	r2, [pc, #96]	; (800492c <SystemInit+0x98>)
 80048ca:	6819      	ldr	r1, [r3, #0]
 80048cc:	400a      	ands	r2, r1
  
   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80048ce:	4915      	ldr	r1, [pc, #84]	; (8004924 <SystemInit+0x90>)
  RCC->CR &= 0xEAF6ED7FU;
 80048d0:	601a      	str	r2, [r3, #0]
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80048d2:	680a      	ldr	r2, [r1, #0]
 80048d4:	0712      	lsls	r2, r2, #28
 80048d6:	d505      	bpl.n	80048e4 <SystemInit+0x50>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80048d8:	680a      	ldr	r2, [r1, #0]
 80048da:	f022 020f 	bic.w	r2, r2, #15
 80048de:	f042 0207 	orr.w	r2, r2, #7
 80048e2:	600a      	str	r2, [r1, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 80048e4:	2200      	movs	r2, #0

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 80048e6:	4912      	ldr	r1, [pc, #72]	; (8004930 <SystemInit+0x9c>)
  RCC->D1CFGR = 0x00000000;
 80048e8:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
 80048ea:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
 80048ec:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x02020200;
 80048ee:	6299      	str	r1, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 80048f0:	4910      	ldr	r1, [pc, #64]	; (8004934 <SystemInit+0xa0>)
 80048f2:	62d9      	str	r1, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 80048f4:	4910      	ldr	r1, [pc, #64]	; (8004938 <SystemInit+0xa4>)
 80048f6:	6319      	str	r1, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 80048f8:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 80048fa:	6399      	str	r1, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 80048fc:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 80048fe:	6419      	str	r1, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8004900:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8004902:	6819      	ldr	r1, [r3, #0]
 8004904:	f421 2180 	bic.w	r1, r1, #262144	; 0x40000
 8004908:	6019      	str	r1, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 800490a:	661a      	str	r2, [r3, #96]	; 0x60
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 800490c:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8004910:	4b0a      	ldr	r3, [pc, #40]	; (800493c <SystemInit+0xa8>)
 8004912:	601a      	str	r2, [r3, #0]

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal AXI-RAM */
#else
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004914:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004918:	4b01      	ldr	r3, [pc, #4]	; (8004920 <SystemInit+0x8c>)
 800491a:	609a      	str	r2, [r3, #8]
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
 800491c:	4770      	bx	lr
 800491e:	bf00      	nop
 8004920:	e000ed00 	.word	0xe000ed00
 8004924:	52002000 	.word	0x52002000
 8004928:	58024400 	.word	0x58024400
 800492c:	eaf6ed7f 	.word	0xeaf6ed7f
 8004930:	02020200 	.word	0x02020200
 8004934:	01ff0000 	.word	0x01ff0000
 8004938:	01010280 	.word	0x01010280
 800493c:	52004000 	.word	0x52004000

08004940 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004940:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004942:	2003      	movs	r0, #3
 8004944:	f000 f84e 	bl	80049e4 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8004948:	f002 fa08 	bl	8006d5c <HAL_RCC_GetSysClockFreq>
 800494c:	490f      	ldr	r1, [pc, #60]	; (800498c <HAL_Init+0x4c>)
 800494e:	4a10      	ldr	r2, [pc, #64]	; (8004990 <HAL_Init+0x50>)
 8004950:	698b      	ldr	r3, [r1, #24]
 8004952:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8004956:	5cd3      	ldrb	r3, [r2, r3]
 8004958:	f003 031f 	and.w	r3, r3, #31
 800495c:	40d8      	lsrs	r0, r3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 800495e:	698b      	ldr	r3, [r1, #24]
 8004960:	f003 030f 	and.w	r3, r3, #15
 8004964:	5cd3      	ldrb	r3, [r2, r3]
 8004966:	4a0b      	ldr	r2, [pc, #44]	; (8004994 <HAL_Init+0x54>)
 8004968:	f003 031f 	and.w	r3, r3, #31
 800496c:	fa20 f303 	lsr.w	r3, r0, r3
 8004970:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8004972:	4b09      	ldr	r3, [pc, #36]	; (8004998 <HAL_Init+0x58>)
 8004974:	6018      	str	r0, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8004976:	2000      	movs	r0, #0
 8004978:	f7fc fcea 	bl	8001350 <HAL_InitTick>
 800497c:	4604      	mov	r4, r0
 800497e:	b918      	cbnz	r0, 8004988 <HAL_Init+0x48>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8004980:	f7fc f9f2 	bl	8000d68 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004984:	4620      	mov	r0, r4
 8004986:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004988:	2401      	movs	r4, #1
 800498a:	e7fb      	b.n	8004984 <HAL_Init+0x44>
 800498c:	58024400 	.word	0x58024400
 8004990:	0801eccc 	.word	0x0801eccc
 8004994:	24000044 	.word	0x24000044
 8004998:	24000040 	.word	0x24000040

0800499c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 800499c:	4a03      	ldr	r2, [pc, #12]	; (80049ac <HAL_IncTick+0x10>)
 800499e:	4b04      	ldr	r3, [pc, #16]	; (80049b0 <HAL_IncTick+0x14>)
 80049a0:	6811      	ldr	r1, [r2, #0]
 80049a2:	781b      	ldrb	r3, [r3, #0]
 80049a4:	440b      	add	r3, r1
 80049a6:	6013      	str	r3, [r2, #0]
}
 80049a8:	4770      	bx	lr
 80049aa:	bf00      	nop
 80049ac:	24003f28 	.word	0x24003f28
 80049b0:	24000048 	.word	0x24000048

080049b4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80049b4:	4b01      	ldr	r3, [pc, #4]	; (80049bc <HAL_GetTick+0x8>)
 80049b6:	6818      	ldr	r0, [r3, #0]
}
 80049b8:	4770      	bx	lr
 80049ba:	bf00      	nop
 80049bc:	24003f28 	.word	0x24003f28

080049c0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80049c0:	b538      	push	{r3, r4, r5, lr}
 80049c2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80049c4:	f7ff fff6 	bl	80049b4 <HAL_GetTick>
 80049c8:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80049ca:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80049cc:	bf1e      	ittt	ne
 80049ce:	4b04      	ldrne	r3, [pc, #16]	; (80049e0 <HAL_Delay+0x20>)
 80049d0:	781b      	ldrbne	r3, [r3, #0]
 80049d2:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80049d4:	f7ff ffee 	bl	80049b4 <HAL_GetTick>
 80049d8:	1b43      	subs	r3, r0, r5
 80049da:	42a3      	cmp	r3, r4
 80049dc:	d3fa      	bcc.n	80049d4 <HAL_Delay+0x14>
  {
  }
}
 80049de:	bd38      	pop	{r3, r4, r5, pc}
 80049e0:	24000048 	.word	0x24000048

080049e4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80049e4:	4907      	ldr	r1, [pc, #28]	; (8004a04 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80049e6:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80049e8:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80049ea:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80049ee:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80049f2:	0412      	lsls	r2, r2, #16
 80049f4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80049f6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80049f8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80049fc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8004a00:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004a02:	4770      	bx	lr
 8004a04:	e000ed00 	.word	0xe000ed00

08004a08 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004a08:	4b16      	ldr	r3, [pc, #88]	; (8004a64 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8004a0a:	b530      	push	{r4, r5, lr}
 8004a0c:	68dc      	ldr	r4, [r3, #12]
 8004a0e:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004a12:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004a16:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004a18:	2d04      	cmp	r5, #4
 8004a1a:	bf28      	it	cs
 8004a1c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004a1e:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004a20:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004a24:	bf8c      	ite	hi
 8004a26:	3c03      	subhi	r4, #3
 8004a28:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004a2a:	fa03 f505 	lsl.w	r5, r3, r5
  if ((int32_t)(IRQn) >= 0)
 8004a2e:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004a30:	fa03 f304 	lsl.w	r3, r3, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004a34:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004a38:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004a3c:	fa01 f104 	lsl.w	r1, r1, r4
 8004a40:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004a44:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8004a48:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 8004a4a:	db06      	blt.n	8004a5a <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004a4c:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8004a50:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8004a54:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004a58:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004a5a:	f000 000f 	and.w	r0, r0, #15
 8004a5e:	4a02      	ldr	r2, [pc, #8]	; (8004a68 <HAL_NVIC_SetPriority+0x60>)
 8004a60:	5413      	strb	r3, [r2, r0]
 8004a62:	e7f9      	b.n	8004a58 <HAL_NVIC_SetPriority+0x50>
 8004a64:	e000ed00 	.word	0xe000ed00
 8004a68:	e000ed14 	.word	0xe000ed14

08004a6c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004a6c:	2800      	cmp	r0, #0
 8004a6e:	db08      	blt.n	8004a82 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004a70:	2301      	movs	r3, #1
 8004a72:	0942      	lsrs	r2, r0, #5
 8004a74:	f000 001f 	and.w	r0, r0, #31
 8004a78:	fa03 f000 	lsl.w	r0, r3, r0
 8004a7c:	4b01      	ldr	r3, [pc, #4]	; (8004a84 <HAL_NVIC_EnableIRQ+0x18>)
 8004a7e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004a82:	4770      	bx	lr
 8004a84:	e000e100 	.word	0xe000e100

08004a88 <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8004a88:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8004a8c:	4b04      	ldr	r3, [pc, #16]	; (8004aa0 <HAL_MPU_Disable+0x18>)
 8004a8e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004a90:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004a94:	625a      	str	r2, [r3, #36]	; 0x24

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8004a96:	2200      	movs	r2, #0
 8004a98:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
}
 8004a9c:	4770      	bx	lr
 8004a9e:	bf00      	nop
 8004aa0:	e000ed00 	.word	0xe000ed00

08004aa4 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8004aa4:	4b06      	ldr	r3, [pc, #24]	; (8004ac0 <HAL_MPU_Enable+0x1c>)
 8004aa6:	f040 0001 	orr.w	r0, r0, #1
 8004aaa:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8004aae:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004ab0:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8004ab4:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8004ab6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004aba:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 8004abe:	4770      	bx	lr
 8004ac0:	e000ed00 	.word	0xe000ed00

08004ac4 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8004ac4:	7843      	ldrb	r3, [r0, #1]
 8004ac6:	4a14      	ldr	r2, [pc, #80]	; (8004b18 <HAL_MPU_ConfigRegion+0x54>)
{
 8004ac8:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 8004aca:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
 8004ace:	7801      	ldrb	r1, [r0, #0]
 8004ad0:	b1e9      	cbz	r1, 8004b0e <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
 8004ad2:	6843      	ldr	r3, [r0, #4]
 8004ad4:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004ad8:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004ada:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004adc:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004ade:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004ae2:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8004ae4:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004ae6:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 8004aea:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004aec:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8004af0:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004af2:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8004af6:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004af8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8004afc:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004afe:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8004b02:	7a01      	ldrb	r1, [r0, #8]
 8004b04:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004b08:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 8004b0c:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 8004b0e:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
 8004b12:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
}
 8004b16:	e7f9      	b.n	8004b0c <HAL_MPU_ConfigRegion+0x48>
 8004b18:	e000ed00 	.word	0xe000ed00

08004b1c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004b1c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004b1e:	4604      	mov	r4, r0
 8004b20:	b908      	cbnz	r0, 8004b26 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8004b22:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8004b24:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004b26:	7f43      	ldrb	r3, [r0, #29]
 8004b28:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004b2c:	b913      	cbnz	r3, 8004b34 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8004b2e:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8004b30:	f7fc f932 	bl	8000d98 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8004b34:	2302      	movs	r3, #2
 8004b36:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8004b38:	7923      	ldrb	r3, [r4, #4]
 8004b3a:	b9e3      	cbnz	r3, 8004b76 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8004b3c:	6823      	ldr	r3, [r4, #0]
 8004b3e:	4a13      	ldr	r2, [pc, #76]	; (8004b8c <HAL_CRC_Init+0x70>)
 8004b40:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8004b42:	689a      	ldr	r2, [r3, #8]
 8004b44:	f022 0218 	bic.w	r2, r2, #24
 8004b48:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004b4a:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004b4c:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004b4e:	b9d2      	cbnz	r2, 8004b86 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004b50:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004b54:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 8004b56:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004b58:	689a      	ldr	r2, [r3, #8]
 8004b5a:	6961      	ldr	r1, [r4, #20]
 8004b5c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8004b60:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004b62:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004b64:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004b66:	689a      	ldr	r2, [r3, #8]
 8004b68:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004b6c:	430a      	orrs	r2, r1
 8004b6e:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8004b70:	2301      	movs	r3, #1
 8004b72:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8004b74:	e7d6      	b.n	8004b24 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8004b76:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004b7a:	4620      	mov	r0, r4
 8004b7c:	f000 f808 	bl	8004b90 <HAL_CRCEx_Polynomial_Set>
 8004b80:	2800      	cmp	r0, #0
 8004b82:	d0e2      	beq.n	8004b4a <HAL_CRC_Init+0x2e>
 8004b84:	e7cd      	b.n	8004b22 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004b86:	6922      	ldr	r2, [r4, #16]
 8004b88:	e7e4      	b.n	8004b54 <HAL_CRC_Init+0x38>
 8004b8a:	bf00      	nop
 8004b8c:	04c11db7 	.word	0x04c11db7

08004b90 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8004b90:	07cb      	lsls	r3, r1, #31
{
 8004b92:	b510      	push	{r4, lr}
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8004b94:	d50c      	bpl.n	8004bb0 <HAL_CRCEx_Polynomial_Set+0x20>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8004b96:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8004b98:	3b01      	subs	r3, #1
 8004b9a:	d31c      	bcc.n	8004bd6 <HAL_CRCEx_Polynomial_Set+0x46>
 8004b9c:	fa21 f403 	lsr.w	r4, r1, r3
 8004ba0:	07e4      	lsls	r4, r4, #31
 8004ba2:	d5f9      	bpl.n	8004b98 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
 8004ba4:	2a10      	cmp	r2, #16
 8004ba6:	d012      	beq.n	8004bce <HAL_CRCEx_Polynomial_Set+0x3e>
 8004ba8:	d804      	bhi.n	8004bb4 <HAL_CRCEx_Polynomial_Set+0x24>
 8004baa:	b13a      	cbz	r2, 8004bbc <HAL_CRCEx_Polynomial_Set+0x2c>
 8004bac:	2a08      	cmp	r2, #8
 8004bae:	d010      	beq.n	8004bd2 <HAL_CRCEx_Polynomial_Set+0x42>
        }
        break;
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
        {
          status =   HAL_ERROR;
 8004bb0:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8004bb2:	e00b      	b.n	8004bcc <HAL_CRCEx_Polynomial_Set+0x3c>
    switch (PolyLength)
 8004bb4:	2a18      	cmp	r2, #24
 8004bb6:	d1fb      	bne.n	8004bb0 <HAL_CRCEx_Polynomial_Set+0x20>
        if (msb >= HAL_CRC_LENGTH_7B)
 8004bb8:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
 8004bba:	d8f9      	bhi.n	8004bb0 <HAL_CRCEx_Polynomial_Set+0x20>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8004bbc:	6800      	ldr	r0, [r0, #0]
 8004bbe:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8004bc0:	6883      	ldr	r3, [r0, #8]
 8004bc2:	f023 0318 	bic.w	r3, r3, #24
 8004bc6:	431a      	orrs	r2, r3
 8004bc8:	6082      	str	r2, [r0, #8]
 8004bca:	2000      	movs	r0, #0
}
 8004bcc:	bd10      	pop	{r4, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
 8004bce:	2b07      	cmp	r3, #7
 8004bd0:	e7f3      	b.n	8004bba <HAL_CRCEx_Polynomial_Set+0x2a>
        if (msb >= HAL_CRC_LENGTH_16B)
 8004bd2:	2b0f      	cmp	r3, #15
 8004bd4:	e7f1      	b.n	8004bba <HAL_CRCEx_Polynomial_Set+0x2a>
    switch (PolyLength)
 8004bd6:	2a00      	cmp	r2, #0
 8004bd8:	d1ea      	bne.n	8004bb0 <HAL_CRCEx_Polynomial_Set+0x20>
 8004bda:	e7ef      	b.n	8004bbc <HAL_CRCEx_Polynomial_Set+0x2c>

08004bdc <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004bdc:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004bde:	4604      	mov	r4, r0
 8004be0:	2800      	cmp	r0, #0
 8004be2:	d036      	beq.n	8004c52 <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004be4:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
 8004be8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004bec:	b91b      	cbnz	r3, 8004bf6 <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004bee:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004bf2:	f7fc f8e9 	bl	8000dc8 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004bf6:	2302      	movs	r3, #2

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004bf8:	69e0      	ldr	r0, [r4, #28]
 8004bfa:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004bfc:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004c00:	6823      	ldr	r3, [r4, #0]
 8004c02:	4302      	orrs	r2, r0

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8004c04:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004c06:	6819      	ldr	r1, [r3, #0]
 8004c08:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
 8004c0c:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8004c10:	430a      	orrs	r2, r1
 8004c12:	601a      	str	r2, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8004c14:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8004c16:	68a2      	ldr	r2, [r4, #8]
 8004c18:	f421 7183 	bic.w	r1, r1, #262	; 0x106
 8004c1c:	4302      	orrs	r2, r0
 8004c1e:	f021 0101 	bic.w	r1, r1, #1
 8004c22:	430a      	orrs	r2, r1
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004c24:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8004c26:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004c28:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004c2a:	0c12      	lsrs	r2, r2, #16
 8004c2c:	0412      	lsls	r2, r2, #16
 8004c2e:	430a      	orrs	r2, r1
 8004c30:	641a      	str	r2, [r3, #64]	; 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8004c32:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8004c34:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 8004c38:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
 8004c3c:	0552      	lsls	r2, r2, #21
 8004c3e:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004c42:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8004c44:	430a      	orrs	r2, r1
 8004c46:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004c48:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004c4a:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004c4c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
 8004c50:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004c52:	2001      	movs	r0, #1
 8004c54:	e7fc      	b.n	8004c50 <HAL_DMA2D_Init+0x74>

08004c56 <HAL_DMA2D_LineEventCallback>:
 8004c56:	4770      	bx	lr

08004c58 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8004c58:	4770      	bx	lr

08004c5a <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004c5a:	6803      	ldr	r3, [r0, #0]
{
 8004c5c:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004c5e:	685e      	ldr	r6, [r3, #4]
{
 8004c60:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004c62:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004c64:	07f2      	lsls	r2, r6, #31
 8004c66:	d514      	bpl.n	8004c92 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004c68:	05e9      	lsls	r1, r5, #23
 8004c6a:	d512      	bpl.n	8004c92 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004c6c:	681a      	ldr	r2, [r3, #0]
 8004c6e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004c72:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004c74:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8004c76:	f042 0201 	orr.w	r2, r2, #1
 8004c7a:	6642      	str	r2, [r0, #100]	; 0x64

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004c7c:	2201      	movs	r2, #1
 8004c7e:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004c80:	2304      	movs	r3, #4
 8004c82:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004c86:	2300      	movs	r3, #0
 8004c88:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8004c8c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004c8e:	b103      	cbz	r3, 8004c92 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004c90:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004c92:	06b2      	lsls	r2, r6, #26
 8004c94:	d516      	bpl.n	8004cc4 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004c96:	04ab      	lsls	r3, r5, #18
 8004c98:	d514      	bpl.n	8004cc4 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004c9a:	6823      	ldr	r3, [r4, #0]
 8004c9c:	681a      	ldr	r2, [r3, #0]
 8004c9e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004ca2:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004ca4:	2220      	movs	r2, #32
 8004ca6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004ca8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004caa:	f043 0302 	orr.w	r3, r3, #2
 8004cae:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004cb0:	2304      	movs	r3, #4
 8004cb2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004cb6:	2300      	movs	r3, #0
 8004cb8:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8004cbc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004cbe:	b10b      	cbz	r3, 8004cc4 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004cc0:	4620      	mov	r0, r4
 8004cc2:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004cc4:	0730      	lsls	r0, r6, #28
 8004cc6:	d516      	bpl.n	8004cf6 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004cc8:	0529      	lsls	r1, r5, #20
 8004cca:	d514      	bpl.n	8004cf6 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004ccc:	6823      	ldr	r3, [r4, #0]
 8004cce:	681a      	ldr	r2, [r3, #0]
 8004cd0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004cd4:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004cd6:	2208      	movs	r2, #8
 8004cd8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004cda:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004cdc:	f043 0304 	orr.w	r3, r3, #4
 8004ce0:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004ce2:	2304      	movs	r3, #4
 8004ce4:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004ce8:	2300      	movs	r3, #0
 8004cea:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8004cee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004cf0:	b10b      	cbz	r3, 8004cf6 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004cf2:	4620      	mov	r0, r4
 8004cf4:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004cf6:	0772      	lsls	r2, r6, #29
 8004cf8:	d50b      	bpl.n	8004d12 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004cfa:	056b      	lsls	r3, r5, #21
 8004cfc:	d509      	bpl.n	8004d12 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004cfe:	6823      	ldr	r3, [r4, #0]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004d00:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004d02:	681a      	ldr	r2, [r3, #0]
 8004d04:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004d08:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004d0a:	2204      	movs	r2, #4
 8004d0c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004d0e:	f7ff ffa2 	bl	8004c56 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004d12:	07b0      	lsls	r0, r6, #30
 8004d14:	d514      	bpl.n	8004d40 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004d16:	05a9      	lsls	r1, r5, #22
 8004d18:	d512      	bpl.n	8004d40 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004d1a:	6823      	ldr	r3, [r4, #0]
 8004d1c:	681a      	ldr	r2, [r3, #0]
 8004d1e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004d22:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004d24:	2202      	movs	r2, #2
 8004d26:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004d28:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004d2a:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004d2c:	2301      	movs	r3, #1
 8004d2e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004d32:	2300      	movs	r3, #0
 8004d34:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferCpltCallback != NULL)
 8004d38:	6a23      	ldr	r3, [r4, #32]
 8004d3a:	b10b      	cbz	r3, 8004d40 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8004d3c:	4620      	mov	r0, r4
 8004d3e:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004d40:	06f2      	lsls	r2, r6, #27
 8004d42:	d513      	bpl.n	8004d6c <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004d44:	04eb      	lsls	r3, r5, #19
 8004d46:	d511      	bpl.n	8004d6c <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004d48:	6823      	ldr	r3, [r4, #0]

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004d4a:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004d4c:	681a      	ldr	r2, [r3, #0]
 8004d4e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004d52:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004d54:	2210      	movs	r2, #16
 8004d56:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004d58:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004d5a:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004d5c:	2301      	movs	r3, #1
 8004d5e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
 8004d62:	2300      	movs	r3, #0
 8004d64:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004d68:	f7ff ff76 	bl	8004c58 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8004d6c:	bd70      	pop	{r4, r5, r6, pc}
	...

08004d70 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004d70:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 8004d74:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004d76:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8004f38 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8004d7a:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8004d7e:	680a      	ldr	r2, [r1, #0]
 8004d80:	fa32 f503 	lsrs.w	r5, r2, r3
 8004d84:	d102      	bne.n	8004d8c <HAL_GPIO_Init+0x1c>
      }
    }

    position++;
  }
}
 8004d86:	b003      	add	sp, #12
 8004d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 8004d8c:	f04f 0e01 	mov.w	lr, #1
 8004d90:	fa0e fe03 	lsl.w	lr, lr, r3
    if (iocurrent != 0x00U)
 8004d94:	ea1e 0202 	ands.w	r2, lr, r2
 8004d98:	f000 80b9 	beq.w	8004f0e <HAL_GPIO_Init+0x19e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004d9c:	684e      	ldr	r6, [r1, #4]
 8004d9e:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8004da2:	f04f 0c03 	mov.w	ip, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004da6:	f006 0503 	and.w	r5, r6, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8004daa:	fa0c fc08 	lsl.w	ip, ip, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004dae:	1e6f      	subs	r7, r5, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8004db0:	ea6f 0c0c 	mvn.w	ip, ip
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004db4:	2f01      	cmp	r7, #1
 8004db6:	d834      	bhi.n	8004e22 <HAL_GPIO_Init+0xb2>
        temp = GPIOx->OSPEEDR;
 8004db8:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8004dba:	ea07 0a0c 	and.w	sl, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004dbe:	68cf      	ldr	r7, [r1, #12]
 8004dc0:	fa07 f708 	lsl.w	r7, r7, r8
 8004dc4:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8004dc8:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004dca:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8004dcc:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004dd0:	f3c6 1700 	ubfx	r7, r6, #4, #1
 8004dd4:	409f      	lsls	r7, r3
 8004dd6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8004dda:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8004ddc:	68c7      	ldr	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004dde:	2d02      	cmp	r5, #2
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8004de0:	ea07 0e0c 	and.w	lr, r7, ip
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004de4:	688f      	ldr	r7, [r1, #8]
 8004de6:	fa07 f708 	lsl.w	r7, r7, r8
 8004dea:	ea47 070e 	orr.w	r7, r7, lr
      GPIOx->PUPDR = temp;
 8004dee:	60c7      	str	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004df0:	d119      	bne.n	8004e26 <HAL_GPIO_Init+0xb6>
        temp = GPIOx->AFR[position >> 3U];
 8004df2:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8004df6:	f003 0b07 	and.w	fp, r3, #7
 8004dfa:	f04f 0e0f 	mov.w	lr, #15
 8004dfe:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
 8004e02:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
 8004e06:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8004e0a:	fa0e fe0b 	lsl.w	lr, lr, fp
 8004e0e:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 8004e12:	690f      	ldr	r7, [r1, #16]
 8004e14:	fa07 f70b 	lsl.w	r7, r7, fp
 8004e18:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8004e1c:	f8ca 7020 	str.w	r7, [sl, #32]
 8004e20:	e001      	b.n	8004e26 <HAL_GPIO_Init+0xb6>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004e22:	2d03      	cmp	r5, #3
 8004e24:	d1da      	bne.n	8004ddc <HAL_GPIO_Init+0x6c>
      temp = GPIOx->MODER;
 8004e26:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004e28:	fa05 f508 	lsl.w	r5, r5, r8
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004e2c:	f416 3f40 	tst.w	r6, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8004e30:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004e34:	ea47 0705 	orr.w	r7, r7, r5
      GPIOx->MODER = temp;
 8004e38:	6007      	str	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004e3a:	d068      	beq.n	8004f0e <HAL_GPIO_Init+0x19e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004e3c:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 8004e40:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8004e44:	f003 0c03 	and.w	ip, r3, #3
 8004e48:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004e4c:	f045 0502 	orr.w	r5, r5, #2
 8004e50:	f107 47b0 	add.w	r7, r7, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8004e54:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004e58:	f8c9 50f4 	str.w	r5, [r9, #244]	; 0xf4
 8004e5c:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 8004e60:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 8004e64:	f005 0502 	and.w	r5, r5, #2
 8004e68:	9501      	str	r5, [sp, #4]
 8004e6a:	9d01      	ldr	r5, [sp, #4]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8004e6c:	fa0e f50c 	lsl.w	r5, lr, ip
        temp = SYSCFG->EXTICR[position >> 2U];
 8004e70:	f8d7 8008 	ldr.w	r8, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8004e74:	ea28 0e05 	bic.w	lr, r8, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8004e78:	4d2e      	ldr	r5, [pc, #184]	; (8004f34 <HAL_GPIO_Init+0x1c4>)
 8004e7a:	42a8      	cmp	r0, r5
 8004e7c:	d049      	beq.n	8004f12 <HAL_GPIO_Init+0x1a2>
 8004e7e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004e82:	42a8      	cmp	r0, r5
 8004e84:	d047      	beq.n	8004f16 <HAL_GPIO_Init+0x1a6>
 8004e86:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004e8a:	42a8      	cmp	r0, r5
 8004e8c:	d045      	beq.n	8004f1a <HAL_GPIO_Init+0x1aa>
 8004e8e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004e92:	42a8      	cmp	r0, r5
 8004e94:	d043      	beq.n	8004f1e <HAL_GPIO_Init+0x1ae>
 8004e96:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004e9a:	42a8      	cmp	r0, r5
 8004e9c:	d041      	beq.n	8004f22 <HAL_GPIO_Init+0x1b2>
 8004e9e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004ea2:	42a8      	cmp	r0, r5
 8004ea4:	d03f      	beq.n	8004f26 <HAL_GPIO_Init+0x1b6>
 8004ea6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004eaa:	42a8      	cmp	r0, r5
 8004eac:	d03d      	beq.n	8004f2a <HAL_GPIO_Init+0x1ba>
 8004eae:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004eb2:	42a8      	cmp	r0, r5
 8004eb4:	d03b      	beq.n	8004f2e <HAL_GPIO_Init+0x1be>
 8004eb6:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8004eba:	42a8      	cmp	r0, r5
 8004ebc:	bf0c      	ite	eq
 8004ebe:	2509      	moveq	r5, #9
 8004ec0:	250a      	movne	r5, #10
 8004ec2:	fa05 f50c 	lsl.w	r5, r5, ip
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004ec6:	f416 1f80 	tst.w	r6, #1048576	; 0x100000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8004eca:	ea45 050e 	orr.w	r5, r5, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004ece:	60bd      	str	r5, [r7, #8]
        temp &= ~(iocurrent);
 8004ed0:	ea6f 0702 	mvn.w	r7, r2
        temp = EXTI->RTSR1;
 8004ed4:	6825      	ldr	r5, [r4, #0]
        temp &= ~(iocurrent);
 8004ed6:	bf0c      	ite	eq
 8004ed8:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8004eda:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004edc:	f416 1f00 	tst.w	r6, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
 8004ee0:	6025      	str	r5, [r4, #0]
        temp = EXTI->FTSR1;
 8004ee2:	6865      	ldr	r5, [r4, #4]
        temp &= ~(iocurrent);
 8004ee4:	bf0c      	ite	eq
 8004ee6:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8004ee8:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004eea:	f416 3f00 	tst.w	r6, #131072	; 0x20000
        EXTI->FTSR1 = temp;
 8004eee:	6065      	str	r5, [r4, #4]
        temp = EXTI_CurrentCPU->EMR1;
 8004ef0:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
        temp &= ~(iocurrent);
 8004ef4:	bf0c      	ite	eq
 8004ef6:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8004ef8:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004efa:	03f6      	lsls	r6, r6, #15
        EXTI_CurrentCPU->EMR1 = temp;
 8004efc:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
 8004f00:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80
        temp &= ~(iocurrent);
 8004f04:	bf54      	ite	pl
 8004f06:	403d      	andpl	r5, r7
          temp |= iocurrent;
 8004f08:	4315      	orrmi	r5, r2
        EXTI_CurrentCPU->IMR1 = temp;
 8004f0a:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
    position++;
 8004f0e:	3301      	adds	r3, #1
 8004f10:	e735      	b.n	8004d7e <HAL_GPIO_Init+0xe>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8004f12:	2500      	movs	r5, #0
 8004f14:	e7d5      	b.n	8004ec2 <HAL_GPIO_Init+0x152>
 8004f16:	2501      	movs	r5, #1
 8004f18:	e7d3      	b.n	8004ec2 <HAL_GPIO_Init+0x152>
 8004f1a:	2502      	movs	r5, #2
 8004f1c:	e7d1      	b.n	8004ec2 <HAL_GPIO_Init+0x152>
 8004f1e:	2503      	movs	r5, #3
 8004f20:	e7cf      	b.n	8004ec2 <HAL_GPIO_Init+0x152>
 8004f22:	2504      	movs	r5, #4
 8004f24:	e7cd      	b.n	8004ec2 <HAL_GPIO_Init+0x152>
 8004f26:	2505      	movs	r5, #5
 8004f28:	e7cb      	b.n	8004ec2 <HAL_GPIO_Init+0x152>
 8004f2a:	2506      	movs	r5, #6
 8004f2c:	e7c9      	b.n	8004ec2 <HAL_GPIO_Init+0x152>
 8004f2e:	2507      	movs	r5, #7
 8004f30:	e7c7      	b.n	8004ec2 <HAL_GPIO_Init+0x152>
 8004f32:	bf00      	nop
 8004f34:	58020000 	.word	0x58020000
 8004f38:	58024400 	.word	0x58024400

08004f3c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin: specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 8004f40:	2200      	movs	r2, #0
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8004f42:	f8df 8120 	ldr.w	r8, [pc, #288]	; 8005064 <HAL_GPIO_DeInit+0x128>
 8004f46:	f8df 9120 	ldr.w	r9, [pc, #288]	; 8005068 <HAL_GPIO_DeInit+0x12c>
 8004f4a:	f8df a120 	ldr.w	sl, [pc, #288]	; 800506c <HAL_GPIO_DeInit+0x130>
 8004f4e:	f8df b120 	ldr.w	fp, [pc, #288]	; 8005070 <HAL_GPIO_DeInit+0x134>
  while ((GPIO_Pin >> position) != 0x00U)
 8004f52:	fa31 f302 	lsrs.w	r3, r1, r2
 8004f56:	d101      	bne.n	8004f5c <HAL_GPIO_DeInit+0x20>
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
    }

    position++;
  }
}
 8004f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = GPIO_Pin & (1UL << position) ;
 8004f5c:	2301      	movs	r3, #1
 8004f5e:	fa03 fc02 	lsl.w	ip, r3, r2
    if (iocurrent != 0x00U)
 8004f62:	ea1c 0601 	ands.w	r6, ip, r1
 8004f66:	d069      	beq.n	800503c <HAL_GPIO_DeInit+0x100>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004f68:	f022 0403 	bic.w	r4, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8004f6c:	f002 0703 	and.w	r7, r2, #3
 8004f70:	250f      	movs	r5, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8004f72:	4b3b      	ldr	r3, [pc, #236]	; (8005060 <HAL_GPIO_DeInit+0x124>)
 8004f74:	f104 44b0 	add.w	r4, r4, #1476395008	; 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8004f78:	00bf      	lsls	r7, r7, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8004f7a:	4298      	cmp	r0, r3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8004f7c:	fa05 f507 	lsl.w	r5, r5, r7
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004f80:	f8d4 e408 	ldr.w	lr, [r4, #1032]	; 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8004f84:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004f88:	ea05 0e0e 	and.w	lr, r5, lr
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8004f8c:	d058      	beq.n	8005040 <HAL_GPIO_DeInit+0x104>
 8004f8e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004f92:	4298      	cmp	r0, r3
 8004f94:	d056      	beq.n	8005044 <HAL_GPIO_DeInit+0x108>
 8004f96:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004f9a:	4298      	cmp	r0, r3
 8004f9c:	d054      	beq.n	8005048 <HAL_GPIO_DeInit+0x10c>
 8004f9e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004fa2:	4298      	cmp	r0, r3
 8004fa4:	d052      	beq.n	800504c <HAL_GPIO_DeInit+0x110>
 8004fa6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004faa:	4298      	cmp	r0, r3
 8004fac:	d050      	beq.n	8005050 <HAL_GPIO_DeInit+0x114>
 8004fae:	4540      	cmp	r0, r8
 8004fb0:	d050      	beq.n	8005054 <HAL_GPIO_DeInit+0x118>
 8004fb2:	4548      	cmp	r0, r9
 8004fb4:	d050      	beq.n	8005058 <HAL_GPIO_DeInit+0x11c>
 8004fb6:	4550      	cmp	r0, sl
 8004fb8:	d050      	beq.n	800505c <HAL_GPIO_DeInit+0x120>
 8004fba:	4558      	cmp	r0, fp
 8004fbc:	bf0c      	ite	eq
 8004fbe:	2309      	moveq	r3, #9
 8004fc0:	230a      	movne	r3, #10
 8004fc2:	40bb      	lsls	r3, r7
 8004fc4:	4573      	cmp	r3, lr
 8004fc6:	d119      	bne.n	8004ffc <HAL_GPIO_DeInit+0xc0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
 8004fc8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004fcc:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
 8004fd0:	ea27 0706 	bic.w	r7, r7, r6
 8004fd4:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
 8004fd8:	f8d3 7084 	ldr.w	r7, [r3, #132]	; 0x84
 8004fdc:	ea27 0706 	bic.w	r7, r7, r6
 8004fe0:	f8c3 7084 	str.w	r7, [r3, #132]	; 0x84
        EXTI->FTSR1 &= ~(iocurrent);
 8004fe4:	685f      	ldr	r7, [r3, #4]
 8004fe6:	ea27 0706 	bic.w	r7, r7, r6
 8004fea:	605f      	str	r7, [r3, #4]
        EXTI->RTSR1 &= ~(iocurrent);
 8004fec:	681f      	ldr	r7, [r3, #0]
 8004fee:	ea27 0606 	bic.w	r6, r7, r6
 8004ff2:	601e      	str	r6, [r3, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8004ff4:	68a3      	ldr	r3, [r4, #8]
 8004ff6:	ea23 0305 	bic.w	r3, r3, r5
 8004ffa:	60a3      	str	r3, [r4, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8004ffc:	2503      	movs	r5, #3
 8004ffe:	0053      	lsls	r3, r2, #1
 8005000:	6804      	ldr	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8005002:	f002 0707 	and.w	r7, r2, #7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8005006:	fa05 f303 	lsl.w	r3, r5, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 800500a:	260f      	movs	r6, #15
 800500c:	00bf      	lsls	r7, r7, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 800500e:	431c      	orrs	r4, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8005010:	40be      	lsls	r6, r7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8005012:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8005014:	fa22 f405 	lsr.w	r4, r2, r5
 8005018:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 800501c:	6a25      	ldr	r5, [r4, #32]
 800501e:	ea25 0606 	bic.w	r6, r5, r6
 8005022:	6226      	str	r6, [r4, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8005024:	68c4      	ldr	r4, [r0, #12]
 8005026:	ea24 0403 	bic.w	r4, r4, r3
 800502a:	60c4      	str	r4, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
 800502c:	6844      	ldr	r4, [r0, #4]
 800502e:	ea24 040c 	bic.w	r4, r4, ip
 8005032:	6044      	str	r4, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8005034:	6884      	ldr	r4, [r0, #8]
 8005036:	ea24 0303 	bic.w	r3, r4, r3
 800503a:	6083      	str	r3, [r0, #8]
    position++;
 800503c:	3201      	adds	r2, #1
 800503e:	e788      	b.n	8004f52 <HAL_GPIO_DeInit+0x16>
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8005040:	2300      	movs	r3, #0
 8005042:	e7be      	b.n	8004fc2 <HAL_GPIO_DeInit+0x86>
 8005044:	2301      	movs	r3, #1
 8005046:	e7bc      	b.n	8004fc2 <HAL_GPIO_DeInit+0x86>
 8005048:	2302      	movs	r3, #2
 800504a:	e7ba      	b.n	8004fc2 <HAL_GPIO_DeInit+0x86>
 800504c:	2303      	movs	r3, #3
 800504e:	e7b8      	b.n	8004fc2 <HAL_GPIO_DeInit+0x86>
 8005050:	2304      	movs	r3, #4
 8005052:	e7b6      	b.n	8004fc2 <HAL_GPIO_DeInit+0x86>
 8005054:	2305      	movs	r3, #5
 8005056:	e7b4      	b.n	8004fc2 <HAL_GPIO_DeInit+0x86>
 8005058:	2306      	movs	r3, #6
 800505a:	e7b2      	b.n	8004fc2 <HAL_GPIO_DeInit+0x86>
 800505c:	2307      	movs	r3, #7
 800505e:	e7b0      	b.n	8004fc2 <HAL_GPIO_DeInit+0x86>
 8005060:	58020000 	.word	0x58020000
 8005064:	58021400 	.word	0x58021400
 8005068:	58021800 	.word	0x58021800
 800506c:	58021c00 	.word	0x58021c00
 8005070:	58022400 	.word	0x58022400

08005074 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
 8005074:	6903      	ldr	r3, [r0, #16]
 8005076:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8005078:	bf14      	ite	ne
 800507a:	2001      	movne	r0, #1
 800507c:	2000      	moveq	r0, #0
 800507e:	4770      	bx	lr

08005080 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8005080:	b10a      	cbz	r2, 8005086 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8005082:	6181      	str	r1, [r0, #24]
  }
}
 8005084:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8005086:	0409      	lsls	r1, r1, #16
 8005088:	e7fb      	b.n	8005082 <HAL_GPIO_WritePin+0x2>

0800508a <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800508a:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800508c:	ea01 0203 	and.w	r2, r1, r3
 8005090:	ea21 0103 	bic.w	r1, r1, r3
 8005094:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005098:	6181      	str	r1, [r0, #24]
}
 800509a:	4770      	bx	lr

0800509c <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 800509c:	6803      	ldr	r3, [r0, #0]
 800509e:	699a      	ldr	r2, [r3, #24]
 80050a0:	0791      	lsls	r1, r2, #30
 80050a2:	d501      	bpl.n	80050a8 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 80050a4:	2200      	movs	r2, #0
 80050a6:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80050a8:	699a      	ldr	r2, [r3, #24]
 80050aa:	07d2      	lsls	r2, r2, #31
 80050ac:	d403      	bmi.n	80050b6 <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 80050ae:	699a      	ldr	r2, [r3, #24]
 80050b0:	f042 0201 	orr.w	r2, r2, #1
 80050b4:	619a      	str	r2, [r3, #24]
  }
}
 80050b6:	4770      	bx	lr

080050b8 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 80050b8:	b530      	push	{r4, r5, lr}
 80050ba:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80050bc:	f3c1 0109 	ubfx	r1, r1, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 80050c0:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80050c2:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 80050c4:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80050c6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 80050ca:	4a05      	ldr	r2, [pc, #20]	; (80050e0 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80050cc:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 80050ce:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80050d2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 80050d6:	ea20 0002 	bic.w	r0, r0, r2
 80050da:	4303      	orrs	r3, r0
 80050dc:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 80050de:	bd30      	pop	{r4, r5, pc}
 80050e0:	03ff63ff 	.word	0x03ff63ff

080050e4 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 80050e4:	6803      	ldr	r3, [r0, #0]
{
 80050e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 80050ea:	699c      	ldr	r4, [r3, #24]
{
 80050ec:	4605      	mov	r5, r0
 80050ee:	460f      	mov	r7, r1
 80050f0:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 80050f2:	f014 0410 	ands.w	r4, r4, #16
 80050f6:	d070      	beq.n	80051da <I2C_IsErrorOccurred+0xf6>
  uint32_t error_code = 0;
 80050f8:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80050fa:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 80050fc:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80050fe:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8005100:	682b      	ldr	r3, [r5, #0]
 8005102:	699a      	ldr	r2, [r3, #24]
 8005104:	0692      	lsls	r2, r2, #26
 8005106:	d462      	bmi.n	80051ce <I2C_IsErrorOccurred+0xea>
 8005108:	f1b8 0f00 	cmp.w	r8, #0
 800510c:	d036      	beq.n	800517c <I2C_IsErrorOccurred+0x98>
    error_code |= HAL_I2C_ERROR_AF;
 800510e:	f044 0404 	orr.w	r4, r4, #4
    status = HAL_ERROR;
 8005112:	2001      	movs	r0, #1
  itflag = hi2c->Instance->ISR;
 8005114:	682b      	ldr	r3, [r5, #0]
 8005116:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8005118:	05d6      	lsls	r6, r2, #23
 800511a:	d505      	bpl.n	8005128 <I2C_IsErrorOccurred+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 800511c:	f44f 7180 	mov.w	r1, #256	; 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 8005120:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 8005124:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8005126:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8005128:	0551      	lsls	r1, r2, #21
 800512a:	d505      	bpl.n	8005138 <I2C_IsErrorOccurred+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 800512c:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 8005130:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 8005134:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8005136:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8005138:	0592      	lsls	r2, r2, #22
 800513a:	d550      	bpl.n	80051de <I2C_IsErrorOccurred+0xfa>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 800513c:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8005140:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8005144:	61da      	str	r2, [r3, #28]
    I2C_Flush_TXDR(hi2c);
 8005146:	4628      	mov	r0, r5
 8005148:	f7ff ffa8 	bl	800509c <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 800514c:	682a      	ldr	r2, [r5, #0]
    __HAL_UNLOCK(hi2c);
 800514e:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8005150:	6853      	ldr	r3, [r2, #4]
 8005152:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 8005156:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 800515a:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 800515e:	f023 0301 	bic.w	r3, r3, #1
 8005162:	6053      	str	r3, [r2, #4]
    hi2c->ErrorCode |= error_code;
 8005164:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8005166:	431c      	orrs	r4, r3
    hi2c->State = HAL_I2C_STATE_READY;
 8005168:	2320      	movs	r3, #32
    hi2c->ErrorCode |= error_code;
 800516a:	646c      	str	r4, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 800516c:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005170:	2300      	movs	r3, #0
 8005172:	f885 3042 	strb.w	r3, [r5, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8005176:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
 800517a:	e032      	b.n	80051e2 <I2C_IsErrorOccurred+0xfe>
      if (Timeout != HAL_MAX_DELAY)
 800517c:	1c7a      	adds	r2, r7, #1
 800517e:	d0c0      	beq.n	8005102 <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8005180:	f7ff fc18 	bl	80049b4 <HAL_GetTick>
 8005184:	1b80      	subs	r0, r0, r6
 8005186:	42b8      	cmp	r0, r7
 8005188:	d801      	bhi.n	800518e <I2C_IsErrorOccurred+0xaa>
 800518a:	2f00      	cmp	r7, #0
 800518c:	d1b8      	bne.n	8005100 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 800518e:	682b      	ldr	r3, [r5, #0]
 8005190:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8005192:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8005196:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8005198:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 800519a:	0400      	lsls	r0, r0, #16
 800519c:	d50a      	bpl.n	80051b4 <I2C_IsErrorOccurred+0xd0>
 800519e:	0448      	lsls	r0, r1, #17
 80051a0:	d408      	bmi.n	80051b4 <I2C_IsErrorOccurred+0xd0>
              (tmp1 != I2C_CR2_STOP) && \
 80051a2:	2a20      	cmp	r2, #32
 80051a4:	d006      	beq.n	80051b4 <I2C_IsErrorOccurred+0xd0>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 80051a6:	685a      	ldr	r2, [r3, #4]
 80051a8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80051ac:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 80051ae:	f7ff fc01 	bl	80049b4 <HAL_GetTick>
 80051b2:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80051b4:	682b      	ldr	r3, [r5, #0]
 80051b6:	699b      	ldr	r3, [r3, #24]
 80051b8:	0699      	lsls	r1, r3, #26
 80051ba:	d4a1      	bmi.n	8005100 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 80051bc:	f7ff fbfa 	bl	80049b4 <HAL_GetTick>
 80051c0:	1b80      	subs	r0, r0, r6
 80051c2:	2819      	cmp	r0, #25
 80051c4:	d9f6      	bls.n	80051b4 <I2C_IsErrorOccurred+0xd0>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 80051c6:	2420      	movs	r4, #32
              status = HAL_ERROR;
 80051c8:	f04f 0801 	mov.w	r8, #1
 80051cc:	e798      	b.n	8005100 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 80051ce:	f1b8 0f00 	cmp.w	r8, #0
 80051d2:	d19c      	bne.n	800510e <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80051d4:	2220      	movs	r2, #32
 80051d6:	61da      	str	r2, [r3, #28]
 80051d8:	e799      	b.n	800510e <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 80051da:	4620      	mov	r0, r4
 80051dc:	e79a      	b.n	8005114 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 80051de:	2800      	cmp	r0, #0
 80051e0:	d1b1      	bne.n	8005146 <I2C_IsErrorOccurred+0x62>
}
 80051e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080051e6 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 80051e6:	b570      	push	{r4, r5, r6, lr}
 80051e8:	4604      	mov	r4, r0
 80051ea:	460d      	mov	r5, r1
 80051ec:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 80051ee:	6823      	ldr	r3, [r4, #0]
 80051f0:	699b      	ldr	r3, [r3, #24]
 80051f2:	079b      	lsls	r3, r3, #30
 80051f4:	d501      	bpl.n	80051fa <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 80051f6:	2000      	movs	r0, #0
}
 80051f8:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80051fa:	4632      	mov	r2, r6
 80051fc:	4629      	mov	r1, r5
 80051fe:	4620      	mov	r0, r4
 8005200:	f7ff ff70 	bl	80050e4 <I2C_IsErrorOccurred>
 8005204:	b9c0      	cbnz	r0, 8005238 <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 8005206:	1c6a      	adds	r2, r5, #1
 8005208:	d0f1      	beq.n	80051ee <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800520a:	f7ff fbd3 	bl	80049b4 <HAL_GetTick>
 800520e:	1b80      	subs	r0, r0, r6
 8005210:	42a8      	cmp	r0, r5
 8005212:	d801      	bhi.n	8005218 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8005214:	2d00      	cmp	r5, #0
 8005216:	d1ea      	bne.n	80051ee <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8005218:	6823      	ldr	r3, [r4, #0]
 800521a:	699b      	ldr	r3, [r3, #24]
 800521c:	f013 0302 	ands.w	r3, r3, #2
 8005220:	d1e5      	bne.n	80051ee <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005222:	6c62      	ldr	r2, [r4, #68]	; 0x44
          __HAL_UNLOCK(hi2c);
 8005224:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005228:	f042 0220 	orr.w	r2, r2, #32
 800522c:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 800522e:	2220      	movs	r2, #32
 8005230:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8005234:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      return HAL_ERROR;
 8005238:	2001      	movs	r0, #1
 800523a:	e7dd      	b.n	80051f8 <I2C_WaitOnTXISFlagUntilTimeout+0x12>

0800523c <I2C_WaitOnFlagUntilTimeout>:
{
 800523c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005240:	9f06      	ldr	r7, [sp, #24]
 8005242:	4604      	mov	r4, r0
 8005244:	4688      	mov	r8, r1
 8005246:	4616      	mov	r6, r2
 8005248:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800524a:	6822      	ldr	r2, [r4, #0]
 800524c:	6993      	ldr	r3, [r2, #24]
 800524e:	ea38 0303 	bics.w	r3, r8, r3
 8005252:	bf0c      	ite	eq
 8005254:	2301      	moveq	r3, #1
 8005256:	2300      	movne	r3, #0
 8005258:	42b3      	cmp	r3, r6
 800525a:	d001      	beq.n	8005260 <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 800525c:	2000      	movs	r0, #0
 800525e:	e01e      	b.n	800529e <I2C_WaitOnFlagUntilTimeout+0x62>
    if (Timeout != HAL_MAX_DELAY)
 8005260:	1c6b      	adds	r3, r5, #1
 8005262:	d0f3      	beq.n	800524c <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005264:	f7ff fba6 	bl	80049b4 <HAL_GetTick>
 8005268:	1bc0      	subs	r0, r0, r7
 800526a:	42a8      	cmp	r0, r5
 800526c:	d801      	bhi.n	8005272 <I2C_WaitOnFlagUntilTimeout+0x36>
 800526e:	2d00      	cmp	r5, #0
 8005270:	d1eb      	bne.n	800524a <I2C_WaitOnFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8005272:	6823      	ldr	r3, [r4, #0]
 8005274:	699b      	ldr	r3, [r3, #24]
 8005276:	ea38 0303 	bics.w	r3, r8, r3
 800527a:	bf0c      	ite	eq
 800527c:	2301      	moveq	r3, #1
 800527e:	2300      	movne	r3, #0
 8005280:	42b3      	cmp	r3, r6
 8005282:	d1e2      	bne.n	800524a <I2C_WaitOnFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005284:	6c63      	ldr	r3, [r4, #68]	; 0x44
          return HAL_ERROR;
 8005286:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005288:	f043 0320 	orr.w	r3, r3, #32
 800528c:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 800528e:	2320      	movs	r3, #32
 8005290:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8005294:	2300      	movs	r3, #0
 8005296:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          __HAL_UNLOCK(hi2c);
 800529a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800529e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080052a2 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 80052a2:	b570      	push	{r4, r5, r6, lr}
 80052a4:	4604      	mov	r4, r0
 80052a6:	460d      	mov	r5, r1
 80052a8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80052aa:	6823      	ldr	r3, [r4, #0]
 80052ac:	699b      	ldr	r3, [r3, #24]
 80052ae:	069b      	lsls	r3, r3, #26
 80052b0:	d501      	bpl.n	80052b6 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 80052b2:	2000      	movs	r0, #0
}
 80052b4:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80052b6:	4632      	mov	r2, r6
 80052b8:	4629      	mov	r1, r5
 80052ba:	4620      	mov	r0, r4
 80052bc:	f7ff ff12 	bl	80050e4 <I2C_IsErrorOccurred>
 80052c0:	b9b0      	cbnz	r0, 80052f0 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80052c2:	f7ff fb77 	bl	80049b4 <HAL_GetTick>
 80052c6:	1b80      	subs	r0, r0, r6
 80052c8:	42a8      	cmp	r0, r5
 80052ca:	d801      	bhi.n	80052d0 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 80052cc:	2d00      	cmp	r5, #0
 80052ce:	d1ec      	bne.n	80052aa <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 80052d0:	6823      	ldr	r3, [r4, #0]
 80052d2:	699b      	ldr	r3, [r3, #24]
 80052d4:	f013 0320 	ands.w	r3, r3, #32
 80052d8:	d1e7      	bne.n	80052aa <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80052da:	6c62      	ldr	r2, [r4, #68]	; 0x44
        __HAL_UNLOCK(hi2c);
 80052dc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80052e0:	f042 0220 	orr.w	r2, r2, #32
 80052e4:	6462      	str	r2, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80052e6:	2220      	movs	r2, #32
 80052e8:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80052ec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      return HAL_ERROR;
 80052f0:	2001      	movs	r0, #1
 80052f2:	e7df      	b.n	80052b4 <I2C_WaitOnSTOPFlagUntilTimeout+0x12>

080052f4 <HAL_I2C_MspInit>:
}
 80052f4:	4770      	bx	lr

080052f6 <HAL_I2C_Init>:
{
 80052f6:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 80052f8:	4604      	mov	r4, r0
 80052fa:	2800      	cmp	r0, #0
 80052fc:	d04a      	beq.n	8005394 <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80052fe:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005302:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005306:	b91b      	cbnz	r3, 8005310 <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8005308:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 800530c:	f7ff fff2 	bl	80052f4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005310:	2324      	movs	r3, #36	; 0x24
 8005312:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005316:	6823      	ldr	r3, [r4, #0]
 8005318:	681a      	ldr	r2, [r3, #0]
 800531a:	f022 0201 	bic.w	r2, r2, #1
 800531e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8005320:	6862      	ldr	r2, [r4, #4]
 8005322:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005326:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8005328:	689a      	ldr	r2, [r3, #8]
 800532a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800532e:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005330:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005334:	2901      	cmp	r1, #1
 8005336:	d124      	bne.n	8005382 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005338:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800533c:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 800533e:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005340:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8005342:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8005346:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800534a:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 800534c:	68da      	ldr	r2, [r3, #12]
 800534e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005352:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005354:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8005358:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 800535a:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 800535c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005360:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8005362:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8005366:	430a      	orrs	r2, r1
 8005368:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 800536a:	681a      	ldr	r2, [r3, #0]
 800536c:	f042 0201 	orr.w	r2, r2, #1
 8005370:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8005372:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005374:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8005376:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 800537a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800537c:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8005380:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005382:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005386:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005388:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 800538a:	d1d8      	bne.n	800533e <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 800538c:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8005390:	605a      	str	r2, [r3, #4]
 8005392:	e7d4      	b.n	800533e <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8005394:	2001      	movs	r0, #1
 8005396:	e7f3      	b.n	8005380 <HAL_I2C_Init+0x8a>

08005398 <HAL_I2C_MspDeInit>:
 8005398:	4770      	bx	lr

0800539a <HAL_I2C_DeInit>:
{
 800539a:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800539c:	4604      	mov	r4, r0
 800539e:	b198      	cbz	r0, 80053c8 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 80053a0:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 80053a2:	2324      	movs	r3, #36	; 0x24
 80053a4:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 80053a8:	6813      	ldr	r3, [r2, #0]
 80053aa:	f023 0301 	bic.w	r3, r3, #1
 80053ae:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 80053b0:	f7ff fff2 	bl	8005398 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80053b4:	2000      	movs	r0, #0
 80053b6:	6460      	str	r0, [r4, #68]	; 0x44
  __HAL_UNLOCK(hi2c);
 80053b8:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 80053bc:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 80053c0:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80053c2:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 80053c6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80053c8:	2001      	movs	r0, #1
 80053ca:	e7fc      	b.n	80053c6 <HAL_I2C_DeInit+0x2c>

080053cc <HAL_I2C_Mem_Write>:
{
 80053cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80053d0:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 80053d2:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
 80053d6:	4604      	mov	r4, r0
 80053d8:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 80053da:	2b20      	cmp	r3, #32
{
 80053dc:	4616      	mov	r6, r2
 80053de:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 80053e2:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 80053e6:	f040 80c6 	bne.w	8005576 <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 80053ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80053ec:	b113      	cbz	r3, 80053f4 <HAL_I2C_Mem_Write+0x28>
 80053ee:	f1ba 0f00 	cmp.w	sl, #0
 80053f2:	d106      	bne.n	8005402 <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80053f4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80053f8:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 80053fa:	2001      	movs	r0, #1
}
 80053fc:	b003      	add	sp, #12
 80053fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8005402:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005406:	2b01      	cmp	r3, #1
 8005408:	f000 80b5 	beq.w	8005576 <HAL_I2C_Mem_Write+0x1aa>
 800540c:	f04f 0b01 	mov.w	fp, #1
 8005410:	f880 b040 	strb.w	fp, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8005414:	f7ff face 	bl	80049b4 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005418:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 800541a:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800541c:	9000      	str	r0, [sp, #0]
 800541e:	465a      	mov	r2, fp
 8005420:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005424:	4620      	mov	r0, r4
 8005426:	f7ff ff09 	bl	800523c <I2C_WaitOnFlagUntilTimeout>
 800542a:	2800      	cmp	r0, #0
 800542c:	d1e5      	bne.n	80053fa <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800542e:	2321      	movs	r3, #33	; 0x21
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005430:	fa5f f289 	uxtb.w	r2, r9
 8005434:	4639      	mov	r1, r7
    hi2c->XferISR   = NULL;
 8005436:	6360      	str	r0, [r4, #52]	; 0x34
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005438:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800543c:	2340      	movs	r3, #64	; 0x40
 800543e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 8005442:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005444:	6460      	str	r0, [r4, #68]	; 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005446:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8005448:	6263      	str	r3, [r4, #36]	; 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 800544a:	4b4c      	ldr	r3, [pc, #304]	; (800557c <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferCount = Size;
 800544c:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005450:	9300      	str	r3, [sp, #0]
 8005452:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005456:	f7ff fe2f 	bl	80050b8 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800545a:	462a      	mov	r2, r5
 800545c:	4641      	mov	r1, r8
 800545e:	4620      	mov	r0, r4
 8005460:	f7ff fec1 	bl	80051e6 <I2C_WaitOnTXISFlagUntilTimeout>
 8005464:	bb18      	cbnz	r0, 80054ae <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005466:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800546a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800546c:	d115      	bne.n	800549a <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800546e:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8005470:	2200      	movs	r2, #0
 8005472:	2180      	movs	r1, #128	; 0x80
 8005474:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005476:	629e      	str	r6, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8005478:	4643      	mov	r3, r8
 800547a:	9500      	str	r5, [sp, #0]
 800547c:	f7ff fede 	bl	800523c <I2C_WaitOnFlagUntilTimeout>
 8005480:	b9a8      	cbnz	r0, 80054ae <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005482:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005484:	b29b      	uxth	r3, r3
 8005486:	2bff      	cmp	r3, #255	; 0xff
 8005488:	d815      	bhi.n	80054b6 <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 800548a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800548c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005490:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = hi2c->XferCount;
 8005492:	b292      	uxth	r2, r2
 8005494:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005496:	b2d2      	uxtb	r2, r2
 8005498:	e012      	b.n	80054c0 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800549a:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800549c:	4641      	mov	r1, r8
 800549e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80054a0:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80054a2:	462a      	mov	r2, r5
 80054a4:	f7ff fe9f 	bl	80051e6 <I2C_WaitOnTXISFlagUntilTimeout>
 80054a8:	b908      	cbnz	r0, 80054ae <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80054aa:	6823      	ldr	r3, [r4, #0]
 80054ac:	e7df      	b.n	800546e <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 80054ae:	2300      	movs	r3, #0
 80054b0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80054b4:	e7a1      	b.n	80053fa <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80054b6:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80054b8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80054bc:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80054be:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80054c0:	4639      	mov	r1, r7
 80054c2:	4620      	mov	r0, r4
 80054c4:	f7ff fdf8 	bl	80050b8 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80054c8:	462a      	mov	r2, r5
 80054ca:	4641      	mov	r1, r8
 80054cc:	4620      	mov	r0, r4
 80054ce:	f7ff fe8a 	bl	80051e6 <I2C_WaitOnTXISFlagUntilTimeout>
 80054d2:	2800      	cmp	r0, #0
 80054d4:	d191      	bne.n	80053fa <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 80054d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80054d8:	6822      	ldr	r2, [r4, #0]
 80054da:	f813 1b01 	ldrb.w	r1, [r3], #1
 80054de:	6291      	str	r1, [r2, #40]	; 0x28
      hi2c->pBuffPtr++;
 80054e0:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80054e2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80054e4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80054e6:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 80054e8:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 80054ea:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 80054ec:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 80054ee:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80054f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80054f2:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80054f4:	b29b      	uxth	r3, r3
 80054f6:	b1b3      	cbz	r3, 8005526 <HAL_I2C_Mem_Write+0x15a>
 80054f8:	b9aa      	cbnz	r2, 8005526 <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80054fa:	4643      	mov	r3, r8
 80054fc:	2180      	movs	r1, #128	; 0x80
 80054fe:	4620      	mov	r0, r4
 8005500:	9500      	str	r5, [sp, #0]
 8005502:	f7ff fe9b 	bl	800523c <I2C_WaitOnFlagUntilTimeout>
 8005506:	2800      	cmp	r0, #0
 8005508:	f47f af77 	bne.w	80053fa <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800550c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800550e:	b29b      	uxth	r3, r3
 8005510:	2bff      	cmp	r3, #255	; 0xff
 8005512:	d928      	bls.n	8005566 <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005514:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005516:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800551a:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800551c:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800551e:	4639      	mov	r1, r7
 8005520:	4620      	mov	r0, r4
 8005522:	f7ff fdc9 	bl	80050b8 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005526:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005528:	b29b      	uxth	r3, r3
 800552a:	2b00      	cmp	r3, #0
 800552c:	d1cc      	bne.n	80054c8 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800552e:	462a      	mov	r2, r5
 8005530:	4641      	mov	r1, r8
 8005532:	4620      	mov	r0, r4
 8005534:	f7ff feb5 	bl	80052a2 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005538:	2800      	cmp	r0, #0
 800553a:	f47f af5e 	bne.w	80053fa <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800553e:	6823      	ldr	r3, [r4, #0]
 8005540:	2120      	movs	r1, #32
 8005542:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005544:	685a      	ldr	r2, [r3, #4]
 8005546:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 800554a:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 800554e:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8005552:	f022 0201 	bic.w	r2, r2, #1
 8005556:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005558:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 800555c:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005560:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8005564:	e74a      	b.n	80053fc <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005566:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005568:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800556c:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 800556e:	b292      	uxth	r2, r2
 8005570:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005572:	b2d2      	uxtb	r2, r2
 8005574:	e7d3      	b.n	800551e <HAL_I2C_Mem_Write+0x152>
    return HAL_BUSY;
 8005576:	2002      	movs	r0, #2
 8005578:	e740      	b.n	80053fc <HAL_I2C_Mem_Write+0x30>
 800557a:	bf00      	nop
 800557c:	80002000 	.word	0x80002000

08005580 <HAL_I2C_Mem_Read>:
{
 8005580:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005584:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005586:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
 800558a:	4604      	mov	r4, r0
 800558c:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 800558e:	2b20      	cmp	r3, #32
{
 8005590:	4616      	mov	r6, r2
 8005592:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8005596:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 800559a:	f040 80c9 	bne.w	8005730 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 800559e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80055a0:	b113      	cbz	r3, 80055a8 <HAL_I2C_Mem_Read+0x28>
 80055a2:	f1ba 0f00 	cmp.w	sl, #0
 80055a6:	d106      	bne.n	80055b6 <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80055a8:	f44f 7300 	mov.w	r3, #512	; 0x200
 80055ac:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 80055ae:	2001      	movs	r0, #1
}
 80055b0:	b003      	add	sp, #12
 80055b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 80055b6:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 80055ba:	2b01      	cmp	r3, #1
 80055bc:	f000 80b8 	beq.w	8005730 <HAL_I2C_Mem_Read+0x1b0>
 80055c0:	f04f 0b01 	mov.w	fp, #1
 80055c4:	f880 b040 	strb.w	fp, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 80055c8:	f7ff f9f4 	bl	80049b4 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80055cc:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 80055ce:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80055d0:	9000      	str	r0, [sp, #0]
 80055d2:	465a      	mov	r2, fp
 80055d4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80055d8:	4620      	mov	r0, r4
 80055da:	f7ff fe2f 	bl	800523c <I2C_WaitOnFlagUntilTimeout>
 80055de:	2800      	cmp	r0, #0
 80055e0:	d1e5      	bne.n	80055ae <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80055e2:	2322      	movs	r3, #34	; 0x22
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80055e4:	fa5f f289 	uxtb.w	r2, r9
 80055e8:	4639      	mov	r1, r7
    hi2c->XferISR   = NULL;
 80055ea:	6360      	str	r0, [r4, #52]	; 0x34
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80055ec:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80055f0:	2340      	movs	r3, #64	; 0x40
 80055f2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 80055f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80055f8:	6460      	str	r0, [r4, #68]	; 0x44
    hi2c->pBuffPtr  = pData;
 80055fa:	6263      	str	r3, [r4, #36]	; 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80055fc:	4b4d      	ldr	r3, [pc, #308]	; (8005734 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferCount = Size;
 80055fe:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005602:	9300      	str	r3, [sp, #0]
 8005604:	4603      	mov	r3, r0
 8005606:	4620      	mov	r0, r4
 8005608:	f7ff fd56 	bl	80050b8 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800560c:	462a      	mov	r2, r5
 800560e:	4641      	mov	r1, r8
 8005610:	4620      	mov	r0, r4
 8005612:	f7ff fde8 	bl	80051e6 <I2C_WaitOnTXISFlagUntilTimeout>
 8005616:	bb20      	cbnz	r0, 8005662 <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005618:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800561c:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800561e:	d116      	bne.n	800564e <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005620:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005622:	2200      	movs	r2, #0
 8005624:	2140      	movs	r1, #64	; 0x40
 8005626:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005628:	629e      	str	r6, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 800562a:	4643      	mov	r3, r8
 800562c:	9500      	str	r5, [sp, #0]
 800562e:	f7ff fe05 	bl	800523c <I2C_WaitOnFlagUntilTimeout>
 8005632:	b9b0      	cbnz	r0, 8005662 <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005634:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005636:	b29b      	uxth	r3, r3
 8005638:	2bff      	cmp	r3, #255	; 0xff
 800563a:	4b3f      	ldr	r3, [pc, #252]	; (8005738 <HAL_I2C_Mem_Read+0x1b8>)
 800563c:	d815      	bhi.n	800566a <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 800563e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005640:	9300      	str	r3, [sp, #0]
 8005642:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8005646:	b292      	uxth	r2, r2
 8005648:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800564a:	b2d2      	uxtb	r2, r2
 800564c:	e012      	b.n	8005674 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800564e:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005650:	4641      	mov	r1, r8
 8005652:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005654:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005656:	462a      	mov	r2, r5
 8005658:	f7ff fdc5 	bl	80051e6 <I2C_WaitOnTXISFlagUntilTimeout>
 800565c:	b908      	cbnz	r0, 8005662 <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800565e:	6823      	ldr	r3, [r4, #0]
 8005660:	e7de      	b.n	8005620 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 8005662:	2300      	movs	r3, #0
 8005664:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8005668:	e7a1      	b.n	80055ae <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800566a:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800566c:	9300      	str	r3, [sp, #0]
 800566e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005672:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005674:	4639      	mov	r1, r7
 8005676:	4620      	mov	r0, r4
 8005678:	f7ff fd1e 	bl	80050b8 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 800567c:	4643      	mov	r3, r8
 800567e:	2200      	movs	r2, #0
 8005680:	2104      	movs	r1, #4
 8005682:	4620      	mov	r0, r4
 8005684:	9500      	str	r5, [sp, #0]
 8005686:	f7ff fdd9 	bl	800523c <I2C_WaitOnFlagUntilTimeout>
 800568a:	2800      	cmp	r0, #0
 800568c:	d18f      	bne.n	80055ae <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 800568e:	6823      	ldr	r3, [r4, #0]
 8005690:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005692:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005694:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8005696:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8005698:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->pBuffPtr++;
 800569a:	3301      	adds	r3, #1
      hi2c->XferSize--;
 800569c:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800569e:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80056a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80056a2:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 80056a4:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 80056a6:	8522      	strh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80056a8:	b29b      	uxth	r3, r3
 80056aa:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80056ac:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80056ae:	b29b      	uxth	r3, r3
 80056b0:	b1b3      	cbz	r3, 80056e0 <HAL_I2C_Mem_Read+0x160>
 80056b2:	b9aa      	cbnz	r2, 80056e0 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80056b4:	4643      	mov	r3, r8
 80056b6:	2180      	movs	r1, #128	; 0x80
 80056b8:	4620      	mov	r0, r4
 80056ba:	9500      	str	r5, [sp, #0]
 80056bc:	f7ff fdbe 	bl	800523c <I2C_WaitOnFlagUntilTimeout>
 80056c0:	2800      	cmp	r0, #0
 80056c2:	f47f af74 	bne.w	80055ae <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80056c6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80056c8:	b29b      	uxth	r3, r3
 80056ca:	2bff      	cmp	r3, #255	; 0xff
 80056cc:	d928      	bls.n	8005720 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80056ce:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 80056d0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80056d4:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80056d6:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80056d8:	4639      	mov	r1, r7
 80056da:	4620      	mov	r0, r4
 80056dc:	f7ff fcec 	bl	80050b8 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 80056e0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80056e2:	b29b      	uxth	r3, r3
 80056e4:	2b00      	cmp	r3, #0
 80056e6:	d1c9      	bne.n	800567c <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80056e8:	462a      	mov	r2, r5
 80056ea:	4641      	mov	r1, r8
 80056ec:	4620      	mov	r0, r4
 80056ee:	f7ff fdd8 	bl	80052a2 <I2C_WaitOnSTOPFlagUntilTimeout>
 80056f2:	2800      	cmp	r0, #0
 80056f4:	f47f af5b 	bne.w	80055ae <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80056f8:	6823      	ldr	r3, [r4, #0]
 80056fa:	2120      	movs	r1, #32
 80056fc:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80056fe:	685a      	ldr	r2, [r3, #4]
 8005700:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8005704:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8005708:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 800570c:	f022 0201 	bic.w	r2, r2, #1
 8005710:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005712:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005716:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 800571a:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 800571e:	e747      	b.n	80055b0 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005720:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005722:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005726:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 8005728:	b292      	uxth	r2, r2
 800572a:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800572c:	b2d2      	uxtb	r2, r2
 800572e:	e7d3      	b.n	80056d8 <HAL_I2C_Mem_Read+0x158>
    return HAL_BUSY;
 8005730:	2002      	movs	r0, #2
 8005732:	e73d      	b.n	80055b0 <HAL_I2C_Mem_Read+0x30>
 8005734:	80002000 	.word	0x80002000
 8005738:	80002400 	.word	0x80002400

0800573c <HAL_I2C_GetState>:
  return hi2c->State;
 800573c:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
 8005740:	4770      	bx	lr

08005742 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
 8005742:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
 8005744:	4770      	bx	lr

08005746 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005746:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005748:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800574c:	2b20      	cmp	r3, #32
 800574e:	b2dc      	uxtb	r4, r3
 8005750:	d11d      	bne.n	800578e <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005752:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005756:	2b01      	cmp	r3, #1
 8005758:	d019      	beq.n	800578e <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 800575a:	2324      	movs	r3, #36	; 0x24
 800575c:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005760:	6803      	ldr	r3, [r0, #0]
 8005762:	681a      	ldr	r2, [r3, #0]
 8005764:	f022 0201 	bic.w	r2, r2, #1
 8005768:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 800576a:	681a      	ldr	r2, [r3, #0]
 800576c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005770:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8005772:	681a      	ldr	r2, [r3, #0]
 8005774:	4311      	orrs	r1, r2
 8005776:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8005778:	681a      	ldr	r2, [r3, #0]
 800577a:	f042 0201 	orr.w	r2, r2, #1
 800577e:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005780:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8005782:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005786:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 800578a:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 800578c:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800578e:	2002      	movs	r0, #2
 8005790:	e7fc      	b.n	800578c <HAL_I2CEx_ConfigAnalogFilter+0x46>

08005792 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005792:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005794:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005798:	2b20      	cmp	r3, #32
 800579a:	b2dc      	uxtb	r4, r3
 800579c:	d11c      	bne.n	80057d8 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800579e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 80057a2:	2b01      	cmp	r3, #1
 80057a4:	d018      	beq.n	80057d8 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80057a6:	2324      	movs	r3, #36	; 0x24
 80057a8:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80057ac:	6803      	ldr	r3, [r0, #0]
 80057ae:	681a      	ldr	r2, [r3, #0]
 80057b0:	f022 0201 	bic.w	r2, r2, #1
 80057b4:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 80057b6:	681a      	ldr	r2, [r3, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 80057b8:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 80057bc:	ea42 2101 	orr.w	r1, r2, r1, lsl #8

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 80057c0:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80057c2:	681a      	ldr	r2, [r3, #0]
 80057c4:	f042 0201 	orr.w	r2, r2, #1
 80057c8:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80057ca:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 80057cc:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 80057d0:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 80057d4:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 80057d6:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80057d8:	2002      	movs	r0, #2
 80057da:	e7fc      	b.n	80057d6 <HAL_I2CEx_ConfigDigitalFilter+0x44>

080057dc <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80057dc:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80057de:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80057e0:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80057e4:	3284      	adds	r2, #132	; 0x84
 80057e6:	1883      	adds	r3, r0, r2
{
 80057e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80057ec:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80057ee:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80057f2:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80057f4:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80057f8:	684c      	ldr	r4, [r1, #4]
 80057fa:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80057fe:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005802:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005806:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005808:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800580a:	68c5      	ldr	r5, [r0, #12]
 800580c:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8005810:	443d      	add	r5, r7
 8005812:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005816:	68ce      	ldr	r6, [r1, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005818:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800581a:	68c5      	ldr	r5, [r0, #12]
 800581c:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8005820:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005822:	689d      	ldr	r5, [r3, #8]
 8005824:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005828:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800582a:	688d      	ldr	r5, [r1, #8]
 800582c:	68c7      	ldr	r7, [r0, #12]
 800582e:	3501      	adds	r5, #1
 8005830:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005834:	443d      	add	r5, r7
 8005836:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800583a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800583c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800583e:	691d      	ldr	r5, [r3, #16]
 8005840:	f025 0507 	bic.w	r5, r5, #7
 8005844:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005846:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005848:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800584a:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800584e:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005852:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005856:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800585a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800585e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005862:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005866:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005868:	695d      	ldr	r5, [r3, #20]
 800586a:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800586e:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005870:	694d      	ldr	r5, [r1, #20]
 8005872:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005874:	69dd      	ldr	r5, [r3, #28]
 8005876:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800587a:	f025 0507 	bic.w	r5, r5, #7
 800587e:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005880:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005884:	433d      	orrs	r5, r7
 8005886:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005888:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800588a:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800588c:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005890:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005892:	b31e      	cbz	r6, 80058dc <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005894:	2e01      	cmp	r6, #1
 8005896:	d023      	beq.n	80058e0 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005898:	1eb5      	subs	r5, r6, #2
 800589a:	2d02      	cmp	r5, #2
 800589c:	d922      	bls.n	80058e4 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800589e:	2e07      	cmp	r6, #7
 80058a0:	bf0c      	ite	eq
 80058a2:	2502      	moveq	r5, #2
 80058a4:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80058a6:	6ade      	ldr	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 80058a8:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80058ac:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 80058b0:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80058b2:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 80058b4:	3407      	adds	r4, #7
 80058b6:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80058b8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 80058ba:	436e      	muls	r6, r5
 80058bc:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80058c0:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80058c2:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80058c4:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80058c8:	f024 0407 	bic.w	r4, r4, #7
 80058cc:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80058ce:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80058d0:	5883      	ldr	r3, [r0, r2]
 80058d2:	f043 0301 	orr.w	r3, r3, #1
 80058d6:	5083      	str	r3, [r0, r2]
}
 80058d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80058dc:	2504      	movs	r5, #4
 80058de:	e7e2      	b.n	80058a6 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80058e0:	2503      	movs	r5, #3
 80058e2:	e7e0      	b.n	80058a6 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80058e4:	2502      	movs	r5, #2
 80058e6:	e7de      	b.n	80058a6 <LTDC_SetConfig+0xca>

080058e8 <HAL_LTDC_Init>:
{
 80058e8:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80058ea:	4604      	mov	r4, r0
 80058ec:	2800      	cmp	r0, #0
 80058ee:	d063      	beq.n	80059b8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80058f0:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80058f4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80058f8:	b91b      	cbnz	r3, 8005902 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80058fa:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80058fe:	f7fb fa87 	bl	8000e10 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005902:	2302      	movs	r3, #2
 8005904:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005908:	6823      	ldr	r3, [r4, #0]
 800590a:	699a      	ldr	r2, [r3, #24]
 800590c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005910:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005912:	6999      	ldr	r1, [r3, #24]
 8005914:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005918:	4302      	orrs	r2, r0
 800591a:	68e0      	ldr	r0, [r4, #12]
 800591c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800591e:	6920      	ldr	r0, [r4, #16]
 8005920:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005922:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005924:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005926:	4925      	ldr	r1, [pc, #148]	; (80059bc <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005928:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800592a:	689a      	ldr	r2, [r3, #8]
 800592c:	400a      	ands	r2, r1
 800592e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005930:	689a      	ldr	r2, [r3, #8]
 8005932:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005936:	69a0      	ldr	r0, [r4, #24]
 8005938:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800593a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800593c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800593e:	68da      	ldr	r2, [r3, #12]
 8005940:	400a      	ands	r2, r1
 8005942:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005944:	68da      	ldr	r2, [r3, #12]
 8005946:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800594a:	6a20      	ldr	r0, [r4, #32]
 800594c:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800594e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005950:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005952:	691a      	ldr	r2, [r3, #16]
 8005954:	400a      	ands	r2, r1
 8005956:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005958:	691a      	ldr	r2, [r3, #16]
 800595a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800595e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005960:	4302      	orrs	r2, r0
 8005962:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005964:	695a      	ldr	r2, [r3, #20]
 8005966:	4011      	ands	r1, r2
 8005968:	6159      	str	r1, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800596a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800596c:	695a      	ldr	r2, [r3, #20]
 800596e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005972:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005974:	430a      	orrs	r2, r1
 8005976:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005978:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800597a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800597e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005982:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005986:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005988:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800598a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800598e:	430a      	orrs	r2, r1
 8005990:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005994:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005998:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800599a:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800599c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800599e:	f042 0206 	orr.w	r2, r2, #6
 80059a2:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80059a4:	699a      	ldr	r2, [r3, #24]
 80059a6:	f042 0201 	orr.w	r2, r2, #1
 80059aa:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 80059ac:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80059ae:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80059b2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80059b6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80059b8:	2001      	movs	r0, #1
 80059ba:	e7fc      	b.n	80059b6 <HAL_LTDC_Init+0xce>
 80059bc:	f000f800 	.word	0xf000f800

080059c0 <HAL_LTDC_ErrorCallback>:
 80059c0:	4770      	bx	lr

080059c2 <HAL_LTDC_ReloadEventCallback>:
 80059c2:	4770      	bx	lr

080059c4 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80059c4:	6803      	ldr	r3, [r0, #0]
{
 80059c6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80059c8:	6b9e      	ldr	r6, [r3, #56]	; 0x38
{
 80059ca:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80059cc:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80059ce:	0772      	lsls	r2, r6, #29
 80059d0:	d514      	bpl.n	80059fc <HAL_LTDC_IRQHandler+0x38>
 80059d2:	0769      	lsls	r1, r5, #29
 80059d4:	d512      	bpl.n	80059fc <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80059d6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80059d8:	f022 0204 	bic.w	r2, r2, #4
 80059dc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80059de:	2204      	movs	r2, #4
 80059e0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80059e2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80059e6:	f043 0301 	orr.w	r3, r3, #1
 80059ea:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80059ee:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80059f0:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80059f4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80059f8:	f7ff ffe2 	bl	80059c0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80059fc:	07b2      	lsls	r2, r6, #30
 80059fe:	d516      	bpl.n	8005a2e <HAL_LTDC_IRQHandler+0x6a>
 8005a00:	07ab      	lsls	r3, r5, #30
 8005a02:	d514      	bpl.n	8005a2e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005a04:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 8005a06:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005a08:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005a0a:	f022 0202 	bic.w	r2, r2, #2
 8005a0e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005a10:	2202      	movs	r2, #2
 8005a12:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005a14:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005a18:	4313      	orrs	r3, r2
 8005a1a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005a1e:	2304      	movs	r3, #4
 8005a20:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005a24:	2300      	movs	r3, #0
 8005a26:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005a2a:	f7ff ffc9 	bl	80059c0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005a2e:	07f0      	lsls	r0, r6, #31
 8005a30:	d510      	bpl.n	8005a54 <HAL_LTDC_IRQHandler+0x90>
 8005a32:	07e9      	lsls	r1, r5, #31
 8005a34:	d50e      	bpl.n	8005a54 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005a36:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 8005a38:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005a3a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005a3c:	f022 0201 	bic.w	r2, r2, #1
 8005a40:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005a42:	2201      	movs	r2, #1
 8005a44:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005a46:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005a48:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005a4c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005a50:	f7fc fca6 	bl	80023a0 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005a54:	0732      	lsls	r2, r6, #28
 8005a56:	d511      	bpl.n	8005a7c <HAL_LTDC_IRQHandler+0xb8>
 8005a58:	072b      	lsls	r3, r5, #28
 8005a5a:	d50f      	bpl.n	8005a7c <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005a5c:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005a5e:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005a60:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005a62:	f022 0208 	bic.w	r2, r2, #8
 8005a66:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005a68:	2208      	movs	r2, #8
 8005a6a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005a6c:	2301      	movs	r3, #1
 8005a6e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005a72:	2300      	movs	r3, #0
 8005a74:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005a78:	f7ff ffa3 	bl	80059c2 <HAL_LTDC_ReloadEventCallback>
}
 8005a7c:	bd70      	pop	{r4, r5, r6, pc}

08005a7e <HAL_LTDC_ConfigLayer>:
{
 8005a7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005a82:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
{
 8005a86:	4606      	mov	r6, r0
 8005a88:	460f      	mov	r7, r1
 8005a8a:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 8005a8c:	2b01      	cmp	r3, #1
 8005a8e:	f04f 0002 	mov.w	r0, #2
 8005a92:	d01f      	beq.n	8005ad4 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005a94:	2434      	movs	r4, #52	; 0x34
  __HAL_LOCK(hltdc);
 8005a96:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005a9a:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005a9c:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005aa0:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 8005aa4:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005aa8:	3438      	adds	r4, #56	; 0x38
 8005aaa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005aac:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005aae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005ab0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005ab2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005ab4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005ab6:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005ab8:	4630      	mov	r0, r6
 8005aba:	4662      	mov	r2, ip
 8005abc:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005abe:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005ac0:	f7ff fe8c 	bl	80057dc <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005ac4:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005ac6:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005ac8:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005acc:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005ad0:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005ad4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005ad8 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005ad8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005adc:	2b01      	cmp	r3, #1
 8005ade:	f04f 0302 	mov.w	r3, #2
 8005ae2:	d012      	beq.n	8005b0a <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005ae4:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005ae8:	6803      	ldr	r3, [r0, #0]
 8005aea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005aec:	f022 0201 	bic.w	r2, r2, #1
 8005af0:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005af2:	4a07      	ldr	r2, [pc, #28]	; (8005b10 <HAL_LTDC_ProgramLineEvent+0x38>)
 8005af4:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005af6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005af8:	f042 0201 	orr.w	r2, r2, #1
 8005afc:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8005afe:	2301      	movs	r3, #1
 8005b00:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005b04:	2300      	movs	r3, #0
 8005b06:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8005b0a:	4618      	mov	r0, r3
}
 8005b0c:	4770      	bx	lr
 8005b0e:	bf00      	nop
 8005b10:	50001000 	.word	0x50001000

08005b14 <HAL_MDMA_Abort>:
  *        and the Channel will be effectively disabled only after the transfer of
  *        this single data is finished.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Abort(MDMA_HandleTypeDef *hmdma)
{
 8005b14:	b538      	push	{r3, r4, r5, lr}
 8005b16:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 8005b18:	f7fe ff4c 	bl	80049b4 <HAL_GetTick>
 8005b1c:	4605      	mov	r5, r0

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
 8005b1e:	b144      	cbz	r4, 8005b32 <HAL_MDMA_Abort+0x1e>
  {
    return HAL_ERROR;
  }

  if(HAL_MDMA_STATE_BUSY != hmdma->State)
 8005b20:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005b24:	2b02      	cmp	r3, #2
 8005b26:	d006      	beq.n	8005b36 <HAL_MDMA_Abort+0x22>
  {
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
 8005b28:	2380      	movs	r3, #128	; 0x80
 8005b2a:	66a3      	str	r3, [r4, #104]	; 0x68

    /* Process Unlocked */
    __HAL_UNLOCK(hmdma);
 8005b2c:	2300      	movs	r3, #0
 8005b2e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_ERROR;
 8005b32:	2001      	movs	r0, #1
 8005b34:	e015      	b.n	8005b62 <HAL_MDMA_Abort+0x4e>
    return HAL_ERROR;
  }
  else
  {
    /* Disable all the transfer interrupts */
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
 8005b36:	6823      	ldr	r3, [r4, #0]
 8005b38:	68da      	ldr	r2, [r3, #12]
 8005b3a:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
 8005b3e:	60da      	str	r2, [r3, #12]

    /* Disable the channel */
    __HAL_MDMA_DISABLE(hmdma);
 8005b40:	68da      	ldr	r2, [r3, #12]
 8005b42:	f022 0201 	bic.w	r2, r2, #1
 8005b46:	60da      	str	r2, [r3, #12]

    /* Check if the MDMA Channel is effectively disabled */
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 8005b48:	6822      	ldr	r2, [r4, #0]
 8005b4a:	68d3      	ldr	r3, [r2, #12]
 8005b4c:	f013 0301 	ands.w	r3, r3, #1
 8005b50:	d108      	bne.n	8005b64 <HAL_MDMA_Abort+0x50>
        return HAL_ERROR;
      }
    }

    /* Clear all interrupt flags */
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
 8005b52:	211f      	movs	r1, #31

    /* Change the MDMA state*/
    hmdma->State = HAL_MDMA_STATE_READY;
  }

  return HAL_OK;
 8005b54:	4618      	mov	r0, r3
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
 8005b56:	6051      	str	r1, [r2, #4]
    hmdma->State = HAL_MDMA_STATE_READY;
 8005b58:	2201      	movs	r2, #1
    __HAL_UNLOCK(hmdma);
 8005b5a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
 8005b5e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
}
 8005b62:	bd38      	pop	{r3, r4, r5, pc}
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 8005b64:	f7fe ff26 	bl	80049b4 <HAL_GetTick>
 8005b68:	1b40      	subs	r0, r0, r5
 8005b6a:	2805      	cmp	r0, #5
 8005b6c:	d9ec      	bls.n	8005b48 <HAL_MDMA_Abort+0x34>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
 8005b6e:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8005b70:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005b74:	66a3      	str	r3, [r4, #104]	; 0x68
        __HAL_UNLOCK(hmdma);
 8005b76:	2300      	movs	r3, #0
 8005b78:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_ERROR;
 8005b7c:	2303      	movs	r3, #3
 8005b7e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        return HAL_ERROR;
 8005b82:	e7d6      	b.n	8005b32 <HAL_MDMA_Abort+0x1e>

08005b84 <OSPI_ConfigCmd>:
  * @param  hospi : OSPI handle
  * @param  cmd   : structure that contains the command configuration information
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPI_ConfigCmd(OSPI_HandleTypeDef *hospi, OSPI_RegularCmdTypeDef *cmd)
{
 8005b84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t *tcr_reg;
  __IO uint32_t *ir_reg;
  __IO uint32_t *abr_reg;

  /* Re-initialize the value of the functional mode */
  MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, 0U);
 8005b88:	6804      	ldr	r4, [r0, #0]
 8005b8a:	6823      	ldr	r3, [r4, #0]
 8005b8c:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8005b90:	6023      	str	r3, [r4, #0]

  /* Configure the flash ID */
  if (hospi->Init.DualQuad == HAL_OSPI_DUALQUAD_DISABLE)
 8005b92:	6883      	ldr	r3, [r0, #8]
 8005b94:	b92b      	cbnz	r3, 8005ba2 <OSPI_ConfigCmd+0x1e>
  {
    MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FSEL, cmd->FlashId);
 8005b96:	6823      	ldr	r3, [r4, #0]
 8005b98:	684a      	ldr	r2, [r1, #4]
 8005b9a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005b9e:	4313      	orrs	r3, r2
 8005ba0:	6023      	str	r3, [r4, #0]
  }

  if (cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 8005ba2:	680b      	ldr	r3, [r1, #0]
 8005ba4:	2b02      	cmp	r3, #2
 8005ba6:	d150      	bne.n	8005c4a <OSPI_ConfigCmd+0xc6>
  {
    ccr_reg = &(hospi->Instance->WCCR);
 8005ba8:	f504 72c0 	add.w	r2, r4, #384	; 0x180
    tcr_reg = &(hospi->Instance->WTCR);
 8005bac:	f504 76c4 	add.w	r6, r4, #392	; 0x188
    ir_reg  = &(hospi->Instance->WIR);
 8005bb0:	f504 75c8 	add.w	r5, r4, #400	; 0x190
    abr_reg = &(hospi->Instance->WABR);
 8005bb4:	f504 7cd0 	add.w	ip, r4, #416	; 0x1a0
    ir_reg  = &(hospi->Instance->IR);
    abr_reg = &(hospi->Instance->ABR);
  }

  /* Configure the CCR register with DQS and SIOO modes */
  *ccr_reg = (cmd->DQSMode | cmd->SIOOMode);
 8005bb8:	e9d1 3712 	ldrd	r3, r7, [r1, #72]	; 0x48
 8005bbc:	433b      	orrs	r3, r7
 8005bbe:	6013      	str	r3, [r2, #0]

  if (cmd->AlternateBytesMode != HAL_OSPI_ALTERNATE_BYTES_NONE)
 8005bc0:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8005bc2:	b16b      	cbz	r3, 8005be0 <OSPI_ConfigCmd+0x5c>
  {
    /* Configure the ABR register with alternate bytes value */
    *abr_reg = cmd->AlternateBytes;
 8005bc4:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8005bc6:	f8cc 3000 	str.w	r3, [ip]

    /* Configure the CCR register with alternate bytes communication parameters */
    MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ABMODE | OCTOSPI_CCR_ABDTR | OCTOSPI_CCR_ABSIZE),
 8005bca:	6b4f      	ldr	r7, [r1, #52]	; 0x34
 8005bcc:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8005bce:	f8d2 c000 	ldr.w	ip, [r2]
 8005bd2:	433b      	orrs	r3, r7
 8005bd4:	6b0f      	ldr	r7, [r1, #48]	; 0x30
 8005bd6:	433b      	orrs	r3, r7
 8005bd8:	f42c 177c 	bic.w	r7, ip, #4128768	; 0x3f0000
 8005bdc:	433b      	orrs	r3, r7
 8005bde:	6013      	str	r3, [r2, #0]
                           (cmd->AlternateBytesMode | cmd->AlternateBytesDtrMode | cmd->AlternateBytesSize));
  }

  /* Configure the TCR register with the number of dummy cycles */
  MODIFY_REG((*tcr_reg), OCTOSPI_TCR_DCYC, cmd->DummyCycles);
 8005be0:	6833      	ldr	r3, [r6, #0]
 8005be2:	6c4f      	ldr	r7, [r1, #68]	; 0x44
 8005be4:	f023 031f 	bic.w	r3, r3, #31
 8005be8:	433b      	orrs	r3, r7
 8005bea:	6033      	str	r3, [r6, #0]

  if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 8005bec:	f8d1 e038 	ldr.w	lr, [r1, #56]	; 0x38
 8005bf0:	f1be 0f00 	cmp.w	lr, #0
 8005bf4:	d004      	beq.n	8005c00 <OSPI_ConfigCmd+0x7c>
  {
    if (cmd->OperationType == HAL_OSPI_OPTYPE_COMMON_CFG)
 8005bf6:	680b      	ldr	r3, [r1, #0]
 8005bf8:	b913      	cbnz	r3, 8005c00 <OSPI_ConfigCmd+0x7c>
    {
      /* Configure the DLR register with the number of data */
      hospi->Instance->DLR = (cmd->NbData - 1U);
 8005bfa:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8005bfc:	3b01      	subs	r3, #1
 8005bfe:	6423      	str	r3, [r4, #64]	; 0x40
    }
  }

  if (cmd->InstructionMode != HAL_OSPI_INSTRUCTION_NONE)
 8005c00:	68cb      	ldr	r3, [r1, #12]
  {
    if (cmd->AddressMode != HAL_OSPI_ADDRESS_NONE)
 8005c02:	f8d1 901c 	ldr.w	r9, [r1, #28]
  if (cmd->InstructionMode != HAL_OSPI_INSTRUCTION_NONE)
 8005c06:	2b00      	cmp	r3, #0
 8005c08:	d07b      	beq.n	8005d02 <OSPI_ConfigCmd+0x17e>
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
      {
        /* ---- Command with instruction, address and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 8005c0a:	e9d1 c804 	ldrd	ip, r8, [r1, #16]
    if (cmd->AddressMode != HAL_OSPI_ADDRESS_NONE)
 8005c0e:	f1b9 0f00 	cmp.w	r9, #0
 8005c12:	d04a      	beq.n	8005caa <OSPI_ConfigCmd+0x126>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 8005c14:	e9d1 6708 	ldrd	r6, r7, [r1, #32]
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 8005c18:	f1be 0f00 	cmp.w	lr, #0
 8005c1c:	d029      	beq.n	8005c72 <OSPI_ConfigCmd+0xee>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 8005c1e:	ea4e 0303 	orr.w	r3, lr, r3
 8005c22:	6810      	ldr	r0, [r2, #0]
 8005c24:	ea43 0309 	orr.w	r3, r3, r9
 8005c28:	ea43 0308 	orr.w	r3, r3, r8
 8005c2c:	ea43 030c 	orr.w	r3, r3, ip
 8005c30:	433b      	orrs	r3, r7
 8005c32:	4333      	orrs	r3, r6
 8005c34:	6c0e      	ldr	r6, [r1, #64]	; 0x40
 8005c36:	4333      	orrs	r3, r6
 8005c38:	4e42      	ldr	r6, [pc, #264]	; (8005d44 <OSPI_ConfigCmd+0x1c0>)
 8005c3a:	4006      	ands	r6, r0
 8005c3c:	4333      	orrs	r3, r6

        /* The DHQC bit is linked with DDTR bit which should be activated */
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
            (cmd->InstructionDtrMode == HAL_OSPI_INSTRUCTION_DTR_ENABLE))
        {
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 8005c3e:	6013      	str	r3, [r2, #0]
        }
      }

      /* Configure the IR register with the instruction value */
      *ir_reg = cmd->Instruction;
 8005c40:	688b      	ldr	r3, [r1, #8]
 8005c42:	602b      	str	r3, [r5, #0]
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE),
                               (cmd->AddressMode | cmd->AddressDtrMode | cmd->AddressSize));
      }

      /* Configure the AR register with the instruction value */
      hospi->Instance->AR = cmd->Address;
 8005c44:	698b      	ldr	r3, [r1, #24]
 8005c46:	64a3      	str	r3, [r4, #72]	; 0x48
 8005c48:	e044      	b.n	8005cd4 <OSPI_ConfigCmd+0x150>
  else if (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG)
 8005c4a:	2b03      	cmp	r3, #3
    ccr_reg = &(hospi->Instance->WPCCR);
 8005c4c:	bf01      	itttt	eq
 8005c4e:	f504 72a0 	addeq.w	r2, r4, #320	; 0x140
    tcr_reg = &(hospi->Instance->WPTCR);
 8005c52:	f504 76a4 	addeq.w	r6, r4, #328	; 0x148
    ir_reg  = &(hospi->Instance->WPIR);
 8005c56:	f504 75a8 	addeq.w	r5, r4, #336	; 0x150
    abr_reg = &(hospi->Instance->WPABR);
 8005c5a:	f504 7cb0 	addeq.w	ip, r4, #352	; 0x160
    ccr_reg = &(hospi->Instance->CCR);
 8005c5e:	bf1f      	itttt	ne
 8005c60:	f504 7280 	addne.w	r2, r4, #256	; 0x100
    tcr_reg = &(hospi->Instance->TCR);
 8005c64:	f504 7684 	addne.w	r6, r4, #264	; 0x108
    ir_reg  = &(hospi->Instance->IR);
 8005c68:	f504 7588 	addne.w	r5, r4, #272	; 0x110
    abr_reg = &(hospi->Instance->ABR);
 8005c6c:	f504 7c90 	addne.w	ip, r4, #288	; 0x120
 8005c70:	e7a2      	b.n	8005bb8 <OSPI_ConfigCmd+0x34>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 8005c72:	ea43 0309 	orr.w	r3, r3, r9
 8005c76:	f8d2 e000 	ldr.w	lr, [r2]
 8005c7a:	ea43 0308 	orr.w	r3, r3, r8
 8005c7e:	f42e 5e7c 	bic.w	lr, lr, #16128	; 0x3f00
 8005c82:	ea43 030c 	orr.w	r3, r3, ip
 8005c86:	f02e 0e3f 	bic.w	lr, lr, #63	; 0x3f
 8005c8a:	433b      	orrs	r3, r7
 8005c8c:	4333      	orrs	r3, r6
 8005c8e:	ea43 030e 	orr.w	r3, r3, lr
 8005c92:	6013      	str	r3, [r2, #0]
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
 8005c94:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8005c96:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8005c9a:	d1d1      	bne.n	8005c40 <OSPI_ConfigCmd+0xbc>
 8005c9c:	694b      	ldr	r3, [r1, #20]
 8005c9e:	2b08      	cmp	r3, #8
 8005ca0:	d1ce      	bne.n	8005c40 <OSPI_ConfigCmd+0xbc>
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 8005ca2:	6813      	ldr	r3, [r2, #0]
 8005ca4:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8005ca8:	e7c9      	b.n	8005c3e <OSPI_ConfigCmd+0xba>
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 8005caa:	f1be 0f00 	cmp.w	lr, #0
 8005cae:	d014      	beq.n	8005cda <OSPI_ConfigCmd+0x156>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE | OCTOSPI_CCR_IDTR | OCTOSPI_CCR_ISIZE |
 8005cb0:	ea4e 0303 	orr.w	r3, lr, r3
 8005cb4:	6810      	ldr	r0, [r2, #0]
 8005cb6:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 8005cb8:	ea43 0308 	orr.w	r3, r3, r8
 8005cbc:	ea43 030c 	orr.w	r3, r3, ip
 8005cc0:	f020 6c70 	bic.w	ip, r0, #251658240	; 0xf000000
 8005cc4:	4323      	orrs	r3, r4
 8005cc6:	f02c 0c3f 	bic.w	ip, ip, #63	; 0x3f
 8005cca:	ea43 030c 	orr.w	r3, r3, ip
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 8005cce:	6013      	str	r3, [r2, #0]
      *ir_reg = cmd->Instruction;
 8005cd0:	688b      	ldr	r3, [r1, #8]
 8005cd2:	602b      	str	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8005cd4:	2000      	movs	r0, #0
    }
  }

  /* Return function status */
  return status;
}
 8005cd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE | OCTOSPI_CCR_IDTR | OCTOSPI_CCR_ISIZE),
 8005cda:	6814      	ldr	r4, [r2, #0]
 8005cdc:	ea43 0308 	orr.w	r3, r3, r8
 8005ce0:	f024 043f 	bic.w	r4, r4, #63	; 0x3f
 8005ce4:	ea43 030c 	orr.w	r3, r3, ip
 8005ce8:	4323      	orrs	r3, r4
 8005cea:	6013      	str	r3, [r2, #0]
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
 8005cec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8005cee:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8005cf2:	d1ed      	bne.n	8005cd0 <OSPI_ConfigCmd+0x14c>
 8005cf4:	694b      	ldr	r3, [r1, #20]
 8005cf6:	2b08      	cmp	r3, #8
 8005cf8:	d1ea      	bne.n	8005cd0 <OSPI_ConfigCmd+0x14c>
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 8005cfa:	6813      	ldr	r3, [r2, #0]
 8005cfc:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8005d00:	e7e5      	b.n	8005cce <OSPI_ConfigCmd+0x14a>
    if (cmd->AddressMode != HAL_OSPI_ADDRESS_NONE)
 8005d02:	f1b9 0f00 	cmp.w	r9, #0
 8005d06:	d018      	beq.n	8005d3a <OSPI_ConfigCmd+0x1b6>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE |
 8005d08:	6815      	ldr	r5, [r2, #0]
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 8005d0a:	e9d1 6008 	ldrd	r6, r0, [r1, #32]
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 8005d0e:	f1be 0f00 	cmp.w	lr, #0
 8005d12:	d00c      	beq.n	8005d2e <OSPI_ConfigCmd+0x1aa>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE |
 8005d14:	ea4e 0309 	orr.w	r3, lr, r9
 8005d18:	4303      	orrs	r3, r0
 8005d1a:	6c08      	ldr	r0, [r1, #64]	; 0x40
 8005d1c:	4333      	orrs	r3, r6
 8005d1e:	4303      	orrs	r3, r0
 8005d20:	f025 6070 	bic.w	r0, r5, #251658240	; 0xf000000
 8005d24:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE),
 8005d28:	4303      	orrs	r3, r0
 8005d2a:	6013      	str	r3, [r2, #0]
 8005d2c:	e78a      	b.n	8005c44 <OSPI_ConfigCmd+0xc0>
 8005d2e:	ea40 0309 	orr.w	r3, r0, r9
 8005d32:	f425 507c 	bic.w	r0, r5, #16128	; 0x3f00
 8005d36:	4333      	orrs	r3, r6
 8005d38:	e7f6      	b.n	8005d28 <OSPI_ConfigCmd+0x1a4>
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 8005d3a:	2308      	movs	r3, #8
 8005d3c:	6543      	str	r3, [r0, #84]	; 0x54
      status = HAL_ERROR;
 8005d3e:	2001      	movs	r0, #1
 8005d40:	e7c9      	b.n	8005cd6 <OSPI_ConfigCmd+0x152>
 8005d42:	bf00      	nop
 8005d44:	f0ffc0c0 	.word	0xf0ffc0c0

08005d48 <OSPI_WaitFlagStateUntilTimeout>:
{
 8005d48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005d4c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005d50:	4604      	mov	r4, r0
 8005d52:	460e      	mov	r6, r1
 8005d54:	4615      	mov	r5, r2
 8005d56:	461f      	mov	r7, r3
  while((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 8005d58:	6822      	ldr	r2, [r4, #0]
 8005d5a:	6a13      	ldr	r3, [r2, #32]
 8005d5c:	4233      	tst	r3, r6
 8005d5e:	bf14      	ite	ne
 8005d60:	2301      	movne	r3, #1
 8005d62:	2300      	moveq	r3, #0
 8005d64:	42ab      	cmp	r3, r5
 8005d66:	d101      	bne.n	8005d6c <OSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8005d68:	2000      	movs	r0, #0
 8005d6a:	e012      	b.n	8005d92 <OSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005d6c:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005d70:	d0f3      	beq.n	8005d5a <OSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005d72:	f7fe fe1f 	bl	80049b4 <HAL_GetTick>
 8005d76:	1bc0      	subs	r0, r0, r7
 8005d78:	4540      	cmp	r0, r8
 8005d7a:	d802      	bhi.n	8005d82 <OSPI_WaitFlagStateUntilTimeout+0x3a>
 8005d7c:	f1b8 0f00 	cmp.w	r8, #0
 8005d80:	d1ea      	bne.n	8005d58 <OSPI_WaitFlagStateUntilTimeout+0x10>
        hospi->State     = HAL_OSPI_STATE_ERROR;
 8005d82:	f44f 7300 	mov.w	r3, #512	; 0x200
        hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 8005d86:	2001      	movs	r0, #1
        hospi->State     = HAL_OSPI_STATE_ERROR;
 8005d88:	6523      	str	r3, [r4, #80]	; 0x50
        hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 8005d8a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005d8c:	f043 0301 	orr.w	r3, r3, #1
 8005d90:	6563      	str	r3, [r4, #84]	; 0x54
}
 8005d92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005d98 <HAL_OSPI_Init>:
{
 8005d98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d9a:	4604      	mov	r4, r0
 8005d9c:	b085      	sub	sp, #20
  uint32_t tickstart = HAL_GetTick();
 8005d9e:	f7fe fe09 	bl	80049b4 <HAL_GetTick>
 8005da2:	4603      	mov	r3, r0
  if (hospi == NULL)
 8005da4:	2c00      	cmp	r4, #0
 8005da6:	d067      	beq.n	8005e78 <HAL_OSPI_Init+0xe0>
    hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 8005da8:	2000      	movs	r0, #0
 8005daa:	6560      	str	r0, [r4, #84]	; 0x54
    if (hospi->State == HAL_OSPI_STATE_RESET)
 8005dac:	6d26      	ldr	r6, [r4, #80]	; 0x50
 8005dae:	2e00      	cmp	r6, #0
 8005db0:	d160      	bne.n	8005e74 <HAL_OSPI_Init+0xdc>
      HAL_OSPI_MspInit(hospi);
 8005db2:	4620      	mov	r0, r4
 8005db4:	9303      	str	r3, [sp, #12]
 8005db6:	f7fb f93b 	bl	8001030 <HAL_OSPI_MspInit>
      MODIFY_REG(hospi->Instance->DCR1,
 8005dba:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8005dbc:	68e1      	ldr	r1, [r4, #12]
  hospi->Timeout = Timeout;
 8005dbe:	f241 3288 	movw	r2, #5000	; 0x1388
      MODIFY_REG(hospi->Instance->DCR1,
 8005dc2:	6825      	ldr	r5, [r4, #0]
 8005dc4:	4301      	orrs	r1, r0
 8005dc6:	69e0      	ldr	r0, [r4, #28]
 8005dc8:	68af      	ldr	r7, [r5, #8]
 8005dca:	4301      	orrs	r1, r0
 8005dcc:	482b      	ldr	r0, [pc, #172]	; (8005e7c <HAL_OSPI_Init+0xe4>)
  hospi->Timeout = Timeout;
 8005dce:	65a2      	str	r2, [r4, #88]	; 0x58
      MODIFY_REG(hospi->Instance->DCR1,
 8005dd0:	4038      	ands	r0, r7
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8005dd2:	9b03      	ldr	r3, [sp, #12]
      MODIFY_REG(hospi->Instance->DCR1,
 8005dd4:	4301      	orrs	r1, r0
 8005dd6:	6920      	ldr	r0, [r4, #16]
 8005dd8:	3801      	subs	r0, #1
 8005dda:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8005dde:	6960      	ldr	r0, [r4, #20]
 8005de0:	3801      	subs	r0, #1
 8005de2:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 8005de6:	6a20      	ldr	r0, [r4, #32]
      MODIFY_REG(hospi->Instance->DCR1,
 8005de8:	60a9      	str	r1, [r5, #8]
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 8005dea:	68e9      	ldr	r1, [r5, #12]
 8005dec:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
 8005df0:	4301      	orrs	r1, r0
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8005df2:	6b20      	ldr	r0, [r4, #48]	; 0x30
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 8005df4:	60e9      	str	r1, [r5, #12]
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8005df6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8005df8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8005dfc:	6860      	ldr	r0, [r4, #4]
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8005dfe:	6129      	str	r1, [r5, #16]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8005e00:	3801      	subs	r0, #1
      hospi->Instance->DCR4 = hospi->Init.Refresh;
 8005e02:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8005e04:	6169      	str	r1, [r5, #20]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8005e06:	6829      	ldr	r1, [r5, #0]
 8005e08:	f421 51f8 	bic.w	r1, r1, #7936	; 0x1f00
 8005e0c:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8005e10:	4620      	mov	r0, r4
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8005e12:	6029      	str	r1, [r5, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8005e14:	2120      	movs	r1, #32
 8005e16:	9200      	str	r2, [sp, #0]
 8005e18:	4632      	mov	r2, r6
 8005e1a:	f7ff ff95 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005e1e:	bb48      	cbnz	r0, 8005e74 <HAL_OSPI_Init+0xdc>
        MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_PRESCALER,
 8005e20:	6823      	ldr	r3, [r4, #0]
 8005e22:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005e24:	68d9      	ldr	r1, [r3, #12]
 8005e26:	3a01      	subs	r2, #1
 8005e28:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005e2c:	430a      	orrs	r2, r1
        MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_DQM, hospi->Init.DualQuad);
 8005e2e:	68a1      	ldr	r1, [r4, #8]
        MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_PRESCALER,
 8005e30:	60da      	str	r2, [r3, #12]
        MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_DQM, hospi->Init.DualQuad);
 8005e32:	681a      	ldr	r2, [r3, #0]
 8005e34:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005e38:	430a      	orrs	r2, r1
 8005e3a:	601a      	str	r2, [r3, #0]
        MODIFY_REG(hospi->Instance->TCR, (OCTOSPI_TCR_SSHIFT | OCTOSPI_TCR_DHQC),
 8005e3c:	f8d3 1108 	ldr.w	r1, [r3, #264]	; 0x108
 8005e40:	e9d4 250a 	ldrd	r2, r5, [r4, #40]	; 0x28
 8005e44:	f021 41a0 	bic.w	r1, r1, #1342177280	; 0x50000000
 8005e48:	432a      	orrs	r2, r5
 8005e4a:	430a      	orrs	r2, r1
 8005e4c:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
        __HAL_OSPI_ENABLE(hospi);
 8005e50:	681a      	ldr	r2, [r3, #0]
 8005e52:	f042 0201 	orr.w	r2, r2, #1
 8005e56:	601a      	str	r2, [r3, #0]
        if (hospi->Init.FreeRunningClock == HAL_OSPI_FREERUNCLK_ENABLE)
 8005e58:	69a2      	ldr	r2, [r4, #24]
 8005e5a:	2a02      	cmp	r2, #2
 8005e5c:	d103      	bne.n	8005e66 <HAL_OSPI_Init+0xce>
          SET_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 8005e5e:	689a      	ldr	r2, [r3, #8]
 8005e60:	f042 0202 	orr.w	r2, r2, #2
 8005e64:	609a      	str	r2, [r3, #8]
        if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8005e66:	68e3      	ldr	r3, [r4, #12]
 8005e68:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
          hospi->State = HAL_OSPI_STATE_HYPERBUS_INIT;
 8005e6c:	bf0c      	ite	eq
 8005e6e:	2301      	moveq	r3, #1
          hospi->State = HAL_OSPI_STATE_READY;
 8005e70:	2302      	movne	r3, #2
 8005e72:	6523      	str	r3, [r4, #80]	; 0x50
}
 8005e74:	b005      	add	sp, #20
 8005e76:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_ERROR;
 8005e78:	2001      	movs	r0, #1
 8005e7a:	e7fb      	b.n	8005e74 <HAL_OSPI_Init+0xdc>
 8005e7c:	f8e0f8f4 	.word	0xf8e0f8f4

08005e80 <HAL_OSPI_DeInit>:
{
 8005e80:	b510      	push	{r4, lr}
  if (hospi == NULL)
 8005e82:	4604      	mov	r4, r0
 8005e84:	b168      	cbz	r0, 8005ea2 <HAL_OSPI_DeInit+0x22>
     __HAL_OSPI_DISABLE(hospi);
 8005e86:	6803      	ldr	r3, [r0, #0]
 8005e88:	681a      	ldr	r2, [r3, #0]
 8005e8a:	f022 0201 	bic.w	r2, r2, #1
 8005e8e:	601a      	str	r2, [r3, #0]
     CLEAR_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 8005e90:	689a      	ldr	r2, [r3, #8]
 8005e92:	f022 0202 	bic.w	r2, r2, #2
 8005e96:	609a      	str	r2, [r3, #8]
     HAL_OSPI_MspDeInit(hospi);
 8005e98:	f7fb f9f8 	bl	800128c <HAL_OSPI_MspDeInit>
     hospi->State = HAL_OSPI_STATE_RESET;
 8005e9c:	2000      	movs	r0, #0
 8005e9e:	6520      	str	r0, [r4, #80]	; 0x50
}
 8005ea0:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 8005ea2:	2001      	movs	r0, #1
 8005ea4:	e7fc      	b.n	8005ea0 <HAL_OSPI_DeInit+0x20>

08005ea6 <HAL_OSPI_Command>:
{
 8005ea6:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005ea8:	4604      	mov	r4, r0
 8005eaa:	4616      	mov	r6, r2
 8005eac:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 8005eae:	f7fe fd81 	bl	80049b4 <HAL_GetTick>
  state = hospi->State;
 8005eb2:	6d22      	ldr	r2, [r4, #80]	; 0x50
  uint32_t tickstart = HAL_GetTick();
 8005eb4:	4603      	mov	r3, r0
  if (((state == HAL_OSPI_STATE_READY)         && (hospi->Init.MemoryType != HAL_OSPI_MEMTYPE_HYPERBUS)) ||
 8005eb6:	2a02      	cmp	r2, #2
 8005eb8:	d107      	bne.n	8005eca <HAL_OSPI_Command+0x24>
 8005eba:	68e2      	ldr	r2, [r4, #12]
 8005ebc:	f1b2 6f80 	cmp.w	r2, #67108864	; 0x4000000
 8005ec0:	d109      	bne.n	8005ed6 <HAL_OSPI_Command+0x30>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005ec2:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8005ec4:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005ec6:	6563      	str	r3, [r4, #84]	; 0x54
 8005ec8:	e01f      	b.n	8005f0a <HAL_OSPI_Command+0x64>
  if (((state == HAL_OSPI_STATE_READY)         && (hospi->Init.MemoryType != HAL_OSPI_MEMTYPE_HYPERBUS)) ||
 8005eca:	2a14      	cmp	r2, #20
 8005ecc:	d11f      	bne.n	8005f0e <HAL_OSPI_Command+0x68>
                                                || (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG))) ||
 8005ece:	682a      	ldr	r2, [r5, #0]
 8005ed0:	3a02      	subs	r2, #2
      ((state == HAL_OSPI_STATE_READ_CMD_CFG)  && ((cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 8005ed2:	2a01      	cmp	r2, #1
 8005ed4:	d8f5      	bhi.n	8005ec2 <HAL_OSPI_Command+0x1c>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005ed6:	2200      	movs	r2, #0
 8005ed8:	2120      	movs	r1, #32
 8005eda:	4620      	mov	r0, r4
 8005edc:	9600      	str	r6, [sp, #0]
 8005ede:	9303      	str	r3, [sp, #12]
 8005ee0:	f7ff ff32 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005ee4:	b988      	cbnz	r0, 8005f0a <HAL_OSPI_Command+0x64>
      hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 8005ee6:	6560      	str	r0, [r4, #84]	; 0x54
      status = OSPI_ConfigCmd(hospi, cmd);
 8005ee8:	4629      	mov	r1, r5
 8005eea:	4620      	mov	r0, r4
 8005eec:	f7ff fe4a 	bl	8005b84 <OSPI_ConfigCmd>
      if (status == HAL_OK)
 8005ef0:	b958      	cbnz	r0, 8005f0a <HAL_OSPI_Command+0x64>
        if (cmd->DataMode == HAL_OSPI_DATA_NONE)
 8005ef2:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8005ef4:	9b03      	ldr	r3, [sp, #12]
 8005ef6:	b992      	cbnz	r2, 8005f1e <HAL_OSPI_Command+0x78>
          status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 8005ef8:	2201      	movs	r2, #1
 8005efa:	2102      	movs	r1, #2
 8005efc:	4620      	mov	r0, r4
 8005efe:	9600      	str	r6, [sp, #0]
 8005f00:	f7ff ff22 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8005f04:	6823      	ldr	r3, [r4, #0]
 8005f06:	2202      	movs	r2, #2
 8005f08:	625a      	str	r2, [r3, #36]	; 0x24
}
 8005f0a:	b004      	add	sp, #16
 8005f0c:	bd70      	pop	{r4, r5, r6, pc}
                                                || (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG))) ||
 8005f0e:	2a24      	cmp	r2, #36	; 0x24
 8005f10:	d1d7      	bne.n	8005ec2 <HAL_OSPI_Command+0x1c>
      ((state == HAL_OSPI_STATE_WRITE_CMD_CFG) && ((cmd->OperationType == HAL_OSPI_OPTYPE_READ_CFG)  ||
 8005f12:	682a      	ldr	r2, [r5, #0]
 8005f14:	f022 0202 	bic.w	r2, r2, #2
 8005f18:	2a01      	cmp	r2, #1
 8005f1a:	d1d2      	bne.n	8005ec2 <HAL_OSPI_Command+0x1c>
 8005f1c:	e7db      	b.n	8005ed6 <HAL_OSPI_Command+0x30>
          if (cmd->OperationType == HAL_OSPI_OPTYPE_COMMON_CFG)
 8005f1e:	682b      	ldr	r3, [r5, #0]
 8005f20:	b90b      	cbnz	r3, 8005f26 <HAL_OSPI_Command+0x80>
              hospi->State = HAL_OSPI_STATE_CMD_CFG;
 8005f22:	2304      	movs	r3, #4
 8005f24:	e005      	b.n	8005f32 <HAL_OSPI_Command+0x8c>
          else if (cmd->OperationType == HAL_OSPI_OPTYPE_READ_CFG)
 8005f26:	2b01      	cmp	r3, #1
 8005f28:	d105      	bne.n	8005f36 <HAL_OSPI_Command+0x90>
            if (hospi->State == HAL_OSPI_STATE_WRITE_CMD_CFG)
 8005f2a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8005f2c:	2b24      	cmp	r3, #36	; 0x24
 8005f2e:	d0f8      	beq.n	8005f22 <HAL_OSPI_Command+0x7c>
              hospi->State = HAL_OSPI_STATE_READ_CMD_CFG;
 8005f30:	2314      	movs	r3, #20
              hospi->State = HAL_OSPI_STATE_CMD_CFG;
 8005f32:	6523      	str	r3, [r4, #80]	; 0x50
 8005f34:	e7e9      	b.n	8005f0a <HAL_OSPI_Command+0x64>
          else if (cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 8005f36:	2b02      	cmp	r3, #2
 8005f38:	d1e7      	bne.n	8005f0a <HAL_OSPI_Command+0x64>
            if (hospi->State == HAL_OSPI_STATE_READ_CMD_CFG)
 8005f3a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8005f3c:	2b14      	cmp	r3, #20
 8005f3e:	d0f0      	beq.n	8005f22 <HAL_OSPI_Command+0x7c>
              hospi->State = HAL_OSPI_STATE_WRITE_CMD_CFG;
 8005f40:	2324      	movs	r3, #36	; 0x24
 8005f42:	e7f6      	b.n	8005f32 <HAL_OSPI_Command+0x8c>

08005f44 <HAL_OSPI_HyperbusCfg>:
{
 8005f44:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005f46:	4604      	mov	r4, r0
 8005f48:	4616      	mov	r6, r2
 8005f4a:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 8005f4c:	f7fe fd32 	bl	80049b4 <HAL_GetTick>
  state = hospi->State;
 8005f50:	6d22      	ldr	r2, [r4, #80]	; 0x50
  uint32_t tickstart = HAL_GetTick();
 8005f52:	4603      	mov	r3, r0
  if ((state == HAL_OSPI_STATE_HYPERBUS_INIT) || (state == HAL_OSPI_STATE_READY))
 8005f54:	3a01      	subs	r2, #1
 8005f56:	2a01      	cmp	r2, #1
 8005f58:	d816      	bhi.n	8005f88 <HAL_OSPI_HyperbusCfg+0x44>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005f5a:	2200      	movs	r2, #0
 8005f5c:	2120      	movs	r1, #32
 8005f5e:	4620      	mov	r0, r4
 8005f60:	9600      	str	r6, [sp, #0]
 8005f62:	f7ff fef1 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005f66:	b968      	cbnz	r0, 8005f84 <HAL_OSPI_HyperbusCfg+0x40>
      WRITE_REG(hospi->Instance->HLCR, ((cfg->RWRecoveryTime << OCTOSPI_HLCR_TRWR_Pos) |
 8005f68:	6822      	ldr	r2, [r4, #0]
 8005f6a:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8005f6e:	430b      	orrs	r3, r1
 8005f70:	6829      	ldr	r1, [r5, #0]
 8005f72:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005f76:	6869      	ldr	r1, [r5, #4]
 8005f78:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8005f7c:	f8c2 3200 	str.w	r3, [r2, #512]	; 0x200
      hospi->State = HAL_OSPI_STATE_READY;
 8005f80:	2302      	movs	r3, #2
 8005f82:	6523      	str	r3, [r4, #80]	; 0x50
}
 8005f84:	b002      	add	sp, #8
 8005f86:	bd70      	pop	{r4, r5, r6, pc}
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005f88:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8005f8a:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005f8c:	6563      	str	r3, [r4, #84]	; 0x54
 8005f8e:	e7f9      	b.n	8005f84 <HAL_OSPI_HyperbusCfg+0x40>

08005f90 <HAL_OSPI_HyperbusCmd>:
{
 8005f90:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005f92:	4604      	mov	r4, r0
 8005f94:	4616      	mov	r6, r2
 8005f96:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 8005f98:	f7fe fd0c 	bl	80049b4 <HAL_GetTick>
  if ((hospi->State == HAL_OSPI_STATE_READY) && (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS))
 8005f9c:	6d22      	ldr	r2, [r4, #80]	; 0x50
  uint32_t tickstart = HAL_GetTick();
 8005f9e:	4603      	mov	r3, r0
  if ((hospi->State == HAL_OSPI_STATE_READY) && (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS))
 8005fa0:	2a02      	cmp	r2, #2
 8005fa2:	d127      	bne.n	8005ff4 <HAL_OSPI_HyperbusCmd+0x64>
 8005fa4:	68e2      	ldr	r2, [r4, #12]
 8005fa6:	f1b2 6f80 	cmp.w	r2, #67108864	; 0x4000000
 8005faa:	d123      	bne.n	8005ff4 <HAL_OSPI_HyperbusCmd+0x64>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005fac:	2200      	movs	r2, #0
 8005fae:	2120      	movs	r1, #32
 8005fb0:	4620      	mov	r0, r4
 8005fb2:	9600      	str	r6, [sp, #0]
 8005fb4:	f7ff fec8 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005fb8:	b9d0      	cbnz	r0, 8005ff0 <HAL_OSPI_HyperbusCmd+0x60>
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, 0U);
 8005fba:	6823      	ldr	r3, [r4, #0]
      MODIFY_REG(hospi->Instance->DCR1, OCTOSPI_DCR1_MTYP_0, cmd->AddressSpace);
 8005fbc:	6829      	ldr	r1, [r5, #0]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, 0U);
 8005fbe:	681a      	ldr	r2, [r3, #0]
 8005fc0:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005fc4:	601a      	str	r2, [r3, #0]
      MODIFY_REG(hospi->Instance->DCR1, OCTOSPI_DCR1_MTYP_0, cmd->AddressSpace);
 8005fc6:	689a      	ldr	r2, [r3, #8]
 8005fc8:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8005fcc:	430a      	orrs	r2, r1
      WRITE_REG(hospi->Instance->CCR, (cmd->DQSMode | OCTOSPI_CCR_DDTR | OCTOSPI_CCR_DMODE_2 |
 8005fce:	68a9      	ldr	r1, [r5, #8]
      MODIFY_REG(hospi->Instance->DCR1, OCTOSPI_DCR1_MTYP_0, cmd->AddressSpace);
 8005fd0:	609a      	str	r2, [r3, #8]
      WRITE_REG(hospi->Instance->CCR, (cmd->DQSMode | OCTOSPI_CCR_DDTR | OCTOSPI_CCR_DMODE_2 |
 8005fd2:	692a      	ldr	r2, [r5, #16]
 8005fd4:	430a      	orrs	r2, r1
 8005fd6:	f042 220c 	orr.w	r2, r2, #201329664	; 0xc000c00
 8005fda:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
      WRITE_REG(hospi->Instance->WCCR, (cmd->DQSMode | OCTOSPI_WCCR_DDTR | OCTOSPI_WCCR_DMODE_2 |
 8005fde:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
      WRITE_REG(hospi->Instance->DLR, (cmd->NbData - 1U));
 8005fe2:	68ea      	ldr	r2, [r5, #12]
 8005fe4:	3a01      	subs	r2, #1
 8005fe6:	641a      	str	r2, [r3, #64]	; 0x40
      WRITE_REG(hospi->Instance->AR, cmd->Address);
 8005fe8:	686a      	ldr	r2, [r5, #4]
 8005fea:	649a      	str	r2, [r3, #72]	; 0x48
      hospi->State = HAL_OSPI_STATE_CMD_CFG;
 8005fec:	2304      	movs	r3, #4
 8005fee:	6523      	str	r3, [r4, #80]	; 0x50
}
 8005ff0:	b002      	add	sp, #8
 8005ff2:	bd70      	pop	{r4, r5, r6, pc}
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005ff4:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8005ff6:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005ff8:	6563      	str	r3, [r4, #84]	; 0x54
 8005ffa:	e7f9      	b.n	8005ff0 <HAL_OSPI_HyperbusCmd+0x60>

08005ffc <HAL_OSPI_Transmit>:
{
 8005ffc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ffe:	460f      	mov	r7, r1
 8006000:	b085      	sub	sp, #20
 8006002:	4604      	mov	r4, r0
 8006004:	4615      	mov	r5, r2
  uint32_t tickstart = HAL_GetTick();
 8006006:	f7fe fcd5 	bl	80049b4 <HAL_GetTick>
 800600a:	4603      	mov	r3, r0
  if (pData == NULL)
 800600c:	b91f      	cbnz	r7, 8006016 <HAL_OSPI_Transmit+0x1a>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 800600e:	2308      	movs	r3, #8
      status = HAL_ERROR;
 8006010:	2001      	movs	r0, #1
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8006012:	6563      	str	r3, [r4, #84]	; 0x54
 8006014:	e02e      	b.n	8006074 <HAL_OSPI_Transmit+0x78>
    if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 8006016:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8006018:	2a04      	cmp	r2, #4
 800601a:	d12d      	bne.n	8006078 <HAL_OSPI_Transmit+0x7c>
  __IO uint32_t *data_reg = &hospi->Instance->DR;
 800601c:	6826      	ldr	r6, [r4, #0]
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 800601e:	6c32      	ldr	r2, [r6, #64]	; 0x40
      hospi->pBuffPtr  = pData;
 8006020:	6427      	str	r7, [r4, #64]	; 0x40
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 8006022:	3201      	adds	r2, #1
 8006024:	64a2      	str	r2, [r4, #72]	; 0x48
      hospi->XferSize  = hospi->XferCount;
 8006026:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006028:	6462      	str	r2, [r4, #68]	; 0x44
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800602a:	6832      	ldr	r2, [r6, #0]
 800602c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006030:	6032      	str	r2, [r6, #0]
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_FT, SET, tickstart, Timeout);
 8006032:	2201      	movs	r2, #1
 8006034:	2104      	movs	r1, #4
 8006036:	4620      	mov	r0, r4
 8006038:	9500      	str	r5, [sp, #0]
 800603a:	9303      	str	r3, [sp, #12]
 800603c:	f7ff fe84 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8006040:	b9c0      	cbnz	r0, 8006074 <HAL_OSPI_Transmit+0x78>
        *((__IO uint8_t *)data_reg) = *hospi->pBuffPtr;
 8006042:	6c22      	ldr	r2, [r4, #64]	; 0x40
      } while (hospi->XferCount > 0U);
 8006044:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hospi->pBuffPtr;
 8006046:	7812      	ldrb	r2, [r2, #0]
 8006048:	f886 2050 	strb.w	r2, [r6, #80]	; 0x50
        hospi->pBuffPtr++;
 800604c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800604e:	3201      	adds	r2, #1
 8006050:	6422      	str	r2, [r4, #64]	; 0x40
        hospi->XferCount--;
 8006052:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006054:	3a01      	subs	r2, #1
 8006056:	64a2      	str	r2, [r4, #72]	; 0x48
      } while (hospi->XferCount > 0U);
 8006058:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800605a:	2a00      	cmp	r2, #0
 800605c:	d1e9      	bne.n	8006032 <HAL_OSPI_Transmit+0x36>
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 800605e:	2201      	movs	r2, #1
 8006060:	2102      	movs	r1, #2
 8006062:	4620      	mov	r0, r4
 8006064:	9500      	str	r5, [sp, #0]
 8006066:	f7ff fe6f 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800606a:	b918      	cbnz	r0, 8006074 <HAL_OSPI_Transmit+0x78>
          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 800606c:	2302      	movs	r3, #2
 800606e:	6822      	ldr	r2, [r4, #0]
 8006070:	6253      	str	r3, [r2, #36]	; 0x24
          hospi->State = HAL_OSPI_STATE_READY;
 8006072:	6523      	str	r3, [r4, #80]	; 0x50
}
 8006074:	b005      	add	sp, #20
 8006076:	bdf0      	pop	{r4, r5, r6, r7, pc}
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8006078:	2310      	movs	r3, #16
 800607a:	e7c9      	b.n	8006010 <HAL_OSPI_Transmit+0x14>

0800607c <HAL_OSPI_Receive>:
{
 800607c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800607e:	4604      	mov	r4, r0
 8006080:	b085      	sub	sp, #20
 8006082:	460f      	mov	r7, r1
 8006084:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 8006086:	f7fe fc95 	bl	80049b4 <HAL_GetTick>
  __IO uint32_t *data_reg = &hospi->Instance->DR;
 800608a:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 800608c:	4603      	mov	r3, r0
  uint32_t addr_reg = hospi->Instance->AR;
 800608e:	6ca8      	ldr	r0, [r5, #72]	; 0x48
  uint32_t ir_reg = hospi->Instance->IR;
 8006090:	f8d5 c110 	ldr.w	ip, [r5, #272]	; 0x110
  if (pData == NULL)
 8006094:	b91f      	cbnz	r7, 800609e <HAL_OSPI_Receive+0x22>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 8006096:	2308      	movs	r3, #8
      status = HAL_ERROR;
 8006098:	2001      	movs	r0, #1
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 800609a:	6563      	str	r3, [r4, #84]	; 0x54
 800609c:	e034      	b.n	8006108 <HAL_OSPI_Receive+0x8c>
    if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 800609e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80060a0:	2a04      	cmp	r2, #4
 80060a2:	d13b      	bne.n	800611c <HAL_OSPI_Receive+0xa0>
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 80060a4:	6c2a      	ldr	r2, [r5, #64]	; 0x40
      hospi->pBuffPtr  = pData;
 80060a6:	6427      	str	r7, [r4, #64]	; 0x40
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 80060a8:	3201      	adds	r2, #1
 80060aa:	64a2      	str	r2, [r4, #72]	; 0x48
      hospi->XferSize  = hospi->XferCount;
 80060ac:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80060ae:	6462      	str	r2, [r4, #68]	; 0x44
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80060b0:	6829      	ldr	r1, [r5, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 80060b2:	68e2      	ldr	r2, [r4, #12]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80060b4:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 80060b8:	f1b2 6f80 	cmp.w	r2, #67108864	; 0x4000000
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80060bc:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80060c0:	6029      	str	r1, [r5, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 80060c2:	d123      	bne.n	800610c <HAL_OSPI_Receive+0x90>
          WRITE_REG(hospi->Instance->AR, addr_reg);
 80060c4:	64a8      	str	r0, [r5, #72]	; 0x48
        status = OSPI_WaitFlagStateUntilTimeout(hospi, (HAL_OSPI_FLAG_FT | HAL_OSPI_FLAG_TC), SET, tickstart, Timeout);
 80060c6:	2201      	movs	r2, #1
 80060c8:	2106      	movs	r1, #6
 80060ca:	4620      	mov	r0, r4
 80060cc:	9600      	str	r6, [sp, #0]
 80060ce:	9303      	str	r3, [sp, #12]
 80060d0:	f7ff fe3a 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 80060d4:	b9c0      	cbnz	r0, 8006108 <HAL_OSPI_Receive+0x8c>
        *hospi->pBuffPtr = *((__IO uint8_t *)data_reg);
 80060d6:	f895 1050 	ldrb.w	r1, [r5, #80]	; 0x50
 80060da:	6c22      	ldr	r2, [r4, #64]	; 0x40
      } while(hospi->XferCount > 0U);
 80060dc:	9b03      	ldr	r3, [sp, #12]
        *hospi->pBuffPtr = *((__IO uint8_t *)data_reg);
 80060de:	7011      	strb	r1, [r2, #0]
        hospi->pBuffPtr++;
 80060e0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80060e2:	3201      	adds	r2, #1
 80060e4:	6422      	str	r2, [r4, #64]	; 0x40
        hospi->XferCount--;
 80060e6:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80060e8:	3a01      	subs	r2, #1
 80060ea:	64a2      	str	r2, [r4, #72]	; 0x48
      } while(hospi->XferCount > 0U);
 80060ec:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80060ee:	2a00      	cmp	r2, #0
 80060f0:	d1e9      	bne.n	80060c6 <HAL_OSPI_Receive+0x4a>
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 80060f2:	2201      	movs	r2, #1
 80060f4:	2102      	movs	r1, #2
 80060f6:	4620      	mov	r0, r4
 80060f8:	9600      	str	r6, [sp, #0]
 80060fa:	f7ff fe25 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80060fe:	b918      	cbnz	r0, 8006108 <HAL_OSPI_Receive+0x8c>
          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8006100:	2302      	movs	r3, #2
 8006102:	6822      	ldr	r2, [r4, #0]
 8006104:	6253      	str	r3, [r2, #36]	; 0x24
          hospi->State = HAL_OSPI_STATE_READY;
 8006106:	6523      	str	r3, [r4, #80]	; 0x50
}
 8006108:	b005      	add	sp, #20
 800610a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if (READ_BIT(hospi->Instance->CCR, OCTOSPI_CCR_ADMODE) != HAL_OSPI_ADDRESS_NONE)
 800610c:	f8d5 2100 	ldr.w	r2, [r5, #256]	; 0x100
 8006110:	f412 6fe0 	tst.w	r2, #1792	; 0x700
 8006114:	d1d6      	bne.n	80060c4 <HAL_OSPI_Receive+0x48>
          WRITE_REG(hospi->Instance->IR, ir_reg);
 8006116:	f8c5 c110 	str.w	ip, [r5, #272]	; 0x110
 800611a:	e7d4      	b.n	80060c6 <HAL_OSPI_Receive+0x4a>
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 800611c:	2310      	movs	r3, #16
 800611e:	e7bb      	b.n	8006098 <HAL_OSPI_Receive+0x1c>

08006120 <HAL_OSPI_AutoPolling>:
{
 8006120:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006124:	4604      	mov	r4, r0
 8006126:	4616      	mov	r6, r2
 8006128:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 800612a:	f7fe fc43 	bl	80049b4 <HAL_GetTick>
  uint32_t addr_reg = hospi->Instance->AR;
 800612e:	6822      	ldr	r2, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8006130:	4603      	mov	r3, r0
  uint32_t addr_reg = hospi->Instance->AR;
 8006132:	6c97      	ldr	r7, [r2, #72]	; 0x48
  uint32_t ir_reg = hospi->Instance->IR;
 8006134:	f8d2 8110 	ldr.w	r8, [r2, #272]	; 0x110
  if ((hospi->State == HAL_OSPI_STATE_CMD_CFG) && (cfg->AutomaticStop == HAL_OSPI_AUTOMATIC_STOP_ENABLE))
 8006138:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800613a:	2a04      	cmp	r2, #4
 800613c:	d13c      	bne.n	80061b8 <HAL_OSPI_AutoPolling+0x98>
 800613e:	68ea      	ldr	r2, [r5, #12]
 8006140:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
 8006144:	d138      	bne.n	80061b8 <HAL_OSPI_AutoPolling+0x98>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006146:	9003      	str	r0, [sp, #12]
 8006148:	2200      	movs	r2, #0
 800614a:	2120      	movs	r1, #32
 800614c:	4620      	mov	r0, r4
 800614e:	9600      	str	r6, [sp, #0]
 8006150:	f7ff fdfa 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006154:	bb28      	cbnz	r0, 80061a2 <HAL_OSPI_AutoPolling+0x82>
      WRITE_REG (hospi->Instance->PSMAR, cfg->Match);
 8006156:	6829      	ldr	r1, [r5, #0]
 8006158:	6822      	ldr	r2, [r4, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 800615a:	9b03      	ldr	r3, [sp, #12]
      WRITE_REG (hospi->Instance->PSMAR, cfg->Match);
 800615c:	f8c2 1088 	str.w	r1, [r2, #136]	; 0x88
      WRITE_REG (hospi->Instance->PSMKR, cfg->Mask);
 8006160:	6869      	ldr	r1, [r5, #4]
 8006162:	f8c2 1080 	str.w	r1, [r2, #128]	; 0x80
      WRITE_REG (hospi->Instance->PIR,   cfg->Interval);
 8006166:	6929      	ldr	r1, [r5, #16]
 8006168:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
      MODIFY_REG(hospi->Instance->CR,    (OCTOSPI_CR_PMM | OCTOSPI_CR_APMS | OCTOSPI_CR_FMODE),
 800616c:	6810      	ldr	r0, [r2, #0]
 800616e:	e9d5 1502 	ldrd	r1, r5, [r5, #8]
 8006172:	f020 5043 	bic.w	r0, r0, #817889280	; 0x30c00000
 8006176:	4329      	orrs	r1, r5
 8006178:	4301      	orrs	r1, r0
 800617a:	f041 5100 	orr.w	r1, r1, #536870912	; 0x20000000
 800617e:	6011      	str	r1, [r2, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8006180:	68e1      	ldr	r1, [r4, #12]
 8006182:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8006186:	d10f      	bne.n	80061a8 <HAL_OSPI_AutoPolling+0x88>
          WRITE_REG(hospi->Instance->AR, addr_reg);
 8006188:	6497      	str	r7, [r2, #72]	; 0x48
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_SM, SET, tickstart, Timeout);
 800618a:	2201      	movs	r2, #1
 800618c:	2108      	movs	r1, #8
 800618e:	4620      	mov	r0, r4
 8006190:	9600      	str	r6, [sp, #0]
 8006192:	f7ff fdd9 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006196:	b920      	cbnz	r0, 80061a2 <HAL_OSPI_AutoPolling+0x82>
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_SM);
 8006198:	6823      	ldr	r3, [r4, #0]
 800619a:	2208      	movs	r2, #8
 800619c:	625a      	str	r2, [r3, #36]	; 0x24
        hospi->State = HAL_OSPI_STATE_READY;
 800619e:	2302      	movs	r3, #2
 80061a0:	6523      	str	r3, [r4, #80]	; 0x50
}
 80061a2:	b004      	add	sp, #16
 80061a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if (READ_BIT(hospi->Instance->CCR, OCTOSPI_CCR_ADMODE) != HAL_OSPI_ADDRESS_NONE)
 80061a8:	f8d2 1100 	ldr.w	r1, [r2, #256]	; 0x100
 80061ac:	f411 6fe0 	tst.w	r1, #1792	; 0x700
 80061b0:	d1ea      	bne.n	8006188 <HAL_OSPI_AutoPolling+0x68>
          WRITE_REG(hospi->Instance->IR, ir_reg);
 80061b2:	f8c2 8110 	str.w	r8, [r2, #272]	; 0x110
 80061b6:	e7e8      	b.n	800618a <HAL_OSPI_AutoPolling+0x6a>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 80061b8:	2310      	movs	r3, #16
    status = HAL_ERROR;
 80061ba:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 80061bc:	6563      	str	r3, [r4, #84]	; 0x54
 80061be:	e7f0      	b.n	80061a2 <HAL_OSPI_AutoPolling+0x82>

080061c0 <HAL_OSPI_MemoryMapped>:
{
 80061c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80061c2:	4604      	mov	r4, r0
 80061c4:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 80061c6:	f7fe fbf5 	bl	80049b4 <HAL_GetTick>
 80061ca:	4603      	mov	r3, r0
  if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 80061cc:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80061ce:	2a04      	cmp	r2, #4
 80061d0:	d121      	bne.n	8006216 <HAL_OSPI_MemoryMapped+0x56>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 80061d2:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80061d4:	2120      	movs	r1, #32
 80061d6:	4620      	mov	r0, r4
 80061d8:	9200      	str	r2, [sp, #0]
 80061da:	2200      	movs	r2, #0
 80061dc:	f7ff fdb4 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80061e0:	b9b8      	cbnz	r0, 8006212 <HAL_OSPI_MemoryMapped+0x52>
      if (cfg->TimeOutActivation == HAL_OSPI_TIMEOUT_COUNTER_ENABLE)
 80061e2:	682e      	ldr	r6, [r5, #0]
      hospi->State = HAL_OSPI_STATE_BUSY_MEM_MAPPED;
 80061e4:	2388      	movs	r3, #136	; 0x88
        WRITE_REG(hospi->Instance->LPTR, cfg->TimeOutPeriod);
 80061e6:	6822      	ldr	r2, [r4, #0]
      if (cfg->TimeOutActivation == HAL_OSPI_TIMEOUT_COUNTER_ENABLE)
 80061e8:	2e08      	cmp	r6, #8
      hospi->State = HAL_OSPI_STATE_BUSY_MEM_MAPPED;
 80061ea:	6523      	str	r3, [r4, #80]	; 0x50
      if (cfg->TimeOutActivation == HAL_OSPI_TIMEOUT_COUNTER_ENABLE)
 80061ec:	d108      	bne.n	8006200 <HAL_OSPI_MemoryMapped+0x40>
        WRITE_REG(hospi->Instance->LPTR, cfg->TimeOutPeriod);
 80061ee:	686b      	ldr	r3, [r5, #4]
 80061f0:	f8c2 3130 	str.w	r3, [r2, #304]	; 0x130
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TO);
 80061f4:	2310      	movs	r3, #16
 80061f6:	6253      	str	r3, [r2, #36]	; 0x24
        __HAL_OSPI_ENABLE_IT(hospi, HAL_OSPI_IT_TO);
 80061f8:	6811      	ldr	r1, [r2, #0]
 80061fa:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80061fe:	6011      	str	r1, [r2, #0]
      MODIFY_REG(hospi->Instance->CR, (OCTOSPI_CR_TCEN | OCTOSPI_CR_FMODE),
 8006200:	6813      	ldr	r3, [r2, #0]
 8006202:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8006206:	f023 0308 	bic.w	r3, r3, #8
 800620a:	4333      	orrs	r3, r6
 800620c:	f043 5340 	orr.w	r3, r3, #805306368	; 0x30000000
 8006210:	6013      	str	r3, [r2, #0]
}
 8006212:	b002      	add	sp, #8
 8006214:	bd70      	pop	{r4, r5, r6, pc}
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8006216:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8006218:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 800621a:	6563      	str	r3, [r4, #84]	; 0x54
 800621c:	e7f9      	b.n	8006212 <HAL_OSPI_MemoryMapped+0x52>

0800621e <HAL_OSPI_Abort>:
{
 800621e:	b530      	push	{r4, r5, lr}
 8006220:	4604      	mov	r4, r0
 8006222:	b085      	sub	sp, #20
  uint32_t tickstart = HAL_GetTick();
 8006224:	f7fe fbc6 	bl	80049b4 <HAL_GetTick>
 8006228:	4603      	mov	r3, r0
  state = hospi->State;
 800622a:	6d22      	ldr	r2, [r4, #80]	; 0x50
  if (((state & OSPI_BUSY_STATE_MASK) != 0U) || ((state & OSPI_CFG_STATE_MASK) != 0U))
 800622c:	f012 0f0c 	tst.w	r2, #12
 8006230:	d035      	beq.n	800629e <HAL_OSPI_Abort+0x80>
    if ((hospi->Instance->CR & OCTOSPI_CR_DMAEN) != 0U)
 8006232:	6821      	ldr	r1, [r4, #0]
 8006234:	680a      	ldr	r2, [r1, #0]
 8006236:	f012 0204 	ands.w	r2, r2, #4
 800623a:	d02b      	beq.n	8006294 <HAL_OSPI_Abort+0x76>
      CLEAR_BIT(hospi->Instance->CR, OCTOSPI_CR_DMAEN);
 800623c:	680a      	ldr	r2, [r1, #0]
 800623e:	9003      	str	r0, [sp, #12]
 8006240:	f022 0204 	bic.w	r2, r2, #4
      status = HAL_MDMA_Abort(hospi->hmdma);
 8006244:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
      CLEAR_BIT(hospi->Instance->CR, OCTOSPI_CR_DMAEN);
 8006246:	600a      	str	r2, [r1, #0]
      status = HAL_MDMA_Abort(hospi->hmdma);
 8006248:	f7ff fc64 	bl	8005b14 <HAL_MDMA_Abort>
      if (status != HAL_OK)
 800624c:	9b03      	ldr	r3, [sp, #12]
 800624e:	b108      	cbz	r0, 8006254 <HAL_OSPI_Abort+0x36>
        hospi->ErrorCode = HAL_OSPI_ERROR_DMA;
 8006250:	2204      	movs	r2, #4
 8006252:	6562      	str	r2, [r4, #84]	; 0x54
    if (__HAL_OSPI_GET_FLAG(hospi, HAL_OSPI_FLAG_BUSY) != RESET)
 8006254:	6822      	ldr	r2, [r4, #0]
 8006256:	6a11      	ldr	r1, [r2, #32]
 8006258:	0689      	lsls	r1, r1, #26
 800625a:	d51d      	bpl.n	8006298 <HAL_OSPI_Abort+0x7a>
      SET_BIT(hospi->Instance->CR, OCTOSPI_CR_ABORT);
 800625c:	6811      	ldr	r1, [r2, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, hospi->Timeout);
 800625e:	4620      	mov	r0, r4
 8006260:	9303      	str	r3, [sp, #12]
      SET_BIT(hospi->Instance->CR, OCTOSPI_CR_ABORT);
 8006262:	f041 0102 	orr.w	r1, r1, #2
 8006266:	6011      	str	r1, [r2, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, hospi->Timeout);
 8006268:	2102      	movs	r1, #2
 800626a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800626c:	9200      	str	r2, [sp, #0]
 800626e:	2201      	movs	r2, #1
 8006270:	f7ff fd6a 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006274:	9b03      	ldr	r3, [sp, #12]
 8006276:	b958      	cbnz	r0, 8006290 <HAL_OSPI_Abort+0x72>
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8006278:	6822      	ldr	r2, [r4, #0]
 800627a:	2502      	movs	r5, #2
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 800627c:	2120      	movs	r1, #32
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 800627e:	6255      	str	r5, [r2, #36]	; 0x24
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8006280:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8006282:	9200      	str	r2, [sp, #0]
 8006284:	4602      	mov	r2, r0
 8006286:	4620      	mov	r0, r4
 8006288:	f7ff fd5e 	bl	8005d48 <OSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800628c:	b900      	cbnz	r0, 8006290 <HAL_OSPI_Abort+0x72>
          hospi->State = HAL_OSPI_STATE_READY;
 800628e:	6525      	str	r5, [r4, #80]	; 0x50
}
 8006290:	b005      	add	sp, #20
 8006292:	bd30      	pop	{r4, r5, pc}
  HAL_StatusTypeDef status = HAL_OK;
 8006294:	4610      	mov	r0, r2
 8006296:	e7dd      	b.n	8006254 <HAL_OSPI_Abort+0x36>
      hospi->State = HAL_OSPI_STATE_READY;
 8006298:	2302      	movs	r3, #2
 800629a:	6523      	str	r3, [r4, #80]	; 0x50
 800629c:	e7f8      	b.n	8006290 <HAL_OSPI_Abort+0x72>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 800629e:	2310      	movs	r3, #16
    status = HAL_ERROR;
 80062a0:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 80062a2:	6563      	str	r3, [r4, #84]	; 0x54
 80062a4:	e7f4      	b.n	8006290 <HAL_OSPI_Abort+0x72>
	...

080062a8 <HAL_OSPIM_Config>:
    other_instance = 0U;
 80062a8:	4ba5      	ldr	r3, [pc, #660]	; (8006540 <HAL_OSPIM_Config+0x298>)
  if (hospi->Instance == OCTOSPI1)
 80062aa:	6802      	ldr	r2, [r0, #0]
{
 80062ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    other_instance = 0U;
 80062b0:	429a      	cmp	r2, r3
{
 80062b2:	b08f      	sub	sp, #60	; 0x3c
    instance = 1U;
 80062b4:	f04f 0501 	mov.w	r5, #1
    status = HAL_ERROR;
  }
  else
  {
    /* Initialize the structure */
    cfg->ClkPort    = 0U;
 80062b8:	f04f 0700 	mov.w	r7, #0
    other_instance = 0U;
 80062bc:	bf0b      	itete	eq
 80062be:	f04f 0801 	moveq.w	r8, #1
 80062c2:	f04f 0800 	movne.w	r8, #0
 80062c6:	2400      	moveq	r4, #0
 80062c8:	2401      	movne	r4, #1
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 80062ca:	ab02      	add	r3, sp, #8
    cfg->IOLowPort  = 0U;
    cfg->IOHighPort = 0U;

    if (instance_nb == 2U)
    {
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 80062cc:	f8df e278 	ldr.w	lr, [pc, #632]	; 8006548 <HAL_OSPIM_Config+0x2a0>
        value = (OCTOSPIM_PCR_CLKSRC | OCTOSPIM_PCR_DQSSRC | OCTOSPIM_PCR_NCSSRC
               | OCTOSPIM_PCR_IOLSRC_1 | OCTOSPIM_PCR_IOHSRC_1);
      }
      else
      {
        value = OCTOSPIM_PCR_NCSSRC;
 80062d0:	f8df 9278 	ldr.w	r9, [pc, #632]	; 800654c <HAL_OSPIM_Config+0x2a4>
    if (instance_nb == 2U)
 80062d4:	2d02      	cmp	r5, #2
    cfg->IOHighPort = 0U;
 80062d6:	611f      	str	r7, [r3, #16]
    cfg->DQSPort    = 0U;
 80062d8:	e9c3 7700 	strd	r7, r7, [r3]
    cfg->IOLowPort  = 0U;
 80062dc:	e9c3 7702 	strd	r7, r7, [r3, #8]
    if (instance_nb == 2U)
 80062e0:	f040 812a 	bne.w	8006538 <HAL_OSPIM_Config+0x290>
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 80062e4:	f8de 2000 	ldr.w	r2, [lr]
        value = OCTOSPIM_PCR_NCSSRC;
 80062e8:	f012 0f01 	tst.w	r2, #1
 80062ec:	bf0c      	ite	eq
 80062ee:	464e      	moveq	r6, r9
 80062f0:	f44f 7600 	movne.w	r6, #512	; 0x200
      }
    }

    /* Get the information about the instance */
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 80062f4:	f04f 0c00 	mov.w	ip, #0
    {
      reg = OCTOSPIM->PCR[index];
 80062f8:	eb0e 028c 	add.w	r2, lr, ip, lsl #2
      {
        /* The clock is enabled on this port */
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
        {
          /* The clock correspond to the instance passed as parameter */
          cfg->ClkPort = index+1U;
 80062fc:	f10c 0001 	add.w	r0, ip, #1
      reg = OCTOSPIM->PCR[index];
 8006300:	6852      	ldr	r2, [r2, #4]
      if ((reg & OCTOSPIM_PCR_CLKEN) != 0U)
 8006302:	f012 0f01 	tst.w	r2, #1
 8006306:	d005      	beq.n	8006314 <HAL_OSPIM_Config+0x6c>
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
 8006308:	ea82 0c06 	eor.w	ip, r2, r6
 800630c:	f01c 0f02 	tst.w	ip, #2
          cfg->ClkPort = index+1U;
 8006310:	bf08      	it	eq
 8006312:	6018      	streq	r0, [r3, #0]
        }
      }

      if ((reg & OCTOSPIM_PCR_DQSEN) != 0U)
 8006314:	f012 0f10 	tst.w	r2, #16
 8006318:	d005      	beq.n	8006326 <HAL_OSPIM_Config+0x7e>
      {
        /* The DQS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_DQSSRC) == (value & OCTOSPIM_PCR_DQSSRC))
 800631a:	ea82 0c06 	eor.w	ip, r2, r6
 800631e:	f01c 0f20 	tst.w	ip, #32
        {
          /* The DQS correspond to the instance passed as parameter */
          cfg->DQSPort = index+1U;
 8006322:	bf08      	it	eq
 8006324:	6058      	streq	r0, [r3, #4]
        }
      }

      if ((reg & OCTOSPIM_PCR_NCSEN) != 0U)
 8006326:	f412 7f80 	tst.w	r2, #256	; 0x100
 800632a:	d005      	beq.n	8006338 <HAL_OSPIM_Config+0x90>
      {
        /* The nCS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_NCSSRC) == (value & OCTOSPIM_PCR_NCSSRC))
 800632c:	ea82 0c06 	eor.w	ip, r2, r6
 8006330:	f41c 7f00 	tst.w	ip, #512	; 0x200
        {
          /* The nCS correspond to the instance passed as parameter */
          cfg->NCSPort = index+1U;
 8006334:	bf08      	it	eq
 8006336:	6098      	streq	r0, [r3, #8]
        }
      }

      if ((reg & OCTOSPIM_PCR_IOLEN) != 0U)
 8006338:	f412 3f80 	tst.w	r2, #65536	; 0x10000
 800633c:	d00d      	beq.n	800635a <HAL_OSPIM_Config+0xb2>
      {
        /* The IO Low is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOLSRC_1) == (value & OCTOSPIM_PCR_IOLSRC_1))
 800633e:	ea82 0c06 	eor.w	ip, r2, r6
 8006342:	f41c 2f80 	tst.w	ip, #262144	; 0x40000
 8006346:	d108      	bne.n	800635a <HAL_OSPIM_Config+0xb2>
        {
          /* The IO Low correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOLSRC_0) == 0U)
 8006348:	f412 3f00 	tst.w	r2, #131072	; 0x20000
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOLEN | (index+1U));
 800634c:	bf0c      	ite	eq
 800634e:	f440 3c80 	orreq.w	ip, r0, #65536	; 0x10000
          }
          else
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOHEN | (index+1U));
 8006352:	f040 7c80 	orrne.w	ip, r0, #16777216	; 0x1000000
 8006356:	f8c3 c00c 	str.w	ip, [r3, #12]
          }
        }
      }

      if ((reg & OCTOSPIM_PCR_IOHEN) != 0U)
 800635a:	f012 7f80 	tst.w	r2, #16777216	; 0x1000000
 800635e:	d00b      	beq.n	8006378 <HAL_OSPIM_Config+0xd0>
      {
        /* The IO High is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOHSRC_1) == (value & OCTOSPIM_PCR_IOHSRC_1))
 8006360:	ea82 0c06 	eor.w	ip, r2, r6
 8006364:	f01c 6f80 	tst.w	ip, #67108864	; 0x4000000
 8006368:	d106      	bne.n	8006378 <HAL_OSPIM_Config+0xd0>
        {
          /* The IO High correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOHSRC_0) == 0U)
 800636a:	0192      	lsls	r2, r2, #6
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOLEN | (index+1U));
 800636c:	bf54      	ite	pl
 800636e:	f440 3280 	orrpl.w	r2, r0, #65536	; 0x10000
          }
          else
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOHEN | (index+1U));
 8006372:	f040 7280 	orrmi.w	r2, r0, #16777216	; 0x1000000
 8006376:	611a      	str	r2, [r3, #16]
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 8006378:	2802      	cmp	r0, #2
 800637a:	f04f 0c01 	mov.w	ip, #1
 800637e:	d1bb      	bne.n	80062f8 <HAL_OSPIM_Config+0x50>
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 8006380:	2d02      	cmp	r5, #2
 8006382:	f103 0318 	add.w	r3, r3, #24
 8006386:	f040 80d5 	bne.w	8006534 <HAL_OSPIM_Config+0x28c>
    if ((OCTOSPI1->CR & OCTOSPI_CR_EN) != 0U)
 800638a:	4a6d      	ldr	r2, [pc, #436]	; (8006540 <HAL_OSPIM_Config+0x298>)
 800638c:	6815      	ldr	r5, [r2, #0]
 800638e:	ea15 050c 	ands.w	r5, r5, ip
 8006392:	d004      	beq.n	800639e <HAL_OSPIM_Config+0xf6>
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8006394:	6813      	ldr	r3, [r2, #0]
      ospi_enabled |= 0x1U;
 8006396:	4665      	mov	r5, ip
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8006398:	f023 0301 	bic.w	r3, r3, #1
 800639c:	6013      	str	r3, [r2, #0]
    if ((OCTOSPI2->CR & OCTOSPI_CR_EN) != 0U)
 800639e:	4b69      	ldr	r3, [pc, #420]	; (8006544 <HAL_OSPIM_Config+0x29c>)
 80063a0:	681a      	ldr	r2, [r3, #0]
 80063a2:	07d0      	lsls	r0, r2, #31
 80063a4:	f140 80ca 	bpl.w	800653c <HAL_OSPIM_Config+0x294>
      CLEAR_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 80063a8:	681a      	ldr	r2, [r3, #0]
 80063aa:	f022 0201 	bic.w	r2, r2, #1
 80063ae:	601a      	str	r2, [r3, #0]
      ospi_enabled |= 0x2U;
 80063b0:	f045 0302 	orr.w	r3, r5, #2
 80063b4:	9301      	str	r3, [sp, #4]
    CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].NCSPort-1U)], OCTOSPIM_PCR_NCSEN);
 80063b6:	ab0e      	add	r3, sp, #56	; 0x38
 80063b8:	2018      	movs	r0, #24
 80063ba:	fb00 3004 	mla	r0, r0, r4, r3
 80063be:	4b62      	ldr	r3, [pc, #392]	; (8006548 <HAL_OSPIM_Config+0x2a0>)
 80063c0:	f850 2c28 	ldr.w	r2, [r0, #-40]
 80063c4:	3a01      	subs	r2, #1
 80063c6:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 80063ca:	6857      	ldr	r7, [r2, #4]
 80063cc:	f427 7780 	bic.w	r7, r7, #256	; 0x100
 80063d0:	6057      	str	r7, [r2, #4]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 80063d2:	681a      	ldr	r2, [r3, #0]
 80063d4:	07d2      	lsls	r2, r2, #31
 80063d6:	f140 80bd 	bpl.w	8006554 <HAL_OSPIM_Config+0x2ac>
      CLEAR_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 80063da:	681a      	ldr	r2, [r3, #0]
 80063dc:	f022 0201 	bic.w	r2, r2, #1
 80063e0:	601a      	str	r2, [r3, #0]
      if (other_instance == 1U)
 80063e2:	f1b8 0f00 	cmp.w	r8, #0
 80063e6:	d02c      	beq.n	8006442 <HAL_OSPIM_Config+0x19a>
        SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort-1U)], OCTOSPIM_PCR_CLKSRC);
 80063e8:	9a08      	ldr	r2, [sp, #32]
 80063ea:	3a01      	subs	r2, #1
 80063ec:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 80063f0:	6850      	ldr	r0, [r2, #4]
 80063f2:	f040 0002 	orr.w	r0, r0, #2
 80063f6:	6050      	str	r0, [r2, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 80063f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80063fa:	b132      	cbz	r2, 800640a <HAL_OSPIM_Config+0x162>
          SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort-1U)], OCTOSPIM_PCR_DQSSRC);
 80063fc:	3a01      	subs	r2, #1
 80063fe:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8006402:	685a      	ldr	r2, [r3, #4]
 8006404:	f042 0220 	orr.w	r2, r2, #32
 8006408:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 800640a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800640c:	b15b      	cbz	r3, 8006426 <HAL_OSPIM_Config+0x17e>
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOLSRC_1);
 800640e:	3b01      	subs	r3, #1
 8006410:	f003 0301 	and.w	r3, r3, #1
 8006414:	009b      	lsls	r3, r3, #2
 8006416:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 800641a:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 800641e:	685a      	ldr	r2, [r3, #4]
 8006420:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8006424:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006426:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006428:	b15b      	cbz	r3, 8006442 <HAL_OSPIM_Config+0x19a>
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHSRC_1);
 800642a:	3b01      	subs	r3, #1
 800642c:	f003 0301 	and.w	r3, r3, #1
 8006430:	009b      	lsls	r3, r3, #2
 8006432:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 8006436:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 800643a:	685a      	ldr	r2, [r3, #4]
 800643c:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 8006440:	605a      	str	r2, [r3, #4]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006442:	ab0e      	add	r3, sp, #56	; 0x38
 8006444:	f04f 0918 	mov.w	r9, #24
 8006448:	f8d1 c000 	ldr.w	ip, [r1]
 800644c:	fb09 3908 	mla	r9, r9, r8, r3
 8006450:	f859 ac30 	ldr.w	sl, [r9, #-48]
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8006454:	f859 0c20 	ldr.w	r0, [r9, #-32]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006458:	45d4      	cmp	ip, sl
 800645a:	f859 bc2c 	ldr.w	fp, [r9, #-44]
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 800645e:	e9d1 7e01 	ldrd	r7, lr, [r1, #4]
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8006462:	e9d1 2303 	ldrd	r2, r3, [r1, #12]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006466:	f000 80b3 	beq.w	80065d0 <HAL_OSPIM_Config+0x328>
 800646a:	45bb      	cmp	fp, r7
 800646c:	d00a      	beq.n	8006484 <HAL_OSPIM_Config+0x1dc>
 800646e:	f859 6c28 	ldr.w	r6, [r9, #-40]
 8006472:	4576      	cmp	r6, lr
 8006474:	d006      	beq.n	8006484 <HAL_OSPIM_Config+0x1dc>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006476:	f859 9c24 	ldr.w	r9, [r9, #-36]
 800647a:	4591      	cmp	r9, r2
 800647c:	d002      	beq.n	8006484 <HAL_OSPIM_Config+0x1dc>
 800647e:	4298      	cmp	r0, r3
 8006480:	f040 80b9 	bne.w	80065f6 <HAL_OSPIM_Config+0x34e>
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort-1U)], OCTOSPIM_PCR_CLKEN);
 8006484:	f10a 39ff 	add.w	r9, sl, #4294967295
 8006488:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8006548 <HAL_OSPIM_Config+0x2a0>
        if (IOM_cfg[other_instance].DQSPort != 0U)
 800648c:	ae0e      	add	r6, sp, #56	; 0x38
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort-1U)], OCTOSPIM_PCR_CLKEN);
 800648e:	eb0a 0989 	add.w	r9, sl, r9, lsl #2
 8006492:	f8d9 b004 	ldr.w	fp, [r9, #4]
 8006496:	f02b 0b01 	bic.w	fp, fp, #1
 800649a:	f8c9 b004 	str.w	fp, [r9, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 800649e:	f04f 0918 	mov.w	r9, #24
 80064a2:	fb09 6908 	mla	r9, r9, r8, r6
 80064a6:	f859 9c2c 	ldr.w	r9, [r9, #-44]
 80064aa:	f1b9 0f00 	cmp.w	r9, #0
 80064ae:	d009      	beq.n	80064c4 <HAL_OSPIM_Config+0x21c>
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort-1U)], OCTOSPIM_PCR_DQSEN);
 80064b0:	f109 39ff 	add.w	r9, r9, #4294967295
 80064b4:	eb0a 0989 	add.w	r9, sl, r9, lsl #2
 80064b8:	f8d9 a004 	ldr.w	sl, [r9, #4]
 80064bc:	f02a 0a10 	bic.w	sl, sl, #16
 80064c0:	f8c9 a004 	str.w	sl, [r9, #4]
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].NCSPort-1U)], OCTOSPIM_PCR_NCSEN);
 80064c4:	f04f 0918 	mov.w	r9, #24
 80064c8:	ae0e      	add	r6, sp, #56	; 0x38
 80064ca:	fb09 6808 	mla	r8, r9, r8, r6
 80064ce:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8006550 <HAL_OSPIM_Config+0x2a8>
 80064d2:	f858 6c28 	ldr.w	r6, [r8, #-40]
 80064d6:	ea4f 0a86 	mov.w	sl, r6, lsl #2
 80064da:	44d1      	add	r9, sl
 80064dc:	f8d9 a004 	ldr.w	sl, [r9, #4]
 80064e0:	f42a 7a80 	bic.w	sl, sl, #256	; 0x100
 80064e4:	f8c9 a004 	str.w	sl, [r9, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 80064e8:	f858 8c24 	ldr.w	r8, [r8, #-36]
 80064ec:	f1b8 0f00 	cmp.w	r8, #0
 80064f0:	d00f      	beq.n	8006512 <HAL_OSPIM_Config+0x26a>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 80064f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80064f6:	f008 0801 	and.w	r8, r8, #1
 80064fa:	ea4f 0888 	mov.w	r8, r8, lsl #2
 80064fe:	f108 48a4 	add.w	r8, r8, #1375731712	; 0x52000000
 8006502:	f508 4834 	add.w	r8, r8, #46080	; 0xb400
 8006506:	f8d8 9004 	ldr.w	r9, [r8, #4]
 800650a:	f429 3980 	bic.w	r9, r9, #65536	; 0x10000
 800650e:	f8c8 9004 	str.w	r9, [r8, #4]
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006512:	2800      	cmp	r0, #0
 8006514:	d06f      	beq.n	80065f6 <HAL_OSPIM_Config+0x34e>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006516:	3801      	subs	r0, #1
 8006518:	f000 0001 	and.w	r0, r0, #1
 800651c:	0080      	lsls	r0, r0, #2
 800651e:	f100 40a4 	add.w	r0, r0, #1375731712	; 0x52000000
 8006522:	f500 4034 	add.w	r0, r0, #46080	; 0xb400
 8006526:	f8d0 8004 	ldr.w	r8, [r0, #4]
 800652a:	f028 7880 	bic.w	r8, r8, #16777216	; 0x1000000
 800652e:	f8c0 8004 	str.w	r8, [r0, #4]
 8006532:	e060      	b.n	80065f6 <HAL_OSPIM_Config+0x34e>
 8006534:	4605      	mov	r5, r0
 8006536:	e6cd      	b.n	80062d4 <HAL_OSPIM_Config+0x2c>
  uint32_t value = 0U;
 8006538:	2600      	movs	r6, #0
 800653a:	e6db      	b.n	80062f4 <HAL_OSPIM_Config+0x4c>
 800653c:	9501      	str	r5, [sp, #4]
 800653e:	e73a      	b.n	80063b6 <HAL_OSPIM_Config+0x10e>
 8006540:	52005000 	.word	0x52005000
 8006544:	5200a000 	.word	0x5200a000
 8006548:	5200b400 	.word	0x5200b400
 800654c:	04040222 	.word	0x04040222
 8006550:	5200b3fc 	.word	0x5200b3fc
      if (IOM_cfg[instance].ClkPort != 0U)
 8006554:	f850 2c30 	ldr.w	r2, [r0, #-48]
 8006558:	2a00      	cmp	r2, #0
 800655a:	f43f af72 	beq.w	8006442 <HAL_OSPIM_Config+0x19a>
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].ClkPort-1U)], OCTOSPIM_PCR_CLKEN);
 800655e:	3a01      	subs	r2, #1
 8006560:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8006564:	6857      	ldr	r7, [r2, #4]
 8006566:	f027 0701 	bic.w	r7, r7, #1
 800656a:	6057      	str	r7, [r2, #4]
        if (IOM_cfg[instance].DQSPort != 0U)
 800656c:	f850 2c2c 	ldr.w	r2, [r0, #-44]
 8006570:	b132      	cbz	r2, 8006580 <HAL_OSPIM_Config+0x2d8>
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].DQSPort-1U)], OCTOSPIM_PCR_DQSEN);
 8006572:	3a01      	subs	r2, #1
 8006574:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8006578:	685a      	ldr	r2, [r3, #4]
 800657a:	f022 0210 	bic.w	r2, r2, #16
 800657e:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006580:	2318      	movs	r3, #24
 8006582:	aa0e      	add	r2, sp, #56	; 0x38
 8006584:	fb03 2304 	mla	r3, r3, r4, r2
 8006588:	f853 3c24 	ldr.w	r3, [r3, #-36]
 800658c:	b15b      	cbz	r3, 80065a6 <HAL_OSPIM_Config+0x2fe>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOLowPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOLEN);
 800658e:	3b01      	subs	r3, #1
 8006590:	f003 0301 	and.w	r3, r3, #1
 8006594:	009b      	lsls	r3, r3, #2
 8006596:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 800659a:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 800659e:	685a      	ldr	r2, [r3, #4]
 80065a0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80065a4:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80065a6:	2318      	movs	r3, #24
 80065a8:	aa0e      	add	r2, sp, #56	; 0x38
 80065aa:	fb03 2304 	mla	r3, r3, r4, r2
 80065ae:	f853 3c20 	ldr.w	r3, [r3, #-32]
 80065b2:	2b00      	cmp	r3, #0
 80065b4:	f43f af45 	beq.w	8006442 <HAL_OSPIM_Config+0x19a>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 80065b8:	3b01      	subs	r3, #1
 80065ba:	f003 0301 	and.w	r3, r3, #1
 80065be:	009b      	lsls	r3, r3, #2
 80065c0:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 80065c4:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 80065c8:	685a      	ldr	r2, [r3, #4]
 80065ca:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80065ce:	e737      	b.n	8006440 <HAL_OSPIM_Config+0x198>
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 80065d0:	45bb      	cmp	fp, r7
 80065d2:	f47f af57 	bne.w	8006484 <HAL_OSPIM_Config+0x1dc>
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 80065d6:	f859 9c24 	ldr.w	r9, [r9, #-36]
 80065da:	4591      	cmp	r9, r2
 80065dc:	f47f af52 	bne.w	8006484 <HAL_OSPIM_Config+0x1dc>
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 80065e0:	4298      	cmp	r0, r3
 80065e2:	f47f af4f 	bne.w	8006484 <HAL_OSPIM_Config+0x1dc>
        SET_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 80065e6:	f8df 81ec 	ldr.w	r8, [pc, #492]	; 80067d4 <HAL_OSPIM_Config+0x52c>
 80065ea:	f8d8 0000 	ldr.w	r0, [r8]
 80065ee:	f040 0001 	orr.w	r0, r0, #1
 80065f2:	f8c8 0000 	str.w	r0, [r8]
        MODIFY_REG(OCTOSPIM->PCR[(cfg->NCSPort - 1U)], (OCTOSPIM_PCR_NCSEN | OCTOSPIM_PCR_NCSSRC),
 80065f6:	4877      	ldr	r0, [pc, #476]	; (80067d4 <HAL_OSPIM_Config+0x52c>)
 80065f8:	f10e 3eff 	add.w	lr, lr, #4294967295
 80065fc:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
 8006600:	f8de 8004 	ldr.w	r8, [lr, #4]
 8006604:	f428 7840 	bic.w	r8, r8, #768	; 0x300
 8006608:	ea48 2844 	orr.w	r8, r8, r4, lsl #9
 800660c:	f448 7880 	orr.w	r8, r8, #256	; 0x100
 8006610:	f8ce 8004 	str.w	r8, [lr, #4]
    if ((cfg->Req2AckTime - 1U) > ((OCTOSPIM->CR & OCTOSPIM_CR_REQ2ACK_TIME) >> OCTOSPIM_CR_REQ2ACK_TIME_Pos))
 8006614:	6949      	ldr	r1, [r1, #20]
 8006616:	f101 3eff 	add.w	lr, r1, #4294967295
 800661a:	6801      	ldr	r1, [r0, #0]
 800661c:	f3c1 4107 	ubfx	r1, r1, #16, #8
 8006620:	458e      	cmp	lr, r1
 8006622:	d905      	bls.n	8006630 <HAL_OSPIM_Config+0x388>
      MODIFY_REG(OCTOSPIM->CR, OCTOSPIM_CR_REQ2ACK_TIME, ((cfg->Req2AckTime - 1U) << OCTOSPIM_CR_REQ2ACK_TIME_Pos));
 8006624:	6801      	ldr	r1, [r0, #0]
 8006626:	f421 017f 	bic.w	r1, r1, #16711680	; 0xff0000
 800662a:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800662e:	6001      	str	r1, [r0, #0]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006630:	6801      	ldr	r1, [r0, #0]
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006632:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006636:	f402 3e80 	and.w	lr, r2, #65536	; 0x10000
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 800663a:	f011 0f01 	tst.w	r1, #1
 800663e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8006642:	f403 3180 	and.w	r1, r3, #65536	; 0x10000
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006646:	4484      	add	ip, r0
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006648:	d063      	beq.n	8006712 <HAL_OSPIM_Config+0x46a>
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 800664a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800664e:	f024 0403 	bic.w	r4, r4, #3
 8006652:	f044 0401 	orr.w	r4, r4, #1
 8006656:	f8cc 4004 	str.w	r4, [ip, #4]
      if (cfg->DQSPort != 0U)
 800665a:	b147      	cbz	r7, 800666e <HAL_OSPIM_Config+0x3c6>
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort-1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC), OCTOSPIM_PCR_DQSEN);
 800665c:	3f01      	subs	r7, #1
 800665e:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 8006662:	6844      	ldr	r4, [r0, #4]
 8006664:	f024 0430 	bic.w	r4, r4, #48	; 0x30
 8006668:	f044 0410 	orr.w	r4, r4, #16
 800666c:	6044      	str	r4, [r0, #4]
      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 800666e:	f1be 0f00 	cmp.w	lr, #0
 8006672:	d02e      	beq.n	80066d2 <HAL_OSPIM_Config+0x42a>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 8006674:	3a01      	subs	r2, #1
 8006676:	f002 0201 	and.w	r2, r2, #1
 800667a:	0092      	lsls	r2, r2, #2
 800667c:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 8006680:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 8006684:	6850      	ldr	r0, [r2, #4]
 8006686:	f420 20e0 	bic.w	r0, r0, #458752	; 0x70000
 800668a:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 800668e:	6050      	str	r0, [r2, #4]
      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006690:	b379      	cbz	r1, 80066f2 <HAL_OSPIM_Config+0x44a>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006692:	3b01      	subs	r3, #1
 8006694:	f003 0301 	and.w	r3, r3, #1
 8006698:	009b      	lsls	r3, r3, #2
 800669a:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 800669e:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 80066a2:	685a      	ldr	r2, [r3, #4]
 80066a4:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 80066a8:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 80066ac:	605a      	str	r2, [r3, #4]
    if ((ospi_enabled & 0x1U) != 0U)
 80066ae:	b125      	cbz	r5, 80066ba <HAL_OSPIM_Config+0x412>
      SET_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 80066b0:	4a49      	ldr	r2, [pc, #292]	; (80067d8 <HAL_OSPIM_Config+0x530>)
 80066b2:	6813      	ldr	r3, [r2, #0]
 80066b4:	f043 0301 	orr.w	r3, r3, #1
 80066b8:	6013      	str	r3, [r2, #0]
    if ((ospi_enabled & 0x2U) != 0U)
 80066ba:	9b01      	ldr	r3, [sp, #4]
 80066bc:	079b      	lsls	r3, r3, #30
 80066be:	d504      	bpl.n	80066ca <HAL_OSPIM_Config+0x422>
      SET_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 80066c0:	4a46      	ldr	r2, [pc, #280]	; (80067dc <HAL_OSPIM_Config+0x534>)
 80066c2:	6813      	ldr	r3, [r2, #0]
 80066c4:	f043 0301 	orr.w	r3, r3, #1
 80066c8:	6013      	str	r3, [r2, #0]
}
 80066ca:	2000      	movs	r0, #0
 80066cc:	b00f      	add	sp, #60	; 0x3c
 80066ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 80066d2:	2a00      	cmp	r2, #0
 80066d4:	d0dc      	beq.n	8006690 <HAL_OSPIM_Config+0x3e8>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 80066d6:	3a01      	subs	r2, #1
 80066d8:	f002 0201 	and.w	r2, r2, #1
 80066dc:	0092      	lsls	r2, r2, #2
 80066de:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 80066e2:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 80066e6:	6850      	ldr	r0, [r2, #4]
 80066e8:	f020 60e0 	bic.w	r0, r0, #117440512	; 0x7000000
 80066ec:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
 80066f0:	e7cd      	b.n	800668e <HAL_OSPIM_Config+0x3e6>
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80066f2:	2b00      	cmp	r3, #0
 80066f4:	d0db      	beq.n	80066ae <HAL_OSPIM_Config+0x406>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 80066f6:	3b01      	subs	r3, #1
 80066f8:	f003 0301 	and.w	r3, r3, #1
 80066fc:	009b      	lsls	r3, r3, #2
 80066fe:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 8006702:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 8006706:	685a      	ldr	r2, [r3, #4]
 8006708:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
 800670c:	f042 7240 	orr.w	r2, r2, #50331648	; 0x3000000
 8006710:	e7cc      	b.n	80066ac <HAL_OSPIM_Config+0x404>
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC),
 8006712:	f8dc 8004 	ldr.w	r8, [ip, #4]
 8006716:	f028 0803 	bic.w	r8, r8, #3
 800671a:	ea48 0844 	orr.w	r8, r8, r4, lsl #1
 800671e:	f048 0801 	orr.w	r8, r8, #1
 8006722:	f8cc 8004 	str.w	r8, [ip, #4]
      if (cfg->DQSPort != 0U)
 8006726:	b157      	cbz	r7, 800673e <HAL_OSPIM_Config+0x496>
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort-1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC),
 8006728:	3f01      	subs	r7, #1
 800672a:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 800672e:	6847      	ldr	r7, [r0, #4]
 8006730:	f027 0730 	bic.w	r7, r7, #48	; 0x30
 8006734:	ea47 1744 	orr.w	r7, r7, r4, lsl #5
 8006738:	f047 0710 	orr.w	r7, r7, #16
 800673c:	6047      	str	r7, [r0, #4]
      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 800673e:	f1be 0f00 	cmp.w	lr, #0
 8006742:	d021      	beq.n	8006788 <HAL_OSPIM_Config+0x4e0>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 8006744:	3a01      	subs	r2, #1
 8006746:	f002 0201 	and.w	r2, r2, #1
 800674a:	0092      	lsls	r2, r2, #2
 800674c:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 8006750:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 8006754:	6850      	ldr	r0, [r2, #4]
 8006756:	f420 20e0 	bic.w	r0, r0, #458752	; 0x70000
 800675a:	ea40 4084 	orr.w	r0, r0, r4, lsl #18
 800675e:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 8006762:	6050      	str	r0, [r2, #4]
      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006764:	b311      	cbz	r1, 80067ac <HAL_OSPIM_Config+0x504>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006766:	3b01      	subs	r3, #1
 8006768:	f003 0301 	and.w	r3, r3, #1
 800676c:	009b      	lsls	r3, r3, #2
 800676e:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 8006772:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 8006776:	685a      	ldr	r2, [r3, #4]
 8006778:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 800677c:	ea42 4484 	orr.w	r4, r2, r4, lsl #18
 8006780:	f444 3440 	orr.w	r4, r4, #196608	; 0x30000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006784:	605c      	str	r4, [r3, #4]
 8006786:	e792      	b.n	80066ae <HAL_OSPIM_Config+0x406>
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006788:	2a00      	cmp	r2, #0
 800678a:	d0eb      	beq.n	8006764 <HAL_OSPIM_Config+0x4bc>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 800678c:	3a01      	subs	r2, #1
 800678e:	f002 0201 	and.w	r2, r2, #1
 8006792:	0092      	lsls	r2, r2, #2
 8006794:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 8006798:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 800679c:	6850      	ldr	r0, [r2, #4]
 800679e:	f020 60e0 	bic.w	r0, r0, #117440512	; 0x7000000
 80067a2:	ea40 6084 	orr.w	r0, r0, r4, lsl #26
 80067a6:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
 80067aa:	e7da      	b.n	8006762 <HAL_OSPIM_Config+0x4ba>
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80067ac:	2b00      	cmp	r3, #0
 80067ae:	f43f af7e 	beq.w	80066ae <HAL_OSPIM_Config+0x406>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 80067b2:	3b01      	subs	r3, #1
 80067b4:	f003 0301 	and.w	r3, r3, #1
 80067b8:	009b      	lsls	r3, r3, #2
 80067ba:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 80067be:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 80067c2:	685a      	ldr	r2, [r3, #4]
 80067c4:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
 80067c8:	ea42 6484 	orr.w	r4, r2, r4, lsl #26
 80067cc:	f044 7440 	orr.w	r4, r4, #50331648	; 0x3000000
 80067d0:	e7d8      	b.n	8006784 <HAL_OSPIM_Config+0x4dc>
 80067d2:	bf00      	nop
 80067d4:	5200b400 	.word	0x5200b400
 80067d8:	52005000 	.word	0x52005000
 80067dc:	5200a000 	.word	0x5200a000

080067e0 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 80067e0:	b570      	push	{r4, r5, r6, lr}

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
 80067e2:	4d1d      	ldr	r5, [pc, #116]	; (8006858 <HAL_PWREx_ConfigSupply+0x78>)
{
 80067e4:	4604      	mov	r4, r0
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
 80067e6:	68eb      	ldr	r3, [r5, #12]
 80067e8:	f003 0307 	and.w	r3, r3, #7
 80067ec:	2b06      	cmp	r3, #6
 80067ee:	d006      	beq.n	80067fe <HAL_PWREx_ConfigSupply+0x1e>
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 80067f0:	68e8      	ldr	r0, [r5, #12]
 80067f2:	f000 003f 	and.w	r0, r0, #63	; 0x3f
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 80067f6:	1b00      	subs	r0, r0, r4
 80067f8:	bf18      	it	ne
 80067fa:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
 80067fc:	bd70      	pop	{r4, r5, r6, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 80067fe:	68eb      	ldr	r3, [r5, #12]
 8006800:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006804:	4303      	orrs	r3, r0
 8006806:	60eb      	str	r3, [r5, #12]
  tickstart = HAL_GetTick ();
 8006808:	f7fe f8d4 	bl	80049b4 <HAL_GetTick>
 800680c:	4606      	mov	r6, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 800680e:	686b      	ldr	r3, [r5, #4]
 8006810:	049b      	lsls	r3, r3, #18
 8006812:	d508      	bpl.n	8006826 <HAL_PWREx_ConfigSupply+0x46>
      (SupplySource == PWR_SMPS_2V5_SUPPLIES_EXT_AND_LDO) ||
 8006814:	f1a4 031d 	sub.w	r3, r4, #29
 8006818:	2b01      	cmp	r3, #1
 800681a:	d90c      	bls.n	8006836 <HAL_PWREx_ConfigSupply+0x56>
      (SupplySource == PWR_SMPS_1V8_SUPPLIES_EXT)         ||
 800681c:	3c2d      	subs	r4, #45	; 0x2d
 800681e:	2c01      	cmp	r4, #1
 8006820:	d909      	bls.n	8006836 <HAL_PWREx_ConfigSupply+0x56>
  return HAL_OK;
 8006822:	2000      	movs	r0, #0
 8006824:	e7ea      	b.n	80067fc <HAL_PWREx_ConfigSupply+0x1c>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8006826:	f7fe f8c5 	bl	80049b4 <HAL_GetTick>
 800682a:	1b80      	subs	r0, r0, r6
 800682c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006830:	d9ed      	bls.n	800680e <HAL_PWREx_ConfigSupply+0x2e>
      return HAL_ERROR;
 8006832:	2001      	movs	r0, #1
 8006834:	e7e2      	b.n	80067fc <HAL_PWREx_ConfigSupply+0x1c>
    tickstart = HAL_GetTick ();
 8006836:	f7fe f8bd 	bl	80049b4 <HAL_GetTick>
    while (__HAL_PWR_GET_FLAG (PWR_FLAG_SMPSEXTRDY) == 0U)
 800683a:	4d07      	ldr	r5, [pc, #28]	; (8006858 <HAL_PWREx_ConfigSupply+0x78>)
    tickstart = HAL_GetTick ();
 800683c:	4604      	mov	r4, r0
    while (__HAL_PWR_GET_FLAG (PWR_FLAG_SMPSEXTRDY) == 0U)
 800683e:	68eb      	ldr	r3, [r5, #12]
 8006840:	f003 0311 	and.w	r3, r3, #17
 8006844:	2b11      	cmp	r3, #17
 8006846:	d0ec      	beq.n	8006822 <HAL_PWREx_ConfigSupply+0x42>
      if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8006848:	f7fe f8b4 	bl	80049b4 <HAL_GetTick>
 800684c:	1b00      	subs	r0, r0, r4
 800684e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006852:	d9f4      	bls.n	800683e <HAL_PWREx_ConfigSupply+0x5e>
 8006854:	e7ed      	b.n	8006832 <HAL_PWREx_ConfigSupply+0x52>
 8006856:	bf00      	nop
 8006858:	58024800 	.word	0x58024800

0800685c <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800685c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800685e:	4604      	mov	r4, r0
 8006860:	b908      	cbnz	r0, 8006866 <HAL_RCC_OscConfig+0xa>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
      {
        return HAL_ERROR;
 8006862:	2001      	movs	r0, #1
 8006864:	e07f      	b.n	8006966 <HAL_RCC_OscConfig+0x10a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006866:	6803      	ldr	r3, [r0, #0]
 8006868:	07df      	lsls	r7, r3, #31
 800686a:	d453      	bmi.n	8006914 <HAL_RCC_OscConfig+0xb8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800686c:	6823      	ldr	r3, [r4, #0]
 800686e:	079e      	lsls	r6, r3, #30
 8006870:	f100 80a3 	bmi.w	80069ba <HAL_RCC_OscConfig+0x15e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8006874:	6823      	ldr	r3, [r4, #0]
 8006876:	06da      	lsls	r2, r3, #27
 8006878:	d51c      	bpl.n	80068b4 <HAL_RCC_OscConfig+0x58>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 800687a:	4b98      	ldr	r3, [pc, #608]	; (8006adc <HAL_RCC_OscConfig+0x280>)
 800687c:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 800687e:	6a99      	ldr	r1, [r3, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006880:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8006884:	2a08      	cmp	r2, #8
 8006886:	d007      	beq.n	8006898 <HAL_RCC_OscConfig+0x3c>
 8006888:	2a18      	cmp	r2, #24
 800688a:	f040 80e5 	bne.w	8006a58 <HAL_RCC_OscConfig+0x1fc>
 800688e:	f001 0203 	and.w	r2, r1, #3
 8006892:	2a01      	cmp	r2, #1
 8006894:	f040 80e0 	bne.w	8006a58 <HAL_RCC_OscConfig+0x1fc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8006898:	681b      	ldr	r3, [r3, #0]
 800689a:	05db      	lsls	r3, r3, #23
 800689c:	d502      	bpl.n	80068a4 <HAL_RCC_OscConfig+0x48>
 800689e:	69e3      	ldr	r3, [r4, #28]
 80068a0:	2b80      	cmp	r3, #128	; 0x80
 80068a2:	d1de      	bne.n	8006862 <HAL_RCC_OscConfig+0x6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 80068a4:	4a8d      	ldr	r2, [pc, #564]	; (8006adc <HAL_RCC_OscConfig+0x280>)
 80068a6:	6a21      	ldr	r1, [r4, #32]
 80068a8:	68d3      	ldr	r3, [r2, #12]
 80068aa:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
 80068ae:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 80068b2:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80068b4:	6823      	ldr	r3, [r4, #0]
 80068b6:	0719      	lsls	r1, r3, #28
 80068b8:	f100 80fb 	bmi.w	8006ab2 <HAL_RCC_OscConfig+0x256>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 80068bc:	6823      	ldr	r3, [r4, #0]
 80068be:	069a      	lsls	r2, r3, #26
 80068c0:	f100 8121 	bmi.w	8006b06 <HAL_RCC_OscConfig+0x2aa>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80068c4:	6823      	ldr	r3, [r4, #0]
 80068c6:	075d      	lsls	r5, r3, #29
 80068c8:	d51e      	bpl.n	8006908 <HAL_RCC_OscConfig+0xac>
    PWR->CR1 |= PWR_CR1_DBP;
 80068ca:	4d85      	ldr	r5, [pc, #532]	; (8006ae0 <HAL_RCC_OscConfig+0x284>)
 80068cc:	682b      	ldr	r3, [r5, #0]
 80068ce:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80068d2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80068d4:	f7fe f86e 	bl	80049b4 <HAL_GetTick>
 80068d8:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80068da:	682b      	ldr	r3, [r5, #0]
 80068dc:	05da      	lsls	r2, r3, #23
 80068de:	f140 8137 	bpl.w	8006b50 <HAL_RCC_OscConfig+0x2f4>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80068e2:	68a3      	ldr	r3, [r4, #8]
 80068e4:	4d7d      	ldr	r5, [pc, #500]	; (8006adc <HAL_RCC_OscConfig+0x280>)
 80068e6:	2b01      	cmp	r3, #1
 80068e8:	f040 8139 	bne.w	8006b5e <HAL_RCC_OscConfig+0x302>
 80068ec:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80068ee:	f043 0301 	orr.w	r3, r3, #1
 80068f2:	672b      	str	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80068f4:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80068f8:	f7fe f85c 	bl	80049b4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80068fc:	4e77      	ldr	r6, [pc, #476]	; (8006adc <HAL_RCC_OscConfig+0x280>)
      tickstart = HAL_GetTick();
 80068fe:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8006900:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006902:	079b      	lsls	r3, r3, #30
 8006904:	f140 8151 	bpl.w	8006baa <HAL_RCC_OscConfig+0x34e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006908:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800690a:	2800      	cmp	r0, #0
 800690c:	f040 8154 	bne.w	8006bb8 <HAL_RCC_OscConfig+0x35c>
          __HAL_RCC_PLLFRACN_ENABLE();
        }
      }
    }
  }
  return HAL_OK;
 8006910:	2000      	movs	r0, #0
 8006912:	e028      	b.n	8006966 <HAL_RCC_OscConfig+0x10a>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006914:	4b71      	ldr	r3, [pc, #452]	; (8006adc <HAL_RCC_OscConfig+0x280>)
 8006916:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006918:	6a99      	ldr	r1, [r3, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 800691a:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 800691e:	2a10      	cmp	r2, #16
 8006920:	d005      	beq.n	800692e <HAL_RCC_OscConfig+0xd2>
 8006922:	2a18      	cmp	r2, #24
 8006924:	d10a      	bne.n	800693c <HAL_RCC_OscConfig+0xe0>
 8006926:	f001 0203 	and.w	r2, r1, #3
 800692a:	2a02      	cmp	r2, #2
 800692c:	d106      	bne.n	800693c <HAL_RCC_OscConfig+0xe0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	039d      	lsls	r5, r3, #14
 8006932:	d59b      	bpl.n	800686c <HAL_RCC_OscConfig+0x10>
 8006934:	6863      	ldr	r3, [r4, #4]
 8006936:	2b00      	cmp	r3, #0
 8006938:	d198      	bne.n	800686c <HAL_RCC_OscConfig+0x10>
 800693a:	e792      	b.n	8006862 <HAL_RCC_OscConfig+0x6>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800693c:	6862      	ldr	r2, [r4, #4]
 800693e:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006942:	d111      	bne.n	8006968 <HAL_RCC_OscConfig+0x10c>
 8006944:	681a      	ldr	r2, [r3, #0]
 8006946:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800694a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800694c:	f7fe f832 	bl	80049b4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006950:	4e62      	ldr	r6, [pc, #392]	; (8006adc <HAL_RCC_OscConfig+0x280>)
        tickstart = HAL_GetTick();
 8006952:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006954:	6833      	ldr	r3, [r6, #0]
 8006956:	0398      	lsls	r0, r3, #14
 8006958:	d488      	bmi.n	800686c <HAL_RCC_OscConfig+0x10>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800695a:	f7fe f82b 	bl	80049b4 <HAL_GetTick>
 800695e:	1b40      	subs	r0, r0, r5
 8006960:	2864      	cmp	r0, #100	; 0x64
 8006962:	d9f7      	bls.n	8006954 <HAL_RCC_OscConfig+0xf8>
            return HAL_TIMEOUT;
 8006964:	2003      	movs	r0, #3
}
 8006966:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006968:	4d5c      	ldr	r5, [pc, #368]	; (8006adc <HAL_RCC_OscConfig+0x280>)
 800696a:	682b      	ldr	r3, [r5, #0]
 800696c:	b99a      	cbnz	r2, 8006996 <HAL_RCC_OscConfig+0x13a>
 800696e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006972:	602b      	str	r3, [r5, #0]
 8006974:	682b      	ldr	r3, [r5, #0]
 8006976:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800697a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800697c:	f7fe f81a 	bl	80049b4 <HAL_GetTick>
 8006980:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8006982:	682b      	ldr	r3, [r5, #0]
 8006984:	0399      	lsls	r1, r3, #14
 8006986:	f57f af71 	bpl.w	800686c <HAL_RCC_OscConfig+0x10>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800698a:	f7fe f813 	bl	80049b4 <HAL_GetTick>
 800698e:	1b80      	subs	r0, r0, r6
 8006990:	2864      	cmp	r0, #100	; 0x64
 8006992:	d9f6      	bls.n	8006982 <HAL_RCC_OscConfig+0x126>
 8006994:	e7e6      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006996:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800699a:	d107      	bne.n	80069ac <HAL_RCC_OscConfig+0x150>
 800699c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80069a0:	602b      	str	r3, [r5, #0]
 80069a2:	682b      	ldr	r3, [r5, #0]
 80069a4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80069a8:	602b      	str	r3, [r5, #0]
 80069aa:	e7cf      	b.n	800694c <HAL_RCC_OscConfig+0xf0>
 80069ac:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80069b0:	602b      	str	r3, [r5, #0]
 80069b2:	682b      	ldr	r3, [r5, #0]
 80069b4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80069b8:	e7f6      	b.n	80069a8 <HAL_RCC_OscConfig+0x14c>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 80069ba:	4b48      	ldr	r3, [pc, #288]	; (8006adc <HAL_RCC_OscConfig+0x280>)
 80069bc:	68e1      	ldr	r1, [r4, #12]
 80069be:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 80069c0:	6a98      	ldr	r0, [r3, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 80069c2:	f012 0238 	ands.w	r2, r2, #56	; 0x38
 80069c6:	d003      	beq.n	80069d0 <HAL_RCC_OscConfig+0x174>
 80069c8:	2a18      	cmp	r2, #24
 80069ca:	d121      	bne.n	8006a10 <HAL_RCC_OscConfig+0x1b4>
 80069cc:	0782      	lsls	r2, r0, #30
 80069ce:	d11f      	bne.n	8006a10 <HAL_RCC_OscConfig+0x1b4>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 80069d0:	681b      	ldr	r3, [r3, #0]
 80069d2:	075b      	lsls	r3, r3, #29
 80069d4:	d502      	bpl.n	80069dc <HAL_RCC_OscConfig+0x180>
 80069d6:	2900      	cmp	r1, #0
 80069d8:	f43f af43 	beq.w	8006862 <HAL_RCC_OscConfig+0x6>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 80069dc:	4d3f      	ldr	r5, [pc, #252]	; (8006adc <HAL_RCC_OscConfig+0x280>)
 80069de:	682a      	ldr	r2, [r5, #0]
 80069e0:	f022 0219 	bic.w	r2, r2, #25
 80069e4:	430a      	orrs	r2, r1
 80069e6:	602a      	str	r2, [r5, #0]
        tickstart = HAL_GetTick();
 80069e8:	f7fd ffe4 	bl	80049b4 <HAL_GetTick>
 80069ec:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80069ee:	682b      	ldr	r3, [r5, #0]
 80069f0:	075f      	lsls	r7, r3, #29
 80069f2:	d507      	bpl.n	8006a04 <HAL_RCC_OscConfig+0x1a8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80069f4:	686b      	ldr	r3, [r5, #4]
 80069f6:	6922      	ldr	r2, [r4, #16]
 80069f8:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 80069fc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006a00:	606b      	str	r3, [r5, #4]
 8006a02:	e737      	b.n	8006874 <HAL_RCC_OscConfig+0x18>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006a04:	f7fd ffd6 	bl	80049b4 <HAL_GetTick>
 8006a08:	1b80      	subs	r0, r0, r6
 8006a0a:	2802      	cmp	r0, #2
 8006a0c:	d9ef      	bls.n	80069ee <HAL_RCC_OscConfig+0x192>
 8006a0e:	e7a9      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006a10:	681a      	ldr	r2, [r3, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006a12:	b181      	cbz	r1, 8006a36 <HAL_RCC_OscConfig+0x1da>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006a14:	f022 0219 	bic.w	r2, r2, #25
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006a18:	4d30      	ldr	r5, [pc, #192]	; (8006adc <HAL_RCC_OscConfig+0x280>)
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006a1a:	430a      	orrs	r2, r1
 8006a1c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006a1e:	f7fd ffc9 	bl	80049b4 <HAL_GetTick>
 8006a22:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006a24:	682b      	ldr	r3, [r5, #0]
 8006a26:	0758      	lsls	r0, r3, #29
 8006a28:	d4e4      	bmi.n	80069f4 <HAL_RCC_OscConfig+0x198>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006a2a:	f7fd ffc3 	bl	80049b4 <HAL_GetTick>
 8006a2e:	1b80      	subs	r0, r0, r6
 8006a30:	2802      	cmp	r0, #2
 8006a32:	d9f7      	bls.n	8006a24 <HAL_RCC_OscConfig+0x1c8>
 8006a34:	e796      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
        __HAL_RCC_HSI_DISABLE();
 8006a36:	f022 0201 	bic.w	r2, r2, #1
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8006a3a:	4e28      	ldr	r6, [pc, #160]	; (8006adc <HAL_RCC_OscConfig+0x280>)
        __HAL_RCC_HSI_DISABLE();
 8006a3c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006a3e:	f7fd ffb9 	bl	80049b4 <HAL_GetTick>
 8006a42:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8006a44:	6833      	ldr	r3, [r6, #0]
 8006a46:	0759      	lsls	r1, r3, #29
 8006a48:	f57f af14 	bpl.w	8006874 <HAL_RCC_OscConfig+0x18>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006a4c:	f7fd ffb2 	bl	80049b4 <HAL_GetTick>
 8006a50:	1b40      	subs	r0, r0, r5
 8006a52:	2802      	cmp	r0, #2
 8006a54:	d9f6      	bls.n	8006a44 <HAL_RCC_OscConfig+0x1e8>
 8006a56:	e785      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 8006a58:	69e2      	ldr	r2, [r4, #28]
 8006a5a:	b1c2      	cbz	r2, 8006a8e <HAL_RCC_OscConfig+0x232>
        __HAL_RCC_CSI_ENABLE();
 8006a5c:	681a      	ldr	r2, [r3, #0]
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8006a5e:	4d1f      	ldr	r5, [pc, #124]	; (8006adc <HAL_RCC_OscConfig+0x280>)
        __HAL_RCC_CSI_ENABLE();
 8006a60:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8006a64:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006a66:	f7fd ffa5 	bl	80049b4 <HAL_GetTick>
 8006a6a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8006a6c:	682b      	ldr	r3, [r5, #0]
 8006a6e:	05df      	lsls	r7, r3, #23
 8006a70:	d507      	bpl.n	8006a82 <HAL_RCC_OscConfig+0x226>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006a72:	68eb      	ldr	r3, [r5, #12]
 8006a74:	6a22      	ldr	r2, [r4, #32]
 8006a76:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
 8006a7a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006a7e:	60eb      	str	r3, [r5, #12]
 8006a80:	e718      	b.n	80068b4 <HAL_RCC_OscConfig+0x58>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8006a82:	f7fd ff97 	bl	80049b4 <HAL_GetTick>
 8006a86:	1b80      	subs	r0, r0, r6
 8006a88:	2802      	cmp	r0, #2
 8006a8a:	d9ef      	bls.n	8006a6c <HAL_RCC_OscConfig+0x210>
 8006a8c:	e76a      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
        __HAL_RCC_CSI_DISABLE();
 8006a8e:	681a      	ldr	r2, [r3, #0]
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8006a90:	4e12      	ldr	r6, [pc, #72]	; (8006adc <HAL_RCC_OscConfig+0x280>)
        __HAL_RCC_CSI_DISABLE();
 8006a92:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006a96:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006a98:	f7fd ff8c 	bl	80049b4 <HAL_GetTick>
 8006a9c:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8006a9e:	6833      	ldr	r3, [r6, #0]
 8006aa0:	05d8      	lsls	r0, r3, #23
 8006aa2:	f57f af07 	bpl.w	80068b4 <HAL_RCC_OscConfig+0x58>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8006aa6:	f7fd ff85 	bl	80049b4 <HAL_GetTick>
 8006aaa:	1b40      	subs	r0, r0, r5
 8006aac:	2802      	cmp	r0, #2
 8006aae:	d9f6      	bls.n	8006a9e <HAL_RCC_OscConfig+0x242>
 8006ab0:	e758      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8006ab2:	6963      	ldr	r3, [r4, #20]
 8006ab4:	4d09      	ldr	r5, [pc, #36]	; (8006adc <HAL_RCC_OscConfig+0x280>)
 8006ab6:	b1ab      	cbz	r3, 8006ae4 <HAL_RCC_OscConfig+0x288>
      __HAL_RCC_LSI_ENABLE();
 8006ab8:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006aba:	f043 0301 	orr.w	r3, r3, #1
 8006abe:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8006ac0:	f7fd ff78 	bl	80049b4 <HAL_GetTick>
 8006ac4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8006ac6:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006ac8:	079b      	lsls	r3, r3, #30
 8006aca:	f53f aef7 	bmi.w	80068bc <HAL_RCC_OscConfig+0x60>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006ace:	f7fd ff71 	bl	80049b4 <HAL_GetTick>
 8006ad2:	1b80      	subs	r0, r0, r6
 8006ad4:	2802      	cmp	r0, #2
 8006ad6:	d9f6      	bls.n	8006ac6 <HAL_RCC_OscConfig+0x26a>
 8006ad8:	e744      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
 8006ada:	bf00      	nop
 8006adc:	58024400 	.word	0x58024400
 8006ae0:	58024800 	.word	0x58024800
      __HAL_RCC_LSI_DISABLE();
 8006ae4:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006ae6:	f023 0301 	bic.w	r3, r3, #1
 8006aea:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8006aec:	f7fd ff62 	bl	80049b4 <HAL_GetTick>
 8006af0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8006af2:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006af4:	079f      	lsls	r7, r3, #30
 8006af6:	f57f aee1 	bpl.w	80068bc <HAL_RCC_OscConfig+0x60>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006afa:	f7fd ff5b 	bl	80049b4 <HAL_GetTick>
 8006afe:	1b80      	subs	r0, r0, r6
 8006b00:	2802      	cmp	r0, #2
 8006b02:	d9f6      	bls.n	8006af2 <HAL_RCC_OscConfig+0x296>
 8006b04:	e72e      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
 8006b06:	69a3      	ldr	r3, [r4, #24]
 8006b08:	4d93      	ldr	r5, [pc, #588]	; (8006d58 <HAL_RCC_OscConfig+0x4fc>)
 8006b0a:	b183      	cbz	r3, 8006b2e <HAL_RCC_OscConfig+0x2d2>
      __HAL_RCC_HSI48_ENABLE();
 8006b0c:	682b      	ldr	r3, [r5, #0]
 8006b0e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8006b12:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006b14:	f7fd ff4e 	bl	80049b4 <HAL_GetTick>
 8006b18:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8006b1a:	682b      	ldr	r3, [r5, #0]
 8006b1c:	0498      	lsls	r0, r3, #18
 8006b1e:	f53f aed1 	bmi.w	80068c4 <HAL_RCC_OscConfig+0x68>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8006b22:	f7fd ff47 	bl	80049b4 <HAL_GetTick>
 8006b26:	1b80      	subs	r0, r0, r6
 8006b28:	2802      	cmp	r0, #2
 8006b2a:	d9f6      	bls.n	8006b1a <HAL_RCC_OscConfig+0x2be>
 8006b2c:	e71a      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
      __HAL_RCC_HSI48_DISABLE();
 8006b2e:	682b      	ldr	r3, [r5, #0]
 8006b30:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006b34:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006b36:	f7fd ff3d 	bl	80049b4 <HAL_GetTick>
 8006b3a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8006b3c:	682b      	ldr	r3, [r5, #0]
 8006b3e:	0499      	lsls	r1, r3, #18
 8006b40:	f57f aec0 	bpl.w	80068c4 <HAL_RCC_OscConfig+0x68>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8006b44:	f7fd ff36 	bl	80049b4 <HAL_GetTick>
 8006b48:	1b80      	subs	r0, r0, r6
 8006b4a:	2802      	cmp	r0, #2
 8006b4c:	d9f6      	bls.n	8006b3c <HAL_RCC_OscConfig+0x2e0>
 8006b4e:	e709      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006b50:	f7fd ff30 	bl	80049b4 <HAL_GetTick>
 8006b54:	1b80      	subs	r0, r0, r6
 8006b56:	2864      	cmp	r0, #100	; 0x64
 8006b58:	f67f aebf 	bls.w	80068da <HAL_RCC_OscConfig+0x7e>
 8006b5c:	e702      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006b5e:	b9b3      	cbnz	r3, 8006b8e <HAL_RCC_OscConfig+0x332>
 8006b60:	6f2b      	ldr	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006b62:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006b66:	f023 0301 	bic.w	r3, r3, #1
 8006b6a:	672b      	str	r3, [r5, #112]	; 0x70
 8006b6c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006b6e:	f023 0304 	bic.w	r3, r3, #4
 8006b72:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006b74:	f7fd ff1e 	bl	80049b4 <HAL_GetTick>
 8006b78:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8006b7a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006b7c:	0798      	lsls	r0, r3, #30
 8006b7e:	f57f aec3 	bpl.w	8006908 <HAL_RCC_OscConfig+0xac>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006b82:	f7fd ff17 	bl	80049b4 <HAL_GetTick>
 8006b86:	1b80      	subs	r0, r0, r6
 8006b88:	42b8      	cmp	r0, r7
 8006b8a:	d9f6      	bls.n	8006b7a <HAL_RCC_OscConfig+0x31e>
 8006b8c:	e6ea      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006b8e:	2b05      	cmp	r3, #5
 8006b90:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006b92:	d103      	bne.n	8006b9c <HAL_RCC_OscConfig+0x340>
 8006b94:	f043 0304 	orr.w	r3, r3, #4
 8006b98:	672b      	str	r3, [r5, #112]	; 0x70
 8006b9a:	e6a7      	b.n	80068ec <HAL_RCC_OscConfig+0x90>
 8006b9c:	f023 0301 	bic.w	r3, r3, #1
 8006ba0:	672b      	str	r3, [r5, #112]	; 0x70
 8006ba2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006ba4:	f023 0304 	bic.w	r3, r3, #4
 8006ba8:	e6a3      	b.n	80068f2 <HAL_RCC_OscConfig+0x96>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006baa:	f7fd ff03 	bl	80049b4 <HAL_GetTick>
 8006bae:	1b40      	subs	r0, r0, r5
 8006bb0:	42b8      	cmp	r0, r7
 8006bb2:	f67f aea5 	bls.w	8006900 <HAL_RCC_OscConfig+0xa4>
 8006bb6:	e6d5      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 8006bb8:	4d67      	ldr	r5, [pc, #412]	; (8006d58 <HAL_RCC_OscConfig+0x4fc>)
 8006bba:	692b      	ldr	r3, [r5, #16]
 8006bbc:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8006bc0:	2b18      	cmp	r3, #24
 8006bc2:	d07a      	beq.n	8006cba <HAL_RCC_OscConfig+0x45e>
        __HAL_RCC_PLL_DISABLE();
 8006bc4:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006bc6:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8006bc8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8006bcc:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006bce:	d167      	bne.n	8006ca0 <HAL_RCC_OscConfig+0x444>
        tickstart = HAL_GetTick();
 8006bd0:	f7fd fef0 	bl	80049b4 <HAL_GetTick>
 8006bd4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8006bd6:	682b      	ldr	r3, [r5, #0]
 8006bd8:	0199      	lsls	r1, r3, #6
 8006bda:	d45b      	bmi.n	8006c94 <HAL_RCC_OscConfig+0x438>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8006bdc:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8006bde:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006be0:	f423 737c 	bic.w	r3, r3, #1008	; 0x3f0
 8006be4:	f023 0303 	bic.w	r3, r3, #3
 8006be8:	4313      	orrs	r3, r2
 8006bea:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006bec:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8006bf0:	62ab      	str	r3, [r5, #40]	; 0x28
 8006bf2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006bf4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006bf6:	3b01      	subs	r3, #1
 8006bf8:	3a01      	subs	r2, #1
 8006bfa:	025b      	lsls	r3, r3, #9
 8006bfc:	0412      	lsls	r2, r2, #16
 8006bfe:	b29b      	uxth	r3, r3
 8006c00:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8006c04:	4313      	orrs	r3, r2
 8006c06:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006c08:	3a01      	subs	r2, #1
 8006c0a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006c0e:	4313      	orrs	r3, r2
 8006c10:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8006c12:	3a01      	subs	r2, #1
 8006c14:	0612      	lsls	r2, r2, #24
 8006c16:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8006c1a:	4313      	orrs	r3, r2
 8006c1c:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
 8006c1e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006c20:	f023 0301 	bic.w	r3, r3, #1
 8006c24:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8006c26:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8006c28:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006c2a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006c2e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006c32:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006c36:	636b      	str	r3, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 8006c38:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006c3a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006c3c:	f023 030c 	bic.w	r3, r3, #12
 8006c40:	4313      	orrs	r3, r2
 8006c42:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 8006c44:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006c46:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8006c48:	f023 0302 	bic.w	r3, r3, #2
 8006c4c:	4313      	orrs	r3, r2
 8006c4e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8006c50:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006c52:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006c56:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006c58:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006c5a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006c5e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8006c60:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006c62:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006c66:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
 8006c68:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006c6a:	f043 0301 	orr.w	r3, r3, #1
 8006c6e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
 8006c70:	682b      	ldr	r3, [r5, #0]
 8006c72:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8006c76:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006c78:	f7fd fe9c 	bl	80049b4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8006c7c:	4d36      	ldr	r5, [pc, #216]	; (8006d58 <HAL_RCC_OscConfig+0x4fc>)
        tickstart = HAL_GetTick();
 8006c7e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8006c80:	682b      	ldr	r3, [r5, #0]
 8006c82:	019a      	lsls	r2, r3, #6
 8006c84:	f53f ae44 	bmi.w	8006910 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006c88:	f7fd fe94 	bl	80049b4 <HAL_GetTick>
 8006c8c:	1b00      	subs	r0, r0, r4
 8006c8e:	2802      	cmp	r0, #2
 8006c90:	d9f6      	bls.n	8006c80 <HAL_RCC_OscConfig+0x424>
 8006c92:	e667      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006c94:	f7fd fe8e 	bl	80049b4 <HAL_GetTick>
 8006c98:	1b80      	subs	r0, r0, r6
 8006c9a:	2802      	cmp	r0, #2
 8006c9c:	d99b      	bls.n	8006bd6 <HAL_RCC_OscConfig+0x37a>
 8006c9e:	e661      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
        tickstart = HAL_GetTick();
 8006ca0:	f7fd fe88 	bl	80049b4 <HAL_GetTick>
 8006ca4:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8006ca6:	682b      	ldr	r3, [r5, #0]
 8006ca8:	019b      	lsls	r3, r3, #6
 8006caa:	f57f ae31 	bpl.w	8006910 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006cae:	f7fd fe81 	bl	80049b4 <HAL_GetTick>
 8006cb2:	1b00      	subs	r0, r0, r4
 8006cb4:	2802      	cmp	r0, #2
 8006cb6:	d9f6      	bls.n	8006ca6 <HAL_RCC_OscConfig+0x44a>
 8006cb8:	e654      	b.n	8006964 <HAL_RCC_OscConfig+0x108>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006cba:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
 8006cbc:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 8006cbe:	6b2b      	ldr	r3, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006cc0:	f43f ae51 	beq.w	8006966 <HAL_RCC_OscConfig+0x10a>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006cc4:	f002 0103 	and.w	r1, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006cc8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006cca:	4281      	cmp	r1, r0
 8006ccc:	f47f adc9 	bne.w	8006862 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8006cd0:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006cd4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006cd6:	428a      	cmp	r2, r1
 8006cd8:	f47f adc3 	bne.w	8006862 <HAL_RCC_OscConfig+0x6>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8006cdc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006cde:	f3c3 0108 	ubfx	r1, r3, #0, #9
 8006ce2:	3a01      	subs	r2, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8006ce4:	4291      	cmp	r1, r2
 8006ce6:	f47f adbc 	bne.w	8006862 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8006cea:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8006cec:	f3c3 2146 	ubfx	r1, r3, #9, #7
 8006cf0:	3a01      	subs	r2, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8006cf2:	4291      	cmp	r1, r2
 8006cf4:	f47f adb5 	bne.w	8006862 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8006cf8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006cfa:	f3c3 4106 	ubfx	r1, r3, #16, #7
 8006cfe:	3a01      	subs	r2, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8006d00:	4291      	cmp	r1, r2
 8006d02:	f47f adae 	bne.w	8006862 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 8006d06:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8006d08:	f3c3 6306 	ubfx	r3, r3, #24, #7
 8006d0c:	3a01      	subs	r2, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8006d0e:	4293      	cmp	r3, r2
 8006d10:	f47f ada7 	bne.w	8006862 <HAL_RCC_OscConfig+0x6>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 8006d14:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 8006d16:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 8006d18:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 8006d1c:	429a      	cmp	r2, r3
 8006d1e:	f43f adf7 	beq.w	8006910 <HAL_RCC_OscConfig+0xb4>
          __HAL_RCC_PLLFRACN_DISABLE();
 8006d22:	4d0d      	ldr	r5, [pc, #52]	; (8006d58 <HAL_RCC_OscConfig+0x4fc>)
 8006d24:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006d26:	f023 0301 	bic.w	r3, r3, #1
 8006d2a:	62eb      	str	r3, [r5, #44]	; 0x2c
          tickstart = HAL_GetTick();
 8006d2c:	f7fd fe42 	bl	80049b4 <HAL_GetTick>
 8006d30:	4606      	mov	r6, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 8006d32:	f7fd fe3f 	bl	80049b4 <HAL_GetTick>
 8006d36:	42b0      	cmp	r0, r6
 8006d38:	d0fb      	beq.n	8006d32 <HAL_RCC_OscConfig+0x4d6>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8006d3a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8006d3c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006d3e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006d42:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006d46:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006d4a:	636b      	str	r3, [r5, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
 8006d4c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006d4e:	f043 0301 	orr.w	r3, r3, #1
 8006d52:	62eb      	str	r3, [r5, #44]	; 0x2c
 8006d54:	e5dc      	b.n	8006910 <HAL_RCC_OscConfig+0xb4>
 8006d56:	bf00      	nop
 8006d58:	58024400 	.word	0x58024400

08006d5c <HAL_RCC_GetSysClockFreq>:
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006d5c:	4b48      	ldr	r3, [pc, #288]	; (8006e80 <HAL_RCC_GetSysClockFreq+0x124>)
 8006d5e:	691a      	ldr	r2, [r3, #16]
 8006d60:	f002 0238 	and.w	r2, r2, #56	; 0x38
 8006d64:	2a10      	cmp	r2, #16
{
 8006d66:	b530      	push	{r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006d68:	f000 8086 	beq.w	8006e78 <HAL_RCC_GetSysClockFreq+0x11c>
 8006d6c:	2a18      	cmp	r2, #24
 8006d6e:	d00c      	beq.n	8006d8a <HAL_RCC_GetSysClockFreq+0x2e>
 8006d70:	2a00      	cmp	r2, #0
 8006d72:	f040 8083 	bne.w	8006e7c <HAL_RCC_GetSysClockFreq+0x120>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8006d76:	681a      	ldr	r2, [r3, #0]
 8006d78:	4842      	ldr	r0, [pc, #264]	; (8006e84 <HAL_RCC_GetSysClockFreq+0x128>)
 8006d7a:	f012 0f20 	tst.w	r2, #32
 8006d7e:	d003      	beq.n	8006d88 <HAL_RCC_GetSysClockFreq+0x2c>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8006d80:	681b      	ldr	r3, [r3, #0]
 8006d82:	f3c3 03c1 	ubfx	r3, r3, #3, #2
 8006d86:	40d8      	lsrs	r0, r3
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
 8006d88:	bd30      	pop	{r4, r5, pc}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8006d8a:	6a99      	ldr	r1, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 8006d8c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8006d8e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
      if (pllm != 0U)
 8006d90:	f415 7f7c 	tst.w	r5, #1008	; 0x3f0
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 8006d94:	f3c5 1005 	ubfx	r0, r5, #4, #6
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8006d98:	6b5a      	ldr	r2, [r3, #52]	; 0x34
      if (pllm != 0U)
 8006d9a:	d0f5      	beq.n	8006d88 <HAL_RCC_GetSysClockFreq+0x2c>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8006d9c:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8006da0:	f004 0401 	and.w	r4, r4, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006da4:	ee07 0a90 	vmov	s15, r0
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8006da8:	f001 0103 	and.w	r1, r1, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8006dac:	4362      	muls	r2, r4
 8006dae:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006db2:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8006db6:	2901      	cmp	r1, #1
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8006db8:	ee07 2a90 	vmov	s15, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006dbc:	eefa 7ae9 	vcvt.f32.s32	s15, s15, #13
 8006dc0:	d04c      	beq.n	8006e5c <HAL_RCC_GetSysClockFreq+0x100>
 8006dc2:	2902      	cmp	r1, #2
 8006dc4:	d03c      	beq.n	8006e40 <HAL_RCC_GetSysClockFreq+0xe4>
 8006dc6:	2900      	cmp	r1, #0
 8006dc8:	d148      	bne.n	8006e5c <HAL_RCC_GetSysClockFreq+0x100>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8006dca:	681a      	ldr	r2, [r3, #0]
 8006dcc:	0692      	lsls	r2, r2, #26
 8006dce:	d527      	bpl.n	8006e20 <HAL_RCC_GetSysClockFreq+0xc4>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8006dd0:	6819      	ldr	r1, [r3, #0]
 8006dd2:	4a2c      	ldr	r2, [pc, #176]	; (8006e84 <HAL_RCC_GetSysClockFreq+0x128>)
 8006dd4:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006dd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8006dda:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006ddc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006de0:	ee07 2a10 	vmov	s14, r2
 8006de4:	eef8 5ac7 	vcvt.f32.s32	s11, s14
 8006de8:	ee85 7aa6 	vdiv.f32	s14, s11, s13
 8006dec:	ee06 3a90 	vmov	s13, r3
 8006df0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8006df4:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006df8:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8006dfc:	4b20      	ldr	r3, [pc, #128]	; (8006e80 <HAL_RCC_GetSysClockFreq+0x124>)
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006dfe:	ee67 7a87 	vmul.f32	s15, s15, s14
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8006e02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e04:	f3c3 2346 	ubfx	r3, r3, #9, #7
 8006e08:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 8006e0a:	ee07 3a10 	vmov	s14, r3
 8006e0e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006e12:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8006e16:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 8006e1a:	ee17 0a90 	vmov	r0, s15
 8006e1e:	e7b3      	b.n	8006d88 <HAL_RCC_GetSysClockFreq+0x2c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006e20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e22:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006e26:	ee07 3a10 	vmov	s14, r3
 8006e2a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8006e2e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8006e32:	ee77 7a86 	vadd.f32	s15, s15, s12
 8006e36:	ed9f 6a14 	vldr	s12, [pc, #80]	; 8006e88 <HAL_RCC_GetSysClockFreq+0x12c>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006e3a:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8006e3e:	e7dd      	b.n	8006dfc <HAL_RCC_GetSysClockFreq+0xa0>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006e40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e42:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006e46:	ee07 3a10 	vmov	s14, r3
 8006e4a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8006e4e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8006e52:	ee77 7a86 	vadd.f32	s15, s15, s12
 8006e56:	ed9f 6a0d 	vldr	s12, [pc, #52]	; 8006e8c <HAL_RCC_GetSysClockFreq+0x130>
 8006e5a:	e7ee      	b.n	8006e3a <HAL_RCC_GetSysClockFreq+0xde>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006e5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e5e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006e62:	ee07 3a10 	vmov	s14, r3
 8006e66:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8006e6a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8006e6e:	ee77 7a86 	vadd.f32	s15, s15, s12
 8006e72:	ed9f 6a07 	vldr	s12, [pc, #28]	; 8006e90 <HAL_RCC_GetSysClockFreq+0x134>
 8006e76:	e7e0      	b.n	8006e3a <HAL_RCC_GetSysClockFreq+0xde>
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006e78:	4806      	ldr	r0, [pc, #24]	; (8006e94 <HAL_RCC_GetSysClockFreq+0x138>)
 8006e7a:	e785      	b.n	8006d88 <HAL_RCC_GetSysClockFreq+0x2c>
      sysclockfreq = CSI_VALUE;
 8006e7c:	4806      	ldr	r0, [pc, #24]	; (8006e98 <HAL_RCC_GetSysClockFreq+0x13c>)
 8006e7e:	e783      	b.n	8006d88 <HAL_RCC_GetSysClockFreq+0x2c>
 8006e80:	58024400 	.word	0x58024400
 8006e84:	03d09000 	.word	0x03d09000
 8006e88:	4c742400 	.word	0x4c742400
 8006e8c:	4bbebc20 	.word	0x4bbebc20
 8006e90:	4a742400 	.word	0x4a742400
 8006e94:	017d7840 	.word	0x017d7840
 8006e98:	003d0900 	.word	0x003d0900

08006e9c <HAL_RCC_ClockConfig>:
{
 8006e9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ea0:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8006ea2:	4604      	mov	r4, r0
 8006ea4:	b910      	cbnz	r0, 8006eac <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006ea6:	2001      	movs	r0, #1
}
 8006ea8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006eac:	4a88      	ldr	r2, [pc, #544]	; (80070d0 <HAL_RCC_ClockConfig+0x234>)
 8006eae:	6813      	ldr	r3, [r2, #0]
 8006eb0:	f003 030f 	and.w	r3, r3, #15
 8006eb4:	428b      	cmp	r3, r1
 8006eb6:	f0c0 8093 	bcc.w	8006fe0 <HAL_RCC_ClockConfig+0x144>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8006eba:	6823      	ldr	r3, [r4, #0]
 8006ebc:	075f      	lsls	r7, r3, #29
 8006ebe:	f100 809b 	bmi.w	8006ff8 <HAL_RCC_ClockConfig+0x15c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006ec2:	071e      	lsls	r6, r3, #28
 8006ec4:	d50b      	bpl.n	8006ede <HAL_RCC_ClockConfig+0x42>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 8006ec6:	4983      	ldr	r1, [pc, #524]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 8006ec8:	6966      	ldr	r6, [r4, #20]
 8006eca:	69c8      	ldr	r0, [r1, #28]
 8006ecc:	f000 0070 	and.w	r0, r0, #112	; 0x70
 8006ed0:	4286      	cmp	r6, r0
 8006ed2:	d904      	bls.n	8006ede <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8006ed4:	69ca      	ldr	r2, [r1, #28]
 8006ed6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8006eda:	4332      	orrs	r2, r6
 8006edc:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006ede:	06d8      	lsls	r0, r3, #27
 8006ee0:	d50b      	bpl.n	8006efa <HAL_RCC_ClockConfig+0x5e>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 8006ee2:	497c      	ldr	r1, [pc, #496]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 8006ee4:	69a6      	ldr	r6, [r4, #24]
 8006ee6:	69c8      	ldr	r0, [r1, #28]
 8006ee8:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 8006eec:	4286      	cmp	r6, r0
 8006eee:	d904      	bls.n	8006efa <HAL_RCC_ClockConfig+0x5e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8006ef0:	69ca      	ldr	r2, [r1, #28]
 8006ef2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006ef6:	4332      	orrs	r2, r6
 8006ef8:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8006efa:	0699      	lsls	r1, r3, #26
 8006efc:	d50b      	bpl.n	8006f16 <HAL_RCC_ClockConfig+0x7a>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8006efe:	4975      	ldr	r1, [pc, #468]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 8006f00:	69e6      	ldr	r6, [r4, #28]
 8006f02:	6a08      	ldr	r0, [r1, #32]
 8006f04:	f000 0070 	and.w	r0, r0, #112	; 0x70
 8006f08:	4286      	cmp	r6, r0
 8006f0a:	d904      	bls.n	8006f16 <HAL_RCC_ClockConfig+0x7a>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8006f0c:	6a0a      	ldr	r2, [r1, #32]
 8006f0e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8006f12:	4332      	orrs	r2, r6
 8006f14:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006f16:	079a      	lsls	r2, r3, #30
 8006f18:	d50b      	bpl.n	8006f32 <HAL_RCC_ClockConfig+0x96>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8006f1a:	496e      	ldr	r1, [pc, #440]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 8006f1c:	68e6      	ldr	r6, [r4, #12]
 8006f1e:	6988      	ldr	r0, [r1, #24]
 8006f20:	f000 000f 	and.w	r0, r0, #15
 8006f24:	4286      	cmp	r6, r0
 8006f26:	d904      	bls.n	8006f32 <HAL_RCC_ClockConfig+0x96>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006f28:	698a      	ldr	r2, [r1, #24]
 8006f2a:	f022 020f 	bic.w	r2, r2, #15
 8006f2e:	4332      	orrs	r2, r6
 8006f30:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006f32:	07df      	lsls	r7, r3, #31
 8006f34:	d46e      	bmi.n	8007014 <HAL_RCC_ClockConfig+0x178>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006f36:	6823      	ldr	r3, [r4, #0]
 8006f38:	079e      	lsls	r6, r3, #30
 8006f3a:	f100 80a1 	bmi.w	8007080 <HAL_RCC_ClockConfig+0x1e4>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006f3e:	4964      	ldr	r1, [pc, #400]	; (80070d0 <HAL_RCC_ClockConfig+0x234>)
 8006f40:	680a      	ldr	r2, [r1, #0]
 8006f42:	f002 020f 	and.w	r2, r2, #15
 8006f46:	42aa      	cmp	r2, r5
 8006f48:	f200 80a8 	bhi.w	800709c <HAL_RCC_ClockConfig+0x200>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8006f4c:	0758      	lsls	r0, r3, #29
 8006f4e:	f100 80b1 	bmi.w	80070b4 <HAL_RCC_ClockConfig+0x218>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006f52:	0719      	lsls	r1, r3, #28
 8006f54:	d50b      	bpl.n	8006f6e <HAL_RCC_ClockConfig+0xd2>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 8006f56:	495f      	ldr	r1, [pc, #380]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 8006f58:	6965      	ldr	r5, [r4, #20]
 8006f5a:	69c8      	ldr	r0, [r1, #28]
 8006f5c:	f000 0070 	and.w	r0, r0, #112	; 0x70
 8006f60:	4285      	cmp	r5, r0
 8006f62:	d204      	bcs.n	8006f6e <HAL_RCC_ClockConfig+0xd2>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8006f64:	69ca      	ldr	r2, [r1, #28]
 8006f66:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8006f6a:	432a      	orrs	r2, r5
 8006f6c:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006f6e:	06da      	lsls	r2, r3, #27
 8006f70:	d50b      	bpl.n	8006f8a <HAL_RCC_ClockConfig+0xee>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 8006f72:	4958      	ldr	r1, [pc, #352]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 8006f74:	69a5      	ldr	r5, [r4, #24]
 8006f76:	69c8      	ldr	r0, [r1, #28]
 8006f78:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 8006f7c:	4285      	cmp	r5, r0
 8006f7e:	d204      	bcs.n	8006f8a <HAL_RCC_ClockConfig+0xee>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8006f80:	69ca      	ldr	r2, [r1, #28]
 8006f82:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006f86:	432a      	orrs	r2, r5
 8006f88:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8006f8a:	069b      	lsls	r3, r3, #26
 8006f8c:	d50b      	bpl.n	8006fa6 <HAL_RCC_ClockConfig+0x10a>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8006f8e:	4a51      	ldr	r2, [pc, #324]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 8006f90:	69e0      	ldr	r0, [r4, #28]
 8006f92:	6a11      	ldr	r1, [r2, #32]
 8006f94:	f001 0170 	and.w	r1, r1, #112	; 0x70
 8006f98:	4288      	cmp	r0, r1
 8006f9a:	d204      	bcs.n	8006fa6 <HAL_RCC_ClockConfig+0x10a>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8006f9c:	6a13      	ldr	r3, [r2, #32]
 8006f9e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006fa2:	4303      	orrs	r3, r0
 8006fa4:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8006fa6:	f7ff fed9 	bl	8006d5c <HAL_RCC_GetSysClockFreq>
 8006faa:	494a      	ldr	r1, [pc, #296]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 8006fac:	4a4a      	ldr	r2, [pc, #296]	; (80070d8 <HAL_RCC_ClockConfig+0x23c>)
 8006fae:	698b      	ldr	r3, [r1, #24]
 8006fb0:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8006fb4:	5cd3      	ldrb	r3, [r2, r3]
 8006fb6:	f003 031f 	and.w	r3, r3, #31
 8006fba:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8006fbc:	698b      	ldr	r3, [r1, #24]
 8006fbe:	f003 030f 	and.w	r3, r3, #15
 8006fc2:	5cd3      	ldrb	r3, [r2, r3]
 8006fc4:	4a45      	ldr	r2, [pc, #276]	; (80070dc <HAL_RCC_ClockConfig+0x240>)
 8006fc6:	f003 031f 	and.w	r3, r3, #31
 8006fca:	fa20 f303 	lsr.w	r3, r0, r3
 8006fce:	6013      	str	r3, [r2, #0]
  SystemCoreClock = common_system_clock;
 8006fd0:	4b43      	ldr	r3, [pc, #268]	; (80070e0 <HAL_RCC_ClockConfig+0x244>)
 8006fd2:	6018      	str	r0, [r3, #0]
  halstatus = HAL_InitTick(uwTickPrio);
 8006fd4:	4b43      	ldr	r3, [pc, #268]	; (80070e4 <HAL_RCC_ClockConfig+0x248>)
}
 8006fd6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
 8006fda:	6818      	ldr	r0, [r3, #0]
 8006fdc:	f7fa b9b8 	b.w	8001350 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006fe0:	6813      	ldr	r3, [r2, #0]
 8006fe2:	f023 030f 	bic.w	r3, r3, #15
 8006fe6:	430b      	orrs	r3, r1
 8006fe8:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006fea:	6813      	ldr	r3, [r2, #0]
 8006fec:	f003 030f 	and.w	r3, r3, #15
 8006ff0:	428b      	cmp	r3, r1
 8006ff2:	f47f af58 	bne.w	8006ea6 <HAL_RCC_ClockConfig+0xa>
 8006ff6:	e760      	b.n	8006eba <HAL_RCC_ClockConfig+0x1e>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8006ff8:	4936      	ldr	r1, [pc, #216]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 8006ffa:	6926      	ldr	r6, [r4, #16]
 8006ffc:	6988      	ldr	r0, [r1, #24]
 8006ffe:	f000 0070 	and.w	r0, r0, #112	; 0x70
 8007002:	4286      	cmp	r6, r0
 8007004:	f67f af5d 	bls.w	8006ec2 <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007008:	698a      	ldr	r2, [r1, #24]
 800700a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800700e:	4332      	orrs	r2, r6
 8007010:	618a      	str	r2, [r1, #24]
 8007012:	e756      	b.n	8006ec2 <HAL_RCC_ClockConfig+0x26>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 8007014:	4b2f      	ldr	r3, [pc, #188]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 8007016:	68a1      	ldr	r1, [r4, #8]
 8007018:	699a      	ldr	r2, [r3, #24]
 800701a:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 800701e:	430a      	orrs	r2, r1
 8007020:	619a      	str	r2, [r3, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007022:	6862      	ldr	r2, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007024:	681b      	ldr	r3, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007026:	2a02      	cmp	r2, #2
 8007028:	d11d      	bne.n	8007066 <HAL_RCC_ClockConfig+0x1ca>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800702a:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800702e:	f43f af3a 	beq.w	8006ea6 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8007032:	4e28      	ldr	r6, [pc, #160]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007034:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8007038:	6933      	ldr	r3, [r6, #16]
 800703a:	f023 0307 	bic.w	r3, r3, #7
 800703e:	4313      	orrs	r3, r2
 8007040:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
 8007042:	f7fd fcb7 	bl	80049b4 <HAL_GetTick>
 8007046:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007048:	6933      	ldr	r3, [r6, #16]
 800704a:	6862      	ldr	r2, [r4, #4]
 800704c:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8007050:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
 8007054:	f43f af6f 	beq.w	8006f36 <HAL_RCC_ClockConfig+0x9a>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007058:	f7fd fcac 	bl	80049b4 <HAL_GetTick>
 800705c:	1bc0      	subs	r0, r0, r7
 800705e:	4540      	cmp	r0, r8
 8007060:	d9f2      	bls.n	8007048 <HAL_RCC_ClockConfig+0x1ac>
        return HAL_TIMEOUT;
 8007062:	2003      	movs	r0, #3
 8007064:	e720      	b.n	8006ea8 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8007066:	2a03      	cmp	r2, #3
 8007068:	d102      	bne.n	8007070 <HAL_RCC_ClockConfig+0x1d4>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 800706a:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800706e:	e7de      	b.n	800702e <HAL_RCC_ClockConfig+0x192>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 8007070:	2a01      	cmp	r2, #1
 8007072:	d102      	bne.n	800707a <HAL_RCC_ClockConfig+0x1de>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8007074:	f413 7f80 	tst.w	r3, #256	; 0x100
 8007078:	e7d9      	b.n	800702e <HAL_RCC_ClockConfig+0x192>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800707a:	f013 0f04 	tst.w	r3, #4
 800707e:	e7d6      	b.n	800702e <HAL_RCC_ClockConfig+0x192>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8007080:	4914      	ldr	r1, [pc, #80]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 8007082:	68e6      	ldr	r6, [r4, #12]
 8007084:	6988      	ldr	r0, [r1, #24]
 8007086:	f000 000f 	and.w	r0, r0, #15
 800708a:	4286      	cmp	r6, r0
 800708c:	f4bf af57 	bcs.w	8006f3e <HAL_RCC_ClockConfig+0xa2>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007090:	698a      	ldr	r2, [r1, #24]
 8007092:	f022 020f 	bic.w	r2, r2, #15
 8007096:	4332      	orrs	r2, r6
 8007098:	618a      	str	r2, [r1, #24]
 800709a:	e750      	b.n	8006f3e <HAL_RCC_ClockConfig+0xa2>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800709c:	680a      	ldr	r2, [r1, #0]
 800709e:	f022 020f 	bic.w	r2, r2, #15
 80070a2:	432a      	orrs	r2, r5
 80070a4:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80070a6:	680a      	ldr	r2, [r1, #0]
 80070a8:	f002 020f 	and.w	r2, r2, #15
 80070ac:	42aa      	cmp	r2, r5
 80070ae:	f47f aefa 	bne.w	8006ea6 <HAL_RCC_ClockConfig+0xa>
 80070b2:	e74b      	b.n	8006f4c <HAL_RCC_ClockConfig+0xb0>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 80070b4:	4907      	ldr	r1, [pc, #28]	; (80070d4 <HAL_RCC_ClockConfig+0x238>)
 80070b6:	6925      	ldr	r5, [r4, #16]
 80070b8:	6988      	ldr	r0, [r1, #24]
 80070ba:	f000 0070 	and.w	r0, r0, #112	; 0x70
 80070be:	4285      	cmp	r5, r0
 80070c0:	f4bf af47 	bcs.w	8006f52 <HAL_RCC_ClockConfig+0xb6>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 80070c4:	698a      	ldr	r2, [r1, #24]
 80070c6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80070ca:	432a      	orrs	r2, r5
 80070cc:	618a      	str	r2, [r1, #24]
 80070ce:	e740      	b.n	8006f52 <HAL_RCC_ClockConfig+0xb6>
 80070d0:	52002000 	.word	0x52002000
 80070d4:	58024400 	.word	0x58024400
 80070d8:	0801eccc 	.word	0x0801eccc
 80070dc:	24000044 	.word	0x24000044
 80070e0:	24000040 	.word	0x24000040
 80070e4:	2400004c 	.word	0x2400004c

080070e8 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80070e8:	b510      	push	{r4, lr}
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 80070ea:	4c0c      	ldr	r4, [pc, #48]	; (800711c <HAL_RCC_GetHCLKFreq+0x34>)
 80070ec:	f7ff fe36 	bl	8006d5c <HAL_RCC_GetSysClockFreq>
 80070f0:	490b      	ldr	r1, [pc, #44]	; (8007120 <HAL_RCC_GetHCLKFreq+0x38>)
 80070f2:	69a3      	ldr	r3, [r4, #24]
 80070f4:	f3c3 2303 	ubfx	r3, r3, #8, #4
 80070f8:	5cca      	ldrb	r2, [r1, r3]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80070fa:	69a3      	ldr	r3, [r4, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 80070fc:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8007100:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8007104:	fa20 f202 	lsr.w	r2, r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8007108:	5ccb      	ldrb	r3, [r1, r3]
 800710a:	f003 031f 	and.w	r3, r3, #31
 800710e:	fa22 f003 	lsr.w	r0, r2, r3
 8007112:	4b04      	ldr	r3, [pc, #16]	; (8007124 <HAL_RCC_GetHCLKFreq+0x3c>)
 8007114:	6018      	str	r0, [r3, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8007116:	4b04      	ldr	r3, [pc, #16]	; (8007128 <HAL_RCC_GetHCLKFreq+0x40>)
 8007118:	601a      	str	r2, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
 800711a:	bd10      	pop	{r4, pc}
 800711c:	58024400 	.word	0x58024400
 8007120:	0801eccc 	.word	0x0801eccc
 8007124:	24000044 	.word	0x24000044
 8007128:	24000040 	.word	0x24000040

0800712c <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 800712c:	b508      	push	{r3, lr}
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 800712e:	f7ff ffdb 	bl	80070e8 <HAL_RCC_GetHCLKFreq>
 8007132:	4b05      	ldr	r3, [pc, #20]	; (8007148 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007134:	4a05      	ldr	r2, [pc, #20]	; (800714c <HAL_RCC_GetPCLK1Freq+0x20>)
 8007136:	69db      	ldr	r3, [r3, #28]
 8007138:	f3c3 1302 	ubfx	r3, r3, #4, #3
 800713c:	5cd3      	ldrb	r3, [r2, r3]
 800713e:	f003 031f 	and.w	r3, r3, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 8007142:	40d8      	lsrs	r0, r3
 8007144:	bd08      	pop	{r3, pc}
 8007146:	bf00      	nop
 8007148:	58024400 	.word	0x58024400
 800714c:	0801eccc 	.word	0x0801eccc

08007150 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8007150:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
 8007152:	f7ff ffc9 	bl	80070e8 <HAL_RCC_GetHCLKFreq>
 8007156:	4b05      	ldr	r3, [pc, #20]	; (800716c <HAL_RCC_GetPCLK2Freq+0x1c>)
 8007158:	4a05      	ldr	r2, [pc, #20]	; (8007170 <HAL_RCC_GetPCLK2Freq+0x20>)
 800715a:	69db      	ldr	r3, [r3, #28]
 800715c:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8007160:	5cd3      	ldrb	r3, [r2, r3]
 8007162:	f003 031f 	and.w	r3, r3, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
 8007166:	40d8      	lsrs	r0, r3
 8007168:	bd08      	pop	{r3, pc}
 800716a:	bf00      	nop
 800716c:	58024400 	.word	0x58024400
 8007170:	0801eccc 	.word	0x0801eccc

08007174 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
 8007174:	233f      	movs	r3, #63	; 0x3f
 8007176:	6003      	str	r3, [r0, #0]
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007178:	4b11      	ldr	r3, [pc, #68]	; (80071c0 <HAL_RCC_GetClockConfig+0x4c>)
 800717a:	691a      	ldr	r2, [r3, #16]
 800717c:	f002 0207 	and.w	r2, r2, #7
 8007180:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
 8007182:	699a      	ldr	r2, [r3, #24]
 8007184:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
 8007188:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
 800718a:	699a      	ldr	r2, [r3, #24]
 800718c:	f002 020f 	and.w	r2, r2, #15
 8007190:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
 8007192:	699a      	ldr	r2, [r3, #24]
 8007194:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8007198:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
 800719a:	69da      	ldr	r2, [r3, #28]
 800719c:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80071a0:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
 80071a2:	69da      	ldr	r2, [r3, #28]
 80071a4:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80071a8:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
 80071aa:	6a1b      	ldr	r3, [r3, #32]
 80071ac:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80071b0:	61c3      	str	r3, [r0, #28]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80071b2:	4b04      	ldr	r3, [pc, #16]	; (80071c4 <HAL_RCC_GetClockConfig+0x50>)
 80071b4:	681b      	ldr	r3, [r3, #0]
 80071b6:	f003 030f 	and.w	r3, r3, #15
 80071ba:	600b      	str	r3, [r1, #0]
}
 80071bc:	4770      	bx	lr
 80071be:	bf00      	nop
 80071c0:	58024400 	.word	0x58024400
 80071c4:	52002000 	.word	0x52002000

080071c8 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 80071c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80071ca:	4c3a      	ldr	r4, [pc, #232]	; (80072b4 <RCCEx_PLL2_Config+0xec>)
{
 80071cc:	4606      	mov	r6, r0
 80071ce:	460d      	mov	r5, r1
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80071d0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80071d2:	f003 0303 	and.w	r3, r3, #3
 80071d6:	2b03      	cmp	r3, #3
 80071d8:	d069      	beq.n	80072ae <RCCEx_PLL2_Config+0xe6>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 80071da:	6823      	ldr	r3, [r4, #0]
 80071dc:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80071e0:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80071e2:	f7fd fbe7 	bl	80049b4 <HAL_GetTick>
 80071e6:	4607      	mov	r7, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 80071e8:	6823      	ldr	r3, [r4, #0]
 80071ea:	011a      	lsls	r2, r3, #4
 80071ec:	d44b      	bmi.n	8007286 <RCCEx_PLL2_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 80071ee:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80071f0:	6832      	ldr	r2, [r6, #0]
 80071f2:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 80071f6:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 80071fa:	62a3      	str	r3, [r4, #40]	; 0x28
 80071fc:	68b3      	ldr	r3, [r6, #8]
 80071fe:	68f2      	ldr	r2, [r6, #12]
 8007200:	3b01      	subs	r3, #1
 8007202:	3a01      	subs	r2, #1
 8007204:	025b      	lsls	r3, r3, #9
 8007206:	0412      	lsls	r2, r2, #16
 8007208:	b29b      	uxth	r3, r3
 800720a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 800720e:	4313      	orrs	r3, r2
 8007210:	6872      	ldr	r2, [r6, #4]
 8007212:	3a01      	subs	r2, #1
 8007214:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007218:	4313      	orrs	r3, r2
 800721a:	6932      	ldr	r2, [r6, #16]
 800721c:	3a01      	subs	r2, #1
 800721e:	0612      	lsls	r2, r2, #24
 8007220:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8007224:	4313      	orrs	r3, r2
 8007226:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 8007228:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800722a:	6972      	ldr	r2, [r6, #20]
 800722c:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8007230:	4313      	orrs	r3, r2
 8007232:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 8007234:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007236:	69b2      	ldr	r2, [r6, #24]
 8007238:	f023 0320 	bic.w	r3, r3, #32
 800723c:	4313      	orrs	r3, r2
 800723e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 8007240:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007242:	f023 0310 	bic.w	r3, r3, #16
 8007246:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 8007248:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800724a:	69f2      	ldr	r2, [r6, #28]
 800724c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007250:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007254:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007258:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 800725a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800725c:	f043 0310 	orr.w	r3, r3, #16
 8007260:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 8007262:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
 8007264:	b9b5      	cbnz	r5, 8007294 <RCCEx_PLL2_Config+0xcc>
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 8007266:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 800726a:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 800726c:	4c11      	ldr	r4, [pc, #68]	; (80072b4 <RCCEx_PLL2_Config+0xec>)
 800726e:	6823      	ldr	r3, [r4, #0]
 8007270:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8007274:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007276:	f7fd fb9d 	bl	80049b4 <HAL_GetTick>
 800727a:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800727c:	6823      	ldr	r3, [r4, #0]
 800727e:	011b      	lsls	r3, r3, #4
 8007280:	d50f      	bpl.n	80072a2 <RCCEx_PLL2_Config+0xda>
    }

  }


  return status;
 8007282:	2000      	movs	r0, #0
 8007284:	e005      	b.n	8007292 <RCCEx_PLL2_Config+0xca>
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8007286:	f7fd fb95 	bl	80049b4 <HAL_GetTick>
 800728a:	1bc0      	subs	r0, r0, r7
 800728c:	2802      	cmp	r0, #2
 800728e:	d9ab      	bls.n	80071e8 <RCCEx_PLL2_Config+0x20>
        return HAL_TIMEOUT;
 8007290:	2003      	movs	r0, #3
}
 8007292:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if (Divider == DIVIDER_Q_UPDATE)
 8007294:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 8007296:	bf0c      	ite	eq
 8007298:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 800729c:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
 80072a0:	e7e3      	b.n	800726a <RCCEx_PLL2_Config+0xa2>
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 80072a2:	f7fd fb87 	bl	80049b4 <HAL_GetTick>
 80072a6:	1b40      	subs	r0, r0, r5
 80072a8:	2802      	cmp	r0, #2
 80072aa:	d9e7      	bls.n	800727c <RCCEx_PLL2_Config+0xb4>
 80072ac:	e7f0      	b.n	8007290 <RCCEx_PLL2_Config+0xc8>
    return HAL_ERROR;
 80072ae:	2001      	movs	r0, #1
 80072b0:	e7ef      	b.n	8007292 <RCCEx_PLL2_Config+0xca>
 80072b2:	bf00      	nop
 80072b4:	58024400 	.word	0x58024400

080072b8 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 80072b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80072ba:	4c3a      	ldr	r4, [pc, #232]	; (80073a4 <RCCEx_PLL3_Config+0xec>)
{
 80072bc:	4606      	mov	r6, r0
 80072be:	460d      	mov	r5, r1
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80072c0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80072c2:	f003 0303 	and.w	r3, r3, #3
 80072c6:	2b03      	cmp	r3, #3
 80072c8:	d069      	beq.n	800739e <RCCEx_PLL3_Config+0xe6>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 80072ca:	6823      	ldr	r3, [r4, #0]
 80072cc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80072d0:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80072d2:	f7fd fb6f 	bl	80049b4 <HAL_GetTick>
 80072d6:	4607      	mov	r7, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 80072d8:	6823      	ldr	r3, [r4, #0]
 80072da:	009a      	lsls	r2, r3, #2
 80072dc:	d44b      	bmi.n	8007376 <RCCEx_PLL3_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 80072de:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80072e0:	6832      	ldr	r2, [r6, #0]
 80072e2:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
 80072e6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 80072ea:	62a3      	str	r3, [r4, #40]	; 0x28
 80072ec:	68b3      	ldr	r3, [r6, #8]
 80072ee:	68f2      	ldr	r2, [r6, #12]
 80072f0:	3b01      	subs	r3, #1
 80072f2:	3a01      	subs	r2, #1
 80072f4:	025b      	lsls	r3, r3, #9
 80072f6:	0412      	lsls	r2, r2, #16
 80072f8:	b29b      	uxth	r3, r3
 80072fa:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 80072fe:	4313      	orrs	r3, r2
 8007300:	6872      	ldr	r2, [r6, #4]
 8007302:	3a01      	subs	r2, #1
 8007304:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007308:	4313      	orrs	r3, r2
 800730a:	6932      	ldr	r2, [r6, #16]
 800730c:	3a01      	subs	r2, #1
 800730e:	0612      	lsls	r2, r2, #24
 8007310:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8007314:	4313      	orrs	r3, r2
 8007316:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 8007318:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800731a:	6972      	ldr	r2, [r6, #20]
 800731c:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8007320:	4313      	orrs	r3, r2
 8007322:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 8007324:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007326:	69b2      	ldr	r2, [r6, #24]
 8007328:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800732c:	4313      	orrs	r3, r2
 800732e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 8007330:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007332:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007336:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8007338:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800733a:	69f2      	ldr	r2, [r6, #28]
 800733c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007340:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007344:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007348:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 800734a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800734c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007350:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8007352:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
 8007354:	b9b5      	cbnz	r5, 8007384 <RCCEx_PLL3_Config+0xcc>
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8007356:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 800735a:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 800735c:	4c11      	ldr	r4, [pc, #68]	; (80073a4 <RCCEx_PLL3_Config+0xec>)
 800735e:	6823      	ldr	r3, [r4, #0]
 8007360:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007364:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007366:	f7fd fb25 	bl	80049b4 <HAL_GetTick>
 800736a:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800736c:	6823      	ldr	r3, [r4, #0]
 800736e:	009b      	lsls	r3, r3, #2
 8007370:	d50f      	bpl.n	8007392 <RCCEx_PLL3_Config+0xda>
    }

  }


  return status;
 8007372:	2000      	movs	r0, #0
 8007374:	e005      	b.n	8007382 <RCCEx_PLL3_Config+0xca>
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8007376:	f7fd fb1d 	bl	80049b4 <HAL_GetTick>
 800737a:	1bc0      	subs	r0, r0, r7
 800737c:	2802      	cmp	r0, #2
 800737e:	d9ab      	bls.n	80072d8 <RCCEx_PLL3_Config+0x20>
        return HAL_TIMEOUT;
 8007380:	2003      	movs	r0, #3
}
 8007382:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if (Divider == DIVIDER_Q_UPDATE)
 8007384:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 8007386:	bf0c      	ite	eq
 8007388:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 800738c:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
 8007390:	e7e3      	b.n	800735a <RCCEx_PLL3_Config+0xa2>
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8007392:	f7fd fb0f 	bl	80049b4 <HAL_GetTick>
 8007396:	1b40      	subs	r0, r0, r5
 8007398:	2802      	cmp	r0, #2
 800739a:	d9e7      	bls.n	800736c <RCCEx_PLL3_Config+0xb4>
 800739c:	e7f0      	b.n	8007380 <RCCEx_PLL3_Config+0xc8>
    return HAL_ERROR;
 800739e:	2001      	movs	r0, #1
 80073a0:	e7ef      	b.n	8007382 <RCCEx_PLL3_Config+0xca>
 80073a2:	bf00      	nop
 80073a4:	58024400 	.word	0x58024400

080073a8 <HAL_RCCEx_PeriphCLKConfig>:
{
 80073a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80073ac:	6803      	ldr	r3, [r0, #0]
{
 80073ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80073b0:	011c      	lsls	r4, r3, #4
 80073b2:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
 80073b6:	d509      	bpl.n	80073cc <HAL_RCCEx_PeriphCLKConfig+0x24>
    switch (PeriphClkInit->SpdifrxClockSelection)
 80073b8:	6e43      	ldr	r3, [r0, #100]	; 0x64
 80073ba:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80073be:	d02c      	beq.n	800741a <HAL_RCCEx_PeriphCLKConfig+0x72>
 80073c0:	d811      	bhi.n	80073e6 <HAL_RCCEx_PeriphCLKConfig+0x3e>
 80073c2:	b1e3      	cbz	r3, 80073fe <HAL_RCCEx_PeriphCLKConfig+0x56>
 80073c4:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80073c8:	d01f      	beq.n	800740a <HAL_RCCEx_PeriphCLKConfig+0x62>
 80073ca:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 80073cc:	682b      	ldr	r3, [r5, #0]
 80073ce:	05d8      	lsls	r0, r3, #23
 80073d0:	f140 80d8 	bpl.w	8007584 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    switch (PeriphClkInit->Sai1ClockSelection)
 80073d4:	6dab      	ldr	r3, [r5, #88]	; 0x58
 80073d6:	2b04      	cmp	r3, #4
 80073d8:	f200 80d3 	bhi.w	8007582 <HAL_RCCEx_PeriphCLKConfig+0x1da>
 80073dc:	e8df f003 	tbb	[pc, r3]
 80073e0:	27cb2922 	.word	0x27cb2922
 80073e4:	27          	.byte	0x27
 80073e5:	00          	.byte	0x00
    switch (PeriphClkInit->SpdifrxClockSelection)
 80073e6:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 80073ea:	d1ee      	bne.n	80073ca <HAL_RCCEx_PeriphCLKConfig+0x22>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 80073ec:	4aab      	ldr	r2, [pc, #684]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 80073ee:	2600      	movs	r6, #0
 80073f0:	6e69      	ldr	r1, [r5, #100]	; 0x64
 80073f2:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80073f4:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80073f8:	430b      	orrs	r3, r1
 80073fa:	6513      	str	r3, [r2, #80]	; 0x50
 80073fc:	e7e6      	b.n	80073cc <HAL_RCCEx_PeriphCLKConfig+0x24>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80073fe:	4aa7      	ldr	r2, [pc, #668]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8007400:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007402:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007406:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007408:	e7f0      	b.n	80073ec <HAL_RCCEx_PeriphCLKConfig+0x44>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 800740a:	2102      	movs	r1, #2
 800740c:	3008      	adds	r0, #8
 800740e:	f7ff fedb 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007412:	4606      	mov	r6, r0
    if (ret == HAL_OK)
 8007414:	2800      	cmp	r0, #0
 8007416:	d1d9      	bne.n	80073cc <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007418:	e7e8      	b.n	80073ec <HAL_RCCEx_PeriphCLKConfig+0x44>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800741a:	2102      	movs	r1, #2
 800741c:	3028      	adds	r0, #40	; 0x28
 800741e:	f7ff ff4b 	bl	80072b8 <RCCEx_PLL3_Config>
 8007422:	e7f6      	b.n	8007412 <HAL_RCCEx_PeriphCLKConfig+0x6a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007424:	4a9d      	ldr	r2, [pc, #628]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8007426:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007428:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800742c:	62d3      	str	r3, [r2, #44]	; 0x2c
    switch (PeriphClkInit->Sai1ClockSelection)
 800742e:	4634      	mov	r4, r6
 8007430:	e005      	b.n	800743e <HAL_RCCEx_PeriphCLKConfig+0x96>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007432:	2100      	movs	r1, #0
 8007434:	f105 0008 	add.w	r0, r5, #8
 8007438:	f7ff fec6 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800743c:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 800743e:	2c00      	cmp	r4, #0
 8007440:	f040 80a2 	bne.w	8007588 <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8007444:	4a95      	ldr	r2, [pc, #596]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8007446:	6da9      	ldr	r1, [r5, #88]	; 0x58
 8007448:	6d13      	ldr	r3, [r2, #80]	; 0x50
 800744a:	f023 0307 	bic.w	r3, r3, #7
 800744e:	430b      	orrs	r3, r1
 8007450:	6513      	str	r3, [r2, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 8007452:	682b      	ldr	r3, [r5, #0]
 8007454:	0559      	lsls	r1, r3, #21
 8007456:	d510      	bpl.n	800747a <HAL_RCCEx_PeriphCLKConfig+0xd2>
    switch (PeriphClkInit->Sai4AClockSelection)
 8007458:	f8d5 30a4 	ldr.w	r3, [r5, #164]	; 0xa4
 800745c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007460:	f000 80b4 	beq.w	80075cc <HAL_RCCEx_PeriphCLKConfig+0x224>
 8007464:	f200 8092 	bhi.w	800758c <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 8007468:	2b00      	cmp	r3, #0
 800746a:	f000 80a2 	beq.w	80075b2 <HAL_RCCEx_PeriphCLKConfig+0x20a>
 800746e:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007472:	f000 80a4 	beq.w	80075be <HAL_RCCEx_PeriphCLKConfig+0x216>
 8007476:	2601      	movs	r6, #1
 8007478:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 800747a:	682b      	ldr	r3, [r5, #0]
 800747c:	051a      	lsls	r2, r3, #20
 800747e:	d510      	bpl.n	80074a2 <HAL_RCCEx_PeriphCLKConfig+0xfa>
    switch (PeriphClkInit->Sai4BClockSelection)
 8007480:	f8d5 30a8 	ldr.w	r3, [r5, #168]	; 0xa8
 8007484:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8007488:	f000 80c8 	beq.w	800761c <HAL_RCCEx_PeriphCLKConfig+0x274>
 800748c:	f200 80a6 	bhi.w	80075dc <HAL_RCCEx_PeriphCLKConfig+0x234>
 8007490:	2b00      	cmp	r3, #0
 8007492:	f000 80b6 	beq.w	8007602 <HAL_RCCEx_PeriphCLKConfig+0x25a>
 8007496:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800749a:	f000 80b8 	beq.w	800760e <HAL_RCCEx_PeriphCLKConfig+0x266>
 800749e:	2601      	movs	r6, #1
 80074a0:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 80074a2:	682b      	ldr	r3, [r5, #0]
 80074a4:	019b      	lsls	r3, r3, #6
 80074a6:	d50d      	bpl.n	80074c4 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->OspiClockSelection)
 80074a8:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80074aa:	2b20      	cmp	r3, #32
 80074ac:	f000 80d0 	beq.w	8007650 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 80074b0:	f200 80bc 	bhi.w	800762c <HAL_RCCEx_PeriphCLKConfig+0x284>
 80074b4:	2b00      	cmp	r3, #0
 80074b6:	f000 80bc 	beq.w	8007632 <HAL_RCCEx_PeriphCLKConfig+0x28a>
 80074ba:	2b10      	cmp	r3, #16
 80074bc:	f000 80c2 	beq.w	8007644 <HAL_RCCEx_PeriphCLKConfig+0x29c>
 80074c0:	2601      	movs	r6, #1
 80074c2:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 80074c4:	682b      	ldr	r3, [r5, #0]
 80074c6:	04df      	lsls	r7, r3, #19
 80074c8:	d50f      	bpl.n	80074ea <HAL_RCCEx_PeriphCLKConfig+0x142>
    switch (PeriphClkInit->Spi123ClockSelection)
 80074ca:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 80074cc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80074d0:	f000 80e6 	beq.w	80076a0 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
 80074d4:	f200 80c5 	bhi.w	8007662 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
 80074d8:	2b00      	cmp	r3, #0
 80074da:	f000 80d2 	beq.w	8007682 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 80074de:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80074e2:	f000 80d4 	beq.w	800768e <HAL_RCCEx_PeriphCLKConfig+0x2e6>
 80074e6:	2601      	movs	r6, #1
 80074e8:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 80074ea:	682b      	ldr	r3, [r5, #0]
 80074ec:	0498      	lsls	r0, r3, #18
 80074ee:	d50f      	bpl.n	8007510 <HAL_RCCEx_PeriphCLKConfig+0x168>
    switch (PeriphClkInit->Spi45ClockSelection)
 80074f0:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 80074f2:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80074f6:	f000 80f4 	beq.w	80076e2 <HAL_RCCEx_PeriphCLKConfig+0x33a>
 80074fa:	f200 80d9 	bhi.w	80076b0 <HAL_RCCEx_PeriphCLKConfig+0x308>
 80074fe:	2b00      	cmp	r3, #0
 8007500:	f000 80df 	beq.w	80076c2 <HAL_RCCEx_PeriphCLKConfig+0x31a>
 8007504:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007508:	f000 80e4 	beq.w	80076d4 <HAL_RCCEx_PeriphCLKConfig+0x32c>
 800750c:	2601      	movs	r6, #1
 800750e:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 8007510:	682b      	ldr	r3, [r5, #0]
 8007512:	0459      	lsls	r1, r3, #17
 8007514:	d510      	bpl.n	8007538 <HAL_RCCEx_PeriphCLKConfig+0x190>
    switch (PeriphClkInit->Spi6ClockSelection)
 8007516:	f8d5 30ac 	ldr.w	r3, [r5, #172]	; 0xac
 800751a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800751e:	f000 8102 	beq.w	8007726 <HAL_RCCEx_PeriphCLKConfig+0x37e>
 8007522:	f200 80e6 	bhi.w	80076f2 <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8007526:	2b00      	cmp	r3, #0
 8007528:	f000 80ec 	beq.w	8007704 <HAL_RCCEx_PeriphCLKConfig+0x35c>
 800752c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007530:	f000 80f2 	beq.w	8007718 <HAL_RCCEx_PeriphCLKConfig+0x370>
 8007534:	2601      	movs	r6, #1
 8007536:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8007538:	682b      	ldr	r3, [r5, #0]
 800753a:	041a      	lsls	r2, r3, #16
 800753c:	d50d      	bpl.n	800755a <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    switch (PeriphClkInit->FdcanClockSelection)
 800753e:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
 8007540:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007544:	f000 80f7 	beq.w	8007736 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8007548:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800754c:	f000 8101 	beq.w	8007752 <HAL_RCCEx_PeriphCLKConfig+0x3aa>
 8007550:	2b00      	cmp	r3, #0
 8007552:	f000 80f5 	beq.w	8007740 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8007556:	2601      	movs	r6, #1
 8007558:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 800755a:	682b      	ldr	r3, [r5, #0]
 800755c:	01db      	lsls	r3, r3, #7
 800755e:	f140 810f 	bpl.w	8007780 <HAL_RCCEx_PeriphCLKConfig+0x3d8>
    switch (PeriphClkInit->FmcClockSelection)
 8007562:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8007564:	2b03      	cmp	r3, #3
 8007566:	f200 8150 	bhi.w	800780a <HAL_RCCEx_PeriphCLKConfig+0x462>
 800756a:	e8df f013 	tbh	[pc, r3, lsl #1]
 800756e:	0100      	.short	0x0100
 8007570:	014700fb 	.word	0x014700fb
 8007574:	0100      	.short	0x0100
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007576:	2100      	movs	r1, #0
 8007578:	f105 0028 	add.w	r0, r5, #40	; 0x28
 800757c:	f7ff fe9c 	bl	80072b8 <RCCEx_PLL3_Config>
 8007580:	e75c      	b.n	800743c <HAL_RCCEx_PeriphCLKConfig+0x94>
    switch (PeriphClkInit->Sai1ClockSelection)
 8007582:	2601      	movs	r6, #1
 8007584:	4634      	mov	r4, r6
 8007586:	e764      	b.n	8007452 <HAL_RCCEx_PeriphCLKConfig+0xaa>
 8007588:	4626      	mov	r6, r4
 800758a:	e762      	b.n	8007452 <HAL_RCCEx_PeriphCLKConfig+0xaa>
    switch (PeriphClkInit->Sai4AClockSelection)
 800758c:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 8007590:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
 8007594:	d003      	beq.n	800759e <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8007596:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 800759a:	f47f af6c 	bne.w	8007476 <HAL_RCCEx_PeriphCLKConfig+0xce>
    if (ret == HAL_OK)
 800759e:	b9dc      	cbnz	r4, 80075d8 <HAL_RCCEx_PeriphCLKConfig+0x230>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 80075a0:	4a3e      	ldr	r2, [pc, #248]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 80075a2:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
 80075a6:	6d93      	ldr	r3, [r2, #88]	; 0x58
 80075a8:	f423 0360 	bic.w	r3, r3, #14680064	; 0xe00000
 80075ac:	430b      	orrs	r3, r1
 80075ae:	6593      	str	r3, [r2, #88]	; 0x58
 80075b0:	e763      	b.n	800747a <HAL_RCCEx_PeriphCLKConfig+0xd2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80075b2:	4a3a      	ldr	r2, [pc, #232]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 80075b4:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80075b6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80075ba:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 80075bc:	e7ef      	b.n	800759e <HAL_RCCEx_PeriphCLKConfig+0x1f6>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80075be:	2100      	movs	r1, #0
 80075c0:	f105 0008 	add.w	r0, r5, #8
 80075c4:	f7ff fe00 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80075c8:	4604      	mov	r4, r0
        break;
 80075ca:	e7e8      	b.n	800759e <HAL_RCCEx_PeriphCLKConfig+0x1f6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80075cc:	2100      	movs	r1, #0
 80075ce:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80075d2:	f7ff fe71 	bl	80072b8 <RCCEx_PLL3_Config>
 80075d6:	e7f7      	b.n	80075c8 <HAL_RCCEx_PeriphCLKConfig+0x220>
 80075d8:	4626      	mov	r6, r4
 80075da:	e74e      	b.n	800747a <HAL_RCCEx_PeriphCLKConfig+0xd2>
    switch (PeriphClkInit->Sai4BClockSelection)
 80075dc:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 80075e0:	f1b2 6f80 	cmp.w	r2, #67108864	; 0x4000000
 80075e4:	d003      	beq.n	80075ee <HAL_RCCEx_PeriphCLKConfig+0x246>
 80075e6:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80075ea:	f47f af58 	bne.w	800749e <HAL_RCCEx_PeriphCLKConfig+0xf6>
    if (ret == HAL_OK)
 80075ee:	b9dc      	cbnz	r4, 8007628 <HAL_RCCEx_PeriphCLKConfig+0x280>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 80075f0:	4a2a      	ldr	r2, [pc, #168]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 80075f2:	f8d5 10a8 	ldr.w	r1, [r5, #168]	; 0xa8
 80075f6:	6d93      	ldr	r3, [r2, #88]	; 0x58
 80075f8:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80075fc:	430b      	orrs	r3, r1
 80075fe:	6593      	str	r3, [r2, #88]	; 0x58
 8007600:	e74f      	b.n	80074a2 <HAL_RCCEx_PeriphCLKConfig+0xfa>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007602:	4a26      	ldr	r2, [pc, #152]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8007604:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007606:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800760a:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 800760c:	e7ef      	b.n	80075ee <HAL_RCCEx_PeriphCLKConfig+0x246>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800760e:	2100      	movs	r1, #0
 8007610:	f105 0008 	add.w	r0, r5, #8
 8007614:	f7ff fdd8 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007618:	4604      	mov	r4, r0
        break;
 800761a:	e7e8      	b.n	80075ee <HAL_RCCEx_PeriphCLKConfig+0x246>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800761c:	2100      	movs	r1, #0
 800761e:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007622:	f7ff fe49 	bl	80072b8 <RCCEx_PLL3_Config>
 8007626:	e7f7      	b.n	8007618 <HAL_RCCEx_PeriphCLKConfig+0x270>
 8007628:	4626      	mov	r6, r4
 800762a:	e73a      	b.n	80074a2 <HAL_RCCEx_PeriphCLKConfig+0xfa>
    switch (PeriphClkInit->OspiClockSelection)
 800762c:	2b30      	cmp	r3, #48	; 0x30
 800762e:	f47f af47 	bne.w	80074c0 <HAL_RCCEx_PeriphCLKConfig+0x118>
    if (ret == HAL_OK)
 8007632:	b9a4      	cbnz	r4, 800765e <HAL_RCCEx_PeriphCLKConfig+0x2b6>
      __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 8007634:	4a19      	ldr	r2, [pc, #100]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8007636:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
 8007638:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800763a:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800763e:	430b      	orrs	r3, r1
 8007640:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007642:	e73f      	b.n	80074c4 <HAL_RCCEx_PeriphCLKConfig+0x11c>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007644:	4a15      	ldr	r2, [pc, #84]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8007646:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007648:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800764c:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 800764e:	e7f0      	b.n	8007632 <HAL_RCCEx_PeriphCLKConfig+0x28a>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007650:	2102      	movs	r1, #2
 8007652:	f105 0008 	add.w	r0, r5, #8
 8007656:	f7ff fdb7 	bl	80071c8 <RCCEx_PLL2_Config>
 800765a:	4604      	mov	r4, r0
        break;
 800765c:	e7e9      	b.n	8007632 <HAL_RCCEx_PeriphCLKConfig+0x28a>
 800765e:	4626      	mov	r6, r4
 8007660:	e730      	b.n	80074c4 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Spi123ClockSelection)
 8007662:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8007666:	d003      	beq.n	8007670 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 8007668:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800766c:	f47f af3b 	bne.w	80074e6 <HAL_RCCEx_PeriphCLKConfig+0x13e>
    if (ret == HAL_OK)
 8007670:	b9e4      	cbnz	r4, 80076ac <HAL_RCCEx_PeriphCLKConfig+0x304>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 8007672:	4a0a      	ldr	r2, [pc, #40]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8007674:	6de9      	ldr	r1, [r5, #92]	; 0x5c
 8007676:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007678:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800767c:	430b      	orrs	r3, r1
 800767e:	6513      	str	r3, [r2, #80]	; 0x50
 8007680:	e733      	b.n	80074ea <HAL_RCCEx_PeriphCLKConfig+0x142>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007682:	4a06      	ldr	r2, [pc, #24]	; (800769c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8007684:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007686:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800768a:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 800768c:	e7f0      	b.n	8007670 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800768e:	2100      	movs	r1, #0
 8007690:	f105 0008 	add.w	r0, r5, #8
 8007694:	f7ff fd98 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007698:	4604      	mov	r4, r0
        break;
 800769a:	e7e9      	b.n	8007670 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 800769c:	58024400 	.word	0x58024400
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80076a0:	2100      	movs	r1, #0
 80076a2:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80076a6:	f7ff fe07 	bl	80072b8 <RCCEx_PLL3_Config>
 80076aa:	e7f5      	b.n	8007698 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 80076ac:	4626      	mov	r6, r4
 80076ae:	e71c      	b.n	80074ea <HAL_RCCEx_PeriphCLKConfig+0x142>
    switch (PeriphClkInit->Spi45ClockSelection)
 80076b0:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 80076b4:	f5b2 2f80 	cmp.w	r2, #262144	; 0x40000
 80076b8:	d003      	beq.n	80076c2 <HAL_RCCEx_PeriphCLKConfig+0x31a>
 80076ba:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80076be:	f47f af25 	bne.w	800750c <HAL_RCCEx_PeriphCLKConfig+0x164>
    if (ret == HAL_OK)
 80076c2:	b9a4      	cbnz	r4, 80076ee <HAL_RCCEx_PeriphCLKConfig+0x346>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 80076c4:	4a92      	ldr	r2, [pc, #584]	; (8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 80076c6:	6e29      	ldr	r1, [r5, #96]	; 0x60
 80076c8:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80076ca:	f423 23e0 	bic.w	r3, r3, #458752	; 0x70000
 80076ce:	430b      	orrs	r3, r1
 80076d0:	6513      	str	r3, [r2, #80]	; 0x50
 80076d2:	e71d      	b.n	8007510 <HAL_RCCEx_PeriphCLKConfig+0x168>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80076d4:	2101      	movs	r1, #1
 80076d6:	f105 0008 	add.w	r0, r5, #8
 80076da:	f7ff fd75 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80076de:	4604      	mov	r4, r0
        break;
 80076e0:	e7ef      	b.n	80076c2 <HAL_RCCEx_PeriphCLKConfig+0x31a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80076e2:	2101      	movs	r1, #1
 80076e4:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80076e8:	f7ff fde6 	bl	80072b8 <RCCEx_PLL3_Config>
 80076ec:	e7f7      	b.n	80076de <HAL_RCCEx_PeriphCLKConfig+0x336>
 80076ee:	4626      	mov	r6, r4
 80076f0:	e70e      	b.n	8007510 <HAL_RCCEx_PeriphCLKConfig+0x168>
    switch (PeriphClkInit->Spi6ClockSelection)
 80076f2:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 80076f6:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 80076fa:	d003      	beq.n	8007704 <HAL_RCCEx_PeriphCLKConfig+0x35c>
 80076fc:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8007700:	f47f af18 	bne.w	8007534 <HAL_RCCEx_PeriphCLKConfig+0x18c>
    if (ret == HAL_OK)
 8007704:	b9ac      	cbnz	r4, 8007732 <HAL_RCCEx_PeriphCLKConfig+0x38a>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 8007706:	4a82      	ldr	r2, [pc, #520]	; (8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 8007708:	f8d5 10ac 	ldr.w	r1, [r5, #172]	; 0xac
 800770c:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800770e:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8007712:	430b      	orrs	r3, r1
 8007714:	6593      	str	r3, [r2, #88]	; 0x58
 8007716:	e70f      	b.n	8007538 <HAL_RCCEx_PeriphCLKConfig+0x190>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007718:	2101      	movs	r1, #1
 800771a:	f105 0008 	add.w	r0, r5, #8
 800771e:	f7ff fd53 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007722:	4604      	mov	r4, r0
        break;
 8007724:	e7ee      	b.n	8007704 <HAL_RCCEx_PeriphCLKConfig+0x35c>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007726:	2101      	movs	r1, #1
 8007728:	f105 0028 	add.w	r0, r5, #40	; 0x28
 800772c:	f7ff fdc4 	bl	80072b8 <RCCEx_PLL3_Config>
 8007730:	e7f7      	b.n	8007722 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8007732:	4626      	mov	r6, r4
 8007734:	e700      	b.n	8007538 <HAL_RCCEx_PeriphCLKConfig+0x190>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007736:	4a76      	ldr	r2, [pc, #472]	; (8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 8007738:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800773a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800773e:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007740:	b974      	cbnz	r4, 8007760 <HAL_RCCEx_PeriphCLKConfig+0x3b8>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 8007742:	4a73      	ldr	r2, [pc, #460]	; (8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 8007744:	6ee9      	ldr	r1, [r5, #108]	; 0x6c
 8007746:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007748:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 800774c:	430b      	orrs	r3, r1
 800774e:	6513      	str	r3, [r2, #80]	; 0x50
 8007750:	e703      	b.n	800755a <HAL_RCCEx_PeriphCLKConfig+0x1b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007752:	2101      	movs	r1, #1
 8007754:	f105 0008 	add.w	r0, r5, #8
 8007758:	f7ff fd36 	bl	80071c8 <RCCEx_PLL2_Config>
 800775c:	4604      	mov	r4, r0
        break;
 800775e:	e7ef      	b.n	8007740 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8007760:	4626      	mov	r6, r4
 8007762:	e6fa      	b.n	800755a <HAL_RCCEx_PeriphCLKConfig+0x1b2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007764:	4a6a      	ldr	r2, [pc, #424]	; (8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 8007766:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007768:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800776c:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 800776e:	2c00      	cmp	r4, #0
 8007770:	d14e      	bne.n	8007810 <HAL_RCCEx_PeriphCLKConfig+0x468>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 8007772:	4a67      	ldr	r2, [pc, #412]	; (8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 8007774:	6ca9      	ldr	r1, [r5, #72]	; 0x48
 8007776:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8007778:	f023 0303 	bic.w	r3, r3, #3
 800777c:	430b      	orrs	r3, r1
 800777e:	64d3      	str	r3, [r2, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8007780:	682b      	ldr	r3, [r5, #0]
 8007782:	025f      	lsls	r7, r3, #9
 8007784:	d54e      	bpl.n	8007824 <HAL_RCCEx_PeriphCLKConfig+0x47c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8007786:	4f63      	ldr	r7, [pc, #396]	; (8007914 <HAL_RCCEx_PeriphCLKConfig+0x56c>)
 8007788:	683b      	ldr	r3, [r7, #0]
 800778a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800778e:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
 8007790:	f7fd f910 	bl	80049b4 <HAL_GetTick>
 8007794:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8007796:	683b      	ldr	r3, [r7, #0]
 8007798:	05d8      	lsls	r0, r3, #23
 800779a:	d53b      	bpl.n	8007814 <HAL_RCCEx_PeriphCLKConfig+0x46c>
    if (ret == HAL_OK)
 800779c:	2c00      	cmp	r4, #0
 800779e:	d16d      	bne.n	800787c <HAL_RCCEx_PeriphCLKConfig+0x4d4>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 80077a0:	4b5b      	ldr	r3, [pc, #364]	; (8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 80077a2:	f8d5 00b0 	ldr.w	r0, [r5, #176]	; 0xb0
 80077a6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80077a8:	4042      	eors	r2, r0
 80077aa:	f412 7f40 	tst.w	r2, #768	; 0x300
 80077ae:	d00b      	beq.n	80077c8 <HAL_RCCEx_PeriphCLKConfig+0x420>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80077b0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
 80077b2:	6f19      	ldr	r1, [r3, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80077b4:	f422 7240 	bic.w	r2, r2, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 80077b8:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 80077bc:	6719      	str	r1, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 80077be:	6f19      	ldr	r1, [r3, #112]	; 0x70
 80077c0:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 80077c4:	6719      	str	r1, [r3, #112]	; 0x70
        RCC->BDCR = tmpreg;
 80077c6:	671a      	str	r2, [r3, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 80077c8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80077cc:	d041      	beq.n	8007852 <HAL_RCCEx_PeriphCLKConfig+0x4aa>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80077ce:	f8d5 30b0 	ldr.w	r3, [r5, #176]	; 0xb0
 80077d2:	494f      	ldr	r1, [pc, #316]	; (8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 80077d4:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80077d8:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80077dc:	d14a      	bne.n	8007874 <HAL_RCCEx_PeriphCLKConfig+0x4cc>
 80077de:	6908      	ldr	r0, [r1, #16]
 80077e0:	4a4d      	ldr	r2, [pc, #308]	; (8007918 <HAL_RCCEx_PeriphCLKConfig+0x570>)
 80077e2:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 80077e6:	ea02 1213 	and.w	r2, r2, r3, lsr #4
 80077ea:	4302      	orrs	r2, r0
 80077ec:	610a      	str	r2, [r1, #16]
 80077ee:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80077f2:	4a47      	ldr	r2, [pc, #284]	; (8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 80077f4:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80077f6:	430b      	orrs	r3, r1
 80077f8:	6713      	str	r3, [r2, #112]	; 0x70
 80077fa:	e013      	b.n	8007824 <HAL_RCCEx_PeriphCLKConfig+0x47c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 80077fc:	2102      	movs	r1, #2
 80077fe:	f105 0008 	add.w	r0, r5, #8
 8007802:	f7ff fce1 	bl	80071c8 <RCCEx_PLL2_Config>
 8007806:	4604      	mov	r4, r0
        break;
 8007808:	e7b1      	b.n	800776e <HAL_RCCEx_PeriphCLKConfig+0x3c6>
    switch (PeriphClkInit->FmcClockSelection)
 800780a:	2601      	movs	r6, #1
 800780c:	4634      	mov	r4, r6
 800780e:	e7b7      	b.n	8007780 <HAL_RCCEx_PeriphCLKConfig+0x3d8>
 8007810:	4626      	mov	r6, r4
 8007812:	e7b5      	b.n	8007780 <HAL_RCCEx_PeriphCLKConfig+0x3d8>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007814:	f7fd f8ce 	bl	80049b4 <HAL_GetTick>
 8007818:	eba0 0008 	sub.w	r0, r0, r8
 800781c:	2864      	cmp	r0, #100	; 0x64
 800781e:	d9ba      	bls.n	8007796 <HAL_RCCEx_PeriphCLKConfig+0x3ee>
        ret = HAL_TIMEOUT;
 8007820:	2603      	movs	r6, #3
 8007822:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 8007824:	682b      	ldr	r3, [r5, #0]
 8007826:	07da      	lsls	r2, r3, #31
 8007828:	d508      	bpl.n	800783c <HAL_RCCEx_PeriphCLKConfig+0x494>
    switch (PeriphClkInit->Usart16ClockSelection)
 800782a:	6fab      	ldr	r3, [r5, #120]	; 0x78
 800782c:	2b10      	cmp	r3, #16
 800782e:	d03d      	beq.n	80078ac <HAL_RCCEx_PeriphCLKConfig+0x504>
 8007830:	d826      	bhi.n	8007880 <HAL_RCCEx_PeriphCLKConfig+0x4d8>
 8007832:	b35b      	cbz	r3, 800788c <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 8007834:	2b08      	cmp	r3, #8
 8007836:	d032      	beq.n	800789e <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8007838:	2601      	movs	r6, #1
 800783a:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 800783c:	682b      	ldr	r3, [r5, #0]
 800783e:	079b      	lsls	r3, r3, #30
 8007840:	d54a      	bpl.n	80078d8 <HAL_RCCEx_PeriphCLKConfig+0x530>
    switch (PeriphClkInit->Usart234578ClockSelection)
 8007842:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8007844:	2b05      	cmp	r3, #5
 8007846:	d85d      	bhi.n	8007904 <HAL_RCCEx_PeriphCLKConfig+0x55c>
 8007848:	e8df f003 	tbb	[pc, r3]
 800784c:	3e56383e 	.word	0x3e56383e
 8007850:	3e3e      	.short	0x3e3e
        tickstart = HAL_GetTick();
 8007852:	f7fd f8af 	bl	80049b4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007856:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>
        tickstart = HAL_GetTick();
 800785a:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800785c:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007860:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
 8007864:	0799      	lsls	r1, r3, #30
 8007866:	d4b2      	bmi.n	80077ce <HAL_RCCEx_PeriphCLKConfig+0x426>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007868:	f7fd f8a4 	bl	80049b4 <HAL_GetTick>
 800786c:	1bc0      	subs	r0, r0, r7
 800786e:	4548      	cmp	r0, r9
 8007870:	d9f6      	bls.n	8007860 <HAL_RCCEx_PeriphCLKConfig+0x4b8>
 8007872:	e7d5      	b.n	8007820 <HAL_RCCEx_PeriphCLKConfig+0x478>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007874:	690a      	ldr	r2, [r1, #16]
 8007876:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 800787a:	e7b7      	b.n	80077ec <HAL_RCCEx_PeriphCLKConfig+0x444>
 800787c:	4626      	mov	r6, r4
 800787e:	e7d1      	b.n	8007824 <HAL_RCCEx_PeriphCLKConfig+0x47c>
    switch (PeriphClkInit->Usart16ClockSelection)
 8007880:	f023 0208 	bic.w	r2, r3, #8
 8007884:	2a20      	cmp	r2, #32
 8007886:	d001      	beq.n	800788c <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 8007888:	2b18      	cmp	r3, #24
 800788a:	d1d5      	bne.n	8007838 <HAL_RCCEx_PeriphCLKConfig+0x490>
    if (ret == HAL_OK)
 800788c:	b9a4      	cbnz	r4, 80078b8 <HAL_RCCEx_PeriphCLKConfig+0x510>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 800788e:	4a20      	ldr	r2, [pc, #128]	; (8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 8007890:	6fa9      	ldr	r1, [r5, #120]	; 0x78
 8007892:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007894:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 8007898:	430b      	orrs	r3, r1
 800789a:	6553      	str	r3, [r2, #84]	; 0x54
 800789c:	e7ce      	b.n	800783c <HAL_RCCEx_PeriphCLKConfig+0x494>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 800789e:	2101      	movs	r1, #1
 80078a0:	f105 0008 	add.w	r0, r5, #8
 80078a4:	f7ff fc90 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80078a8:	4604      	mov	r4, r0
        break;
 80078aa:	e7ef      	b.n	800788c <HAL_RCCEx_PeriphCLKConfig+0x4e4>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80078ac:	2101      	movs	r1, #1
 80078ae:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80078b2:	f7ff fd01 	bl	80072b8 <RCCEx_PLL3_Config>
 80078b6:	e7f7      	b.n	80078a8 <HAL_RCCEx_PeriphCLKConfig+0x500>
 80078b8:	4626      	mov	r6, r4
 80078ba:	e7bf      	b.n	800783c <HAL_RCCEx_PeriphCLKConfig+0x494>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80078bc:	2101      	movs	r1, #1
 80078be:	f105 0008 	add.w	r0, r5, #8
 80078c2:	f7ff fc81 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80078c6:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 80078c8:	b9fc      	cbnz	r4, 800790a <HAL_RCCEx_PeriphCLKConfig+0x562>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 80078ca:	4a11      	ldr	r2, [pc, #68]	; (8007910 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 80078cc:	6f69      	ldr	r1, [r5, #116]	; 0x74
 80078ce:	6d53      	ldr	r3, [r2, #84]	; 0x54
 80078d0:	f023 0307 	bic.w	r3, r3, #7
 80078d4:	430b      	orrs	r3, r1
 80078d6:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 80078d8:	682b      	ldr	r3, [r5, #0]
 80078da:	075f      	lsls	r7, r3, #29
 80078dc:	d52f      	bpl.n	800793e <HAL_RCCEx_PeriphCLKConfig+0x596>
    switch (PeriphClkInit->Lpuart1ClockSelection)
 80078de:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 80078e2:	2b05      	cmp	r3, #5
 80078e4:	f200 8173 	bhi.w	8007bce <HAL_RCCEx_PeriphCLKConfig+0x826>
 80078e8:	e8df f013 	tbh	[pc, r3, lsl #1]
 80078ec:	0018001e 	.word	0x0018001e
 80078f0:	001e016b 	.word	0x001e016b
 80078f4:	001e001e 	.word	0x001e001e
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80078f8:	2101      	movs	r1, #1
 80078fa:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80078fe:	f7ff fcdb 	bl	80072b8 <RCCEx_PLL3_Config>
 8007902:	e7e0      	b.n	80078c6 <HAL_RCCEx_PeriphCLKConfig+0x51e>
    switch (PeriphClkInit->Usart234578ClockSelection)
 8007904:	2601      	movs	r6, #1
 8007906:	4634      	mov	r4, r6
 8007908:	e7e6      	b.n	80078d8 <HAL_RCCEx_PeriphCLKConfig+0x530>
 800790a:	4626      	mov	r6, r4
 800790c:	e7e4      	b.n	80078d8 <HAL_RCCEx_PeriphCLKConfig+0x530>
 800790e:	bf00      	nop
 8007910:	58024400 	.word	0x58024400
 8007914:	58024800 	.word	0x58024800
 8007918:	00ffffcf 	.word	0x00ffffcf
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 800791c:	2101      	movs	r1, #1
 800791e:	f105 0008 	add.w	r0, r5, #8
 8007922:	f7ff fc51 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007926:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007928:	2c00      	cmp	r4, #0
 800792a:	f040 8153 	bne.w	8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x82c>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 800792e:	4aaa      	ldr	r2, [pc, #680]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007930:	f8d5 1090 	ldr.w	r1, [r5, #144]	; 0x90
 8007934:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007936:	f023 0307 	bic.w	r3, r3, #7
 800793a:	430b      	orrs	r3, r1
 800793c:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 800793e:	682b      	ldr	r3, [r5, #0]
 8007940:	0698      	lsls	r0, r3, #26
 8007942:	d510      	bpl.n	8007966 <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->Lptim1ClockSelection)
 8007944:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8007948:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800794c:	f000 8160 	beq.w	8007c10 <HAL_RCCEx_PeriphCLKConfig+0x868>
 8007950:	f200 8144 	bhi.w	8007bdc <HAL_RCCEx_PeriphCLKConfig+0x834>
 8007954:	2b00      	cmp	r3, #0
 8007956:	f000 814a 	beq.w	8007bee <HAL_RCCEx_PeriphCLKConfig+0x846>
 800795a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800795e:	f000 8150 	beq.w	8007c02 <HAL_RCCEx_PeriphCLKConfig+0x85a>
 8007962:	2601      	movs	r6, #1
 8007964:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 8007966:	682b      	ldr	r3, [r5, #0]
 8007968:	0659      	lsls	r1, r3, #25
 800796a:	d510      	bpl.n	800798e <HAL_RCCEx_PeriphCLKConfig+0x5e6>
    switch (PeriphClkInit->Lptim2ClockSelection)
 800796c:	f8d5 3098 	ldr.w	r3, [r5, #152]	; 0x98
 8007970:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007974:	f000 816e 	beq.w	8007c54 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
 8007978:	f200 8152 	bhi.w	8007c20 <HAL_RCCEx_PeriphCLKConfig+0x878>
 800797c:	2b00      	cmp	r3, #0
 800797e:	f000 8158 	beq.w	8007c32 <HAL_RCCEx_PeriphCLKConfig+0x88a>
 8007982:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007986:	f000 815e 	beq.w	8007c46 <HAL_RCCEx_PeriphCLKConfig+0x89e>
 800798a:	2601      	movs	r6, #1
 800798c:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 800798e:	682b      	ldr	r3, [r5, #0]
 8007990:	061a      	lsls	r2, r3, #24
 8007992:	d510      	bpl.n	80079b6 <HAL_RCCEx_PeriphCLKConfig+0x60e>
    switch (PeriphClkInit->Lptim345ClockSelection)
 8007994:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 8007998:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800799c:	f000 817c 	beq.w	8007c98 <HAL_RCCEx_PeriphCLKConfig+0x8f0>
 80079a0:	f200 8160 	bhi.w	8007c64 <HAL_RCCEx_PeriphCLKConfig+0x8bc>
 80079a4:	2b00      	cmp	r3, #0
 80079a6:	f000 8166 	beq.w	8007c76 <HAL_RCCEx_PeriphCLKConfig+0x8ce>
 80079aa:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80079ae:	f000 816c 	beq.w	8007c8a <HAL_RCCEx_PeriphCLKConfig+0x8e2>
 80079b2:	2601      	movs	r6, #1
 80079b4:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1235) == RCC_PERIPHCLK_I2C1235)
 80079b6:	682b      	ldr	r3, [r5, #0]
 80079b8:	071b      	lsls	r3, r3, #28
 80079ba:	d514      	bpl.n	80079e6 <HAL_RCCEx_PeriphCLKConfig+0x63e>
    if ((PeriphClkInit->I2c1235ClockSelection) == RCC_I2C1235CLKSOURCE_PLL3)
 80079bc:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
 80079c0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80079c4:	d107      	bne.n	80079d6 <HAL_RCCEx_PeriphCLKConfig+0x62e>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 80079c6:	2102      	movs	r1, #2
 80079c8:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80079cc:	f7ff fc74 	bl	80072b8 <RCCEx_PLL3_Config>
        status = HAL_ERROR;
 80079d0:	2800      	cmp	r0, #0
 80079d2:	bf18      	it	ne
 80079d4:	2601      	movne	r6, #1
    __HAL_RCC_I2C1235_CONFIG(PeriphClkInit->I2c1235ClockSelection);
 80079d6:	4a80      	ldr	r2, [pc, #512]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 80079d8:	f8d5 1080 	ldr.w	r1, [r5, #128]	; 0x80
 80079dc:	6d53      	ldr	r3, [r2, #84]	; 0x54
 80079de:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80079e2:	430b      	orrs	r3, r1
 80079e4:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 80079e6:	682b      	ldr	r3, [r5, #0]
 80079e8:	06df      	lsls	r7, r3, #27
 80079ea:	d514      	bpl.n	8007a16 <HAL_RCCEx_PeriphCLKConfig+0x66e>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
 80079ec:	f8d5 3094 	ldr.w	r3, [r5, #148]	; 0x94
 80079f0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80079f4:	d107      	bne.n	8007a06 <HAL_RCCEx_PeriphCLKConfig+0x65e>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 80079f6:	2102      	movs	r1, #2
 80079f8:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80079fc:	f7ff fc5c 	bl	80072b8 <RCCEx_PLL3_Config>
        status = HAL_ERROR;
 8007a00:	2800      	cmp	r0, #0
 8007a02:	bf18      	it	ne
 8007a04:	2601      	movne	r6, #1
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8007a06:	4a74      	ldr	r2, [pc, #464]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007a08:	f8d5 1094 	ldr.w	r1, [r5, #148]	; 0x94
 8007a0c:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007a0e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007a12:	430b      	orrs	r3, r1
 8007a14:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8007a16:	682b      	ldr	r3, [r5, #0]
 8007a18:	0318      	lsls	r0, r3, #12
 8007a1a:	d51b      	bpl.n	8007a54 <HAL_RCCEx_PeriphCLKConfig+0x6ac>
    switch (PeriphClkInit->AdcClockSelection)
 8007a1c:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
 8007a20:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8007a24:	f000 8140 	beq.w	8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x900>
 8007a28:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
 8007a2c:	d007      	beq.n	8007a3e <HAL_RCCEx_PeriphCLKConfig+0x696>
 8007a2e:	2900      	cmp	r1, #0
 8007a30:	f040 8140 	bne.w	8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x90c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007a34:	f105 0008 	add.w	r0, r5, #8
 8007a38:	f7ff fbc6 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007a3c:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007a3e:	2c00      	cmp	r4, #0
 8007a40:	f040 813b 	bne.w	8007cba <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8007a44:	4a64      	ldr	r2, [pc, #400]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007a46:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
 8007a4a:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007a4c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007a50:	430b      	orrs	r3, r1
 8007a52:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8007a54:	682b      	ldr	r3, [r5, #0]
 8007a56:	0359      	lsls	r1, r3, #13
 8007a58:	d51c      	bpl.n	8007a94 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
    switch (PeriphClkInit->UsbClockSelection)
 8007a5a:	f8d5 3084 	ldr.w	r3, [r5, #132]	; 0x84
 8007a5e:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007a62:	f000 812c 	beq.w	8007cbe <HAL_RCCEx_PeriphCLKConfig+0x916>
 8007a66:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007a6a:	d008      	beq.n	8007a7e <HAL_RCCEx_PeriphCLKConfig+0x6d6>
 8007a6c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007a70:	f040 812c 	bne.w	8007ccc <HAL_RCCEx_PeriphCLKConfig+0x924>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007a74:	4a58      	ldr	r2, [pc, #352]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007a76:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007a78:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007a7c:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007a7e:	2c00      	cmp	r4, #0
 8007a80:	f040 8127 	bne.w	8007cd2 <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8007a84:	4a54      	ldr	r2, [pc, #336]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007a86:	f8d5 1084 	ldr.w	r1, [r5, #132]	; 0x84
 8007a8a:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007a8c:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8007a90:	430b      	orrs	r3, r1
 8007a92:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 8007a94:	682b      	ldr	r3, [r5, #0]
 8007a96:	03da      	lsls	r2, r3, #15
 8007a98:	d509      	bpl.n	8007aae <HAL_RCCEx_PeriphCLKConfig+0x706>
    switch (PeriphClkInit->SdmmcClockSelection)
 8007a9a:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8007a9c:	2b00      	cmp	r3, #0
 8007a9e:	f000 811a 	beq.w	8007cd6 <HAL_RCCEx_PeriphCLKConfig+0x92e>
 8007aa2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007aa6:	f000 8124 	beq.w	8007cf2 <HAL_RCCEx_PeriphCLKConfig+0x94a>
 8007aaa:	2601      	movs	r6, #1
 8007aac:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8007aae:	682b      	ldr	r3, [r5, #0]
 8007ab0:	009b      	lsls	r3, r3, #2
 8007ab2:	d507      	bpl.n	8007ac4 <HAL_RCCEx_PeriphCLKConfig+0x71c>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8007ab4:	2102      	movs	r1, #2
 8007ab6:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007aba:	f7ff fbfd 	bl	80072b8 <RCCEx_PLL3_Config>
      status = HAL_ERROR;
 8007abe:	2800      	cmp	r0, #0
 8007ac0:	bf18      	it	ne
 8007ac2:	2601      	movne	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8007ac4:	e9d5 3100 	ldrd	r3, r1, [r5]
 8007ac8:	039f      	lsls	r7, r3, #14
 8007aca:	d50a      	bpl.n	8007ae2 <HAL_RCCEx_PeriphCLKConfig+0x73a>
    switch (PeriphClkInit->RngClockSelection)
 8007acc:	6fe8      	ldr	r0, [r5, #124]	; 0x7c
 8007ace:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8007ad2:	f000 8125 	beq.w	8007d20 <HAL_RCCEx_PeriphCLKConfig+0x978>
 8007ad6:	f200 8115 	bhi.w	8007d04 <HAL_RCCEx_PeriphCLKConfig+0x95c>
 8007ada:	2800      	cmp	r0, #0
 8007adc:	f000 8118 	beq.w	8007d10 <HAL_RCCEx_PeriphCLKConfig+0x968>
 8007ae0:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8007ae2:	02dc      	lsls	r4, r3, #11
 8007ae4:	d506      	bpl.n	8007af4 <HAL_RCCEx_PeriphCLKConfig+0x74c>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8007ae6:	483c      	ldr	r0, [pc, #240]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007ae8:	6f2c      	ldr	r4, [r5, #112]	; 0x70
 8007aea:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8007aec:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8007af0:	4322      	orrs	r2, r4
 8007af2:	6502      	str	r2, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8007af4:	0298      	lsls	r0, r3, #10
 8007af6:	d506      	bpl.n	8007b06 <HAL_RCCEx_PeriphCLKConfig+0x75e>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8007af8:	4837      	ldr	r0, [pc, #220]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007afa:	6eac      	ldr	r4, [r5, #104]	; 0x68
 8007afc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8007afe:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8007b02:	4322      	orrs	r2, r4
 8007b04:	6502      	str	r2, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 8007b06:	005a      	lsls	r2, r3, #1
 8007b08:	d509      	bpl.n	8007b1e <HAL_RCCEx_PeriphCLKConfig+0x776>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007b0a:	4a33      	ldr	r2, [pc, #204]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007b0c:	6910      	ldr	r0, [r2, #16]
 8007b0e:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
 8007b12:	6110      	str	r0, [r2, #16]
 8007b14:	6910      	ldr	r0, [r2, #16]
 8007b16:	f8d5 40b4 	ldr.w	r4, [r5, #180]	; 0xb4
 8007b1a:	4320      	orrs	r0, r4
 8007b1c:	6110      	str	r0, [r2, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8007b1e:	2b00      	cmp	r3, #0
 8007b20:	da06      	bge.n	8007b30 <HAL_RCCEx_PeriphCLKConfig+0x788>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 8007b22:	482d      	ldr	r0, [pc, #180]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007b24:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 8007b26:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8007b28:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007b2c:	4322      	orrs	r2, r4
 8007b2e:	64c2      	str	r2, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8007b30:	021b      	lsls	r3, r3, #8
 8007b32:	d507      	bpl.n	8007b44 <HAL_RCCEx_PeriphCLKConfig+0x79c>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8007b34:	4a28      	ldr	r2, [pc, #160]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007b36:	f8d5 0088 	ldr.w	r0, [r5, #136]	; 0x88
 8007b3a:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007b3c:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8007b40:	4303      	orrs	r3, r0
 8007b42:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
 8007b44:	07cf      	lsls	r7, r1, #31
 8007b46:	d507      	bpl.n	8007b58 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007b48:	2100      	movs	r1, #0
 8007b4a:	f105 0008 	add.w	r0, r5, #8
 8007b4e:	f7ff fb3b 	bl	80071c8 <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 8007b52:	2800      	cmp	r0, #0
 8007b54:	bf18      	it	ne
 8007b56:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
 8007b58:	686b      	ldr	r3, [r5, #4]
 8007b5a:	079c      	lsls	r4, r3, #30
 8007b5c:	d507      	bpl.n	8007b6e <HAL_RCCEx_PeriphCLKConfig+0x7c6>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007b5e:	2101      	movs	r1, #1
 8007b60:	f105 0008 	add.w	r0, r5, #8
 8007b64:	f7ff fb30 	bl	80071c8 <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 8007b68:	2800      	cmp	r0, #0
 8007b6a:	bf18      	it	ne
 8007b6c:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
 8007b6e:	686b      	ldr	r3, [r5, #4]
 8007b70:	0758      	lsls	r0, r3, #29
 8007b72:	d507      	bpl.n	8007b84 <HAL_RCCEx_PeriphCLKConfig+0x7dc>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007b74:	2102      	movs	r1, #2
 8007b76:	f105 0008 	add.w	r0, r5, #8
 8007b7a:	f7ff fb25 	bl	80071c8 <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 8007b7e:	2800      	cmp	r0, #0
 8007b80:	bf18      	it	ne
 8007b82:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
 8007b84:	686b      	ldr	r3, [r5, #4]
 8007b86:	0719      	lsls	r1, r3, #28
 8007b88:	d507      	bpl.n	8007b9a <HAL_RCCEx_PeriphCLKConfig+0x7f2>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007b8a:	2100      	movs	r1, #0
 8007b8c:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007b90:	f7ff fb92 	bl	80072b8 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 8007b94:	2800      	cmp	r0, #0
 8007b96:	bf18      	it	ne
 8007b98:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
 8007b9a:	686b      	ldr	r3, [r5, #4]
 8007b9c:	06da      	lsls	r2, r3, #27
 8007b9e:	d507      	bpl.n	8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x808>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007ba0:	2101      	movs	r1, #1
 8007ba2:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007ba6:	f7ff fb87 	bl	80072b8 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 8007baa:	2800      	cmp	r0, #0
 8007bac:	bf18      	it	ne
 8007bae:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
 8007bb0:	686b      	ldr	r3, [r5, #4]
 8007bb2:	069b      	lsls	r3, r3, #26
 8007bb4:	f100 80bc 	bmi.w	8007d30 <HAL_RCCEx_PeriphCLKConfig+0x988>
    return HAL_OK;
 8007bb8:	1e30      	subs	r0, r6, #0
 8007bba:	bf18      	it	ne
 8007bbc:	2001      	movne	r0, #1
}
 8007bbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007bc2:	2101      	movs	r1, #1
 8007bc4:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007bc8:	f7ff fb76 	bl	80072b8 <RCCEx_PLL3_Config>
 8007bcc:	e6ab      	b.n	8007926 <HAL_RCCEx_PeriphCLKConfig+0x57e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
 8007bce:	2601      	movs	r6, #1
 8007bd0:	4634      	mov	r4, r6
 8007bd2:	e6b4      	b.n	800793e <HAL_RCCEx_PeriphCLKConfig+0x596>
 8007bd4:	4626      	mov	r6, r4
 8007bd6:	e6b2      	b.n	800793e <HAL_RCCEx_PeriphCLKConfig+0x596>
 8007bd8:	58024400 	.word	0x58024400
    switch (PeriphClkInit->Lptim1ClockSelection)
 8007bdc:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8007be0:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8007be4:	d003      	beq.n	8007bee <HAL_RCCEx_PeriphCLKConfig+0x846>
 8007be6:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8007bea:	f47f aeba 	bne.w	8007962 <HAL_RCCEx_PeriphCLKConfig+0x5ba>
    if (ret == HAL_OK)
 8007bee:	b9ac      	cbnz	r4, 8007c1c <HAL_RCCEx_PeriphCLKConfig+0x874>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8007bf0:	4a54      	ldr	r2, [pc, #336]	; (8007d44 <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 8007bf2:	f8d5 108c 	ldr.w	r1, [r5, #140]	; 0x8c
 8007bf6:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007bf8:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8007bfc:	430b      	orrs	r3, r1
 8007bfe:	6553      	str	r3, [r2, #84]	; 0x54
 8007c00:	e6b1      	b.n	8007966 <HAL_RCCEx_PeriphCLKConfig+0x5be>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007c02:	2100      	movs	r1, #0
 8007c04:	f105 0008 	add.w	r0, r5, #8
 8007c08:	f7ff fade 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007c0c:	4604      	mov	r4, r0
        break;
 8007c0e:	e7ee      	b.n	8007bee <HAL_RCCEx_PeriphCLKConfig+0x846>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007c10:	2102      	movs	r1, #2
 8007c12:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007c16:	f7ff fb4f 	bl	80072b8 <RCCEx_PLL3_Config>
 8007c1a:	e7f7      	b.n	8007c0c <HAL_RCCEx_PeriphCLKConfig+0x864>
 8007c1c:	4626      	mov	r6, r4
 8007c1e:	e6a2      	b.n	8007966 <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->Lptim2ClockSelection)
 8007c20:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8007c24:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 8007c28:	d003      	beq.n	8007c32 <HAL_RCCEx_PeriphCLKConfig+0x88a>
 8007c2a:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8007c2e:	f47f aeac 	bne.w	800798a <HAL_RCCEx_PeriphCLKConfig+0x5e2>
    if (ret == HAL_OK)
 8007c32:	b9ac      	cbnz	r4, 8007c60 <HAL_RCCEx_PeriphCLKConfig+0x8b8>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 8007c34:	4a43      	ldr	r2, [pc, #268]	; (8007d44 <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 8007c36:	f8d5 1098 	ldr.w	r1, [r5, #152]	; 0x98
 8007c3a:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007c3c:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007c40:	430b      	orrs	r3, r1
 8007c42:	6593      	str	r3, [r2, #88]	; 0x58
 8007c44:	e6a3      	b.n	800798e <HAL_RCCEx_PeriphCLKConfig+0x5e6>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007c46:	2100      	movs	r1, #0
 8007c48:	f105 0008 	add.w	r0, r5, #8
 8007c4c:	f7ff fabc 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007c50:	4604      	mov	r4, r0
        break;
 8007c52:	e7ee      	b.n	8007c32 <HAL_RCCEx_PeriphCLKConfig+0x88a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007c54:	2102      	movs	r1, #2
 8007c56:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007c5a:	f7ff fb2d 	bl	80072b8 <RCCEx_PLL3_Config>
 8007c5e:	e7f7      	b.n	8007c50 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
 8007c60:	4626      	mov	r6, r4
 8007c62:	e694      	b.n	800798e <HAL_RCCEx_PeriphCLKConfig+0x5e6>
    switch (PeriphClkInit->Lptim345ClockSelection)
 8007c64:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8007c68:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007c6c:	d003      	beq.n	8007c76 <HAL_RCCEx_PeriphCLKConfig+0x8ce>
 8007c6e:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8007c72:	f47f ae9e 	bne.w	80079b2 <HAL_RCCEx_PeriphCLKConfig+0x60a>
    if (ret == HAL_OK)
 8007c76:	b9ac      	cbnz	r4, 8007ca4 <HAL_RCCEx_PeriphCLKConfig+0x8fc>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 8007c78:	4a32      	ldr	r2, [pc, #200]	; (8007d44 <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 8007c7a:	f8d5 109c 	ldr.w	r1, [r5, #156]	; 0x9c
 8007c7e:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007c80:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007c84:	430b      	orrs	r3, r1
 8007c86:	6593      	str	r3, [r2, #88]	; 0x58
 8007c88:	e695      	b.n	80079b6 <HAL_RCCEx_PeriphCLKConfig+0x60e>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007c8a:	2100      	movs	r1, #0
 8007c8c:	f105 0008 	add.w	r0, r5, #8
 8007c90:	f7ff fa9a 	bl	80071c8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007c94:	4604      	mov	r4, r0
        break;
 8007c96:	e7ee      	b.n	8007c76 <HAL_RCCEx_PeriphCLKConfig+0x8ce>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007c98:	2102      	movs	r1, #2
 8007c9a:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007c9e:	f7ff fb0b 	bl	80072b8 <RCCEx_PLL3_Config>
 8007ca2:	e7f7      	b.n	8007c94 <HAL_RCCEx_PeriphCLKConfig+0x8ec>
 8007ca4:	4626      	mov	r6, r4
 8007ca6:	e686      	b.n	80079b6 <HAL_RCCEx_PeriphCLKConfig+0x60e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007ca8:	2102      	movs	r1, #2
 8007caa:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007cae:	f7ff fb03 	bl	80072b8 <RCCEx_PLL3_Config>
 8007cb2:	e6c3      	b.n	8007a3c <HAL_RCCEx_PeriphCLKConfig+0x694>
    switch (PeriphClkInit->AdcClockSelection)
 8007cb4:	2601      	movs	r6, #1
 8007cb6:	4634      	mov	r4, r6
 8007cb8:	e6cc      	b.n	8007a54 <HAL_RCCEx_PeriphCLKConfig+0x6ac>
 8007cba:	4626      	mov	r6, r4
 8007cbc:	e6ca      	b.n	8007a54 <HAL_RCCEx_PeriphCLKConfig+0x6ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007cbe:	2101      	movs	r1, #1
 8007cc0:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007cc4:	f7ff faf8 	bl	80072b8 <RCCEx_PLL3_Config>
 8007cc8:	4604      	mov	r4, r0
        break;
 8007cca:	e6d8      	b.n	8007a7e <HAL_RCCEx_PeriphCLKConfig+0x6d6>
    switch (PeriphClkInit->UsbClockSelection)
 8007ccc:	2601      	movs	r6, #1
 8007cce:	4634      	mov	r4, r6
 8007cd0:	e6e0      	b.n	8007a94 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
 8007cd2:	4626      	mov	r6, r4
 8007cd4:	e6de      	b.n	8007a94 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007cd6:	4a1b      	ldr	r2, [pc, #108]	; (8007d44 <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 8007cd8:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007cda:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007cde:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007ce0:	b974      	cbnz	r4, 8007d00 <HAL_RCCEx_PeriphCLKConfig+0x958>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 8007ce2:	4a18      	ldr	r2, [pc, #96]	; (8007d44 <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 8007ce4:	6d29      	ldr	r1, [r5, #80]	; 0x50
 8007ce6:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8007ce8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007cec:	430b      	orrs	r3, r1
 8007cee:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007cf0:	e6dd      	b.n	8007aae <HAL_RCCEx_PeriphCLKConfig+0x706>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007cf2:	2102      	movs	r1, #2
 8007cf4:	f105 0008 	add.w	r0, r5, #8
 8007cf8:	f7ff fa66 	bl	80071c8 <RCCEx_PLL2_Config>
 8007cfc:	4604      	mov	r4, r0
        break;
 8007cfe:	e7ef      	b.n	8007ce0 <HAL_RCCEx_PeriphCLKConfig+0x938>
 8007d00:	4626      	mov	r6, r4
 8007d02:	e6d4      	b.n	8007aae <HAL_RCCEx_PeriphCLKConfig+0x706>
    switch (PeriphClkInit->RngClockSelection)
 8007d04:	f420 7280 	bic.w	r2, r0, #256	; 0x100
 8007d08:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8007d0c:	f47f aee8 	bne.w	8007ae0 <HAL_RCCEx_PeriphCLKConfig+0x738>
    if (ret == HAL_OK)
 8007d10:	b964      	cbnz	r4, 8007d2c <HAL_RCCEx_PeriphCLKConfig+0x984>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8007d12:	4c0c      	ldr	r4, [pc, #48]	; (8007d44 <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 8007d14:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8007d16:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8007d1a:	4302      	orrs	r2, r0
 8007d1c:	6562      	str	r2, [r4, #84]	; 0x54
 8007d1e:	e6e0      	b.n	8007ae2 <HAL_RCCEx_PeriphCLKConfig+0x73a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007d20:	4f08      	ldr	r7, [pc, #32]	; (8007d44 <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 8007d22:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8007d24:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8007d28:	62fa      	str	r2, [r7, #44]	; 0x2c
        break;
 8007d2a:	e7f1      	b.n	8007d10 <HAL_RCCEx_PeriphCLKConfig+0x968>
 8007d2c:	4626      	mov	r6, r4
 8007d2e:	e6d8      	b.n	8007ae2 <HAL_RCCEx_PeriphCLKConfig+0x73a>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007d30:	2102      	movs	r1, #2
 8007d32:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007d36:	f7ff fabf 	bl	80072b8 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 8007d3a:	2800      	cmp	r0, #0
 8007d3c:	f43f af3c 	beq.w	8007bb8 <HAL_RCCEx_PeriphCLKConfig+0x810>
  return HAL_ERROR;
 8007d40:	2001      	movs	r0, #1
 8007d42:	e73c      	b.n	8007bbe <HAL_RCCEx_PeriphCLKConfig+0x816>
 8007d44:	58024400 	.word	0x58024400

08007d48 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8007d48:	4770      	bx	lr
	...

08007d4c <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007d4c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007d50:	2b01      	cmp	r3, #1
 8007d52:	d13b      	bne.n	8007dcc <HAL_TIM_Base_Start_IT+0x80>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007d54:	2302      	movs	r3, #2
 8007d56:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007d5a:	6803      	ldr	r3, [r0, #0]
 8007d5c:	68da      	ldr	r2, [r3, #12]
 8007d5e:	f042 0201 	orr.w	r2, r2, #1
 8007d62:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007d64:	4a1a      	ldr	r2, [pc, #104]	; (8007dd0 <HAL_TIM_Base_Start_IT+0x84>)
 8007d66:	4293      	cmp	r3, r2
 8007d68:	d022      	beq.n	8007db0 <HAL_TIM_Base_Start_IT+0x64>
 8007d6a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007d6e:	d01f      	beq.n	8007db0 <HAL_TIM_Base_Start_IT+0x64>
 8007d70:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007d74:	4293      	cmp	r3, r2
 8007d76:	d01b      	beq.n	8007db0 <HAL_TIM_Base_Start_IT+0x64>
 8007d78:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007d7c:	4293      	cmp	r3, r2
 8007d7e:	d017      	beq.n	8007db0 <HAL_TIM_Base_Start_IT+0x64>
 8007d80:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007d84:	4293      	cmp	r3, r2
 8007d86:	d013      	beq.n	8007db0 <HAL_TIM_Base_Start_IT+0x64>
 8007d88:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007d8c:	4293      	cmp	r3, r2
 8007d8e:	d00f      	beq.n	8007db0 <HAL_TIM_Base_Start_IT+0x64>
 8007d90:	f5a2 426c 	sub.w	r2, r2, #60416	; 0xec00
 8007d94:	4293      	cmp	r3, r2
 8007d96:	d00b      	beq.n	8007db0 <HAL_TIM_Base_Start_IT+0x64>
 8007d98:	f502 3294 	add.w	r2, r2, #75776	; 0x12800
 8007d9c:	4293      	cmp	r3, r2
 8007d9e:	d007      	beq.n	8007db0 <HAL_TIM_Base_Start_IT+0x64>
 8007da0:	f5a2 42c0 	sub.w	r2, r2, #24576	; 0x6000
 8007da4:	4293      	cmp	r3, r2
 8007da6:	d003      	beq.n	8007db0 <HAL_TIM_Base_Start_IT+0x64>
 8007da8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007dac:	4293      	cmp	r3, r2
 8007dae:	d107      	bne.n	8007dc0 <HAL_TIM_Base_Start_IT+0x74>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007db0:	6899      	ldr	r1, [r3, #8]
 8007db2:	4a08      	ldr	r2, [pc, #32]	; (8007dd4 <HAL_TIM_Base_Start_IT+0x88>)
 8007db4:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007db6:	2a06      	cmp	r2, #6
 8007db8:	d006      	beq.n	8007dc8 <HAL_TIM_Base_Start_IT+0x7c>
 8007dba:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007dbe:	d003      	beq.n	8007dc8 <HAL_TIM_Base_Start_IT+0x7c>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007dc0:	681a      	ldr	r2, [r3, #0]
 8007dc2:	f042 0201 	orr.w	r2, r2, #1
 8007dc6:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8007dc8:	2000      	movs	r0, #0
}
 8007dca:	4770      	bx	lr
    return HAL_ERROR;
 8007dcc:	2001      	movs	r0, #1
 8007dce:	4770      	bx	lr
 8007dd0:	40010000 	.word	0x40010000
 8007dd4:	00010007 	.word	0x00010007

08007dd8 <HAL_TIM_OC_DelayElapsedCallback>:
 8007dd8:	4770      	bx	lr

08007dda <HAL_TIM_IC_CaptureCallback>:
 8007dda:	4770      	bx	lr

08007ddc <HAL_TIM_PWM_PulseFinishedCallback>:
 8007ddc:	4770      	bx	lr

08007dde <HAL_TIM_TriggerCallback>:
 8007dde:	4770      	bx	lr

08007de0 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007de0:	6803      	ldr	r3, [r0, #0]
 8007de2:	691a      	ldr	r2, [r3, #16]
 8007de4:	0791      	lsls	r1, r2, #30
{
 8007de6:	b510      	push	{r4, lr}
 8007de8:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007dea:	d50f      	bpl.n	8007e0c <HAL_TIM_IRQHandler+0x2c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007dec:	68da      	ldr	r2, [r3, #12]
 8007dee:	0792      	lsls	r2, r2, #30
 8007df0:	d50c      	bpl.n	8007e0c <HAL_TIM_IRQHandler+0x2c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8007df2:	f06f 0202 	mvn.w	r2, #2
 8007df6:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007df8:	2201      	movs	r2, #1
 8007dfa:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007dfc:	699b      	ldr	r3, [r3, #24]
 8007dfe:	0799      	lsls	r1, r3, #30
 8007e00:	f000 8085 	beq.w	8007f0e <HAL_TIM_IRQHandler+0x12e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007e04:	f7ff ffe9 	bl	8007dda <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e08:	2300      	movs	r3, #0
 8007e0a:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8007e0c:	6823      	ldr	r3, [r4, #0]
 8007e0e:	691a      	ldr	r2, [r3, #16]
 8007e10:	0752      	lsls	r2, r2, #29
 8007e12:	d510      	bpl.n	8007e36 <HAL_TIM_IRQHandler+0x56>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8007e14:	68da      	ldr	r2, [r3, #12]
 8007e16:	0750      	lsls	r0, r2, #29
 8007e18:	d50d      	bpl.n	8007e36 <HAL_TIM_IRQHandler+0x56>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8007e1a:	f06f 0204 	mvn.w	r2, #4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007e1e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8007e20:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007e22:	2202      	movs	r2, #2
 8007e24:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007e26:	699b      	ldr	r3, [r3, #24]
 8007e28:	f413 7f40 	tst.w	r3, #768	; 0x300
 8007e2c:	d075      	beq.n	8007f1a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e2e:	f7ff ffd4 	bl	8007dda <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e32:	2300      	movs	r3, #0
 8007e34:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8007e36:	6823      	ldr	r3, [r4, #0]
 8007e38:	691a      	ldr	r2, [r3, #16]
 8007e3a:	0711      	lsls	r1, r2, #28
 8007e3c:	d50f      	bpl.n	8007e5e <HAL_TIM_IRQHandler+0x7e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8007e3e:	68da      	ldr	r2, [r3, #12]
 8007e40:	0712      	lsls	r2, r2, #28
 8007e42:	d50c      	bpl.n	8007e5e <HAL_TIM_IRQHandler+0x7e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007e44:	f06f 0208 	mvn.w	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007e48:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007e4a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007e4c:	2204      	movs	r2, #4
 8007e4e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007e50:	69db      	ldr	r3, [r3, #28]
 8007e52:	079b      	lsls	r3, r3, #30
 8007e54:	d067      	beq.n	8007f26 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e56:	f7ff ffc0 	bl	8007dda <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e5a:	2300      	movs	r3, #0
 8007e5c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007e5e:	6823      	ldr	r3, [r4, #0]
 8007e60:	691a      	ldr	r2, [r3, #16]
 8007e62:	06d0      	lsls	r0, r2, #27
 8007e64:	d510      	bpl.n	8007e88 <HAL_TIM_IRQHandler+0xa8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8007e66:	68da      	ldr	r2, [r3, #12]
 8007e68:	06d1      	lsls	r1, r2, #27
 8007e6a:	d50d      	bpl.n	8007e88 <HAL_TIM_IRQHandler+0xa8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007e6c:	f06f 0210 	mvn.w	r2, #16
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007e70:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007e72:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007e74:	2208      	movs	r2, #8
 8007e76:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007e78:	69db      	ldr	r3, [r3, #28]
 8007e7a:	f413 7f40 	tst.w	r3, #768	; 0x300
 8007e7e:	d058      	beq.n	8007f32 <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e80:	f7ff ffab 	bl	8007dda <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e84:	2300      	movs	r3, #0
 8007e86:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8007e88:	6823      	ldr	r3, [r4, #0]
 8007e8a:	691a      	ldr	r2, [r3, #16]
 8007e8c:	07d2      	lsls	r2, r2, #31
 8007e8e:	d508      	bpl.n	8007ea2 <HAL_TIM_IRQHandler+0xc2>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8007e90:	68da      	ldr	r2, [r3, #12]
 8007e92:	07d0      	lsls	r0, r2, #31
 8007e94:	d505      	bpl.n	8007ea2 <HAL_TIM_IRQHandler+0xc2>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8007e96:	f06f 0201 	mvn.w	r2, #1
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8007e9a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8007e9c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007e9e:	f7f8 ff57 	bl	8000d50 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8007ea2:	6823      	ldr	r3, [r4, #0]
 8007ea4:	691a      	ldr	r2, [r3, #16]
 8007ea6:	0611      	lsls	r1, r2, #24
 8007ea8:	d508      	bpl.n	8007ebc <HAL_TIM_IRQHandler+0xdc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8007eaa:	68da      	ldr	r2, [r3, #12]
 8007eac:	0612      	lsls	r2, r2, #24
 8007eae:	d505      	bpl.n	8007ebc <HAL_TIM_IRQHandler+0xdc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8007eb0:	f06f 0280 	mvn.w	r2, #128	; 0x80
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8007eb4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8007eb6:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8007eb8:	f000 f8e1 	bl	800807e <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8007ebc:	6823      	ldr	r3, [r4, #0]
 8007ebe:	691a      	ldr	r2, [r3, #16]
 8007ec0:	05d0      	lsls	r0, r2, #23
 8007ec2:	d508      	bpl.n	8007ed6 <HAL_TIM_IRQHandler+0xf6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8007ec4:	68da      	ldr	r2, [r3, #12]
 8007ec6:	0611      	lsls	r1, r2, #24
 8007ec8:	d505      	bpl.n	8007ed6 <HAL_TIM_IRQHandler+0xf6>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007eca:	f46f 7280 	mvn.w	r2, #256	; 0x100
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 8007ece:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007ed0:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8007ed2:	f000 f8d5 	bl	8008080 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8007ed6:	6823      	ldr	r3, [r4, #0]
 8007ed8:	691a      	ldr	r2, [r3, #16]
 8007eda:	0652      	lsls	r2, r2, #25
 8007edc:	d508      	bpl.n	8007ef0 <HAL_TIM_IRQHandler+0x110>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8007ede:	68da      	ldr	r2, [r3, #12]
 8007ee0:	0650      	lsls	r0, r2, #25
 8007ee2:	d505      	bpl.n	8007ef0 <HAL_TIM_IRQHandler+0x110>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8007ee4:	f06f 0240 	mvn.w	r2, #64	; 0x40
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8007ee8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8007eea:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8007eec:	f7ff ff77 	bl	8007dde <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8007ef0:	6823      	ldr	r3, [r4, #0]
 8007ef2:	691a      	ldr	r2, [r3, #16]
 8007ef4:	0691      	lsls	r1, r2, #26
 8007ef6:	d522      	bpl.n	8007f3e <HAL_TIM_IRQHandler+0x15e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8007ef8:	68da      	ldr	r2, [r3, #12]
 8007efa:	0692      	lsls	r2, r2, #26
 8007efc:	d51f      	bpl.n	8007f3e <HAL_TIM_IRQHandler+0x15e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007efe:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8007f02:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007f04:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8007f06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8007f0a:	f000 b8b7 	b.w	800807c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f0e:	f7ff ff63 	bl	8007dd8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f12:	4620      	mov	r0, r4
 8007f14:	f7ff ff62 	bl	8007ddc <HAL_TIM_PWM_PulseFinishedCallback>
 8007f18:	e776      	b.n	8007e08 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f1a:	f7ff ff5d 	bl	8007dd8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f1e:	4620      	mov	r0, r4
 8007f20:	f7ff ff5c 	bl	8007ddc <HAL_TIM_PWM_PulseFinishedCallback>
 8007f24:	e785      	b.n	8007e32 <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f26:	f7ff ff57 	bl	8007dd8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f2a:	4620      	mov	r0, r4
 8007f2c:	f7ff ff56 	bl	8007ddc <HAL_TIM_PWM_PulseFinishedCallback>
 8007f30:	e793      	b.n	8007e5a <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f32:	f7ff ff51 	bl	8007dd8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f36:	4620      	mov	r0, r4
 8007f38:	f7ff ff50 	bl	8007ddc <HAL_TIM_PWM_PulseFinishedCallback>
 8007f3c:	e7a2      	b.n	8007e84 <HAL_TIM_IRQHandler+0xa4>
}
 8007f3e:	bd10      	pop	{r4, pc}

08007f40 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007f40:	4a34      	ldr	r2, [pc, #208]	; (8008014 <TIM_Base_SetConfig+0xd4>)
  tmpcr1 = TIMx->CR1;
 8007f42:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007f44:	4290      	cmp	r0, r2
 8007f46:	d012      	beq.n	8007f6e <TIM_Base_SetConfig+0x2e>
 8007f48:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007f4c:	d00f      	beq.n	8007f6e <TIM_Base_SetConfig+0x2e>
 8007f4e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007f52:	4290      	cmp	r0, r2
 8007f54:	d00b      	beq.n	8007f6e <TIM_Base_SetConfig+0x2e>
 8007f56:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007f5a:	4290      	cmp	r0, r2
 8007f5c:	d007      	beq.n	8007f6e <TIM_Base_SetConfig+0x2e>
 8007f5e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007f62:	4290      	cmp	r0, r2
 8007f64:	d003      	beq.n	8007f6e <TIM_Base_SetConfig+0x2e>
 8007f66:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007f6a:	4290      	cmp	r0, r2
 8007f6c:	d119      	bne.n	8007fa2 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007f6e:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007f70:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8007f74:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007f76:	4a27      	ldr	r2, [pc, #156]	; (8008014 <TIM_Base_SetConfig+0xd4>)
 8007f78:	4290      	cmp	r0, r2
 8007f7a:	d025      	beq.n	8007fc8 <TIM_Base_SetConfig+0x88>
 8007f7c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007f80:	d022      	beq.n	8007fc8 <TIM_Base_SetConfig+0x88>
 8007f82:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007f86:	4290      	cmp	r0, r2
 8007f88:	d01e      	beq.n	8007fc8 <TIM_Base_SetConfig+0x88>
 8007f8a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007f8e:	4290      	cmp	r0, r2
 8007f90:	d01a      	beq.n	8007fc8 <TIM_Base_SetConfig+0x88>
 8007f92:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007f96:	4290      	cmp	r0, r2
 8007f98:	d016      	beq.n	8007fc8 <TIM_Base_SetConfig+0x88>
 8007f9a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007f9e:	4290      	cmp	r0, r2
 8007fa0:	d012      	beq.n	8007fc8 <TIM_Base_SetConfig+0x88>
 8007fa2:	4a1d      	ldr	r2, [pc, #116]	; (8008018 <TIM_Base_SetConfig+0xd8>)
 8007fa4:	4290      	cmp	r0, r2
 8007fa6:	d00f      	beq.n	8007fc8 <TIM_Base_SetConfig+0x88>
 8007fa8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007fac:	4290      	cmp	r0, r2
 8007fae:	d00b      	beq.n	8007fc8 <TIM_Base_SetConfig+0x88>
 8007fb0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007fb4:	4290      	cmp	r0, r2
 8007fb6:	d007      	beq.n	8007fc8 <TIM_Base_SetConfig+0x88>
 8007fb8:	f5a2 42d0 	sub.w	r2, r2, #26624	; 0x6800
 8007fbc:	4290      	cmp	r0, r2
 8007fbe:	d003      	beq.n	8007fc8 <TIM_Base_SetConfig+0x88>
 8007fc0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007fc4:	4290      	cmp	r0, r2
 8007fc6:	d103      	bne.n	8007fd0 <TIM_Base_SetConfig+0x90>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007fc8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007fcc:	68ca      	ldr	r2, [r1, #12]
 8007fce:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007fd0:	694a      	ldr	r2, [r1, #20]
 8007fd2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007fd6:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007fd8:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007fda:	688b      	ldr	r3, [r1, #8]
 8007fdc:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007fde:	680b      	ldr	r3, [r1, #0]
 8007fe0:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007fe2:	4b0c      	ldr	r3, [pc, #48]	; (8008014 <TIM_Base_SetConfig+0xd4>)
 8007fe4:	4298      	cmp	r0, r3
 8007fe6:	d00f      	beq.n	8008008 <TIM_Base_SetConfig+0xc8>
 8007fe8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007fec:	4298      	cmp	r0, r3
 8007fee:	d00b      	beq.n	8008008 <TIM_Base_SetConfig+0xc8>
 8007ff0:	f503 5370 	add.w	r3, r3, #15360	; 0x3c00
 8007ff4:	4298      	cmp	r0, r3
 8007ff6:	d007      	beq.n	8008008 <TIM_Base_SetConfig+0xc8>
 8007ff8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007ffc:	4298      	cmp	r0, r3
 8007ffe:	d003      	beq.n	8008008 <TIM_Base_SetConfig+0xc8>
 8008000:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008004:	4298      	cmp	r0, r3
 8008006:	d101      	bne.n	800800c <TIM_Base_SetConfig+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008008:	690b      	ldr	r3, [r1, #16]
 800800a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800800c:	2301      	movs	r3, #1
 800800e:	6143      	str	r3, [r0, #20]
}
 8008010:	4770      	bx	lr
 8008012:	bf00      	nop
 8008014:	40010000 	.word	0x40010000
 8008018:	40014000 	.word	0x40014000

0800801c <HAL_TIM_Base_Init>:
{
 800801c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800801e:	4604      	mov	r4, r0
 8008020:	b350      	cbz	r0, 8008078 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 8008022:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008026:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800802a:	b91b      	cbnz	r3, 8008034 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800802c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8008030:	f7ff fe8a 	bl	8007d48 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8008034:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008036:	6820      	ldr	r0, [r4, #0]
 8008038:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 800803a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800803e:	f7ff ff7f 	bl	8007f40 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008042:	2301      	movs	r3, #1
  return HAL_OK;
 8008044:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008046:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800804a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800804e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8008052:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8008056:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 800805a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800805e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008062:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8008066:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800806a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 800806e:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 8008072:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8008076:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008078:	2001      	movs	r0, #1
 800807a:	e7fc      	b.n	8008076 <HAL_TIM_Base_Init+0x5a>

0800807c <HAL_TIMEx_CommutCallback>:
 800807c:	4770      	bx	lr

0800807e <HAL_TIMEx_BreakCallback>:
 800807e:	4770      	bx	lr

08008080 <HAL_TIMEx_Break2Callback>:
 8008080:	4770      	bx	lr

08008082 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8008082:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8008084:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008088:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800808a:	f001 fe59 	bl	8009d40 <xTaskGetSchedulerState>
 800808e:	2801      	cmp	r0, #1
 8008090:	d003      	beq.n	800809a <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8008092:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8008096:	f000 bbdd 	b.w	8008854 <xPortSysTickHandler>
}
 800809a:	bd08      	pop	{r3, pc}

0800809c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800809c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80080a0:	b92b      	cbnz	r3, 80080ae <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 80080a2:	4b06      	ldr	r3, [pc, #24]	; (80080bc <osKernelInitialize+0x20>)
 80080a4:	6818      	ldr	r0, [r3, #0]
 80080a6:	b928      	cbnz	r0, 80080b4 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80080a8:	2201      	movs	r2, #1
 80080aa:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80080ac:	4770      	bx	lr
    stat = osErrorISR;
 80080ae:	f06f 0005 	mvn.w	r0, #5
 80080b2:	4770      	bx	lr
    } else {
      stat = osError;
 80080b4:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80080b8:	4770      	bx	lr
 80080ba:	bf00      	nop
 80080bc:	240041ec 	.word	0x240041ec

080080c0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80080c0:	b510      	push	{r4, lr}
 80080c2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80080c6:	b95c      	cbnz	r4, 80080e0 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 80080c8:	4b08      	ldr	r3, [pc, #32]	; (80080ec <osKernelStart+0x2c>)
 80080ca:	681a      	ldr	r2, [r3, #0]
 80080cc:	2a01      	cmp	r2, #1
 80080ce:	d10a      	bne.n	80080e6 <osKernelStart+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80080d0:	4a07      	ldr	r2, [pc, #28]	; (80080f0 <osKernelStart+0x30>)
 80080d2:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 80080d4:	2202      	movs	r2, #2
 80080d6:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80080d8:	f001 fccc 	bl	8009a74 <vTaskStartScheduler>
      stat = osOK;
 80080dc:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 80080de:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80080e0:	f06f 0005 	mvn.w	r0, #5
 80080e4:	e7fb      	b.n	80080de <osKernelStart+0x1e>
      stat = osError;
 80080e6:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80080ea:	e7f8      	b.n	80080de <osKernelStart+0x1e>
 80080ec:	240041ec 	.word	0x240041ec
 80080f0:	e000ed00 	.word	0xe000ed00

080080f4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80080f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80080f6:	4614      	mov	r4, r2
 80080f8:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80080fa:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80080fc:	460b      	mov	r3, r1
  hTask = NULL;
 80080fe:	9205      	str	r2, [sp, #20]
 8008100:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008104:	b9d2      	cbnz	r2, 800813c <osThreadNew+0x48>
 8008106:	b1c8      	cbz	r0, 800813c <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008108:	2c00      	cmp	r4, #0
 800810a:	d02f      	beq.n	800816c <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800810c:	69a5      	ldr	r5, [r4, #24]
 800810e:	2d00      	cmp	r5, #0
 8008110:	bf08      	it	eq
 8008112:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008114:	1e69      	subs	r1, r5, #1
 8008116:	46ac      	mov	ip, r5
 8008118:	2937      	cmp	r1, #55	; 0x37
 800811a:	d82b      	bhi.n	8008174 <osThreadNew+0x80>
 800811c:	6861      	ldr	r1, [r4, #4]
 800811e:	07c9      	lsls	r1, r1, #31
 8008120:	d428      	bmi.n	8008174 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008122:	6966      	ldr	r6, [r4, #20]
 8008124:	b16e      	cbz	r6, 8008142 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008126:	08b2      	lsrs	r2, r6, #2
      if (attr->name != NULL) {
 8008128:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800812a:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
 800812e:	b157      	cbz	r7, 8008146 <osThreadNew+0x52>
 8008130:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8008134:	d902      	bls.n	800813c <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008136:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008138:	b104      	cbz	r4, 800813c <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800813a:	b9ee      	cbnz	r6, 8008178 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800813c:	9805      	ldr	r0, [sp, #20]
}
 800813e:	b007      	add	sp, #28
 8008140:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008142:	2280      	movs	r2, #128	; 0x80
 8008144:	e7f0      	b.n	8008128 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008146:	f1be 0f00 	cmp.w	lr, #0
 800814a:	d1f7      	bne.n	800813c <osThreadNew+0x48>
      if (mem == 0) {
 800814c:	6924      	ldr	r4, [r4, #16]
 800814e:	2c00      	cmp	r4, #0
 8008150:	d1f4      	bne.n	800813c <osThreadNew+0x48>
 8008152:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8008154:	a905      	add	r1, sp, #20
 8008156:	b292      	uxth	r2, r2
 8008158:	e9cd c100 	strd	ip, r1, [sp]
 800815c:	4621      	mov	r1, r4
 800815e:	f001 fb03 	bl	8009768 <xTaskCreate>
 8008162:	2801      	cmp	r0, #1
            hTask = NULL;
 8008164:	bf1c      	itt	ne
 8008166:	2300      	movne	r3, #0
 8008168:	9305      	strne	r3, [sp, #20]
 800816a:	e7e7      	b.n	800813c <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800816c:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008170:	2280      	movs	r2, #128	; 0x80
 8008172:	e7ef      	b.n	8008154 <osThreadNew+0x60>
        return (NULL);
 8008174:	4610      	mov	r0, r2
 8008176:	e7e2      	b.n	800813e <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008178:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800817c:	9500      	str	r5, [sp, #0]
 800817e:	f001 fabb 	bl	80096f8 <xTaskCreateStatic>
 8008182:	9005      	str	r0, [sp, #20]
 8008184:	e7da      	b.n	800813c <osThreadNew+0x48>

08008186 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8008186:	b510      	push	{r4, lr}
 8008188:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800818c:	b924      	cbnz	r4, 8008198 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800818e:	b110      	cbz	r0, 8008196 <osDelay+0x10>
      vTaskDelay(ticks);
 8008190:	f001 fc30 	bl	80099f4 <vTaskDelay>
    stat = osOK;
 8008194:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8008196:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008198:	f06f 0005 	mvn.w	r0, #5
 800819c:	e7fb      	b.n	8008196 <osDelay+0x10>

0800819e <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800819e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80081a0:	4604      	mov	r4, r0
 80081a2:	460e      	mov	r6, r1
 80081a4:	4615      	mov	r5, r2
 80081a6:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80081aa:	b11a      	cbz	r2, 80081b4 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80081ac:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80081ae:	4620      	mov	r0, r4
 80081b0:	b003      	add	sp, #12
 80081b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80081b4:	2800      	cmp	r0, #0
 80081b6:	d0f9      	beq.n	80081ac <osSemaphoreNew+0xe>
 80081b8:	4288      	cmp	r0, r1
 80081ba:	d3f7      	bcc.n	80081ac <osSemaphoreNew+0xe>
    if (attr != NULL) {
 80081bc:	b1e5      	cbz	r5, 80081f8 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80081be:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 80081c2:	b1bb      	cbz	r3, 80081f4 <osSemaphoreNew+0x56>
 80081c4:	2f4f      	cmp	r7, #79	; 0x4f
 80081c6:	d9f1      	bls.n	80081ac <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80081c8:	2801      	cmp	r0, #1
 80081ca:	d12a      	bne.n	8008222 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80081cc:	2103      	movs	r1, #3
 80081ce:	9100      	str	r1, [sp, #0]
 80081d0:	4611      	mov	r1, r2
 80081d2:	f000 fce7 	bl	8008ba4 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 80081d6:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80081d8:	2800      	cmp	r0, #0
 80081da:	d0e7      	beq.n	80081ac <osSemaphoreNew+0xe>
 80081dc:	b1de      	cbz	r6, 8008216 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80081de:	2300      	movs	r3, #0
 80081e0:	461a      	mov	r2, r3
 80081e2:	4619      	mov	r1, r3
 80081e4:	f000 fd93 	bl	8008d0e <xQueueGenericSend>
 80081e8:	2801      	cmp	r0, #1
 80081ea:	d014      	beq.n	8008216 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 80081ec:	4620      	mov	r0, r4
 80081ee:	f001 f8cf 	bl	8009390 <vQueueDelete>
 80081f2:	e7db      	b.n	80081ac <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80081f4:	2f00      	cmp	r7, #0
 80081f6:	d1d9      	bne.n	80081ac <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80081f8:	2c01      	cmp	r4, #1
 80081fa:	d105      	bne.n	8008208 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 80081fc:	2203      	movs	r2, #3
 80081fe:	2100      	movs	r1, #0
 8008200:	4620      	mov	r0, r4
 8008202:	f000 fd1d 	bl	8008c40 <xQueueGenericCreate>
 8008206:	e7e6      	b.n	80081d6 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008208:	4620      	mov	r0, r4
 800820a:	4631      	mov	r1, r6
 800820c:	f000 fd61 	bl	8008cd2 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008210:	4604      	mov	r4, r0
 8008212:	2800      	cmp	r0, #0
 8008214:	d0ca      	beq.n	80081ac <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8008216:	b955      	cbnz	r5, 800822e <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8008218:	4629      	mov	r1, r5
 800821a:	4620      	mov	r0, r4
 800821c:	f001 f892 	bl	8009344 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008220:	e7c5      	b.n	80081ae <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008222:	461a      	mov	r2, r3
 8008224:	f000 fd33 	bl	8008c8e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008228:	4604      	mov	r4, r0
 800822a:	2800      	cmp	r0, #0
 800822c:	d0be      	beq.n	80081ac <osSemaphoreNew+0xe>
          name = attr->name;
 800822e:	682d      	ldr	r5, [r5, #0]
 8008230:	e7f2      	b.n	8008218 <osSemaphoreNew+0x7a>

08008232 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008232:	b513      	push	{r0, r1, r4, lr}
 8008234:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008236:	b308      	cbz	r0, 800827c <osSemaphoreAcquire+0x4a>
 8008238:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800823c:	b1b3      	cbz	r3, 800826c <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 800823e:	b9e9      	cbnz	r1, 800827c <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008240:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008242:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008244:	f001 f82e 	bl	80092a4 <xQueueReceiveFromISR>
 8008248:	2801      	cmp	r0, #1
 800824a:	d114      	bne.n	8008276 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800824c:	9b01      	ldr	r3, [sp, #4]
 800824e:	b913      	cbnz	r3, 8008256 <osSemaphoreAcquire+0x24>
  stat = osOK;
 8008250:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8008252:	b002      	add	sp, #8
 8008254:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8008256:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800825a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800825e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008262:	f3bf 8f4f 	dsb	sy
 8008266:	f3bf 8f6f 	isb	sy
 800826a:	e7f1      	b.n	8008250 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800826c:	f000 ff57 	bl	800911e <xQueueSemaphoreTake>
 8008270:	2801      	cmp	r0, #1
 8008272:	d0ed      	beq.n	8008250 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8008274:	b92c      	cbnz	r4, 8008282 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8008276:	f06f 0002 	mvn.w	r0, #2
 800827a:	e7ea      	b.n	8008252 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800827c:	f06f 0003 	mvn.w	r0, #3
 8008280:	e7e7      	b.n	8008252 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8008282:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008286:	e7e4      	b.n	8008252 <osSemaphoreAcquire+0x20>

08008288 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008288:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800828a:	b310      	cbz	r0, 80082d2 <osSemaphoreRelease+0x4a>
 800828c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008290:	b1b3      	cbz	r3, 80082c0 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8008292:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008294:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008296:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008298:	f000 fe4e 	bl	8008f38 <xQueueGiveFromISR>
 800829c:	2801      	cmp	r0, #1
 800829e:	d115      	bne.n	80082cc <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 80082a0:	9b01      	ldr	r3, [sp, #4]
 80082a2:	b913      	cbnz	r3, 80082aa <osSemaphoreRelease+0x22>
  stat = osOK;
 80082a4:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 80082a6:	b002      	add	sp, #8
 80082a8:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 80082aa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80082ae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80082b2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80082b6:	f3bf 8f4f 	dsb	sy
 80082ba:	f3bf 8f6f 	isb	sy
 80082be:	e7f1      	b.n	80082a4 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80082c0:	461a      	mov	r2, r3
 80082c2:	4619      	mov	r1, r3
 80082c4:	f000 fd23 	bl	8008d0e <xQueueGenericSend>
 80082c8:	2801      	cmp	r0, #1
 80082ca:	d0eb      	beq.n	80082a4 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 80082cc:	f06f 0002 	mvn.w	r0, #2
 80082d0:	e7e9      	b.n	80082a6 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 80082d2:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80082d6:	e7e6      	b.n	80082a6 <osSemaphoreRelease+0x1e>

080082d8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80082d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80082da:	4605      	mov	r5, r0
 80082dc:	460e      	mov	r6, r1
 80082de:	4614      	mov	r4, r2
 80082e0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80082e4:	b11f      	cbz	r7, 80082ee <osMessageQueueNew+0x16>
  hQueue = NULL;
 80082e6:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80082e8:	4628      	mov	r0, r5
 80082ea:	b003      	add	sp, #12
 80082ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80082ee:	2800      	cmp	r0, #0
 80082f0:	d0f9      	beq.n	80082e6 <osMessageQueueNew+0xe>
 80082f2:	2900      	cmp	r1, #0
 80082f4:	d0f7      	beq.n	80082e6 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80082f6:	b1da      	cbz	r2, 8008330 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80082f8:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80082fc:	b183      	cbz	r3, 8008320 <osMessageQueueNew+0x48>
 80082fe:	2a4f      	cmp	r2, #79	; 0x4f
 8008300:	d9f1      	bls.n	80082e6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008302:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008304:	2a00      	cmp	r2, #0
 8008306:	d0ee      	beq.n	80082e6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008308:	434d      	muls	r5, r1
 800830a:	6966      	ldr	r6, [r4, #20]
 800830c:	42ae      	cmp	r6, r5
 800830e:	d3ea      	bcc.n	80082e6 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008310:	9700      	str	r7, [sp, #0]
 8008312:	f000 fc47 	bl	8008ba4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008316:	4605      	mov	r5, r0
 8008318:	2800      	cmp	r0, #0
 800831a:	d0e4      	beq.n	80082e6 <osMessageQueueNew+0xe>
        name = attr->name;
 800831c:	6824      	ldr	r4, [r4, #0]
 800831e:	e011      	b.n	8008344 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008320:	2a00      	cmp	r2, #0
 8008322:	d1e0      	bne.n	80082e6 <osMessageQueueNew+0xe>
 8008324:	6923      	ldr	r3, [r4, #16]
 8008326:	2b00      	cmp	r3, #0
 8008328:	d1dd      	bne.n	80082e6 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800832a:	6963      	ldr	r3, [r4, #20]
 800832c:	2b00      	cmp	r3, #0
 800832e:	d1da      	bne.n	80082e6 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8008330:	4628      	mov	r0, r5
 8008332:	2200      	movs	r2, #0
 8008334:	4631      	mov	r1, r6
 8008336:	f000 fc83 	bl	8008c40 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800833a:	4605      	mov	r5, r0
 800833c:	2800      	cmp	r0, #0
 800833e:	d0d2      	beq.n	80082e6 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8008340:	2c00      	cmp	r4, #0
 8008342:	d1eb      	bne.n	800831c <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8008344:	4621      	mov	r1, r4
 8008346:	4628      	mov	r0, r5
 8008348:	f000 fffc 	bl	8009344 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800834c:	e7cc      	b.n	80082e8 <osMessageQueueNew+0x10>

0800834e <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800834e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008350:	461c      	mov	r4, r3
 8008352:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008356:	b1c6      	cbz	r6, 800838a <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008358:	b318      	cbz	r0, 80083a2 <osMessageQueuePut+0x54>
 800835a:	b311      	cbz	r1, 80083a2 <osMessageQueuePut+0x54>
 800835c:	bb0b      	cbnz	r3, 80083a2 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800835e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008360:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008362:	f000 fd87 	bl	8008e74 <xQueueGenericSendFromISR>
 8008366:	2801      	cmp	r0, #1
 8008368:	d118      	bne.n	800839c <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800836a:	9b01      	ldr	r3, [sp, #4]
 800836c:	b913      	cbnz	r3, 8008374 <osMessageQueuePut+0x26>
  stat = osOK;
 800836e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8008370:	b002      	add	sp, #8
 8008372:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008374:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008378:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800837c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008380:	f3bf 8f4f 	dsb	sy
 8008384:	f3bf 8f6f 	isb	sy
 8008388:	e7f1      	b.n	800836e <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800838a:	b150      	cbz	r0, 80083a2 <osMessageQueuePut+0x54>
 800838c:	b149      	cbz	r1, 80083a2 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800838e:	4633      	mov	r3, r6
 8008390:	4622      	mov	r2, r4
 8008392:	f000 fcbc 	bl	8008d0e <xQueueGenericSend>
 8008396:	2801      	cmp	r0, #1
 8008398:	d0e9      	beq.n	800836e <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800839a:	b92c      	cbnz	r4, 80083a8 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 800839c:	f06f 0002 	mvn.w	r0, #2
 80083a0:	e7e6      	b.n	8008370 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 80083a2:	f06f 0003 	mvn.w	r0, #3
 80083a6:	e7e3      	b.n	8008370 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 80083a8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80083ac:	e7e0      	b.n	8008370 <osMessageQueuePut+0x22>

080083ae <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80083ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80083b0:	461c      	mov	r4, r3
 80083b2:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80083b6:	b1c3      	cbz	r3, 80083ea <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80083b8:	b310      	cbz	r0, 8008400 <osMessageQueueGet+0x52>
 80083ba:	b309      	cbz	r1, 8008400 <osMessageQueueGet+0x52>
 80083bc:	bb04      	cbnz	r4, 8008400 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80083be:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80083c0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80083c2:	f000 ff6f 	bl	80092a4 <xQueueReceiveFromISR>
 80083c6:	2801      	cmp	r0, #1
 80083c8:	d117      	bne.n	80083fa <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80083ca:	9b01      	ldr	r3, [sp, #4]
 80083cc:	b913      	cbnz	r3, 80083d4 <osMessageQueueGet+0x26>
  stat = osOK;
 80083ce:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80083d0:	b003      	add	sp, #12
 80083d2:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 80083d4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80083d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80083dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80083e0:	f3bf 8f4f 	dsb	sy
 80083e4:	f3bf 8f6f 	isb	sy
 80083e8:	e7f1      	b.n	80083ce <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80083ea:	b148      	cbz	r0, 8008400 <osMessageQueueGet+0x52>
 80083ec:	b141      	cbz	r1, 8008400 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80083ee:	4622      	mov	r2, r4
 80083f0:	f000 fdf6 	bl	8008fe0 <xQueueReceive>
 80083f4:	2801      	cmp	r0, #1
 80083f6:	d0ea      	beq.n	80083ce <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 80083f8:	b92c      	cbnz	r4, 8008406 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 80083fa:	f06f 0002 	mvn.w	r0, #2
 80083fe:	e7e7      	b.n	80083d0 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8008400:	f06f 0003 	mvn.w	r0, #3
 8008404:	e7e4      	b.n	80083d0 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8008406:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800840a:	e7e1      	b.n	80083d0 <osMessageQueueGet+0x22>

0800840c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800840c:	4b03      	ldr	r3, [pc, #12]	; (800841c <vApplicationGetIdleTaskMemory+0x10>)
 800840e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008410:	4b03      	ldr	r3, [pc, #12]	; (8008420 <vApplicationGetIdleTaskMemory+0x14>)
 8008412:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008414:	2380      	movs	r3, #128	; 0x80
 8008416:	6013      	str	r3, [r2, #0]
}
 8008418:	4770      	bx	lr
 800841a:	bf00      	nop
 800841c:	2400412c 	.word	0x2400412c
 8008420:	24003f2c 	.word	0x24003f2c

08008424 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008424:	4b03      	ldr	r3, [pc, #12]	; (8008434 <vApplicationGetTimerTaskMemory+0x10>)
 8008426:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008428:	4b03      	ldr	r3, [pc, #12]	; (8008438 <vApplicationGetTimerTaskMemory+0x14>)
 800842a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800842c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008430:	6013      	str	r3, [r2, #0]
}
 8008432:	4770      	bx	lr
 8008434:	240045f0 	.word	0x240045f0
 8008438:	240041f0 	.word	0x240041f0

0800843c <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800843c:	4b0f      	ldr	r3, [pc, #60]	; (800847c <prvInsertBlockIntoFreeList+0x40>)
{
 800843e:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008440:	461a      	mov	r2, r3
 8008442:	681b      	ldr	r3, [r3, #0]
 8008444:	4283      	cmp	r3, r0
 8008446:	d3fb      	bcc.n	8008440 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008448:	6854      	ldr	r4, [r2, #4]
 800844a:	1911      	adds	r1, r2, r4
 800844c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800844e:	bf01      	itttt	eq
 8008450:	6841      	ldreq	r1, [r0, #4]
 8008452:	4610      	moveq	r0, r2
 8008454:	1909      	addeq	r1, r1, r4
 8008456:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008458:	6844      	ldr	r4, [r0, #4]
 800845a:	1901      	adds	r1, r0, r4
 800845c:	428b      	cmp	r3, r1
 800845e:	d107      	bne.n	8008470 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008460:	4907      	ldr	r1, [pc, #28]	; (8008480 <prvInsertBlockIntoFreeList+0x44>)
 8008462:	6809      	ldr	r1, [r1, #0]
 8008464:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008466:	bf1f      	itttt	ne
 8008468:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800846a:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800846c:	1909      	addne	r1, r1, r4
 800846e:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008470:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008472:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008474:	bf18      	it	ne
 8008476:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008478:	bd10      	pop	{r4, pc}
 800847a:	bf00      	nop
 800847c:	240082c8 	.word	0x240082c8
 8008480:	240046b0 	.word	0x240046b0

08008484 <pvPortMalloc>:
{
 8008484:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008488:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800848a:	f001 f99b 	bl	80097c4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800848e:	4842      	ldr	r0, [pc, #264]	; (8008598 <pvPortMalloc+0x114>)
 8008490:	4d42      	ldr	r5, [pc, #264]	; (800859c <pvPortMalloc+0x118>)
 8008492:	6803      	ldr	r3, [r0, #0]
 8008494:	bb0b      	cbnz	r3, 80084da <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008496:	4942      	ldr	r1, [pc, #264]	; (80085a0 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008498:	074e      	lsls	r6, r1, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800849a:	4e42      	ldr	r6, [pc, #264]	; (80085a4 <pvPortMalloc+0x120>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800849c:	bf1b      	ittet	ne
 800849e:	1dcb      	addne	r3, r1, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80084a0:	f501 5270 	addne.w	r2, r1, #15360	; 0x3c00
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80084a4:	f44f 5270 	moveq.w	r2, #15360	; 0x3c00
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80084a8:	f023 0307 	bicne.w	r3, r3, #7
 80084ac:	bf1c      	itt	ne
 80084ae:	4619      	movne	r1, r3
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80084b0:	1ad2      	subne	r2, r2, r3
	xStart.xBlockSize = ( size_t ) 0;
 80084b2:	2300      	movs	r3, #0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80084b4:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80084b6:	6031      	str	r1, [r6, #0]
	xStart.xBlockSize = ( size_t ) 0;
 80084b8:	6073      	str	r3, [r6, #4]
	uxAddress -= xHeapStructSize;
 80084ba:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80084bc:	f022 0207 	bic.w	r2, r2, #7
	pxEnd->pxNextFreeBlock = NULL;
 80084c0:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80084c4:	1a53      	subs	r3, r2, r1
	pxEnd = ( void * ) uxAddress;
 80084c6:	6002      	str	r2, [r0, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80084c8:	e9c1 2300 	strd	r2, r3, [r1]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80084cc:	4a36      	ldr	r2, [pc, #216]	; (80085a8 <pvPortMalloc+0x124>)
 80084ce:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80084d0:	4a36      	ldr	r2, [pc, #216]	; (80085ac <pvPortMalloc+0x128>)
 80084d2:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80084d4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80084d8:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80084da:	682f      	ldr	r7, [r5, #0]
 80084dc:	4227      	tst	r7, r4
 80084de:	d155      	bne.n	800858c <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 80084e0:	2c00      	cmp	r4, #0
 80084e2:	d046      	beq.n	8008572 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 80084e4:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80084e8:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80084ea:	bf1c      	itt	ne
 80084ec:	f023 0307 	bicne.w	r3, r3, #7
 80084f0:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80084f2:	2b00      	cmp	r3, #0
 80084f4:	d04a      	beq.n	800858c <pvPortMalloc+0x108>
 80084f6:	4c2d      	ldr	r4, [pc, #180]	; (80085ac <pvPortMalloc+0x128>)
 80084f8:	6826      	ldr	r6, [r4, #0]
 80084fa:	429e      	cmp	r6, r3
 80084fc:	d346      	bcc.n	800858c <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 80084fe:	4a29      	ldr	r2, [pc, #164]	; (80085a4 <pvPortMalloc+0x120>)
 8008500:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008502:	6869      	ldr	r1, [r5, #4]
 8008504:	4299      	cmp	r1, r3
 8008506:	d204      	bcs.n	8008512 <pvPortMalloc+0x8e>
 8008508:	f8d5 c000 	ldr.w	ip, [r5]
 800850c:	f1bc 0f00 	cmp.w	ip, #0
 8008510:	d115      	bne.n	800853e <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008512:	6800      	ldr	r0, [r0, #0]
 8008514:	42a8      	cmp	r0, r5
 8008516:	d039      	beq.n	800858c <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008518:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800851a:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800851c:	f8d2 8000 	ldr.w	r8, [r2]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008520:	2910      	cmp	r1, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008522:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008524:	d912      	bls.n	800854c <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008526:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008528:	0742      	lsls	r2, r0, #29
 800852a:	d00b      	beq.n	8008544 <pvPortMalloc+0xc0>
 800852c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008530:	f383 8811 	msr	BASEPRI, r3
 8008534:	f3bf 8f6f 	isb	sy
 8008538:	f3bf 8f4f 	dsb	sy
 800853c:	e7fe      	b.n	800853c <pvPortMalloc+0xb8>
 800853e:	462a      	mov	r2, r5
 8008540:	4665      	mov	r5, ip
 8008542:	e7de      	b.n	8008502 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008544:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008546:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008548:	f7ff ff78 	bl	800843c <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800854c:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800854e:	4916      	ldr	r1, [pc, #88]	; (80085a8 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008550:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008552:	431f      	orrs	r7, r3
					xNumberOfSuccessfulAllocations++;
 8008554:	4a16      	ldr	r2, [pc, #88]	; (80085b0 <pvPortMalloc+0x12c>)
					pxBlock->pxNextFreeBlock = NULL;
 8008556:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008558:	6808      	ldr	r0, [r1, #0]
					pxBlock->pxNextFreeBlock = NULL;
 800855a:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800855c:	6813      	ldr	r3, [r2, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800855e:	4286      	cmp	r6, r0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008560:	6026      	str	r6, [r4, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008562:	f108 0408 	add.w	r4, r8, #8
					xNumberOfSuccessfulAllocations++;
 8008566:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800856a:	bf38      	it	cc
 800856c:	600e      	strcc	r6, [r1, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800856e:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8008570:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8008572:	f001 f9cb 	bl	800990c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008576:	0763      	lsls	r3, r4, #29
 8008578:	d00a      	beq.n	8008590 <pvPortMalloc+0x10c>
 800857a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800857e:	f383 8811 	msr	BASEPRI, r3
 8008582:	f3bf 8f6f 	isb	sy
 8008586:	f3bf 8f4f 	dsb	sy
 800858a:	e7fe      	b.n	800858a <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800858c:	2400      	movs	r4, #0
 800858e:	e7f0      	b.n	8008572 <pvPortMalloc+0xee>
}
 8008590:	4620      	mov	r0, r4
 8008592:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008596:	bf00      	nop
 8008598:	240046b0 	.word	0x240046b0
 800859c:	240082b4 	.word	0x240082b4
 80085a0:	240046b4 	.word	0x240046b4
 80085a4:	240082c8 	.word	0x240082c8
 80085a8:	240082bc 	.word	0x240082bc
 80085ac:	240082b8 	.word	0x240082b8
 80085b0:	240082c0 	.word	0x240082c0

080085b4 <vPortFree>:
{
 80085b4:	b510      	push	{r4, lr}
	if( pv != NULL )
 80085b6:	4604      	mov	r4, r0
 80085b8:	b390      	cbz	r0, 8008620 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80085ba:	4a1a      	ldr	r2, [pc, #104]	; (8008624 <vPortFree+0x70>)
 80085bc:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80085c0:	6812      	ldr	r2, [r2, #0]
 80085c2:	4213      	tst	r3, r2
 80085c4:	d108      	bne.n	80085d8 <vPortFree+0x24>
 80085c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085ca:	f383 8811 	msr	BASEPRI, r3
 80085ce:	f3bf 8f6f 	isb	sy
 80085d2:	f3bf 8f4f 	dsb	sy
 80085d6:	e7fe      	b.n	80085d6 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80085d8:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80085dc:	b141      	cbz	r1, 80085f0 <vPortFree+0x3c>
 80085de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085e2:	f383 8811 	msr	BASEPRI, r3
 80085e6:	f3bf 8f6f 	isb	sy
 80085ea:	f3bf 8f4f 	dsb	sy
 80085ee:	e7fe      	b.n	80085ee <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80085f0:	ea23 0302 	bic.w	r3, r3, r2
 80085f4:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80085f8:	f001 f8e4 	bl	80097c4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80085fc:	4a0a      	ldr	r2, [pc, #40]	; (8008628 <vPortFree+0x74>)
 80085fe:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008602:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008606:	6811      	ldr	r1, [r2, #0]
 8008608:	440b      	add	r3, r1
 800860a:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800860c:	f7ff ff16 	bl	800843c <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8008610:	4a06      	ldr	r2, [pc, #24]	; (800862c <vPortFree+0x78>)
 8008612:	6813      	ldr	r3, [r2, #0]
 8008614:	3301      	adds	r3, #1
}
 8008616:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800861a:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800861c:	f001 b976 	b.w	800990c <xTaskResumeAll>
}
 8008620:	bd10      	pop	{r4, pc}
 8008622:	bf00      	nop
 8008624:	240082b4 	.word	0x240082b4
 8008628:	240082b8 	.word	0x240082b8
 800862c:	240082c4 	.word	0x240082c4

08008630 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008630:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008634:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008638:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800863a:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800863c:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008640:	2300      	movs	r3, #0
 8008642:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008644:	4770      	bx	lr

08008646 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008646:	2300      	movs	r3, #0
 8008648:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800864a:	4770      	bx	lr

0800864c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800864c:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800864e:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 8008650:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008652:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008654:	689a      	ldr	r2, [r3, #8]
 8008656:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008658:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800865a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800865c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800865e:	3301      	adds	r3, #1
 8008660:	6003      	str	r3, [r0, #0]
}
 8008662:	4770      	bx	lr

08008664 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008664:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008666:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008668:	1c63      	adds	r3, r4, #1
 800866a:	d10a      	bne.n	8008682 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800866c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800866e:	685a      	ldr	r2, [r3, #4]
 8008670:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008672:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008674:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008676:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008678:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800867a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800867c:	3301      	adds	r3, #1
 800867e:	6003      	str	r3, [r0, #0]
}
 8008680:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008682:	f100 0208 	add.w	r2, r0, #8
 8008686:	4613      	mov	r3, r2
 8008688:	6852      	ldr	r2, [r2, #4]
 800868a:	6815      	ldr	r5, [r2, #0]
 800868c:	42a5      	cmp	r5, r4
 800868e:	d9fa      	bls.n	8008686 <vListInsert+0x22>
 8008690:	e7ed      	b.n	800866e <vListInsert+0xa>

08008692 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 8008692:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008694:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8008698:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800869a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800869c:	6859      	ldr	r1, [r3, #4]
 800869e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80086a0:	bf08      	it	eq
 80086a2:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80086a4:	2200      	movs	r2, #0
 80086a6:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 80086a8:	681a      	ldr	r2, [r3, #0]
 80086aa:	3a01      	subs	r2, #1
 80086ac:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80086ae:	6818      	ldr	r0, [r3, #0]
}
 80086b0:	4770      	bx	lr
	...

080086b4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80086b4:	4808      	ldr	r0, [pc, #32]	; (80086d8 <prvPortStartFirstTask+0x24>)
 80086b6:	6800      	ldr	r0, [r0, #0]
 80086b8:	6800      	ldr	r0, [r0, #0]
 80086ba:	f380 8808 	msr	MSP, r0
 80086be:	f04f 0000 	mov.w	r0, #0
 80086c2:	f380 8814 	msr	CONTROL, r0
 80086c6:	b662      	cpsie	i
 80086c8:	b661      	cpsie	f
 80086ca:	f3bf 8f4f 	dsb	sy
 80086ce:	f3bf 8f6f 	isb	sy
 80086d2:	df00      	svc	0
 80086d4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80086d6:	0000      	.short	0x0000
 80086d8:	e000ed08 	.word	0xe000ed08

080086dc <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80086dc:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80086ec <vPortEnableVFP+0x10>
 80086e0:	6801      	ldr	r1, [r0, #0]
 80086e2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80086e6:	6001      	str	r1, [r0, #0]
 80086e8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80086ea:	0000      	.short	0x0000
 80086ec:	e000ed88 	.word	0xe000ed88

080086f0 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 80086f0:	2300      	movs	r3, #0
{
 80086f2:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80086f4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80086f6:	4b0d      	ldr	r3, [pc, #52]	; (800872c <prvTaskExitError+0x3c>)
 80086f8:	681b      	ldr	r3, [r3, #0]
 80086fa:	3301      	adds	r3, #1
 80086fc:	d008      	beq.n	8008710 <prvTaskExitError+0x20>
 80086fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008702:	f383 8811 	msr	BASEPRI, r3
 8008706:	f3bf 8f6f 	isb	sy
 800870a:	f3bf 8f4f 	dsb	sy
 800870e:	e7fe      	b.n	800870e <prvTaskExitError+0x1e>
 8008710:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008714:	f383 8811 	msr	BASEPRI, r3
 8008718:	f3bf 8f6f 	isb	sy
 800871c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008720:	9b01      	ldr	r3, [sp, #4]
 8008722:	2b00      	cmp	r3, #0
 8008724:	d0fc      	beq.n	8008720 <prvTaskExitError+0x30>
}
 8008726:	b002      	add	sp, #8
 8008728:	4770      	bx	lr
 800872a:	bf00      	nop
 800872c:	24000050 	.word	0x24000050

08008730 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008730:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008734:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008738:	f840 2c20 	str.w	r2, [r0, #-32]
}
 800873c:	3844      	subs	r0, #68	; 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800873e:	6403      	str	r3, [r0, #64]	; 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008740:	4b03      	ldr	r3, [pc, #12]	; (8008750 <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008742:	63c1      	str	r1, [r0, #60]	; 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008744:	6383      	str	r3, [r0, #56]	; 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008746:	f06f 0302 	mvn.w	r3, #2
 800874a:	6203      	str	r3, [r0, #32]
}
 800874c:	4770      	bx	lr
 800874e:	bf00      	nop
 8008750:	080086f1 	.word	0x080086f1
	...

08008760 <SVC_Handler>:
	__asm volatile (
 8008760:	4b07      	ldr	r3, [pc, #28]	; (8008780 <pxCurrentTCBConst2>)
 8008762:	6819      	ldr	r1, [r3, #0]
 8008764:	6808      	ldr	r0, [r1, #0]
 8008766:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800876a:	f380 8809 	msr	PSP, r0
 800876e:	f3bf 8f6f 	isb	sy
 8008772:	f04f 0000 	mov.w	r0, #0
 8008776:	f380 8811 	msr	BASEPRI, r0
 800877a:	4770      	bx	lr
 800877c:	f3af 8000 	nop.w

08008780 <pxCurrentTCBConst2>:
 8008780:	24008318 	.word	0x24008318

08008784 <vPortEnterCritical>:
 8008784:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008788:	f383 8811 	msr	BASEPRI, r3
 800878c:	f3bf 8f6f 	isb	sy
 8008790:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008794:	4a0a      	ldr	r2, [pc, #40]	; (80087c0 <vPortEnterCritical+0x3c>)
 8008796:	6813      	ldr	r3, [r2, #0]
 8008798:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800879a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800879c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800879e:	d10e      	bne.n	80087be <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80087a0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80087a4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 80087a8:	b2db      	uxtb	r3, r3
 80087aa:	b143      	cbz	r3, 80087be <vPortEnterCritical+0x3a>
 80087ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087b0:	f383 8811 	msr	BASEPRI, r3
 80087b4:	f3bf 8f6f 	isb	sy
 80087b8:	f3bf 8f4f 	dsb	sy
 80087bc:	e7fe      	b.n	80087bc <vPortEnterCritical+0x38>
}
 80087be:	4770      	bx	lr
 80087c0:	24000050 	.word	0x24000050

080087c4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80087c4:	4a08      	ldr	r2, [pc, #32]	; (80087e8 <vPortExitCritical+0x24>)
 80087c6:	6813      	ldr	r3, [r2, #0]
 80087c8:	b943      	cbnz	r3, 80087dc <vPortExitCritical+0x18>
 80087ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087ce:	f383 8811 	msr	BASEPRI, r3
 80087d2:	f3bf 8f6f 	isb	sy
 80087d6:	f3bf 8f4f 	dsb	sy
 80087da:	e7fe      	b.n	80087da <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80087dc:	3b01      	subs	r3, #1
 80087de:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80087e0:	b90b      	cbnz	r3, 80087e6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80087e2:	f383 8811 	msr	BASEPRI, r3
}
 80087e6:	4770      	bx	lr
 80087e8:	24000050 	.word	0x24000050
 80087ec:	00000000 	.word	0x00000000

080087f0 <PendSV_Handler>:
	__asm volatile
 80087f0:	f3ef 8009 	mrs	r0, PSP
 80087f4:	f3bf 8f6f 	isb	sy
 80087f8:	4b15      	ldr	r3, [pc, #84]	; (8008850 <pxCurrentTCBConst>)
 80087fa:	681a      	ldr	r2, [r3, #0]
 80087fc:	f01e 0f10 	tst.w	lr, #16
 8008800:	bf08      	it	eq
 8008802:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008806:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800880a:	6010      	str	r0, [r2, #0]
 800880c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008810:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008814:	f380 8811 	msr	BASEPRI, r0
 8008818:	f3bf 8f4f 	dsb	sy
 800881c:	f3bf 8f6f 	isb	sy
 8008820:	f001 f97c 	bl	8009b1c <vTaskSwitchContext>
 8008824:	f04f 0000 	mov.w	r0, #0
 8008828:	f380 8811 	msr	BASEPRI, r0
 800882c:	bc09      	pop	{r0, r3}
 800882e:	6819      	ldr	r1, [r3, #0]
 8008830:	6808      	ldr	r0, [r1, #0]
 8008832:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008836:	f01e 0f10 	tst.w	lr, #16
 800883a:	bf08      	it	eq
 800883c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008840:	f380 8809 	msr	PSP, r0
 8008844:	f3bf 8f6f 	isb	sy
 8008848:	4770      	bx	lr
 800884a:	bf00      	nop
 800884c:	f3af 8000 	nop.w

08008850 <pxCurrentTCBConst>:
 8008850:	24008318 	.word	0x24008318

08008854 <xPortSysTickHandler>:
{
 8008854:	b508      	push	{r3, lr}
	__asm volatile
 8008856:	f04f 0350 	mov.w	r3, #80	; 0x50
 800885a:	f383 8811 	msr	BASEPRI, r3
 800885e:	f3bf 8f6f 	isb	sy
 8008862:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008866:	f000 ffbb 	bl	80097e0 <xTaskIncrementTick>
 800886a:	b128      	cbz	r0, 8008878 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800886c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008870:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008874:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008878:	2300      	movs	r3, #0
 800887a:	f383 8811 	msr	BASEPRI, r3
}
 800887e:	bd08      	pop	{r3, pc}

08008880 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008880:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008884:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008886:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800888a:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800888c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800888e:	4b04      	ldr	r3, [pc, #16]	; (80088a0 <vPortSetupTimerInterrupt+0x20>)
 8008890:	681b      	ldr	r3, [r3, #0]
 8008892:	fbb3 f3f1 	udiv	r3, r3, r1
 8008896:	3b01      	subs	r3, #1
 8008898:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800889a:	2307      	movs	r3, #7
 800889c:	6113      	str	r3, [r2, #16]
}
 800889e:	4770      	bx	lr
 80088a0:	24000040 	.word	0x24000040

080088a4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80088a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 80088a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80088aa:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 80088ae:	4a3a      	ldr	r2, [pc, #232]	; (8008998 <xPortStartScheduler+0xf4>)
 80088b0:	4291      	cmp	r1, r2
 80088b2:	d108      	bne.n	80088c6 <xPortStartScheduler+0x22>
	__asm volatile
 80088b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088b8:	f383 8811 	msr	BASEPRI, r3
 80088bc:	f3bf 8f6f 	isb	sy
 80088c0:	f3bf 8f4f 	dsb	sy
 80088c4:	e7fe      	b.n	80088c4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80088c6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 80088ca:	4b34      	ldr	r3, [pc, #208]	; (800899c <xPortStartScheduler+0xf8>)
 80088cc:	429a      	cmp	r2, r3
 80088ce:	d108      	bne.n	80088e2 <xPortStartScheduler+0x3e>
 80088d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088d4:	f383 8811 	msr	BASEPRI, r3
 80088d8:	f3bf 8f6f 	isb	sy
 80088dc:	f3bf 8f4f 	dsb	sy
 80088e0:	e7fe      	b.n	80088e0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80088e2:	4b2f      	ldr	r3, [pc, #188]	; (80089a0 <xPortStartScheduler+0xfc>)
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80088e4:	2100      	movs	r1, #0
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80088e6:	781a      	ldrb	r2, [r3, #0]
 80088e8:	b2d2      	uxtb	r2, r2
 80088ea:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80088ec:	22ff      	movs	r2, #255	; 0xff
 80088ee:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80088f0:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80088f2:	4a2c      	ldr	r2, [pc, #176]	; (80089a4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80088f4:	b2db      	uxtb	r3, r3
 80088f6:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80088fa:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80088fe:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008902:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008904:	2307      	movs	r3, #7
 8008906:	4a28      	ldr	r2, [pc, #160]	; (80089a8 <xPortStartScheduler+0x104>)
 8008908:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800890a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800890e:	1e5c      	subs	r4, r3, #1
 8008910:	0600      	lsls	r0, r0, #24
 8008912:	d40c      	bmi.n	800892e <xPortStartScheduler+0x8a>
 8008914:	b111      	cbz	r1, 800891c <xPortStartScheduler+0x78>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008916:	2b03      	cmp	r3, #3
 8008918:	6013      	str	r3, [r2, #0]
 800891a:	d011      	beq.n	8008940 <xPortStartScheduler+0x9c>
 800891c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008920:	f383 8811 	msr	BASEPRI, r3
 8008924:	f3bf 8f6f 	isb	sy
 8008928:	f3bf 8f4f 	dsb	sy
 800892c:	e7fe      	b.n	800892c <xPortStartScheduler+0x88>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800892e:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008932:	2101      	movs	r1, #1
 8008934:	005b      	lsls	r3, r3, #1
 8008936:	b2db      	uxtb	r3, r3
 8008938:	f88d 3003 	strb.w	r3, [sp, #3]
 800893c:	4623      	mov	r3, r4
 800893e:	e7e4      	b.n	800890a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008940:	f44f 7340 	mov.w	r3, #768	; 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008944:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
	uxCriticalNesting = 0;
 8008948:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800894a:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800894c:	9b01      	ldr	r3, [sp, #4]
 800894e:	4a14      	ldr	r2, [pc, #80]	; (80089a0 <xPortStartScheduler+0xfc>)
 8008950:	b2db      	uxtb	r3, r3
 8008952:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008954:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008958:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800895c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008960:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008964:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008968:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800896c:	f7ff ff88 	bl	8008880 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008970:	4b0e      	ldr	r3, [pc, #56]	; (80089ac <xPortStartScheduler+0x108>)
 8008972:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008974:	f7ff feb2 	bl	80086dc <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008978:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800897c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008980:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008984:	f7ff fe96 	bl	80086b4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008988:	f001 f8c8 	bl	8009b1c <vTaskSwitchContext>
}
 800898c:	4628      	mov	r0, r5
	prvTaskExitError();
 800898e:	f7ff feaf 	bl	80086f0 <prvTaskExitError>
}
 8008992:	b003      	add	sp, #12
 8008994:	bd30      	pop	{r4, r5, pc}
 8008996:	bf00      	nop
 8008998:	410fc271 	.word	0x410fc271
 800899c:	410fc270 	.word	0x410fc270
 80089a0:	e000e400 	.word	0xe000e400
 80089a4:	240082d0 	.word	0x240082d0
 80089a8:	240082d4 	.word	0x240082d4
 80089ac:	24000050 	.word	0x24000050

080089b0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80089b0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80089b4:	2b0f      	cmp	r3, #15
 80089b6:	d90e      	bls.n	80089d6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80089b8:	4a11      	ldr	r2, [pc, #68]	; (8008a00 <vPortValidateInterruptPriority+0x50>)
 80089ba:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80089bc:	4a11      	ldr	r2, [pc, #68]	; (8008a04 <vPortValidateInterruptPriority+0x54>)
 80089be:	7812      	ldrb	r2, [r2, #0]
 80089c0:	429a      	cmp	r2, r3
 80089c2:	d908      	bls.n	80089d6 <vPortValidateInterruptPriority+0x26>
 80089c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089c8:	f383 8811 	msr	BASEPRI, r3
 80089cc:	f3bf 8f6f 	isb	sy
 80089d0:	f3bf 8f4f 	dsb	sy
 80089d4:	e7fe      	b.n	80089d4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80089d6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80089da:	4a0b      	ldr	r2, [pc, #44]	; (8008a08 <vPortValidateInterruptPriority+0x58>)
 80089dc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80089e0:	6812      	ldr	r2, [r2, #0]
 80089e2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80089e6:	4293      	cmp	r3, r2
 80089e8:	d908      	bls.n	80089fc <vPortValidateInterruptPriority+0x4c>
 80089ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089ee:	f383 8811 	msr	BASEPRI, r3
 80089f2:	f3bf 8f6f 	isb	sy
 80089f6:	f3bf 8f4f 	dsb	sy
 80089fa:	e7fe      	b.n	80089fa <vPortValidateInterruptPriority+0x4a>
	}
 80089fc:	4770      	bx	lr
 80089fe:	bf00      	nop
 8008a00:	e000e3f0 	.word	0xe000e3f0
 8008a04:	240082d0 	.word	0x240082d0
 8008a08:	240082d4 	.word	0x240082d4

08008a0c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008a0c:	b510      	push	{r4, lr}
 8008a0e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008a10:	f7ff feb8 	bl	8008784 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008a14:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008a16:	f7ff fed5 	bl	80087c4 <vPortExitCritical>

	return xReturn;
}
 8008a1a:	fab4 f084 	clz	r0, r4
 8008a1e:	0940      	lsrs	r0, r0, #5
 8008a20:	bd10      	pop	{r4, pc}

08008a22 <prvCopyDataToQueue>:
{
 8008a22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008a24:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008a26:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
 8008a28:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008a2a:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008a2c:	b952      	cbnz	r2, 8008a44 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008a2e:	6807      	ldr	r7, [r0, #0]
 8008a30:	bb47      	cbnz	r7, 8008a84 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008a32:	6880      	ldr	r0, [r0, #8]
 8008a34:	f001 f9d4 	bl	8009de0 <xTaskPriorityDisinherit>
 8008a38:	4605      	mov	r5, r0
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008a3a:	60a7      	str	r7, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008a3c:	3601      	adds	r6, #1
}
 8008a3e:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008a40:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008a42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008a44:	b965      	cbnz	r5, 8008a60 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008a46:	6840      	ldr	r0, [r0, #4]
 8008a48:	f014 f832 	bl	801cab0 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008a4c:	6863      	ldr	r3, [r4, #4]
 8008a4e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008a50:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008a52:	68a2      	ldr	r2, [r4, #8]
 8008a54:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008a56:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008a58:	d3f0      	bcc.n	8008a3c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008a5a:	6823      	ldr	r3, [r4, #0]
 8008a5c:	6063      	str	r3, [r4, #4]
 8008a5e:	e7ed      	b.n	8008a3c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008a60:	68c0      	ldr	r0, [r0, #12]
 8008a62:	f014 f825 	bl	801cab0 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008a66:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008a68:	68e3      	ldr	r3, [r4, #12]
 8008a6a:	4251      	negs	r1, r2
 8008a6c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008a6e:	6822      	ldr	r2, [r4, #0]
 8008a70:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008a72:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008a74:	bf3e      	ittt	cc
 8008a76:	68a3      	ldrcc	r3, [r4, #8]
 8008a78:	185b      	addcc	r3, r3, r1
 8008a7a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008a7c:	2d02      	cmp	r5, #2
 8008a7e:	d101      	bne.n	8008a84 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008a80:	b116      	cbz	r6, 8008a88 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008a82:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008a84:	2500      	movs	r5, #0
 8008a86:	e7d9      	b.n	8008a3c <prvCopyDataToQueue+0x1a>
 8008a88:	4635      	mov	r5, r6
 8008a8a:	e7d7      	b.n	8008a3c <prvCopyDataToQueue+0x1a>

08008a8c <prvCopyDataFromQueue>:
{
 8008a8c:	4603      	mov	r3, r0
 8008a8e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008a90:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008a92:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008a94:	b162      	cbz	r2, 8008ab0 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008a96:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008a98:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008a9a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008a9c:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008a9e:	60dc      	str	r4, [r3, #12]
}
 8008aa0:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008aa4:	bf24      	itt	cs
 8008aa6:	6819      	ldrcs	r1, [r3, #0]
 8008aa8:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008aaa:	68d9      	ldr	r1, [r3, #12]
 8008aac:	f014 b800 	b.w	801cab0 <memcpy>
}
 8008ab0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008ab4:	4770      	bx	lr

08008ab6 <prvUnlockQueue>:
{
 8008ab6:	b570      	push	{r4, r5, r6, lr}
 8008ab8:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008aba:	f7ff fe63 	bl	8008784 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008abe:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008ac2:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008ac6:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008ac8:	2d00      	cmp	r5, #0
 8008aca:	dc14      	bgt.n	8008af6 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008acc:	23ff      	movs	r3, #255	; 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008ace:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 8008ad2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008ad6:	f7ff fe75 	bl	80087c4 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008ada:	f7ff fe53 	bl	8008784 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008ade:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
 8008ae2:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008ae4:	2d00      	cmp	r5, #0
 8008ae6:	dc12      	bgt.n	8008b0e <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008ae8:	23ff      	movs	r3, #255	; 0xff
 8008aea:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008aee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008af2:	f7ff be67 	b.w	80087c4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008af6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008af8:	2b00      	cmp	r3, #0
 8008afa:	d0e7      	beq.n	8008acc <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008afc:	4630      	mov	r0, r6
 8008afe:	f001 f88d 	bl	8009c1c <xTaskRemoveFromEventList>
 8008b02:	b108      	cbz	r0, 8008b08 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008b04:	f001 f916 	bl	8009d34 <vTaskMissedYield>
			--cTxLock;
 8008b08:	3d01      	subs	r5, #1
 8008b0a:	b26d      	sxtb	r5, r5
 8008b0c:	e7dc      	b.n	8008ac8 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008b0e:	6923      	ldr	r3, [r4, #16]
 8008b10:	2b00      	cmp	r3, #0
 8008b12:	d0e9      	beq.n	8008ae8 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008b14:	4630      	mov	r0, r6
 8008b16:	f001 f881 	bl	8009c1c <xTaskRemoveFromEventList>
 8008b1a:	b108      	cbz	r0, 8008b20 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008b1c:	f001 f90a 	bl	8009d34 <vTaskMissedYield>
				--cRxLock;
 8008b20:	3d01      	subs	r5, #1
 8008b22:	b26d      	sxtb	r5, r5
 8008b24:	e7de      	b.n	8008ae4 <prvUnlockQueue+0x2e>

08008b26 <xQueueGenericReset>:
{
 8008b26:	b538      	push	{r3, r4, r5, lr}
 8008b28:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008b2a:	4604      	mov	r4, r0
 8008b2c:	b940      	cbnz	r0, 8008b40 <xQueueGenericReset+0x1a>
 8008b2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b32:	f383 8811 	msr	BASEPRI, r3
 8008b36:	f3bf 8f6f 	isb	sy
 8008b3a:	f3bf 8f4f 	dsb	sy
 8008b3e:	e7fe      	b.n	8008b3e <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8008b40:	f7ff fe20 	bl	8008784 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008b44:	6822      	ldr	r2, [r4, #0]
 8008b46:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8008b4a:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008b4c:	434b      	muls	r3, r1
 8008b4e:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008b50:	1a5b      	subs	r3, r3, r1
 8008b52:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008b54:	60a0      	str	r0, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008b56:	2000      	movs	r0, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008b58:	60e3      	str	r3, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8008b5a:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008b5c:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008b5e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008b62:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008b66:	b9a5      	cbnz	r5, 8008b92 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008b68:	6923      	ldr	r3, [r4, #16]
 8008b6a:	b173      	cbz	r3, 8008b8a <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008b6c:	f104 0010 	add.w	r0, r4, #16
 8008b70:	f001 f854 	bl	8009c1c <xTaskRemoveFromEventList>
 8008b74:	b148      	cbz	r0, 8008b8a <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008b76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008b7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008b7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008b82:	f3bf 8f4f 	dsb	sy
 8008b86:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008b8a:	f7ff fe1b 	bl	80087c4 <vPortExitCritical>
}
 8008b8e:	2001      	movs	r0, #1
 8008b90:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008b92:	f104 0010 	add.w	r0, r4, #16
 8008b96:	f7ff fd4b 	bl	8008630 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8008b9a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008b9e:	f7ff fd47 	bl	8008630 <vListInitialise>
 8008ba2:	e7f2      	b.n	8008b8a <xQueueGenericReset+0x64>

08008ba4 <xQueueGenericCreateStatic>:
	{
 8008ba4:	b513      	push	{r0, r1, r4, lr}
 8008ba6:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008ba8:	b940      	cbnz	r0, 8008bbc <xQueueGenericCreateStatic+0x18>
 8008baa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bae:	f383 8811 	msr	BASEPRI, r3
 8008bb2:	f3bf 8f6f 	isb	sy
 8008bb6:	f3bf 8f4f 	dsb	sy
 8008bba:	e7fe      	b.n	8008bba <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8008bbc:	b943      	cbnz	r3, 8008bd0 <xQueueGenericCreateStatic+0x2c>
 8008bbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bc2:	f383 8811 	msr	BASEPRI, r3
 8008bc6:	f3bf 8f6f 	isb	sy
 8008bca:	f3bf 8f4f 	dsb	sy
 8008bce:	e7fe      	b.n	8008bce <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008bd0:	b14a      	cbz	r2, 8008be6 <xQueueGenericCreateStatic+0x42>
 8008bd2:	b991      	cbnz	r1, 8008bfa <xQueueGenericCreateStatic+0x56>
 8008bd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bd8:	f383 8811 	msr	BASEPRI, r3
 8008bdc:	f3bf 8f6f 	isb	sy
 8008be0:	f3bf 8f4f 	dsb	sy
 8008be4:	e7fe      	b.n	8008be4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008be6:	b141      	cbz	r1, 8008bfa <xQueueGenericCreateStatic+0x56>
 8008be8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bec:	f383 8811 	msr	BASEPRI, r3
 8008bf0:	f3bf 8f6f 	isb	sy
 8008bf4:	f3bf 8f4f 	dsb	sy
 8008bf8:	e7fe      	b.n	8008bf8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008bfa:	2350      	movs	r3, #80	; 0x50
 8008bfc:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008bfe:	9b01      	ldr	r3, [sp, #4]
 8008c00:	2b50      	cmp	r3, #80	; 0x50
 8008c02:	d008      	beq.n	8008c16 <xQueueGenericCreateStatic+0x72>
 8008c04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c08:	f383 8811 	msr	BASEPRI, r3
 8008c0c:	f3bf 8f6f 	isb	sy
 8008c10:	f3bf 8f4f 	dsb	sy
 8008c14:	e7fe      	b.n	8008c14 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008c16:	2900      	cmp	r1, #0
 8008c18:	bf08      	it	eq
 8008c1a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008c1c:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008c1e:	2301      	movs	r3, #1
 8008c20:	6022      	str	r2, [r4, #0]
 8008c22:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 8008c26:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008c2a:	4619      	mov	r1, r3
 8008c2c:	4620      	mov	r0, r4
 8008c2e:	f7ff ff7a 	bl	8008b26 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008c32:	f89d 3010 	ldrb.w	r3, [sp, #16]
	}
 8008c36:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8008c38:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8008c3c:	b002      	add	sp, #8
 8008c3e:	bd10      	pop	{r4, pc}

08008c40 <xQueueGenericCreate>:
	{
 8008c40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008c42:	460d      	mov	r5, r1
 8008c44:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008c46:	4606      	mov	r6, r0
 8008c48:	b940      	cbnz	r0, 8008c5c <xQueueGenericCreate+0x1c>
 8008c4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c4e:	f383 8811 	msr	BASEPRI, r3
 8008c52:	f3bf 8f6f 	isb	sy
 8008c56:	f3bf 8f4f 	dsb	sy
 8008c5a:	e7fe      	b.n	8008c5a <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008c5c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008c5e:	3050      	adds	r0, #80	; 0x50
 8008c60:	f7ff fc10 	bl	8008484 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008c64:	4604      	mov	r4, r0
 8008c66:	b170      	cbz	r0, 8008c86 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008c68:	2300      	movs	r3, #0
 8008c6a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008c6e:	b165      	cbz	r5, 8008c8a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008c70:	f100 0350 	add.w	r3, r0, #80	; 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008c74:	2101      	movs	r1, #1
 8008c76:	4620      	mov	r0, r4
 8008c78:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008c7a:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008c7e:	f7ff ff52 	bl	8008b26 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008c82:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8008c86:	4620      	mov	r0, r4
 8008c88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008c8a:	4603      	mov	r3, r0
 8008c8c:	e7f2      	b.n	8008c74 <xQueueGenericCreate+0x34>

08008c8e <xQueueCreateCountingSemaphoreStatic>:
	{
 8008c8e:	b513      	push	{r0, r1, r4, lr}
 8008c90:	4613      	mov	r3, r2
 8008c92:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008c94:	b940      	cbnz	r0, 8008ca8 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8008c96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c9a:	f383 8811 	msr	BASEPRI, r3
 8008c9e:	f3bf 8f6f 	isb	sy
 8008ca2:	f3bf 8f4f 	dsb	sy
 8008ca6:	e7fe      	b.n	8008ca6 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008ca8:	4288      	cmp	r0, r1
 8008caa:	d208      	bcs.n	8008cbe <xQueueCreateCountingSemaphoreStatic+0x30>
 8008cac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cb0:	f383 8811 	msr	BASEPRI, r3
 8008cb4:	f3bf 8f6f 	isb	sy
 8008cb8:	f3bf 8f4f 	dsb	sy
 8008cbc:	e7fe      	b.n	8008cbc <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008cbe:	2202      	movs	r2, #2
 8008cc0:	9200      	str	r2, [sp, #0]
 8008cc2:	2200      	movs	r2, #0
 8008cc4:	4611      	mov	r1, r2
 8008cc6:	f7ff ff6d 	bl	8008ba4 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8008cca:	b100      	cbz	r0, 8008cce <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008ccc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008cce:	b002      	add	sp, #8
 8008cd0:	bd10      	pop	{r4, pc}

08008cd2 <xQueueCreateCountingSemaphore>:
	{
 8008cd2:	b510      	push	{r4, lr}
 8008cd4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008cd6:	b940      	cbnz	r0, 8008cea <xQueueCreateCountingSemaphore+0x18>
 8008cd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cdc:	f383 8811 	msr	BASEPRI, r3
 8008ce0:	f3bf 8f6f 	isb	sy
 8008ce4:	f3bf 8f4f 	dsb	sy
 8008ce8:	e7fe      	b.n	8008ce8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008cea:	4288      	cmp	r0, r1
 8008cec:	d208      	bcs.n	8008d00 <xQueueCreateCountingSemaphore+0x2e>
 8008cee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cf2:	f383 8811 	msr	BASEPRI, r3
 8008cf6:	f3bf 8f6f 	isb	sy
 8008cfa:	f3bf 8f4f 	dsb	sy
 8008cfe:	e7fe      	b.n	8008cfe <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008d00:	2202      	movs	r2, #2
 8008d02:	2100      	movs	r1, #0
 8008d04:	f7ff ff9c 	bl	8008c40 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008d08:	b100      	cbz	r0, 8008d0c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008d0a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008d0c:	bd10      	pop	{r4, pc}

08008d0e <xQueueGenericSend>:
{
 8008d0e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008d12:	b085      	sub	sp, #20
 8008d14:	4688      	mov	r8, r1
 8008d16:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008d18:	4604      	mov	r4, r0
{
 8008d1a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 8008d1c:	b940      	cbnz	r0, 8008d30 <xQueueGenericSend+0x22>
 8008d1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d22:	f383 8811 	msr	BASEPRI, r3
 8008d26:	f3bf 8f6f 	isb	sy
 8008d2a:	f3bf 8f4f 	dsb	sy
 8008d2e:	e7fe      	b.n	8008d2e <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008d30:	b951      	cbnz	r1, 8008d48 <xQueueGenericSend+0x3a>
 8008d32:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008d34:	b143      	cbz	r3, 8008d48 <xQueueGenericSend+0x3a>
 8008d36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d3a:	f383 8811 	msr	BASEPRI, r3
 8008d3e:	f3bf 8f6f 	isb	sy
 8008d42:	f3bf 8f4f 	dsb	sy
 8008d46:	e7fe      	b.n	8008d46 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008d48:	2f02      	cmp	r7, #2
 8008d4a:	d10b      	bne.n	8008d64 <xQueueGenericSend+0x56>
 8008d4c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008d4e:	2b01      	cmp	r3, #1
 8008d50:	d008      	beq.n	8008d64 <xQueueGenericSend+0x56>
 8008d52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d56:	f383 8811 	msr	BASEPRI, r3
 8008d5a:	f3bf 8f6f 	isb	sy
 8008d5e:	f3bf 8f4f 	dsb	sy
 8008d62:	e7fe      	b.n	8008d62 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008d64:	f000 ffec 	bl	8009d40 <xTaskGetSchedulerState>
 8008d68:	4606      	mov	r6, r0
 8008d6a:	b950      	cbnz	r0, 8008d82 <xQueueGenericSend+0x74>
 8008d6c:	9b01      	ldr	r3, [sp, #4]
 8008d6e:	b14b      	cbz	r3, 8008d84 <xQueueGenericSend+0x76>
 8008d70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d74:	f383 8811 	msr	BASEPRI, r3
 8008d78:	f3bf 8f6f 	isb	sy
 8008d7c:	f3bf 8f4f 	dsb	sy
 8008d80:	e7fe      	b.n	8008d80 <xQueueGenericSend+0x72>
 8008d82:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008d84:	f04f 0900 	mov.w	r9, #0
 8008d88:	e037      	b.n	8008dfa <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008d8a:	9d01      	ldr	r5, [sp, #4]
 8008d8c:	b91d      	cbnz	r5, 8008d96 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8008d8e:	f7ff fd19 	bl	80087c4 <vPortExitCritical>
			return errQUEUE_FULL;
 8008d92:	2000      	movs	r0, #0
 8008d94:	e052      	b.n	8008e3c <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8008d96:	b916      	cbnz	r6, 8008d9e <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008d98:	a802      	add	r0, sp, #8
 8008d9a:	f000 ff83 	bl	8009ca4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008d9e:	f7ff fd11 	bl	80087c4 <vPortExitCritical>
		vTaskSuspendAll();
 8008da2:	f000 fd0f 	bl	80097c4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008da6:	f7ff fced 	bl	8008784 <vPortEnterCritical>
 8008daa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008dae:	2bff      	cmp	r3, #255	; 0xff
 8008db0:	d101      	bne.n	8008db6 <xQueueGenericSend+0xa8>
 8008db2:	f884 9044 	strb.w	r9, [r4, #68]	; 0x44
 8008db6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008dba:	2bff      	cmp	r3, #255	; 0xff
 8008dbc:	d101      	bne.n	8008dc2 <xQueueGenericSend+0xb4>
 8008dbe:	f884 9045 	strb.w	r9, [r4, #69]	; 0x45
 8008dc2:	f7ff fcff 	bl	80087c4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008dc6:	a901      	add	r1, sp, #4
 8008dc8:	a802      	add	r0, sp, #8
 8008dca:	f000 ff77 	bl	8009cbc <xTaskCheckForTimeOut>
 8008dce:	2800      	cmp	r0, #0
 8008dd0:	d14a      	bne.n	8008e68 <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008dd2:	f7ff fcd7 	bl	8008784 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008dd6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008dd8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008dda:	429a      	cmp	r2, r3
 8008ddc:	d131      	bne.n	8008e42 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008dde:	f7ff fcf1 	bl	80087c4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008de2:	9901      	ldr	r1, [sp, #4]
 8008de4:	f104 0010 	add.w	r0, r4, #16
 8008de8:	f000 fee0 	bl	8009bac <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008dec:	4620      	mov	r0, r4
 8008dee:	f7ff fe62 	bl	8008ab6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008df2:	f000 fd8b 	bl	800990c <xTaskResumeAll>
 8008df6:	b360      	cbz	r0, 8008e52 <xQueueGenericSend+0x144>
 8008df8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008dfa:	f7ff fcc3 	bl	8008784 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008dfe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008e00:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008e02:	429a      	cmp	r2, r3
 8008e04:	d301      	bcc.n	8008e0a <xQueueGenericSend+0xfc>
 8008e06:	2f02      	cmp	r7, #2
 8008e08:	d1bf      	bne.n	8008d8a <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008e0a:	463a      	mov	r2, r7
 8008e0c:	4641      	mov	r1, r8
 8008e0e:	4620      	mov	r0, r4
 8008e10:	f7ff fe07 	bl	8008a22 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008e14:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008e16:	b11b      	cbz	r3, 8008e20 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008e18:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008e1c:	f000 fefe 	bl	8009c1c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008e20:	b148      	cbz	r0, 8008e36 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8008e22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008e2e:	f3bf 8f4f 	dsb	sy
 8008e32:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008e36:	f7ff fcc5 	bl	80087c4 <vPortExitCritical>
				return pdPASS;
 8008e3a:	2001      	movs	r0, #1
}
 8008e3c:	b005      	add	sp, #20
 8008e3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8008e42:	f7ff fcbf 	bl	80087c4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008e46:	4620      	mov	r0, r4
 8008e48:	f7ff fe35 	bl	8008ab6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008e4c:	f000 fd5e 	bl	800990c <xTaskResumeAll>
 8008e50:	e7d2      	b.n	8008df8 <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8008e52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008e5e:	f3bf 8f4f 	dsb	sy
 8008e62:	f3bf 8f6f 	isb	sy
 8008e66:	e7c7      	b.n	8008df8 <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8008e68:	4620      	mov	r0, r4
 8008e6a:	f7ff fe24 	bl	8008ab6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008e6e:	f000 fd4d 	bl	800990c <xTaskResumeAll>
 8008e72:	e78e      	b.n	8008d92 <xQueueGenericSend+0x84>

08008e74 <xQueueGenericSendFromISR>:
{
 8008e74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008e78:	4689      	mov	r9, r1
 8008e7a:	4690      	mov	r8, r2
 8008e7c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008e7e:	4604      	mov	r4, r0
 8008e80:	b940      	cbnz	r0, 8008e94 <xQueueGenericSendFromISR+0x20>
 8008e82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e86:	f383 8811 	msr	BASEPRI, r3
 8008e8a:	f3bf 8f6f 	isb	sy
 8008e8e:	f3bf 8f4f 	dsb	sy
 8008e92:	e7fe      	b.n	8008e92 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008e94:	b951      	cbnz	r1, 8008eac <xQueueGenericSendFromISR+0x38>
 8008e96:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008e98:	b143      	cbz	r3, 8008eac <xQueueGenericSendFromISR+0x38>
 8008e9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e9e:	f383 8811 	msr	BASEPRI, r3
 8008ea2:	f3bf 8f6f 	isb	sy
 8008ea6:	f3bf 8f4f 	dsb	sy
 8008eaa:	e7fe      	b.n	8008eaa <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008eac:	2f02      	cmp	r7, #2
 8008eae:	d10b      	bne.n	8008ec8 <xQueueGenericSendFromISR+0x54>
 8008eb0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008eb2:	2b01      	cmp	r3, #1
 8008eb4:	d008      	beq.n	8008ec8 <xQueueGenericSendFromISR+0x54>
 8008eb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008eba:	f383 8811 	msr	BASEPRI, r3
 8008ebe:	f3bf 8f6f 	isb	sy
 8008ec2:	f3bf 8f4f 	dsb	sy
 8008ec6:	e7fe      	b.n	8008ec6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008ec8:	f7ff fd72 	bl	80089b0 <vPortValidateInterruptPriority>
	__asm volatile
 8008ecc:	f3ef 8611 	mrs	r6, BASEPRI
 8008ed0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ed4:	f383 8811 	msr	BASEPRI, r3
 8008ed8:	f3bf 8f6f 	isb	sy
 8008edc:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008ee0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008ee2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008ee4:	429a      	cmp	r2, r3
 8008ee6:	d301      	bcc.n	8008eec <xQueueGenericSendFromISR+0x78>
 8008ee8:	2f02      	cmp	r7, #2
 8008eea:	d123      	bne.n	8008f34 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008eec:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008ef0:	463a      	mov	r2, r7
 8008ef2:	4649      	mov	r1, r9
 8008ef4:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 8008ef6:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008ef8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008efa:	f7ff fd92 	bl	8008a22 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008efe:	1c6b      	adds	r3, r5, #1
 8008f00:	d113      	bne.n	8008f2a <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008f02:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008f04:	b90b      	cbnz	r3, 8008f0a <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8008f06:	2001      	movs	r0, #1
 8008f08:	e00b      	b.n	8008f22 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f0a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008f0e:	f000 fe85 	bl	8009c1c <xTaskRemoveFromEventList>
 8008f12:	2800      	cmp	r0, #0
 8008f14:	d0f7      	beq.n	8008f06 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8008f16:	f1b8 0f00 	cmp.w	r8, #0
 8008f1a:	d0f4      	beq.n	8008f06 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008f1c:	2001      	movs	r0, #1
 8008f1e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008f22:	f386 8811 	msr	BASEPRI, r6
}
 8008f26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008f2a:	3501      	adds	r5, #1
 8008f2c:	b26d      	sxtb	r5, r5
 8008f2e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008f32:	e7e8      	b.n	8008f06 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8008f34:	2000      	movs	r0, #0
 8008f36:	e7f4      	b.n	8008f22 <xQueueGenericSendFromISR+0xae>

08008f38 <xQueueGiveFromISR>:
{
 8008f38:	b570      	push	{r4, r5, r6, lr}
 8008f3a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008f3c:	4604      	mov	r4, r0
 8008f3e:	b940      	cbnz	r0, 8008f52 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008f40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f44:	f383 8811 	msr	BASEPRI, r3
 8008f48:	f3bf 8f6f 	isb	sy
 8008f4c:	f3bf 8f4f 	dsb	sy
 8008f50:	e7fe      	b.n	8008f50 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008f52:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008f54:	b143      	cbz	r3, 8008f68 <xQueueGiveFromISR+0x30>
 8008f56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f5a:	f383 8811 	msr	BASEPRI, r3
 8008f5e:	f3bf 8f6f 	isb	sy
 8008f62:	f3bf 8f4f 	dsb	sy
 8008f66:	e7fe      	b.n	8008f66 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008f68:	6803      	ldr	r3, [r0, #0]
 8008f6a:	b953      	cbnz	r3, 8008f82 <xQueueGiveFromISR+0x4a>
 8008f6c:	6883      	ldr	r3, [r0, #8]
 8008f6e:	b143      	cbz	r3, 8008f82 <xQueueGiveFromISR+0x4a>
 8008f70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f74:	f383 8811 	msr	BASEPRI, r3
 8008f78:	f3bf 8f6f 	isb	sy
 8008f7c:	f3bf 8f4f 	dsb	sy
 8008f80:	e7fe      	b.n	8008f80 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008f82:	f7ff fd15 	bl	80089b0 <vPortValidateInterruptPriority>
	__asm volatile
 8008f86:	f3ef 8611 	mrs	r6, BASEPRI
 8008f8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f8e:	f383 8811 	msr	BASEPRI, r3
 8008f92:	f3bf 8f6f 	isb	sy
 8008f96:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f9a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008f9c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008f9e:	4293      	cmp	r3, r2
 8008fa0:	d91c      	bls.n	8008fdc <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008fa2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008fa6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008fa8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008faa:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008fac:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8008fae:	d110      	bne.n	8008fd2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008fb0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008fb2:	b90b      	cbnz	r3, 8008fb8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008fb4:	2001      	movs	r0, #1
 8008fb6:	e009      	b.n	8008fcc <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008fb8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008fbc:	f000 fe2e 	bl	8009c1c <xTaskRemoveFromEventList>
 8008fc0:	2800      	cmp	r0, #0
 8008fc2:	d0f7      	beq.n	8008fb4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008fc4:	2d00      	cmp	r5, #0
 8008fc6:	d0f5      	beq.n	8008fb4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008fc8:	2001      	movs	r0, #1
 8008fca:	6028      	str	r0, [r5, #0]
	__asm volatile
 8008fcc:	f386 8811 	msr	BASEPRI, r6
}
 8008fd0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008fd2:	3301      	adds	r3, #1
 8008fd4:	b25b      	sxtb	r3, r3
 8008fd6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008fda:	e7eb      	b.n	8008fb4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8008fdc:	2000      	movs	r0, #0
 8008fde:	e7f5      	b.n	8008fcc <xQueueGiveFromISR+0x94>

08008fe0 <xQueueReceive>:
{
 8008fe0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008fe4:	460f      	mov	r7, r1
	configASSERT( ( pxQueue ) );
 8008fe6:	4604      	mov	r4, r0
{
 8008fe8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008fea:	b940      	cbnz	r0, 8008ffe <xQueueReceive+0x1e>
	__asm volatile
 8008fec:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ff0:	f383 8811 	msr	BASEPRI, r3
 8008ff4:	f3bf 8f6f 	isb	sy
 8008ff8:	f3bf 8f4f 	dsb	sy
 8008ffc:	e7fe      	b.n	8008ffc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008ffe:	b951      	cbnz	r1, 8009016 <xQueueReceive+0x36>
 8009000:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009002:	b143      	cbz	r3, 8009016 <xQueueReceive+0x36>
 8009004:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009008:	f383 8811 	msr	BASEPRI, r3
 800900c:	f3bf 8f6f 	isb	sy
 8009010:	f3bf 8f4f 	dsb	sy
 8009014:	e7fe      	b.n	8009014 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009016:	f000 fe93 	bl	8009d40 <xTaskGetSchedulerState>
 800901a:	4606      	mov	r6, r0
 800901c:	b950      	cbnz	r0, 8009034 <xQueueReceive+0x54>
 800901e:	9b01      	ldr	r3, [sp, #4]
 8009020:	b14b      	cbz	r3, 8009036 <xQueueReceive+0x56>
 8009022:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009026:	f383 8811 	msr	BASEPRI, r3
 800902a:	f3bf 8f6f 	isb	sy
 800902e:	f3bf 8f4f 	dsb	sy
 8009032:	e7fe      	b.n	8009032 <xQueueReceive+0x52>
 8009034:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009036:	f04f 0800 	mov.w	r8, #0
 800903a:	e03d      	b.n	80090b8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800903c:	9d01      	ldr	r5, [sp, #4]
 800903e:	b91d      	cbnz	r5, 8009048 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009040:	f7ff fbc0 	bl	80087c4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009044:	2000      	movs	r0, #0
 8009046:	e056      	b.n	80090f6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009048:	b916      	cbnz	r6, 8009050 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800904a:	a802      	add	r0, sp, #8
 800904c:	f000 fe2a 	bl	8009ca4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009050:	f7ff fbb8 	bl	80087c4 <vPortExitCritical>
		vTaskSuspendAll();
 8009054:	f000 fbb6 	bl	80097c4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009058:	f7ff fb94 	bl	8008784 <vPortEnterCritical>
 800905c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009060:	2bff      	cmp	r3, #255	; 0xff
 8009062:	d101      	bne.n	8009068 <xQueueReceive+0x88>
 8009064:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
 8009068:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800906c:	2bff      	cmp	r3, #255	; 0xff
 800906e:	d101      	bne.n	8009074 <xQueueReceive+0x94>
 8009070:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
 8009074:	f7ff fba6 	bl	80087c4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009078:	a901      	add	r1, sp, #4
 800907a:	a802      	add	r0, sp, #8
 800907c:	f000 fe1e 	bl	8009cbc <xTaskCheckForTimeOut>
 8009080:	2800      	cmp	r0, #0
 8009082:	d141      	bne.n	8009108 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009084:	4620      	mov	r0, r4
 8009086:	f7ff fcc1 	bl	8008a0c <prvIsQueueEmpty>
 800908a:	b3b8      	cbz	r0, 80090fc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800908c:	9901      	ldr	r1, [sp, #4]
 800908e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009092:	f000 fd8b 	bl	8009bac <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009096:	4620      	mov	r0, r4
 8009098:	f7ff fd0d 	bl	8008ab6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800909c:	f000 fc36 	bl	800990c <xTaskResumeAll>
 80090a0:	b948      	cbnz	r0, 80090b6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80090a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80090a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80090aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80090ae:	f3bf 8f4f 	dsb	sy
 80090b2:	f3bf 8f6f 	isb	sy
 80090b6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80090b8:	f7ff fb64 	bl	8008784 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80090bc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80090be:	2d00      	cmp	r5, #0
 80090c0:	d0bc      	beq.n	800903c <xQueueReceive+0x5c>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80090c2:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80090c4:	4639      	mov	r1, r7
 80090c6:	4620      	mov	r0, r4
 80090c8:	f7ff fce0 	bl	8008a8c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80090cc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80090ce:	6923      	ldr	r3, [r4, #16]
 80090d0:	b173      	cbz	r3, 80090f0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80090d2:	f104 0010 	add.w	r0, r4, #16
 80090d6:	f000 fda1 	bl	8009c1c <xTaskRemoveFromEventList>
 80090da:	b148      	cbz	r0, 80090f0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 80090dc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80090e0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80090e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80090e8:	f3bf 8f4f 	dsb	sy
 80090ec:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80090f0:	f7ff fb68 	bl	80087c4 <vPortExitCritical>
				return pdPASS;
 80090f4:	2001      	movs	r0, #1
}
 80090f6:	b004      	add	sp, #16
 80090f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80090fc:	4620      	mov	r0, r4
 80090fe:	f7ff fcda 	bl	8008ab6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009102:	f000 fc03 	bl	800990c <xTaskResumeAll>
 8009106:	e7d6      	b.n	80090b6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009108:	4620      	mov	r0, r4
 800910a:	f7ff fcd4 	bl	8008ab6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800910e:	f000 fbfd 	bl	800990c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009112:	4620      	mov	r0, r4
 8009114:	f7ff fc7a 	bl	8008a0c <prvIsQueueEmpty>
 8009118:	2800      	cmp	r0, #0
 800911a:	d0cc      	beq.n	80090b6 <xQueueReceive+0xd6>
 800911c:	e792      	b.n	8009044 <xQueueReceive+0x64>

0800911e <xQueueSemaphoreTake>:
{
 800911e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009120:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009122:	4604      	mov	r4, r0
{
 8009124:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009126:	b940      	cbnz	r0, 800913a <xQueueSemaphoreTake+0x1c>
 8009128:	f04f 0350 	mov.w	r3, #80	; 0x50
 800912c:	f383 8811 	msr	BASEPRI, r3
 8009130:	f3bf 8f6f 	isb	sy
 8009134:	f3bf 8f4f 	dsb	sy
 8009138:	e7fe      	b.n	8009138 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800913a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800913c:	b145      	cbz	r5, 8009150 <xQueueSemaphoreTake+0x32>
 800913e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009142:	f383 8811 	msr	BASEPRI, r3
 8009146:	f3bf 8f6f 	isb	sy
 800914a:	f3bf 8f4f 	dsb	sy
 800914e:	e7fe      	b.n	800914e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009150:	f000 fdf6 	bl	8009d40 <xTaskGetSchedulerState>
 8009154:	4606      	mov	r6, r0
 8009156:	b950      	cbnz	r0, 800916e <xQueueSemaphoreTake+0x50>
 8009158:	9b01      	ldr	r3, [sp, #4]
 800915a:	b15b      	cbz	r3, 8009174 <xQueueSemaphoreTake+0x56>
 800915c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009160:	f383 8811 	msr	BASEPRI, r3
 8009164:	f3bf 8f6f 	isb	sy
 8009168:	f3bf 8f4f 	dsb	sy
 800916c:	e7fe      	b.n	800916c <xQueueSemaphoreTake+0x4e>
 800916e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009170:	2700      	movs	r7, #0
 8009172:	e053      	b.n	800921c <xQueueSemaphoreTake+0xfe>
 8009174:	4605      	mov	r5, r0
 8009176:	e7fb      	b.n	8009170 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009178:	9b01      	ldr	r3, [sp, #4]
 800917a:	b963      	cbnz	r3, 8009196 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800917c:	b145      	cbz	r5, 8009190 <xQueueSemaphoreTake+0x72>
 800917e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009182:	f383 8811 	msr	BASEPRI, r3
 8009186:	f3bf 8f6f 	isb	sy
 800918a:	f3bf 8f4f 	dsb	sy
 800918e:	e7fe      	b.n	800918e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009190:	f7ff fb18 	bl	80087c4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009194:	e062      	b.n	800925c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009196:	b916      	cbnz	r6, 800919e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009198:	a802      	add	r0, sp, #8
 800919a:	f000 fd83 	bl	8009ca4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800919e:	f7ff fb11 	bl	80087c4 <vPortExitCritical>
		vTaskSuspendAll();
 80091a2:	f000 fb0f 	bl	80097c4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80091a6:	f7ff faed 	bl	8008784 <vPortEnterCritical>
 80091aa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80091ae:	2bff      	cmp	r3, #255	; 0xff
 80091b0:	d101      	bne.n	80091b6 <xQueueSemaphoreTake+0x98>
 80091b2:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
 80091b6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80091ba:	2bff      	cmp	r3, #255	; 0xff
 80091bc:	d101      	bne.n	80091c2 <xQueueSemaphoreTake+0xa4>
 80091be:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80091c2:	f7ff faff 	bl	80087c4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80091c6:	a901      	add	r1, sp, #4
 80091c8:	a802      	add	r0, sp, #8
 80091ca:	f000 fd77 	bl	8009cbc <xTaskCheckForTimeOut>
 80091ce:	2800      	cmp	r0, #0
 80091d0:	d14d      	bne.n	800926e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80091d2:	4620      	mov	r0, r4
 80091d4:	f7ff fc1a 	bl	8008a0c <prvIsQueueEmpty>
 80091d8:	2800      	cmp	r0, #0
 80091da:	d042      	beq.n	8009262 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80091dc:	6823      	ldr	r3, [r4, #0]
 80091de:	b93b      	cbnz	r3, 80091f0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80091e0:	f7ff fad0 	bl	8008784 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80091e4:	68a0      	ldr	r0, [r4, #8]
 80091e6:	f000 fdbb 	bl	8009d60 <xTaskPriorityInherit>
 80091ea:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80091ec:	f7ff faea 	bl	80087c4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80091f0:	9901      	ldr	r1, [sp, #4]
 80091f2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80091f6:	f000 fcd9 	bl	8009bac <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80091fa:	4620      	mov	r0, r4
 80091fc:	f7ff fc5b 	bl	8008ab6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009200:	f000 fb84 	bl	800990c <xTaskResumeAll>
 8009204:	b948      	cbnz	r0, 800921a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009206:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800920a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800920e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009212:	f3bf 8f4f 	dsb	sy
 8009216:	f3bf 8f6f 	isb	sy
 800921a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800921c:	f7ff fab2 	bl	8008784 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009220:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009222:	2b00      	cmp	r3, #0
 8009224:	d0a8      	beq.n	8009178 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009226:	3b01      	subs	r3, #1
 8009228:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800922a:	6823      	ldr	r3, [r4, #0]
 800922c:	b913      	cbnz	r3, 8009234 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800922e:	f000 fe6d 	bl	8009f0c <pvTaskIncrementMutexHeldCount>
 8009232:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009234:	6923      	ldr	r3, [r4, #16]
 8009236:	b173      	cbz	r3, 8009256 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009238:	f104 0010 	add.w	r0, r4, #16
 800923c:	f000 fcee 	bl	8009c1c <xTaskRemoveFromEventList>
 8009240:	b148      	cbz	r0, 8009256 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009242:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009246:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800924a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800924e:	f3bf 8f4f 	dsb	sy
 8009252:	f3bf 8f6f 	isb	sy
				return pdPASS;
 8009256:	2501      	movs	r5, #1
				taskEXIT_CRITICAL();
 8009258:	f7ff fab4 	bl	80087c4 <vPortExitCritical>
}
 800925c:	4628      	mov	r0, r5
 800925e:	b005      	add	sp, #20
 8009260:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009262:	4620      	mov	r0, r4
 8009264:	f7ff fc27 	bl	8008ab6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009268:	f000 fb50 	bl	800990c <xTaskResumeAll>
 800926c:	e7d5      	b.n	800921a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800926e:	4620      	mov	r0, r4
 8009270:	f7ff fc21 	bl	8008ab6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009274:	f000 fb4a 	bl	800990c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009278:	4620      	mov	r0, r4
 800927a:	f7ff fbc7 	bl	8008a0c <prvIsQueueEmpty>
 800927e:	2800      	cmp	r0, #0
 8009280:	d0cb      	beq.n	800921a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009282:	2d00      	cmp	r5, #0
 8009284:	d0ea      	beq.n	800925c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009286:	f7ff fa7d 	bl	8008784 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800928a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800928c:	b119      	cbz	r1, 8009296 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800928e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009290:	6819      	ldr	r1, [r3, #0]
 8009292:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009296:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
 8009298:	2500      	movs	r5, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800929a:	f000 fde5 	bl	8009e68 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800929e:	f7ff fa91 	bl	80087c4 <vPortExitCritical>
 80092a2:	e7db      	b.n	800925c <xQueueSemaphoreTake+0x13e>

080092a4 <xQueueReceiveFromISR>:
{
 80092a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80092a8:	4689      	mov	r9, r1
 80092aa:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80092ac:	4605      	mov	r5, r0
 80092ae:	b940      	cbnz	r0, 80092c2 <xQueueReceiveFromISR+0x1e>
 80092b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092b4:	f383 8811 	msr	BASEPRI, r3
 80092b8:	f3bf 8f6f 	isb	sy
 80092bc:	f3bf 8f4f 	dsb	sy
 80092c0:	e7fe      	b.n	80092c0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80092c2:	b951      	cbnz	r1, 80092da <xQueueReceiveFromISR+0x36>
 80092c4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80092c6:	b143      	cbz	r3, 80092da <xQueueReceiveFromISR+0x36>
 80092c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092cc:	f383 8811 	msr	BASEPRI, r3
 80092d0:	f3bf 8f6f 	isb	sy
 80092d4:	f3bf 8f4f 	dsb	sy
 80092d8:	e7fe      	b.n	80092d8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80092da:	f7ff fb69 	bl	80089b0 <vPortValidateInterruptPriority>
	__asm volatile
 80092de:	f3ef 8711 	mrs	r7, BASEPRI
 80092e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092e6:	f383 8811 	msr	BASEPRI, r3
 80092ea:	f3bf 8f6f 	isb	sy
 80092ee:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80092f2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80092f4:	b31c      	cbz	r4, 800933e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80092f6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80092fa:	4649      	mov	r1, r9
 80092fc:	4628      	mov	r0, r5
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80092fe:	3c01      	subs	r4, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 8009300:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009302:	f7ff fbc3 	bl	8008a8c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009306:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8009308:	1c73      	adds	r3, r6, #1
 800930a:	d113      	bne.n	8009334 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800930c:	692b      	ldr	r3, [r5, #16]
 800930e:	b90b      	cbnz	r3, 8009314 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009310:	2001      	movs	r0, #1
 8009312:	e00b      	b.n	800932c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009314:	f105 0010 	add.w	r0, r5, #16
 8009318:	f000 fc80 	bl	8009c1c <xTaskRemoveFromEventList>
 800931c:	2800      	cmp	r0, #0
 800931e:	d0f7      	beq.n	8009310 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009320:	f1b8 0f00 	cmp.w	r8, #0
 8009324:	d0f4      	beq.n	8009310 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009326:	2001      	movs	r0, #1
 8009328:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800932c:	f387 8811 	msr	BASEPRI, r7
}
 8009330:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009334:	3601      	adds	r6, #1
 8009336:	b276      	sxtb	r6, r6
 8009338:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800933c:	e7e8      	b.n	8009310 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800933e:	4620      	mov	r0, r4
 8009340:	e7f4      	b.n	800932c <xQueueReceiveFromISR+0x88>
	...

08009344 <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009344:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009346:	4a07      	ldr	r2, [pc, #28]	; (8009364 <vQueueAddToRegistry+0x20>)
	{
 8009348:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800934a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800934e:	b92c      	cbnz	r4, 800935c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009350:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009354:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009358:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800935a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800935c:	3301      	adds	r3, #1
 800935e:	2b08      	cmp	r3, #8
 8009360:	d1f3      	bne.n	800934a <vQueueAddToRegistry+0x6>
 8009362:	e7fa      	b.n	800935a <vQueueAddToRegistry+0x16>
 8009364:	240082d8 	.word	0x240082d8

08009368 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009368:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800936a:	4a08      	ldr	r2, [pc, #32]	; (800938c <vQueueUnregisterQueue+0x24>)
	{
 800936c:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800936e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009372:	684c      	ldr	r4, [r1, #4]
 8009374:	4284      	cmp	r4, r0
 8009376:	d104      	bne.n	8009382 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009378:	2000      	movs	r0, #0
 800937a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800937e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009380:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009382:	3301      	adds	r3, #1
 8009384:	2b08      	cmp	r3, #8
 8009386:	d1f2      	bne.n	800936e <vQueueUnregisterQueue+0x6>
 8009388:	e7fa      	b.n	8009380 <vQueueUnregisterQueue+0x18>
 800938a:	bf00      	nop
 800938c:	240082d8 	.word	0x240082d8

08009390 <vQueueDelete>:
{
 8009390:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009392:	4604      	mov	r4, r0
 8009394:	b940      	cbnz	r0, 80093a8 <vQueueDelete+0x18>
	__asm volatile
 8009396:	f04f 0350 	mov.w	r3, #80	; 0x50
 800939a:	f383 8811 	msr	BASEPRI, r3
 800939e:	f3bf 8f6f 	isb	sy
 80093a2:	f3bf 8f4f 	dsb	sy
 80093a6:	e7fe      	b.n	80093a6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 80093a8:	f7ff ffde 	bl	8009368 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80093ac:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80093b0:	b923      	cbnz	r3, 80093bc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 80093b2:	4620      	mov	r0, r4
}
 80093b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80093b8:	f7ff b8fc 	b.w	80085b4 <vPortFree>
}
 80093bc:	bd10      	pop	{r4, pc}

080093be <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80093be:	b570      	push	{r4, r5, r6, lr}
 80093c0:	4604      	mov	r4, r0
 80093c2:	460d      	mov	r5, r1
 80093c4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80093c6:	f7ff f9dd 	bl	8008784 <vPortEnterCritical>
 80093ca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80093ce:	2bff      	cmp	r3, #255	; 0xff
 80093d0:	d102      	bne.n	80093d8 <vQueueWaitForMessageRestricted+0x1a>
 80093d2:	2300      	movs	r3, #0
 80093d4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80093d8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80093dc:	2bff      	cmp	r3, #255	; 0xff
 80093de:	d102      	bne.n	80093e6 <vQueueWaitForMessageRestricted+0x28>
 80093e0:	2300      	movs	r3, #0
 80093e2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80093e6:	f7ff f9ed 	bl	80087c4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80093ea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80093ec:	b92b      	cbnz	r3, 80093fa <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80093ee:	4632      	mov	r2, r6
 80093f0:	4629      	mov	r1, r5
 80093f2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80093f6:	f000 fbf3 	bl	8009be0 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80093fa:	4620      	mov	r0, r4
	}
 80093fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009400:	f7ff bb59 	b.w	8008ab6 <prvUnlockQueue>

08009404 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009404:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009408:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800940a:	f7ff f9bb 	bl	8008784 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800940e:	4b2f      	ldr	r3, [pc, #188]	; (80094cc <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8009410:	4e2f      	ldr	r6, [pc, #188]	; (80094d0 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8009412:	681a      	ldr	r2, [r3, #0]
 8009414:	4f2f      	ldr	r7, [pc, #188]	; (80094d4 <prvAddNewTaskToReadyList+0xd0>)
 8009416:	3201      	adds	r2, #1
 8009418:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800941a:	6835      	ldr	r5, [r6, #0]
 800941c:	2d00      	cmp	r5, #0
 800941e:	d14a      	bne.n	80094b6 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009420:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009422:	681b      	ldr	r3, [r3, #0]
 8009424:	2b01      	cmp	r3, #1
 8009426:	d11f      	bne.n	8009468 <prvAddNewTaskToReadyList+0x64>
 8009428:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800942a:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800942c:	4640      	mov	r0, r8
 800942e:	f7ff f8ff 	bl	8008630 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009432:	f108 0814 	add.w	r8, r8, #20
 8009436:	2d38      	cmp	r5, #56	; 0x38
 8009438:	d1f7      	bne.n	800942a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800943a:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 80094fc <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 800943e:	4d26      	ldr	r5, [pc, #152]	; (80094d8 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8009440:	4640      	mov	r0, r8
 8009442:	f7ff f8f5 	bl	8008630 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009446:	4628      	mov	r0, r5
 8009448:	f7ff f8f2 	bl	8008630 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800944c:	4823      	ldr	r0, [pc, #140]	; (80094dc <prvAddNewTaskToReadyList+0xd8>)
 800944e:	f7ff f8ef 	bl	8008630 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009452:	4823      	ldr	r0, [pc, #140]	; (80094e0 <prvAddNewTaskToReadyList+0xdc>)
 8009454:	f7ff f8ec 	bl	8008630 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009458:	4822      	ldr	r0, [pc, #136]	; (80094e4 <prvAddNewTaskToReadyList+0xe0>)
 800945a:	f7ff f8e9 	bl	8008630 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800945e:	4b22      	ldr	r3, [pc, #136]	; (80094e8 <prvAddNewTaskToReadyList+0xe4>)
 8009460:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009464:	4b21      	ldr	r3, [pc, #132]	; (80094ec <prvAddNewTaskToReadyList+0xe8>)
 8009466:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009468:	4a21      	ldr	r2, [pc, #132]	; (80094f0 <prvAddNewTaskToReadyList+0xec>)
 800946a:	6813      	ldr	r3, [r2, #0]
 800946c:	3301      	adds	r3, #1
 800946e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009470:	4a20      	ldr	r2, [pc, #128]	; (80094f4 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009472:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009474:	6811      	ldr	r1, [r2, #0]
 8009476:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009478:	428b      	cmp	r3, r1
 800947a:	d900      	bls.n	800947e <prvAddNewTaskToReadyList+0x7a>
 800947c:	6013      	str	r3, [r2, #0]
 800947e:	2014      	movs	r0, #20
 8009480:	1d21      	adds	r1, r4, #4
 8009482:	fb00 7003 	mla	r0, r0, r3, r7
 8009486:	f7ff f8e1 	bl	800864c <vListInsertEnd>
	taskEXIT_CRITICAL();
 800948a:	f7ff f99b 	bl	80087c4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800948e:	4b1a      	ldr	r3, [pc, #104]	; (80094f8 <prvAddNewTaskToReadyList+0xf4>)
 8009490:	681b      	ldr	r3, [r3, #0]
 8009492:	b173      	cbz	r3, 80094b2 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009494:	6833      	ldr	r3, [r6, #0]
 8009496:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009498:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800949a:	429a      	cmp	r2, r3
 800949c:	d209      	bcs.n	80094b2 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 800949e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80094a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80094a6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80094aa:	f3bf 8f4f 	dsb	sy
 80094ae:	f3bf 8f6f 	isb	sy
}
 80094b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 80094b6:	4b10      	ldr	r3, [pc, #64]	; (80094f8 <prvAddNewTaskToReadyList+0xf4>)
 80094b8:	681b      	ldr	r3, [r3, #0]
 80094ba:	2b00      	cmp	r3, #0
 80094bc:	d1d4      	bne.n	8009468 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80094be:	6833      	ldr	r3, [r6, #0]
 80094c0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80094c2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80094c4:	429a      	cmp	r2, r3
 80094c6:	d8cf      	bhi.n	8009468 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 80094c8:	6034      	str	r4, [r6, #0]
 80094ca:	e7cd      	b.n	8009468 <prvAddNewTaskToReadyList+0x64>
 80094cc:	24008784 	.word	0x24008784
 80094d0:	24008318 	.word	0x24008318
 80094d4:	24008324 	.word	0x24008324
 80094d8:	240087ac 	.word	0x240087ac
 80094dc:	240087cc 	.word	0x240087cc
 80094e0:	240087f8 	.word	0x240087f8
 80094e4:	240087e4 	.word	0x240087e4
 80094e8:	2400831c 	.word	0x2400831c
 80094ec:	24008320 	.word	0x24008320
 80094f0:	24008790 	.word	0x24008790
 80094f4:	24008794 	.word	0x24008794
 80094f8:	240087e0 	.word	0x240087e0
 80094fc:	24008798 	.word	0x24008798

08009500 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009502:	4b15      	ldr	r3, [pc, #84]	; (8009558 <prvAddCurrentTaskToDelayedList+0x58>)
{
 8009504:	4604      	mov	r4, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009506:	4e15      	ldr	r6, [pc, #84]	; (800955c <prvAddCurrentTaskToDelayedList+0x5c>)
{
 8009508:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 800950a:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800950c:	6830      	ldr	r0, [r6, #0]
 800950e:	3004      	adds	r0, #4
 8009510:	f7ff f8bf 	bl	8008692 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009514:	1c63      	adds	r3, r4, #1
 8009516:	d107      	bne.n	8009528 <prvAddCurrentTaskToDelayedList+0x28>
 8009518:	b137      	cbz	r7, 8009528 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800951a:	6831      	ldr	r1, [r6, #0]
 800951c:	4810      	ldr	r0, [pc, #64]	; (8009560 <prvAddCurrentTaskToDelayedList+0x60>)
 800951e:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009520:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009524:	f7ff b892 	b.w	800864c <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 8009528:	192c      	adds	r4, r5, r4
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800952a:	6833      	ldr	r3, [r6, #0]
 800952c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800952e:	d307      	bcc.n	8009540 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009530:	4b0c      	ldr	r3, [pc, #48]	; (8009564 <prvAddCurrentTaskToDelayedList+0x64>)
 8009532:	6818      	ldr	r0, [r3, #0]
 8009534:	6831      	ldr	r1, [r6, #0]
}
 8009536:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800953a:	3104      	adds	r1, #4
 800953c:	f7ff b892 	b.w	8008664 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009540:	4b09      	ldr	r3, [pc, #36]	; (8009568 <prvAddCurrentTaskToDelayedList+0x68>)
 8009542:	6818      	ldr	r0, [r3, #0]
 8009544:	6831      	ldr	r1, [r6, #0]
 8009546:	3104      	adds	r1, #4
 8009548:	f7ff f88c 	bl	8008664 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800954c:	4b07      	ldr	r3, [pc, #28]	; (800956c <prvAddCurrentTaskToDelayedList+0x6c>)
 800954e:	681a      	ldr	r2, [r3, #0]
 8009550:	42a2      	cmp	r2, r4
 8009552:	d900      	bls.n	8009556 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 8009554:	601c      	str	r4, [r3, #0]
}
 8009556:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009558:	2400880c 	.word	0x2400880c
 800955c:	24008318 	.word	0x24008318
 8009560:	240087e4 	.word	0x240087e4
 8009564:	24008320 	.word	0x24008320
 8009568:	2400831c 	.word	0x2400831c
 800956c:	240087c0 	.word	0x240087c0

08009570 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009570:	4a06      	ldr	r2, [pc, #24]	; (800958c <prvResetNextTaskUnblockTime+0x1c>)
 8009572:	6813      	ldr	r3, [r2, #0]
 8009574:	6819      	ldr	r1, [r3, #0]
 8009576:	4b06      	ldr	r3, [pc, #24]	; (8009590 <prvResetNextTaskUnblockTime+0x20>)
 8009578:	b919      	cbnz	r1, 8009582 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800957a:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800957e:	601a      	str	r2, [r3, #0]
}
 8009580:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009582:	6812      	ldr	r2, [r2, #0]
 8009584:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009586:	68d2      	ldr	r2, [r2, #12]
 8009588:	6852      	ldr	r2, [r2, #4]
 800958a:	e7f8      	b.n	800957e <prvResetNextTaskUnblockTime+0xe>
 800958c:	2400831c 	.word	0x2400831c
 8009590:	240087c0 	.word	0x240087c0

08009594 <prvDeleteTCB>:
	{
 8009594:	b510      	push	{r4, lr}
 8009596:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8009598:	3058      	adds	r0, #88	; 0x58
 800959a:	f013 fe7b 	bl	801d294 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800959e:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 80095a2:	b93b      	cbnz	r3, 80095b4 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 80095a4:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80095a6:	f7ff f805 	bl	80085b4 <vPortFree>
				vPortFree( pxTCB );
 80095aa:	4620      	mov	r0, r4
	}
 80095ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80095b0:	f7ff b800 	b.w	80085b4 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80095b4:	2b01      	cmp	r3, #1
 80095b6:	d0f8      	beq.n	80095aa <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80095b8:	2b02      	cmp	r3, #2
 80095ba:	d008      	beq.n	80095ce <prvDeleteTCB+0x3a>
 80095bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095c0:	f383 8811 	msr	BASEPRI, r3
 80095c4:	f3bf 8f6f 	isb	sy
 80095c8:	f3bf 8f4f 	dsb	sy
 80095cc:	e7fe      	b.n	80095cc <prvDeleteTCB+0x38>
	}
 80095ce:	bd10      	pop	{r4, pc}

080095d0 <prvIdleTask>:
{
 80095d0:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80095d2:	4c14      	ldr	r4, [pc, #80]	; (8009624 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80095d4:	4f14      	ldr	r7, [pc, #80]	; (8009628 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 80095d6:	4d15      	ldr	r5, [pc, #84]	; (800962c <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80095d8:	6823      	ldr	r3, [r4, #0]
 80095da:	b983      	cbnz	r3, 80095fe <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80095dc:	4b14      	ldr	r3, [pc, #80]	; (8009630 <prvIdleTask+0x60>)
 80095de:	681b      	ldr	r3, [r3, #0]
 80095e0:	2b01      	cmp	r3, #1
 80095e2:	d909      	bls.n	80095f8 <prvIdleTask+0x28>
				taskYIELD();
 80095e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095f0:	f3bf 8f4f 	dsb	sy
 80095f4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 80095f8:	f7f7 f896 	bl	8000728 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 80095fc:	e7eb      	b.n	80095d6 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80095fe:	f7ff f8c1 	bl	8008784 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009602:	68fb      	ldr	r3, [r7, #12]
 8009604:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009606:	1d30      	adds	r0, r6, #4
 8009608:	f7ff f843 	bl	8008692 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800960c:	682b      	ldr	r3, [r5, #0]
 800960e:	3b01      	subs	r3, #1
 8009610:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009612:	6823      	ldr	r3, [r4, #0]
 8009614:	3b01      	subs	r3, #1
 8009616:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009618:	f7ff f8d4 	bl	80087c4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800961c:	4630      	mov	r0, r6
 800961e:	f7ff ffb9 	bl	8009594 <prvDeleteTCB>
 8009622:	e7d9      	b.n	80095d8 <prvIdleTask+0x8>
 8009624:	24008788 	.word	0x24008788
 8009628:	240087f8 	.word	0x240087f8
 800962c:	24008784 	.word	0x24008784
 8009630:	24008324 	.word	0x24008324

08009634 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009634:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009638:	ea4f 0982 	mov.w	r9, r2, lsl #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800963c:	4606      	mov	r6, r0
 800963e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009640:	21a5      	movs	r1, #165	; 0xa5
 8009642:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009644:	461f      	mov	r7, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009646:	f1a9 0904 	sub.w	r9, r9, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800964a:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800964e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009650:	f013 fa3c 	bl	801cacc <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009654:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009656:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009658:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800965c:	2d00      	cmp	r5, #0
 800965e:	d042      	beq.n	80096e6 <prvInitialiseNewTask.constprop.0+0xb2>
 8009660:	1e6b      	subs	r3, r5, #1
 8009662:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009666:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009668:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800966c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009670:	b108      	cbz	r0, 8009676 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009672:	42ab      	cmp	r3, r5
 8009674:	d1f8      	bne.n	8009668 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009676:	2300      	movs	r3, #0
 8009678:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800967c:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 800967e:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009682:	1d20      	adds	r0, r4, #4
 8009684:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009686:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
 800968a:	bf28      	it	cs
 800968c:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
 800968e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009690:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009692:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009696:	f7fe ffd6 	bl	8008646 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800969a:	f104 0018 	add.w	r0, r4, #24
 800969e:	f7fe ffd2 	bl	8008646 <vListInitialiseItem>
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80096a2:	2260      	movs	r2, #96	; 0x60
 80096a4:	4651      	mov	r1, sl
		pxNewTCB->ulNotifiedValue = 0;
 80096a6:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80096aa:	f104 0058 	add.w	r0, r4, #88	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80096ae:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80096b0:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80096b2:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80096b4:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80096b8:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80096bc:	f013 fa06 	bl	801cacc <memset>
 80096c0:	4b0a      	ldr	r3, [pc, #40]	; (80096ec <prvInitialiseNewTask.constprop.0+0xb8>)
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80096c2:	463a      	mov	r2, r7
 80096c4:	4631      	mov	r1, r6
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80096c6:	65e3      	str	r3, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80096c8:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80096ca:	4b09      	ldr	r3, [pc, #36]	; (80096f0 <prvInitialiseNewTask.constprop.0+0xbc>)
 80096cc:	6623      	str	r3, [r4, #96]	; 0x60
 80096ce:	4b09      	ldr	r3, [pc, #36]	; (80096f4 <prvInitialiseNewTask.constprop.0+0xc0>)
 80096d0:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80096d2:	f7ff f82d 	bl	8008730 <pxPortInitialiseStack>
 80096d6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80096d8:	f1b8 0f00 	cmp.w	r8, #0
 80096dc:	d001      	beq.n	80096e2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80096de:	f8c8 4000 	str.w	r4, [r8]
}
 80096e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80096e6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80096ea:	e7c7      	b.n	800967c <prvInitialiseNewTask.constprop.0+0x48>
 80096ec:	0801f98c 	.word	0x0801f98c
 80096f0:	0801f9ac 	.word	0x0801f9ac
 80096f4:	0801f96c 	.word	0x0801f96c

080096f8 <xTaskCreateStatic>:
	{
 80096f8:	b570      	push	{r4, r5, r6, lr}
 80096fa:	b086      	sub	sp, #24
 80096fc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009700:	b945      	cbnz	r5, 8009714 <xTaskCreateStatic+0x1c>
 8009702:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009706:	f383 8811 	msr	BASEPRI, r3
 800970a:	f3bf 8f6f 	isb	sy
 800970e:	f3bf 8f4f 	dsb	sy
 8009712:	e7fe      	b.n	8009712 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009714:	b944      	cbnz	r4, 8009728 <xTaskCreateStatic+0x30>
 8009716:	f04f 0350 	mov.w	r3, #80	; 0x50
 800971a:	f383 8811 	msr	BASEPRI, r3
 800971e:	f3bf 8f6f 	isb	sy
 8009722:	f3bf 8f4f 	dsb	sy
 8009726:	e7fe      	b.n	8009726 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009728:	26c0      	movs	r6, #192	; 0xc0
 800972a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800972c:	9e05      	ldr	r6, [sp, #20]
 800972e:	2ec0      	cmp	r6, #192	; 0xc0
 8009730:	d008      	beq.n	8009744 <xTaskCreateStatic+0x4c>
 8009732:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009736:	f383 8811 	msr	BASEPRI, r3
 800973a:	f3bf 8f6f 	isb	sy
 800973e:	f3bf 8f4f 	dsb	sy
 8009742:	e7fe      	b.n	8009742 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009744:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009746:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009748:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800974a:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800974e:	ad04      	add	r5, sp, #16
 8009750:	9402      	str	r4, [sp, #8]
 8009752:	9501      	str	r5, [sp, #4]
 8009754:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009756:	9500      	str	r5, [sp, #0]
 8009758:	f7ff ff6c 	bl	8009634 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800975c:	4620      	mov	r0, r4
 800975e:	f7ff fe51 	bl	8009404 <prvAddNewTaskToReadyList>
	}
 8009762:	9804      	ldr	r0, [sp, #16]
 8009764:	b006      	add	sp, #24
 8009766:	bd70      	pop	{r4, r5, r6, pc}

08009768 <xTaskCreate>:
	{
 8009768:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800976c:	4607      	mov	r7, r0
 800976e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009770:	0090      	lsls	r0, r2, #2
	{
 8009772:	4688      	mov	r8, r1
 8009774:	4616      	mov	r6, r2
 8009776:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009778:	f7fe fe84 	bl	8008484 <pvPortMalloc>
			if( pxStack != NULL )
 800977c:	4605      	mov	r5, r0
 800977e:	b1e8      	cbz	r0, 80097bc <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009780:	20c0      	movs	r0, #192	; 0xc0
 8009782:	f7fe fe7f 	bl	8008484 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009786:	4604      	mov	r4, r0
 8009788:	b1a8      	cbz	r0, 80097b6 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800978a:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 800978c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800978e:	4632      	mov	r2, r6
 8009790:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009792:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009796:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009798:	9002      	str	r0, [sp, #8]
 800979a:	4638      	mov	r0, r7
 800979c:	9301      	str	r3, [sp, #4]
 800979e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80097a0:	9300      	str	r3, [sp, #0]
 80097a2:	464b      	mov	r3, r9
 80097a4:	f7ff ff46 	bl	8009634 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80097a8:	4620      	mov	r0, r4
 80097aa:	f7ff fe2b 	bl	8009404 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80097ae:	2001      	movs	r0, #1
	}
 80097b0:	b005      	add	sp, #20
 80097b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 80097b6:	4628      	mov	r0, r5
 80097b8:	f7fe fefc 	bl	80085b4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80097bc:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 80097c0:	e7f6      	b.n	80097b0 <xTaskCreate+0x48>
	...

080097c4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80097c4:	4a02      	ldr	r2, [pc, #8]	; (80097d0 <vTaskSuspendAll+0xc>)
 80097c6:	6813      	ldr	r3, [r2, #0]
 80097c8:	3301      	adds	r3, #1
 80097ca:	6013      	str	r3, [r2, #0]
}
 80097cc:	4770      	bx	lr
 80097ce:	bf00      	nop
 80097d0:	2400878c 	.word	0x2400878c

080097d4 <xTaskGetTickCount>:
		xTicks = xTickCount;
 80097d4:	4b01      	ldr	r3, [pc, #4]	; (80097dc <xTaskGetTickCount+0x8>)
 80097d6:	6818      	ldr	r0, [r3, #0]
}
 80097d8:	4770      	bx	lr
 80097da:	bf00      	nop
 80097dc:	2400880c 	.word	0x2400880c

080097e0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80097e0:	4b3f      	ldr	r3, [pc, #252]	; (80098e0 <xTaskIncrementTick+0x100>)
 80097e2:	681b      	ldr	r3, [r3, #0]
{
 80097e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80097e8:	2b00      	cmp	r3, #0
 80097ea:	d172      	bne.n	80098d2 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80097ec:	4b3d      	ldr	r3, [pc, #244]	; (80098e4 <xTaskIncrementTick+0x104>)
 80097ee:	681d      	ldr	r5, [r3, #0]
 80097f0:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 80097f2:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80097f4:	b9bd      	cbnz	r5, 8009826 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80097f6:	4b3c      	ldr	r3, [pc, #240]	; (80098e8 <xTaskIncrementTick+0x108>)
 80097f8:	681a      	ldr	r2, [r3, #0]
 80097fa:	6812      	ldr	r2, [r2, #0]
 80097fc:	b142      	cbz	r2, 8009810 <xTaskIncrementTick+0x30>
 80097fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009802:	f383 8811 	msr	BASEPRI, r3
 8009806:	f3bf 8f6f 	isb	sy
 800980a:	f3bf 8f4f 	dsb	sy
 800980e:	e7fe      	b.n	800980e <xTaskIncrementTick+0x2e>
 8009810:	4a36      	ldr	r2, [pc, #216]	; (80098ec <xTaskIncrementTick+0x10c>)
 8009812:	6819      	ldr	r1, [r3, #0]
 8009814:	6810      	ldr	r0, [r2, #0]
 8009816:	6018      	str	r0, [r3, #0]
 8009818:	6011      	str	r1, [r2, #0]
 800981a:	4a35      	ldr	r2, [pc, #212]	; (80098f0 <xTaskIncrementTick+0x110>)
 800981c:	6813      	ldr	r3, [r2, #0]
 800981e:	3301      	adds	r3, #1
 8009820:	6013      	str	r3, [r2, #0]
 8009822:	f7ff fea5 	bl	8009570 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009826:	4e33      	ldr	r6, [pc, #204]	; (80098f4 <xTaskIncrementTick+0x114>)
BaseType_t xSwitchRequired = pdFALSE;
 8009828:	2400      	movs	r4, #0
 800982a:	4f33      	ldr	r7, [pc, #204]	; (80098f8 <xTaskIncrementTick+0x118>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 800982c:	6833      	ldr	r3, [r6, #0]
 800982e:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009904 <xTaskIncrementTick+0x124>
 8009832:	429d      	cmp	r5, r3
 8009834:	d211      	bcs.n	800985a <xTaskIncrementTick+0x7a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009836:	f8d8 3000 	ldr.w	r3, [r8]
 800983a:	2214      	movs	r2, #20
 800983c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800983e:	4353      	muls	r3, r2
 8009840:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009842:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 8009844:	4b2d      	ldr	r3, [pc, #180]	; (80098fc <xTaskIncrementTick+0x11c>)
 8009846:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8009848:	bf28      	it	cs
 800984a:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800984c:	2b00      	cmp	r3, #0
 800984e:	bf18      	it	ne
 8009850:	2401      	movne	r4, #1
}
 8009852:	4620      	mov	r0, r4
 8009854:	b003      	add	sp, #12
 8009856:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800985a:	f8df 908c 	ldr.w	r9, [pc, #140]	; 80098e8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800985e:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 8009908 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009862:	f8d9 3000 	ldr.w	r3, [r9]
 8009866:	681b      	ldr	r3, [r3, #0]
 8009868:	b91b      	cbnz	r3, 8009872 <xTaskIncrementTick+0x92>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800986a:	f04f 33ff 	mov.w	r3, #4294967295
 800986e:	6033      	str	r3, [r6, #0]
					break;
 8009870:	e7e1      	b.n	8009836 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009872:	f8d9 3000 	ldr.w	r3, [r9]
 8009876:	68db      	ldr	r3, [r3, #12]
 8009878:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800987c:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009880:	4295      	cmp	r5, r2
 8009882:	d201      	bcs.n	8009888 <xTaskIncrementTick+0xa8>
						xNextTaskUnblockTime = xItemValue;
 8009884:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009886:	e7d6      	b.n	8009836 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009888:	f10b 0104 	add.w	r1, fp, #4
 800988c:	4608      	mov	r0, r1
 800988e:	9101      	str	r1, [sp, #4]
 8009890:	f7fe feff 	bl	8008692 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009894:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009898:	9901      	ldr	r1, [sp, #4]
 800989a:	b122      	cbz	r2, 80098a6 <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800989c:	f10b 0018 	add.w	r0, fp, #24
 80098a0:	f7fe fef7 	bl	8008692 <uxListRemove>
 80098a4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80098a6:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 80098aa:	f8da 2000 	ldr.w	r2, [sl]
 80098ae:	4290      	cmp	r0, r2
 80098b0:	d901      	bls.n	80098b6 <xTaskIncrementTick+0xd6>
 80098b2:	f8ca 0000 	str.w	r0, [sl]
 80098b6:	2314      	movs	r3, #20
 80098b8:	fb03 7000 	mla	r0, r3, r0, r7
 80098bc:	f7fe fec6 	bl	800864c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80098c0:	f8d8 1000 	ldr.w	r1, [r8]
 80098c4:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 80098c8:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80098ca:	429a      	cmp	r2, r3
 80098cc:	bf28      	it	cs
 80098ce:	2401      	movcs	r4, #1
 80098d0:	e7c7      	b.n	8009862 <xTaskIncrementTick+0x82>
		++xPendedTicks;
 80098d2:	4a0b      	ldr	r2, [pc, #44]	; (8009900 <xTaskIncrementTick+0x120>)
BaseType_t xSwitchRequired = pdFALSE;
 80098d4:	2400      	movs	r4, #0
		++xPendedTicks;
 80098d6:	6813      	ldr	r3, [r2, #0]
 80098d8:	3301      	adds	r3, #1
 80098da:	6013      	str	r3, [r2, #0]
	return xSwitchRequired;
 80098dc:	e7b9      	b.n	8009852 <xTaskIncrementTick+0x72>
 80098de:	bf00      	nop
 80098e0:	2400878c 	.word	0x2400878c
 80098e4:	2400880c 	.word	0x2400880c
 80098e8:	2400831c 	.word	0x2400831c
 80098ec:	24008320 	.word	0x24008320
 80098f0:	240087c4 	.word	0x240087c4
 80098f4:	240087c0 	.word	0x240087c0
 80098f8:	24008324 	.word	0x24008324
 80098fc:	24008810 	.word	0x24008810
 8009900:	240087c8 	.word	0x240087c8
 8009904:	24008318 	.word	0x24008318
 8009908:	24008794 	.word	0x24008794

0800990c <xTaskResumeAll>:
{
 800990c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800990e:	4c31      	ldr	r4, [pc, #196]	; (80099d4 <xTaskResumeAll+0xc8>)
 8009910:	6823      	ldr	r3, [r4, #0]
 8009912:	b943      	cbnz	r3, 8009926 <xTaskResumeAll+0x1a>
 8009914:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009918:	f383 8811 	msr	BASEPRI, r3
 800991c:	f3bf 8f6f 	isb	sy
 8009920:	f3bf 8f4f 	dsb	sy
 8009924:	e7fe      	b.n	8009924 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009926:	f7fe ff2d 	bl	8008784 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800992a:	6823      	ldr	r3, [r4, #0]
 800992c:	3b01      	subs	r3, #1
 800992e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009930:	6824      	ldr	r4, [r4, #0]
 8009932:	b12c      	cbz	r4, 8009940 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009934:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009936:	f7fe ff45 	bl	80087c4 <vPortExitCritical>
}
 800993a:	4620      	mov	r0, r4
 800993c:	b003      	add	sp, #12
 800993e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009940:	4b25      	ldr	r3, [pc, #148]	; (80099d8 <xTaskResumeAll+0xcc>)
 8009942:	681b      	ldr	r3, [r3, #0]
 8009944:	2b00      	cmp	r3, #0
 8009946:	d0f5      	beq.n	8009934 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009948:	4d24      	ldr	r5, [pc, #144]	; (80099dc <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800994a:	4e25      	ldr	r6, [pc, #148]	; (80099e0 <xTaskResumeAll+0xd4>)
 800994c:	4f25      	ldr	r7, [pc, #148]	; (80099e4 <xTaskResumeAll+0xd8>)
 800994e:	e01e      	b.n	800998e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009950:	68eb      	ldr	r3, [r5, #12]
 8009952:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009954:	f104 0018 	add.w	r0, r4, #24
 8009958:	f7fe fe9b 	bl	8008692 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800995c:	1d21      	adds	r1, r4, #4
 800995e:	4608      	mov	r0, r1
 8009960:	9101      	str	r1, [sp, #4]
 8009962:	f7fe fe96 	bl	8008692 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009966:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009968:	6832      	ldr	r2, [r6, #0]
 800996a:	9901      	ldr	r1, [sp, #4]
 800996c:	4293      	cmp	r3, r2
 800996e:	d900      	bls.n	8009972 <xTaskResumeAll+0x66>
 8009970:	6033      	str	r3, [r6, #0]
 8009972:	2014      	movs	r0, #20
 8009974:	fb00 7003 	mla	r0, r0, r3, r7
 8009978:	f7fe fe68 	bl	800864c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800997c:	4b1a      	ldr	r3, [pc, #104]	; (80099e8 <xTaskResumeAll+0xdc>)
 800997e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009980:	681b      	ldr	r3, [r3, #0]
 8009982:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009984:	429a      	cmp	r2, r3
 8009986:	d302      	bcc.n	800998e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009988:	4b18      	ldr	r3, [pc, #96]	; (80099ec <xTaskResumeAll+0xe0>)
 800998a:	2201      	movs	r2, #1
 800998c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800998e:	682b      	ldr	r3, [r5, #0]
 8009990:	2b00      	cmp	r3, #0
 8009992:	d1dd      	bne.n	8009950 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009994:	b10c      	cbz	r4, 800999a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009996:	f7ff fdeb 	bl	8009570 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800999a:	4d15      	ldr	r5, [pc, #84]	; (80099f0 <xTaskResumeAll+0xe4>)
 800999c:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800999e:	b144      	cbz	r4, 80099b2 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 80099a0:	4e12      	ldr	r6, [pc, #72]	; (80099ec <xTaskResumeAll+0xe0>)
 80099a2:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 80099a4:	f7ff ff1c 	bl	80097e0 <xTaskIncrementTick>
 80099a8:	b100      	cbz	r0, 80099ac <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 80099aa:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80099ac:	3c01      	subs	r4, #1
 80099ae:	d1f9      	bne.n	80099a4 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 80099b0:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 80099b2:	4b0e      	ldr	r3, [pc, #56]	; (80099ec <xTaskResumeAll+0xe0>)
 80099b4:	681b      	ldr	r3, [r3, #0]
 80099b6:	2b00      	cmp	r3, #0
 80099b8:	d0bc      	beq.n	8009934 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 80099ba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80099be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80099c2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80099c6:	f3bf 8f4f 	dsb	sy
 80099ca:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80099ce:	2401      	movs	r4, #1
 80099d0:	e7b1      	b.n	8009936 <xTaskResumeAll+0x2a>
 80099d2:	bf00      	nop
 80099d4:	2400878c 	.word	0x2400878c
 80099d8:	24008784 	.word	0x24008784
 80099dc:	240087cc 	.word	0x240087cc
 80099e0:	24008794 	.word	0x24008794
 80099e4:	24008324 	.word	0x24008324
 80099e8:	24008318 	.word	0x24008318
 80099ec:	24008810 	.word	0x24008810
 80099f0:	240087c8 	.word	0x240087c8

080099f4 <vTaskDelay>:
	{
 80099f4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80099f6:	b950      	cbnz	r0, 8009a0e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 80099f8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80099fc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a00:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a04:	f3bf 8f4f 	dsb	sy
 8009a08:	f3bf 8f6f 	isb	sy
	}
 8009a0c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009a0e:	4b0a      	ldr	r3, [pc, #40]	; (8009a38 <vTaskDelay+0x44>)
 8009a10:	6819      	ldr	r1, [r3, #0]
 8009a12:	b141      	cbz	r1, 8009a26 <vTaskDelay+0x32>
 8009a14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a18:	f383 8811 	msr	BASEPRI, r3
 8009a1c:	f3bf 8f6f 	isb	sy
 8009a20:	f3bf 8f4f 	dsb	sy
 8009a24:	e7fe      	b.n	8009a24 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009a26:	f7ff fecd 	bl	80097c4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009a2a:	f7ff fd69 	bl	8009500 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009a2e:	f7ff ff6d 	bl	800990c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009a32:	2800      	cmp	r0, #0
 8009a34:	d0e0      	beq.n	80099f8 <vTaskDelay+0x4>
 8009a36:	e7e9      	b.n	8009a0c <vTaskDelay+0x18>
 8009a38:	2400878c 	.word	0x2400878c

08009a3c <vTaskSetApplicationTaskTag>:
	{
 8009a3c:	b538      	push	{r3, r4, r5, lr}
 8009a3e:	460d      	mov	r5, r1
		if( xTask == NULL )
 8009a40:	4604      	mov	r4, r0
 8009a42:	b908      	cbnz	r0, 8009a48 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8009a44:	4b04      	ldr	r3, [pc, #16]	; (8009a58 <vTaskSetApplicationTaskTag+0x1c>)
 8009a46:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8009a48:	f7fe fe9c 	bl	8008784 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8009a4c:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8009a4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8009a52:	f7fe beb7 	b.w	80087c4 <vPortExitCritical>
 8009a56:	bf00      	nop
 8009a58:	24008318 	.word	0x24008318

08009a5c <xTaskCallApplicationTaskHook>:
	{
 8009a5c:	4603      	mov	r3, r0
 8009a5e:	4608      	mov	r0, r1
		if( xTask == NULL )
 8009a60:	b90b      	cbnz	r3, 8009a66 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8009a62:	4b03      	ldr	r3, [pc, #12]	; (8009a70 <xTaskCallApplicationTaskHook+0x14>)
 8009a64:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8009a66:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009a68:	b103      	cbz	r3, 8009a6c <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8009a6a:	4718      	bx	r3
	}
 8009a6c:	4618      	mov	r0, r3
 8009a6e:	4770      	bx	lr
 8009a70:	24008318 	.word	0x24008318

08009a74 <vTaskStartScheduler>:
{
 8009a74:	b510      	push	{r4, lr}
 8009a76:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009a78:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009a7a:	aa07      	add	r2, sp, #28
 8009a7c:	a906      	add	r1, sp, #24
 8009a7e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009a80:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009a84:	f7fe fcc2 	bl	800840c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009a88:	9b05      	ldr	r3, [sp, #20]
 8009a8a:	9a07      	ldr	r2, [sp, #28]
 8009a8c:	9302      	str	r3, [sp, #8]
 8009a8e:	9b06      	ldr	r3, [sp, #24]
 8009a90:	491b      	ldr	r1, [pc, #108]	; (8009b00 <vTaskStartScheduler+0x8c>)
 8009a92:	481c      	ldr	r0, [pc, #112]	; (8009b04 <vTaskStartScheduler+0x90>)
 8009a94:	e9cd 4300 	strd	r4, r3, [sp]
 8009a98:	4623      	mov	r3, r4
 8009a9a:	f7ff fe2d 	bl	80096f8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009a9e:	b360      	cbz	r0, 8009afa <vTaskStartScheduler+0x86>
			xReturn = xTimerCreateTimerTask();
 8009aa0:	f000 fa92 	bl	8009fc8 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009aa4:	2801      	cmp	r0, #1
 8009aa6:	d11d      	bne.n	8009ae4 <vTaskStartScheduler+0x70>
 8009aa8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009aac:	f383 8811 	msr	BASEPRI, r3
 8009ab0:	f3bf 8f6f 	isb	sy
 8009ab4:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009ab8:	4a13      	ldr	r2, [pc, #76]	; (8009b08 <vTaskStartScheduler+0x94>)
 8009aba:	4914      	ldr	r1, [pc, #80]	; (8009b0c <vTaskStartScheduler+0x98>)
 8009abc:	6813      	ldr	r3, [r2, #0]
 8009abe:	3358      	adds	r3, #88	; 0x58
 8009ac0:	600b      	str	r3, [r1, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009ac2:	f04f 31ff 	mov.w	r1, #4294967295
 8009ac6:	4b12      	ldr	r3, [pc, #72]	; (8009b10 <vTaskStartScheduler+0x9c>)
 8009ac8:	6019      	str	r1, [r3, #0]
		traceTASK_SWITCHED_IN();
 8009aca:	4621      	mov	r1, r4
		xSchedulerRunning = pdTRUE;
 8009acc:	4b11      	ldr	r3, [pc, #68]	; (8009b14 <vTaskStartScheduler+0xa0>)
 8009ace:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009ad0:	4b11      	ldr	r3, [pc, #68]	; (8009b18 <vTaskStartScheduler+0xa4>)
 8009ad2:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8009ad4:	6810      	ldr	r0, [r2, #0]
 8009ad6:	f7ff ffc1 	bl	8009a5c <xTaskCallApplicationTaskHook>
}
 8009ada:	b008      	add	sp, #32
 8009adc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009ae0:	f7fe bee0 	b.w	80088a4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009ae4:	3001      	adds	r0, #1
 8009ae6:	d108      	bne.n	8009afa <vTaskStartScheduler+0x86>
 8009ae8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009aec:	f383 8811 	msr	BASEPRI, r3
 8009af0:	f3bf 8f6f 	isb	sy
 8009af4:	f3bf 8f4f 	dsb	sy
 8009af8:	e7fe      	b.n	8009af8 <vTaskStartScheduler+0x84>
}
 8009afa:	b008      	add	sp, #32
 8009afc:	bd10      	pop	{r4, pc}
 8009afe:	bf00      	nop
 8009b00:	0801ecdc 	.word	0x0801ecdc
 8009b04:	080095d1 	.word	0x080095d1
 8009b08:	24008318 	.word	0x24008318
 8009b0c:	240000ac 	.word	0x240000ac
 8009b10:	240087c0 	.word	0x240087c0
 8009b14:	240087e0 	.word	0x240087e0
 8009b18:	2400880c 	.word	0x2400880c

08009b1c <vTaskSwitchContext>:
{
 8009b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009b1e:	4b1d      	ldr	r3, [pc, #116]	; (8009b94 <vTaskSwitchContext+0x78>)
 8009b20:	681a      	ldr	r2, [r3, #0]
 8009b22:	4b1d      	ldr	r3, [pc, #116]	; (8009b98 <vTaskSwitchContext+0x7c>)
 8009b24:	b112      	cbz	r2, 8009b2c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009b26:	2201      	movs	r2, #1
 8009b28:	601a      	str	r2, [r3, #0]
}
 8009b2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8009b2c:	4c1b      	ldr	r4, [pc, #108]	; (8009b9c <vTaskSwitchContext+0x80>)
 8009b2e:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b30:	4e1b      	ldr	r6, [pc, #108]	; (8009ba0 <vTaskSwitchContext+0x84>)
 8009b32:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 8009b34:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 8009b36:	6820      	ldr	r0, [r4, #0]
 8009b38:	f7ff ff90 	bl	8009a5c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b3c:	6832      	ldr	r2, [r6, #0]
 8009b3e:	4919      	ldr	r1, [pc, #100]	; (8009ba4 <vTaskSwitchContext+0x88>)
 8009b40:	fb07 f302 	mul.w	r3, r7, r2
 8009b44:	58cd      	ldr	r5, [r1, r3]
 8009b46:	18c8      	adds	r0, r1, r3
 8009b48:	b1c5      	cbz	r5, 8009b7c <vTaskSwitchContext+0x60>
 8009b4a:	6845      	ldr	r5, [r0, #4]
 8009b4c:	3308      	adds	r3, #8
 8009b4e:	686d      	ldr	r5, [r5, #4]
 8009b50:	440b      	add	r3, r1
 8009b52:	429d      	cmp	r5, r3
 8009b54:	6045      	str	r5, [r0, #4]
 8009b56:	bf04      	itt	eq
 8009b58:	686b      	ldreq	r3, [r5, #4]
 8009b5a:	6043      	streq	r3, [r0, #4]
 8009b5c:	2314      	movs	r3, #20
 8009b5e:	fb03 1102 	mla	r1, r3, r2, r1
 8009b62:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 8009b64:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b66:	68db      	ldr	r3, [r3, #12]
 8009b68:	6023      	str	r3, [r4, #0]
 8009b6a:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8009b6c:	6820      	ldr	r0, [r4, #0]
 8009b6e:	f7ff ff75 	bl	8009a5c <xTaskCallApplicationTaskHook>
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009b72:	6823      	ldr	r3, [r4, #0]
 8009b74:	4a0c      	ldr	r2, [pc, #48]	; (8009ba8 <vTaskSwitchContext+0x8c>)
 8009b76:	3358      	adds	r3, #88	; 0x58
 8009b78:	6013      	str	r3, [r2, #0]
}
 8009b7a:	e7d6      	b.n	8009b2a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b7c:	b942      	cbnz	r2, 8009b90 <vTaskSwitchContext+0x74>
 8009b7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b82:	f383 8811 	msr	BASEPRI, r3
 8009b86:	f3bf 8f6f 	isb	sy
 8009b8a:	f3bf 8f4f 	dsb	sy
 8009b8e:	e7fe      	b.n	8009b8e <vTaskSwitchContext+0x72>
 8009b90:	3a01      	subs	r2, #1
 8009b92:	e7d5      	b.n	8009b40 <vTaskSwitchContext+0x24>
 8009b94:	2400878c 	.word	0x2400878c
 8009b98:	24008810 	.word	0x24008810
 8009b9c:	24008318 	.word	0x24008318
 8009ba0:	24008794 	.word	0x24008794
 8009ba4:	24008324 	.word	0x24008324
 8009ba8:	240000ac 	.word	0x240000ac

08009bac <vTaskPlaceOnEventList>:
{
 8009bac:	b510      	push	{r4, lr}
 8009bae:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009bb0:	b940      	cbnz	r0, 8009bc4 <vTaskPlaceOnEventList+0x18>
 8009bb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bb6:	f383 8811 	msr	BASEPRI, r3
 8009bba:	f3bf 8f6f 	isb	sy
 8009bbe:	f3bf 8f4f 	dsb	sy
 8009bc2:	e7fe      	b.n	8009bc2 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009bc4:	4b05      	ldr	r3, [pc, #20]	; (8009bdc <vTaskPlaceOnEventList+0x30>)
 8009bc6:	6819      	ldr	r1, [r3, #0]
 8009bc8:	3118      	adds	r1, #24
 8009bca:	f7fe fd4b 	bl	8008664 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009bce:	4620      	mov	r0, r4
 8009bd0:	2101      	movs	r1, #1
}
 8009bd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009bd6:	f7ff bc93 	b.w	8009500 <prvAddCurrentTaskToDelayedList>
 8009bda:	bf00      	nop
 8009bdc:	24008318 	.word	0x24008318

08009be0 <vTaskPlaceOnEventListRestricted>:
	{
 8009be0:	b538      	push	{r3, r4, r5, lr}
 8009be2:	460d      	mov	r5, r1
 8009be4:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009be6:	b940      	cbnz	r0, 8009bfa <vTaskPlaceOnEventListRestricted+0x1a>
 8009be8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bec:	f383 8811 	msr	BASEPRI, r3
 8009bf0:	f3bf 8f6f 	isb	sy
 8009bf4:	f3bf 8f4f 	dsb	sy
 8009bf8:	e7fe      	b.n	8009bf8 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009bfa:	4b07      	ldr	r3, [pc, #28]	; (8009c18 <vTaskPlaceOnEventListRestricted+0x38>)
 8009bfc:	6819      	ldr	r1, [r3, #0]
 8009bfe:	3118      	adds	r1, #24
 8009c00:	f7fe fd24 	bl	800864c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009c04:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009c06:	4621      	mov	r1, r4
 8009c08:	bf0c      	ite	eq
 8009c0a:	4628      	moveq	r0, r5
 8009c0c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009c10:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009c14:	f7ff bc74 	b.w	8009500 <prvAddCurrentTaskToDelayedList>
 8009c18:	24008318 	.word	0x24008318

08009c1c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c1c:	68c3      	ldr	r3, [r0, #12]
{
 8009c1e:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c20:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8009c22:	b944      	cbnz	r4, 8009c36 <xTaskRemoveFromEventList+0x1a>
 8009c24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c28:	f383 8811 	msr	BASEPRI, r3
 8009c2c:	f3bf 8f6f 	isb	sy
 8009c30:	f3bf 8f4f 	dsb	sy
 8009c34:	e7fe      	b.n	8009c34 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009c36:	f104 0118 	add.w	r1, r4, #24
 8009c3a:	4608      	mov	r0, r1
 8009c3c:	9101      	str	r1, [sp, #4]
 8009c3e:	f7fe fd28 	bl	8008692 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009c42:	4b12      	ldr	r3, [pc, #72]	; (8009c8c <xTaskRemoveFromEventList+0x70>)
 8009c44:	9901      	ldr	r1, [sp, #4]
 8009c46:	681b      	ldr	r3, [r3, #0]
 8009c48:	b9e3      	cbnz	r3, 8009c84 <xTaskRemoveFromEventList+0x68>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009c4a:	1d21      	adds	r1, r4, #4
 8009c4c:	4608      	mov	r0, r1
 8009c4e:	9101      	str	r1, [sp, #4]
 8009c50:	f7fe fd1f 	bl	8008692 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009c54:	4a0e      	ldr	r2, [pc, #56]	; (8009c90 <xTaskRemoveFromEventList+0x74>)
 8009c56:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009c58:	6810      	ldr	r0, [r2, #0]
 8009c5a:	9901      	ldr	r1, [sp, #4]
 8009c5c:	4283      	cmp	r3, r0
 8009c5e:	d900      	bls.n	8009c62 <xTaskRemoveFromEventList+0x46>
 8009c60:	6013      	str	r3, [r2, #0]
 8009c62:	4a0c      	ldr	r2, [pc, #48]	; (8009c94 <xTaskRemoveFromEventList+0x78>)
 8009c64:	2014      	movs	r0, #20
 8009c66:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009c6a:	f7fe fcef 	bl	800864c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009c6e:	4b0a      	ldr	r3, [pc, #40]	; (8009c98 <xTaskRemoveFromEventList+0x7c>)
 8009c70:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009c72:	681b      	ldr	r3, [r3, #0]
 8009c74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c76:	429a      	cmp	r2, r3
 8009c78:	d906      	bls.n	8009c88 <xTaskRemoveFromEventList+0x6c>
		xYieldPending = pdTRUE;
 8009c7a:	2001      	movs	r0, #1
 8009c7c:	4b07      	ldr	r3, [pc, #28]	; (8009c9c <xTaskRemoveFromEventList+0x80>)
 8009c7e:	6018      	str	r0, [r3, #0]
}
 8009c80:	b002      	add	sp, #8
 8009c82:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009c84:	4806      	ldr	r0, [pc, #24]	; (8009ca0 <xTaskRemoveFromEventList+0x84>)
 8009c86:	e7f0      	b.n	8009c6a <xTaskRemoveFromEventList+0x4e>
		xReturn = pdFALSE;
 8009c88:	2000      	movs	r0, #0
	return xReturn;
 8009c8a:	e7f9      	b.n	8009c80 <xTaskRemoveFromEventList+0x64>
 8009c8c:	2400878c 	.word	0x2400878c
 8009c90:	24008794 	.word	0x24008794
 8009c94:	24008324 	.word	0x24008324
 8009c98:	24008318 	.word	0x24008318
 8009c9c:	24008810 	.word	0x24008810
 8009ca0:	240087cc 	.word	0x240087cc

08009ca4 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009ca4:	4b03      	ldr	r3, [pc, #12]	; (8009cb4 <vTaskInternalSetTimeOutState+0x10>)
 8009ca6:	681b      	ldr	r3, [r3, #0]
 8009ca8:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8009caa:	4b03      	ldr	r3, [pc, #12]	; (8009cb8 <vTaskInternalSetTimeOutState+0x14>)
 8009cac:	681b      	ldr	r3, [r3, #0]
 8009cae:	6043      	str	r3, [r0, #4]
}
 8009cb0:	4770      	bx	lr
 8009cb2:	bf00      	nop
 8009cb4:	240087c4 	.word	0x240087c4
 8009cb8:	2400880c 	.word	0x2400880c

08009cbc <xTaskCheckForTimeOut>:
{
 8009cbc:	b570      	push	{r4, r5, r6, lr}
 8009cbe:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009cc0:	4605      	mov	r5, r0
 8009cc2:	b940      	cbnz	r0, 8009cd6 <xTaskCheckForTimeOut+0x1a>
 8009cc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cc8:	f383 8811 	msr	BASEPRI, r3
 8009ccc:	f3bf 8f6f 	isb	sy
 8009cd0:	f3bf 8f4f 	dsb	sy
 8009cd4:	e7fe      	b.n	8009cd4 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8009cd6:	b941      	cbnz	r1, 8009cea <xTaskCheckForTimeOut+0x2e>
 8009cd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cdc:	f383 8811 	msr	BASEPRI, r3
 8009ce0:	f3bf 8f6f 	isb	sy
 8009ce4:	f3bf 8f4f 	dsb	sy
 8009ce8:	e7fe      	b.n	8009ce8 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8009cea:	f7fe fd4b 	bl	8008784 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009cee:	4b0f      	ldr	r3, [pc, #60]	; (8009d2c <xTaskCheckForTimeOut+0x70>)
 8009cf0:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009cf2:	6823      	ldr	r3, [r4, #0]
 8009cf4:	1c5a      	adds	r2, r3, #1
 8009cf6:	d010      	beq.n	8009d1a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009cf8:	480d      	ldr	r0, [pc, #52]	; (8009d30 <xTaskCheckForTimeOut+0x74>)
 8009cfa:	682e      	ldr	r6, [r5, #0]
 8009cfc:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009cfe:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009d00:	4286      	cmp	r6, r0
 8009d02:	d001      	beq.n	8009d08 <xTaskCheckForTimeOut+0x4c>
 8009d04:	428a      	cmp	r2, r1
 8009d06:	d90f      	bls.n	8009d28 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009d08:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8009d0a:	4283      	cmp	r3, r0
 8009d0c:	d90a      	bls.n	8009d24 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8009d0e:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009d10:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 8009d12:	4413      	add	r3, r2
 8009d14:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009d16:	f7ff ffc5 	bl	8009ca4 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8009d1a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009d1c:	f7fe fd52 	bl	80087c4 <vPortExitCritical>
}
 8009d20:	4620      	mov	r0, r4
 8009d22:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009d24:	2300      	movs	r3, #0
 8009d26:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009d28:	2401      	movs	r4, #1
 8009d2a:	e7f7      	b.n	8009d1c <xTaskCheckForTimeOut+0x60>
 8009d2c:	2400880c 	.word	0x2400880c
 8009d30:	240087c4 	.word	0x240087c4

08009d34 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009d34:	4b01      	ldr	r3, [pc, #4]	; (8009d3c <vTaskMissedYield+0x8>)
 8009d36:	2201      	movs	r2, #1
 8009d38:	601a      	str	r2, [r3, #0]
}
 8009d3a:	4770      	bx	lr
 8009d3c:	24008810 	.word	0x24008810

08009d40 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009d40:	4b05      	ldr	r3, [pc, #20]	; (8009d58 <xTaskGetSchedulerState+0x18>)
 8009d42:	681b      	ldr	r3, [r3, #0]
 8009d44:	b133      	cbz	r3, 8009d54 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d46:	4b05      	ldr	r3, [pc, #20]	; (8009d5c <xTaskGetSchedulerState+0x1c>)
 8009d48:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8009d4a:	2b00      	cmp	r3, #0
 8009d4c:	bf0c      	ite	eq
 8009d4e:	2002      	moveq	r0, #2
 8009d50:	2000      	movne	r0, #0
 8009d52:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009d54:	2001      	movs	r0, #1
	}
 8009d56:	4770      	bx	lr
 8009d58:	240087e0 	.word	0x240087e0
 8009d5c:	2400878c 	.word	0x2400878c

08009d60 <xTaskPriorityInherit>:
	{
 8009d60:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009d62:	4604      	mov	r4, r0
 8009d64:	b340      	cbz	r0, 8009db8 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009d66:	4d1b      	ldr	r5, [pc, #108]	; (8009dd4 <xTaskPriorityInherit+0x74>)
 8009d68:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009d6a:	682a      	ldr	r2, [r5, #0]
 8009d6c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8009d6e:	4293      	cmp	r3, r2
 8009d70:	d228      	bcs.n	8009dc4 <xTaskPriorityInherit+0x64>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009d72:	6982      	ldr	r2, [r0, #24]
 8009d74:	2a00      	cmp	r2, #0
 8009d76:	db04      	blt.n	8009d82 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d78:	682a      	ldr	r2, [r5, #0]
 8009d7a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8009d7c:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8009d80:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009d82:	2214      	movs	r2, #20
 8009d84:	4e14      	ldr	r6, [pc, #80]	; (8009dd8 <xTaskPriorityInherit+0x78>)
 8009d86:	fb02 6303 	mla	r3, r2, r3, r6
 8009d8a:	6962      	ldr	r2, [r4, #20]
 8009d8c:	429a      	cmp	r2, r3
 8009d8e:	d115      	bne.n	8009dbc <xTaskPriorityInherit+0x5c>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009d90:	1d21      	adds	r1, r4, #4
 8009d92:	4608      	mov	r0, r1
 8009d94:	9101      	str	r1, [sp, #4]
 8009d96:	f7fe fc7c 	bl	8008692 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009d9a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009d9c:	4a0f      	ldr	r2, [pc, #60]	; (8009ddc <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009d9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009da0:	6810      	ldr	r0, [r2, #0]
 8009da2:	9901      	ldr	r1, [sp, #4]
 8009da4:	4283      	cmp	r3, r0
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009da6:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009da8:	d900      	bls.n	8009dac <xTaskPriorityInherit+0x4c>
 8009daa:	6013      	str	r3, [r2, #0]
 8009dac:	2014      	movs	r0, #20
 8009dae:	fb00 6003 	mla	r0, r0, r3, r6
 8009db2:	f7fe fc4b 	bl	800864c <vListInsertEnd>
				xReturn = pdTRUE;
 8009db6:	2001      	movs	r0, #1
	}
 8009db8:	b002      	add	sp, #8
 8009dba:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009dbc:	682b      	ldr	r3, [r5, #0]
 8009dbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dc0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8009dc2:	e7f8      	b.n	8009db6 <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009dc4:	682b      	ldr	r3, [r5, #0]
 8009dc6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8009dc8:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8009dca:	42a0      	cmp	r0, r4
 8009dcc:	bf2c      	ite	cs
 8009dce:	2000      	movcs	r0, #0
 8009dd0:	2001      	movcc	r0, #1
 8009dd2:	e7f1      	b.n	8009db8 <xTaskPriorityInherit+0x58>
 8009dd4:	24008318 	.word	0x24008318
 8009dd8:	24008324 	.word	0x24008324
 8009ddc:	24008794 	.word	0x24008794

08009de0 <xTaskPriorityDisinherit>:
	{
 8009de0:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8009de2:	b910      	cbnz	r0, 8009dea <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8009de4:	2000      	movs	r0, #0
	}
 8009de6:	b002      	add	sp, #8
 8009de8:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009dea:	4b1c      	ldr	r3, [pc, #112]	; (8009e5c <xTaskPriorityDisinherit+0x7c>)
 8009dec:	681c      	ldr	r4, [r3, #0]
 8009dee:	4284      	cmp	r4, r0
 8009df0:	d008      	beq.n	8009e04 <xTaskPriorityDisinherit+0x24>
 8009df2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009df6:	f383 8811 	msr	BASEPRI, r3
 8009dfa:	f3bf 8f6f 	isb	sy
 8009dfe:	f3bf 8f4f 	dsb	sy
 8009e02:	e7fe      	b.n	8009e02 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8009e04:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009e06:	b943      	cbnz	r3, 8009e1a <xTaskPriorityDisinherit+0x3a>
 8009e08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e0c:	f383 8811 	msr	BASEPRI, r3
 8009e10:	f3bf 8f6f 	isb	sy
 8009e14:	f3bf 8f4f 	dsb	sy
 8009e18:	e7fe      	b.n	8009e18 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009e1a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
 8009e1c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009e1e:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009e20:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009e22:	4291      	cmp	r1, r2
 8009e24:	d0de      	beq.n	8009de4 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009e26:	2b00      	cmp	r3, #0
 8009e28:	d1dc      	bne.n	8009de4 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009e2a:	1d21      	adds	r1, r4, #4
 8009e2c:	4608      	mov	r0, r1
 8009e2e:	9101      	str	r1, [sp, #4]
 8009e30:	f7fe fc2f 	bl	8008692 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009e34:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8009e36:	9901      	ldr	r1, [sp, #4]
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009e38:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009e3c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009e3e:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009e40:	4a07      	ldr	r2, [pc, #28]	; (8009e60 <xTaskPriorityDisinherit+0x80>)
 8009e42:	6810      	ldr	r0, [r2, #0]
 8009e44:	4283      	cmp	r3, r0
 8009e46:	d900      	bls.n	8009e4a <xTaskPriorityDisinherit+0x6a>
 8009e48:	6013      	str	r3, [r2, #0]
 8009e4a:	4a06      	ldr	r2, [pc, #24]	; (8009e64 <xTaskPriorityDisinherit+0x84>)
 8009e4c:	2014      	movs	r0, #20
 8009e4e:	fb00 2003 	mla	r0, r0, r3, r2
 8009e52:	f7fe fbfb 	bl	800864c <vListInsertEnd>
					xReturn = pdTRUE;
 8009e56:	2001      	movs	r0, #1
		return xReturn;
 8009e58:	e7c5      	b.n	8009de6 <xTaskPriorityDisinherit+0x6>
 8009e5a:	bf00      	nop
 8009e5c:	24008318 	.word	0x24008318
 8009e60:	24008794 	.word	0x24008794
 8009e64:	24008324 	.word	0x24008324

08009e68 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009e68:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009e6a:	4604      	mov	r4, r0
 8009e6c:	2800      	cmp	r0, #0
 8009e6e:	d044      	beq.n	8009efa <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8009e70:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009e72:	b942      	cbnz	r2, 8009e86 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009e74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e78:	f383 8811 	msr	BASEPRI, r3
 8009e7c:	f3bf 8f6f 	isb	sy
 8009e80:	f3bf 8f4f 	dsb	sy
 8009e84:	e7fe      	b.n	8009e84 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009e86:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009e88:	4299      	cmp	r1, r3
 8009e8a:	bf38      	it	cc
 8009e8c:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009e8e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009e90:	428b      	cmp	r3, r1
 8009e92:	d032      	beq.n	8009efa <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009e94:	2a01      	cmp	r2, #1
 8009e96:	d130      	bne.n	8009efa <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8009e98:	4a19      	ldr	r2, [pc, #100]	; (8009f00 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009e9a:	6812      	ldr	r2, [r2, #0]
 8009e9c:	4282      	cmp	r2, r0
 8009e9e:	d108      	bne.n	8009eb2 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009ea0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ea4:	f383 8811 	msr	BASEPRI, r3
 8009ea8:	f3bf 8f6f 	isb	sy
 8009eac:	f3bf 8f4f 	dsb	sy
 8009eb0:	e7fe      	b.n	8009eb0 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009eb2:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009eb4:	4d13      	ldr	r5, [pc, #76]	; (8009f04 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009eb6:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009eb8:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 8009ebc:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009ebe:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009ec2:	bfa8      	it	ge
 8009ec4:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009ec8:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009eca:	bfa8      	it	ge
 8009ecc:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009ece:	429a      	cmp	r2, r3
 8009ed0:	d113      	bne.n	8009efa <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009ed2:	1d01      	adds	r1, r0, #4
 8009ed4:	4608      	mov	r0, r1
 8009ed6:	9101      	str	r1, [sp, #4]
 8009ed8:	f7fe fbdb 	bl	8008692 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009edc:	4a0a      	ldr	r2, [pc, #40]	; (8009f08 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8009ede:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009ee0:	6810      	ldr	r0, [r2, #0]
 8009ee2:	9901      	ldr	r1, [sp, #4]
 8009ee4:	4283      	cmp	r3, r0
 8009ee6:	d900      	bls.n	8009eea <vTaskPriorityDisinheritAfterTimeout+0x82>
 8009ee8:	6013      	str	r3, [r2, #0]
 8009eea:	2014      	movs	r0, #20
 8009eec:	fb00 5003 	mla	r0, r0, r3, r5
	}
 8009ef0:	b003      	add	sp, #12
 8009ef2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8009ef6:	f7fe bba9 	b.w	800864c <vListInsertEnd>
	}
 8009efa:	b003      	add	sp, #12
 8009efc:	bd30      	pop	{r4, r5, pc}
 8009efe:	bf00      	nop
 8009f00:	24008318 	.word	0x24008318
 8009f04:	24008324 	.word	0x24008324
 8009f08:	24008794 	.word	0x24008794

08009f0c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009f0c:	4b04      	ldr	r3, [pc, #16]	; (8009f20 <pvTaskIncrementMutexHeldCount+0x14>)
 8009f0e:	681a      	ldr	r2, [r3, #0]
 8009f10:	b11a      	cbz	r2, 8009f1a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009f12:	6819      	ldr	r1, [r3, #0]
 8009f14:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8009f16:	3201      	adds	r2, #1
 8009f18:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8009f1a:	6818      	ldr	r0, [r3, #0]
	}
 8009f1c:	4770      	bx	lr
 8009f1e:	bf00      	nop
 8009f20:	24008318 	.word	0x24008318

08009f24 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009f24:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009f26:	4c11      	ldr	r4, [pc, #68]	; (8009f6c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009f28:	f7fe fc2c 	bl	8008784 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009f2c:	6825      	ldr	r5, [r4, #0]
 8009f2e:	b9bd      	cbnz	r5, 8009f60 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009f30:	4f0f      	ldr	r7, [pc, #60]	; (8009f70 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009f32:	4e10      	ldr	r6, [pc, #64]	; (8009f74 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009f34:	4638      	mov	r0, r7
 8009f36:	f7fe fb7b 	bl	8008630 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009f3a:	4630      	mov	r0, r6
 8009f3c:	f7fe fb78 	bl	8008630 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009f40:	4b0d      	ldr	r3, [pc, #52]	; (8009f78 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009f42:	4a0e      	ldr	r2, [pc, #56]	; (8009f7c <prvCheckForValidListAndQueue+0x58>)
 8009f44:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 8009f46:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009f48:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 8009f4a:	4b0d      	ldr	r3, [pc, #52]	; (8009f80 <prvCheckForValidListAndQueue+0x5c>)
 8009f4c:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009f4e:	4b0d      	ldr	r3, [pc, #52]	; (8009f84 <prvCheckForValidListAndQueue+0x60>)
 8009f50:	9500      	str	r5, [sp, #0]
 8009f52:	f7fe fe27 	bl	8008ba4 <xQueueGenericCreateStatic>
 8009f56:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009f58:	b110      	cbz	r0, 8009f60 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009f5a:	490b      	ldr	r1, [pc, #44]	; (8009f88 <prvCheckForValidListAndQueue+0x64>)
 8009f5c:	f7ff f9f2 	bl	8009344 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009f60:	b003      	add	sp, #12
 8009f62:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009f66:	f7fe bc2d 	b.w	80087c4 <vPortExitCritical>
 8009f6a:	bf00      	nop
 8009f6c:	24008938 	.word	0x24008938
 8009f70:	240088bc 	.word	0x240088bc
 8009f74:	240088d0 	.word	0x240088d0
 8009f78:	24008814 	.word	0x24008814
 8009f7c:	2400881c 	.word	0x2400881c
 8009f80:	24008818 	.word	0x24008818
 8009f84:	240088e8 	.word	0x240088e8
 8009f88:	0801ece1 	.word	0x0801ece1

08009f8c <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8009f8c:	4291      	cmp	r1, r2
{
 8009f8e:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009f90:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009f92:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009f94:	d80a      	bhi.n	8009fac <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009f96:	1ad2      	subs	r2, r2, r3
 8009f98:	6983      	ldr	r3, [r0, #24]
 8009f9a:	429a      	cmp	r2, r3
 8009f9c:	d20d      	bcs.n	8009fba <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009f9e:	1d01      	adds	r1, r0, #4
 8009fa0:	4b07      	ldr	r3, [pc, #28]	; (8009fc0 <prvInsertTimerInActiveList+0x34>)
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009fa2:	6818      	ldr	r0, [r3, #0]
 8009fa4:	f7fe fb5e 	bl	8008664 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009fa8:	2000      	movs	r0, #0
}
 8009faa:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009fac:	429a      	cmp	r2, r3
 8009fae:	d201      	bcs.n	8009fb4 <prvInsertTimerInActiveList+0x28>
 8009fb0:	4299      	cmp	r1, r3
 8009fb2:	d202      	bcs.n	8009fba <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009fb4:	1d01      	adds	r1, r0, #4
 8009fb6:	4b03      	ldr	r3, [pc, #12]	; (8009fc4 <prvInsertTimerInActiveList+0x38>)
 8009fb8:	e7f3      	b.n	8009fa2 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009fba:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009fbc:	e7f5      	b.n	8009faa <prvInsertTimerInActiveList+0x1e>
 8009fbe:	bf00      	nop
 8009fc0:	24008818 	.word	0x24008818
 8009fc4:	24008814 	.word	0x24008814

08009fc8 <xTimerCreateTimerTask>:
{
 8009fc8:	b510      	push	{r4, lr}
 8009fca:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009fcc:	f7ff ffaa 	bl	8009f24 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009fd0:	4b12      	ldr	r3, [pc, #72]	; (800a01c <xTimerCreateTimerTask+0x54>)
 8009fd2:	681b      	ldr	r3, [r3, #0]
 8009fd4:	b1b3      	cbz	r3, 800a004 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009fd6:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009fd8:	aa07      	add	r2, sp, #28
 8009fda:	a906      	add	r1, sp, #24
 8009fdc:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009fde:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009fe2:	f7fe fa1f 	bl	8008424 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009fe6:	9b05      	ldr	r3, [sp, #20]
 8009fe8:	9a07      	ldr	r2, [sp, #28]
 8009fea:	9302      	str	r3, [sp, #8]
 8009fec:	9b06      	ldr	r3, [sp, #24]
 8009fee:	490c      	ldr	r1, [pc, #48]	; (800a020 <xTimerCreateTimerTask+0x58>)
 8009ff0:	9301      	str	r3, [sp, #4]
 8009ff2:	2302      	movs	r3, #2
 8009ff4:	480b      	ldr	r0, [pc, #44]	; (800a024 <xTimerCreateTimerTask+0x5c>)
 8009ff6:	9300      	str	r3, [sp, #0]
 8009ff8:	4623      	mov	r3, r4
 8009ffa:	f7ff fb7d 	bl	80096f8 <xTaskCreateStatic>
 8009ffe:	4b0a      	ldr	r3, [pc, #40]	; (800a028 <xTimerCreateTimerTask+0x60>)
 800a000:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a002:	b940      	cbnz	r0, 800a016 <xTimerCreateTimerTask+0x4e>
 800a004:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a008:	f383 8811 	msr	BASEPRI, r3
 800a00c:	f3bf 8f6f 	isb	sy
 800a010:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a014:	e7fe      	b.n	800a014 <xTimerCreateTimerTask+0x4c>
}
 800a016:	2001      	movs	r0, #1
 800a018:	b008      	add	sp, #32
 800a01a:	bd10      	pop	{r4, pc}
 800a01c:	24008938 	.word	0x24008938
 800a020:	0801ece6 	.word	0x0801ece6
 800a024:	0800a12d 	.word	0x0800a12d
 800a028:	2400893c 	.word	0x2400893c

0800a02c <xTimerGenericCommand>:
{
 800a02c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a02e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a030:	4604      	mov	r4, r0
{
 800a032:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a034:	b940      	cbnz	r0, 800a048 <xTimerGenericCommand+0x1c>
 800a036:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a03a:	f383 8811 	msr	BASEPRI, r3
 800a03e:	f3bf 8f6f 	isb	sy
 800a042:	f3bf 8f4f 	dsb	sy
 800a046:	e7fe      	b.n	800a046 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a048:	4d0c      	ldr	r5, [pc, #48]	; (800a07c <xTimerGenericCommand+0x50>)
 800a04a:	6828      	ldr	r0, [r5, #0]
 800a04c:	b178      	cbz	r0, 800a06e <xTimerGenericCommand+0x42>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a04e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a050:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a052:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a056:	dc0c      	bgt.n	800a072 <xTimerGenericCommand+0x46>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a058:	f7ff fe72 	bl	8009d40 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a05c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a05e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a060:	4669      	mov	r1, sp
 800a062:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a064:	bf0c      	ite	eq
 800a066:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a068:	461a      	movne	r2, r3
 800a06a:	f7fe fe50 	bl	8008d0e <xQueueGenericSend>
}
 800a06e:	b004      	add	sp, #16
 800a070:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a072:	2300      	movs	r3, #0
 800a074:	4669      	mov	r1, sp
 800a076:	f7fe fefd 	bl	8008e74 <xQueueGenericSendFromISR>
 800a07a:	e7f8      	b.n	800a06e <xTimerGenericCommand+0x42>
 800a07c:	24008938 	.word	0x24008938

0800a080 <prvSampleTimeNow>:
{
 800a080:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a084:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a128 <prvSampleTimeNow+0xa8>
{
 800a088:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a08a:	f7ff fba3 	bl	80097d4 <xTaskGetTickCount>
 800a08e:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a090:	f8d8 3000 	ldr.w	r3, [r8]
 800a094:	4283      	cmp	r3, r0
 800a096:	d940      	bls.n	800a11a <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a098:	4f21      	ldr	r7, [pc, #132]	; (800a120 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a09a:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a09e:	683b      	ldr	r3, [r7, #0]
 800a0a0:	681a      	ldr	r2, [r3, #0]
 800a0a2:	b95a      	cbnz	r2, 800a0bc <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a0a4:	4a1f      	ldr	r2, [pc, #124]	; (800a124 <prvSampleTimeNow+0xa4>)
 800a0a6:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 800a0a8:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a0aa:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 800a0ac:	6039      	str	r1, [r7, #0]
}
 800a0ae:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a0b0:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a0b2:	f8c8 5000 	str.w	r5, [r8]
}
 800a0b6:	b004      	add	sp, #16
 800a0b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a0bc:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0be:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a0c0:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a0c4:	1d21      	adds	r1, r4, #4
 800a0c6:	4608      	mov	r0, r1
 800a0c8:	9103      	str	r1, [sp, #12]
 800a0ca:	f7fe fae2 	bl	8008692 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a0ce:	6a23      	ldr	r3, [r4, #32]
 800a0d0:	4620      	mov	r0, r4
 800a0d2:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a0d4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a0d8:	9903      	ldr	r1, [sp, #12]
 800a0da:	f013 0f04 	tst.w	r3, #4
 800a0de:	d0de      	beq.n	800a09e <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a0e0:	69a3      	ldr	r3, [r4, #24]
 800a0e2:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a0e4:	459a      	cmp	sl, r3
 800a0e6:	d205      	bcs.n	800a0f4 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a0e8:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a0ea:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a0ec:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a0ee:	f7fe fab9 	bl	8008664 <vListInsert>
 800a0f2:	e7d4      	b.n	800a09e <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a0f4:	2300      	movs	r3, #0
 800a0f6:	4652      	mov	r2, sl
 800a0f8:	4620      	mov	r0, r4
 800a0fa:	f8cd 9000 	str.w	r9, [sp]
 800a0fe:	4619      	mov	r1, r3
 800a100:	f7ff ff94 	bl	800a02c <xTimerGenericCommand>
				configASSERT( xResult );
 800a104:	2800      	cmp	r0, #0
 800a106:	d1ca      	bne.n	800a09e <prvSampleTimeNow+0x1e>
 800a108:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a10c:	f383 8811 	msr	BASEPRI, r3
 800a110:	f3bf 8f6f 	isb	sy
 800a114:	f3bf 8f4f 	dsb	sy
 800a118:	e7fe      	b.n	800a118 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a11a:	2300      	movs	r3, #0
 800a11c:	e7c7      	b.n	800a0ae <prvSampleTimeNow+0x2e>
 800a11e:	bf00      	nop
 800a120:	24008814 	.word	0x24008814
 800a124:	24008818 	.word	0x24008818
 800a128:	240088e4 	.word	0x240088e4

0800a12c <prvTimerTask>:
{
 800a12c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a130:	4d6e      	ldr	r5, [pc, #440]	; (800a2ec <prvTimerTask+0x1c0>)
{
 800a132:	b089      	sub	sp, #36	; 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a134:	4e6e      	ldr	r6, [pc, #440]	; (800a2f0 <prvTimerTask+0x1c4>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a136:	682b      	ldr	r3, [r5, #0]
 800a138:	f8d3 8000 	ldr.w	r8, [r3]
 800a13c:	f1b8 0f00 	cmp.w	r8, #0
 800a140:	d035      	beq.n	800a1ae <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a142:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a144:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a146:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 800a14a:	f7ff fb3b 	bl	80097c4 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a14e:	a804      	add	r0, sp, #16
 800a150:	f7ff ff96 	bl	800a080 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a154:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a156:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a158:	2b00      	cmp	r3, #0
 800a15a:	d169      	bne.n	800a230 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a15c:	2c00      	cmp	r4, #0
 800a15e:	d14c      	bne.n	800a1fa <prvTimerTask+0xce>
 800a160:	4540      	cmp	r0, r8
 800a162:	d350      	bcc.n	800a206 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a164:	f7ff fbd2 	bl	800990c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a168:	682b      	ldr	r3, [r5, #0]
 800a16a:	68db      	ldr	r3, [r3, #12]
 800a16c:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a16e:	1d38      	adds	r0, r7, #4
 800a170:	f7fe fa8f 	bl	8008692 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a174:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a178:	0758      	lsls	r0, r3, #29
 800a17a:	d51a      	bpl.n	800a1b2 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a17c:	69b9      	ldr	r1, [r7, #24]
 800a17e:	4643      	mov	r3, r8
 800a180:	464a      	mov	r2, r9
 800a182:	4638      	mov	r0, r7
 800a184:	4441      	add	r1, r8
 800a186:	f7ff ff01 	bl	8009f8c <prvInsertTimerInActiveList>
 800a18a:	b1b0      	cbz	r0, 800a1ba <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a18c:	4623      	mov	r3, r4
 800a18e:	4642      	mov	r2, r8
 800a190:	4621      	mov	r1, r4
 800a192:	4638      	mov	r0, r7
 800a194:	9400      	str	r4, [sp, #0]
 800a196:	f7ff ff49 	bl	800a02c <xTimerGenericCommand>
			configASSERT( xResult );
 800a19a:	b970      	cbnz	r0, 800a1ba <prvTimerTask+0x8e>
 800a19c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1a0:	f383 8811 	msr	BASEPRI, r3
 800a1a4:	f3bf 8f6f 	isb	sy
 800a1a8:	f3bf 8f4f 	dsb	sy
 800a1ac:	e7fe      	b.n	800a1ac <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a1ae:	2401      	movs	r4, #1
 800a1b0:	e7cb      	b.n	800a14a <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a1b2:	f023 0301 	bic.w	r3, r3, #1
 800a1b6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a1ba:	6a3b      	ldr	r3, [r7, #32]
 800a1bc:	4638      	mov	r0, r7
 800a1be:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a1c0:	2200      	movs	r2, #0
 800a1c2:	a904      	add	r1, sp, #16
 800a1c4:	6830      	ldr	r0, [r6, #0]
 800a1c6:	f7fe ff0b 	bl	8008fe0 <xQueueReceive>
 800a1ca:	2800      	cmp	r0, #0
 800a1cc:	d0b3      	beq.n	800a136 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a1ce:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a1d0:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a1d2:	2b00      	cmp	r3, #0
 800a1d4:	db2f      	blt.n	800a236 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a1d6:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a1d8:	6963      	ldr	r3, [r4, #20]
 800a1da:	2b00      	cmp	r3, #0
 800a1dc:	d132      	bne.n	800a244 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a1de:	a803      	add	r0, sp, #12
 800a1e0:	f7ff ff4e 	bl	800a080 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a1e4:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a1e6:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a1e8:	2b09      	cmp	r3, #9
 800a1ea:	d8e9      	bhi.n	800a1c0 <prvTimerTask+0x94>
 800a1ec:	e8df f003 	tbb	[pc, r3]
 800a1f0:	572e2e2e 	.word	0x572e2e2e
 800a1f4:	2e2e765e 	.word	0x2e2e765e
 800a1f8:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a1fa:	4b3e      	ldr	r3, [pc, #248]	; (800a2f4 <prvTimerTask+0x1c8>)
 800a1fc:	681b      	ldr	r3, [r3, #0]
 800a1fe:	681c      	ldr	r4, [r3, #0]
 800a200:	fab4 f484 	clz	r4, r4
 800a204:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a206:	4622      	mov	r2, r4
 800a208:	eba8 0109 	sub.w	r1, r8, r9
 800a20c:	6830      	ldr	r0, [r6, #0]
 800a20e:	f7ff f8d6 	bl	80093be <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a212:	f7ff fb7b 	bl	800990c <xTaskResumeAll>
 800a216:	2800      	cmp	r0, #0
 800a218:	d1d2      	bne.n	800a1c0 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a21a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a21e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a222:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a226:	f3bf 8f4f 	dsb	sy
 800a22a:	f3bf 8f6f 	isb	sy
 800a22e:	e7c7      	b.n	800a1c0 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a230:	f7ff fb6c 	bl	800990c <xTaskResumeAll>
}
 800a234:	e7c4      	b.n	800a1c0 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a236:	9b05      	ldr	r3, [sp, #20]
 800a238:	9907      	ldr	r1, [sp, #28]
 800a23a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a23c:	9b04      	ldr	r3, [sp, #16]
 800a23e:	2b00      	cmp	r3, #0
 800a240:	dbbe      	blt.n	800a1c0 <prvTimerTask+0x94>
 800a242:	e7c8      	b.n	800a1d6 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a244:	1d20      	adds	r0, r4, #4
 800a246:	f7fe fa24 	bl	8008692 <uxListRemove>
 800a24a:	e7c8      	b.n	800a1de <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a24c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a250:	4620      	mov	r0, r4
 800a252:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a254:	f043 0301 	orr.w	r3, r3, #1
 800a258:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a25c:	9b05      	ldr	r3, [sp, #20]
 800a25e:	4419      	add	r1, r3
 800a260:	f7ff fe94 	bl	8009f8c <prvInsertTimerInActiveList>
 800a264:	2800      	cmp	r0, #0
 800a266:	d0ab      	beq.n	800a1c0 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a268:	6a23      	ldr	r3, [r4, #32]
 800a26a:	4620      	mov	r0, r4
 800a26c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a26e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a272:	0759      	lsls	r1, r3, #29
 800a274:	d5a4      	bpl.n	800a1c0 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a276:	69a2      	ldr	r2, [r4, #24]
 800a278:	2300      	movs	r3, #0
 800a27a:	9905      	ldr	r1, [sp, #20]
 800a27c:	4620      	mov	r0, r4
 800a27e:	9300      	str	r3, [sp, #0]
 800a280:	440a      	add	r2, r1
 800a282:	4619      	mov	r1, r3
 800a284:	f7ff fed2 	bl	800a02c <xTimerGenericCommand>
							configASSERT( xResult );
 800a288:	2800      	cmp	r0, #0
 800a28a:	d199      	bne.n	800a1c0 <prvTimerTask+0x94>
 800a28c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a290:	f383 8811 	msr	BASEPRI, r3
 800a294:	f3bf 8f6f 	isb	sy
 800a298:	f3bf 8f4f 	dsb	sy
 800a29c:	e7fe      	b.n	800a29c <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a29e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a2a2:	f023 0301 	bic.w	r3, r3, #1
 800a2a6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a2aa:	e789      	b.n	800a1c0 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a2ac:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a2b0:	f043 0301 	orr.w	r3, r3, #1
 800a2b4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a2b8:	9905      	ldr	r1, [sp, #20]
 800a2ba:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a2bc:	b941      	cbnz	r1, 800a2d0 <prvTimerTask+0x1a4>
 800a2be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2c2:	f383 8811 	msr	BASEPRI, r3
 800a2c6:	f3bf 8f6f 	isb	sy
 800a2ca:	f3bf 8f4f 	dsb	sy
 800a2ce:	e7fe      	b.n	800a2ce <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a2d0:	4603      	mov	r3, r0
 800a2d2:	4401      	add	r1, r0
 800a2d4:	4620      	mov	r0, r4
 800a2d6:	f7ff fe59 	bl	8009f8c <prvInsertTimerInActiveList>
					break;
 800a2da:	e771      	b.n	800a1c0 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a2dc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a2e0:	079a      	lsls	r2, r3, #30
 800a2e2:	d4de      	bmi.n	800a2a2 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a2e4:	4620      	mov	r0, r4
 800a2e6:	f7fe f965 	bl	80085b4 <vPortFree>
 800a2ea:	e769      	b.n	800a1c0 <prvTimerTask+0x94>
 800a2ec:	24008814 	.word	0x24008814
 800a2f0:	24008938 	.word	0x24008938
 800a2f4:	24008818 	.word	0x24008818

0800a2f8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a2f8:	8880      	ldrh	r0, [r0, #4]
 800a2fa:	4770      	bx	lr

0800a2fc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a2fc:	b570      	push	{r4, r5, r6, lr}
 800a2fe:	6803      	ldr	r3, [r0, #0]
 800a300:	460c      	mov	r4, r1
 800a302:	2100      	movs	r1, #0
 800a304:	4605      	mov	r5, r0
 800a306:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a308:	4798      	blx	r3
 800a30a:	4606      	mov	r6, r0
 800a30c:	682b      	ldr	r3, [r5, #0]
 800a30e:	4628      	mov	r0, r5
 800a310:	1ba4      	subs	r4, r4, r6
 800a312:	6a1b      	ldr	r3, [r3, #32]
 800a314:	b2a4      	uxth	r4, r4
 800a316:	4798      	blx	r3
 800a318:	fbb4 f0f0 	udiv	r0, r4, r0
 800a31c:	bd70      	pop	{r4, r5, r6, pc}

0800a31e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a31e:	2300      	movs	r3, #0
 800a320:	8083      	strh	r3, [r0, #4]
 800a322:	4770      	bx	lr

0800a324 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a324:	b510      	push	{r4, lr}
 800a326:	6803      	ldr	r3, [r0, #0]
 800a328:	4604      	mov	r4, r0
 800a32a:	8881      	ldrh	r1, [r0, #4]
 800a32c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a32e:	4798      	blx	r3
 800a330:	88a3      	ldrh	r3, [r4, #4]
 800a332:	3301      	adds	r3, #1
 800a334:	80a3      	strh	r3, [r4, #4]
 800a336:	bd10      	pop	{r4, pc}

0800a338 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a338:	6803      	ldr	r3, [r0, #0]
 800a33a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a33c:	4718      	bx	r3

0800a33e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a33e:	4770      	bx	lr

0800a340 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a340:	4a02      	ldr	r2, [pc, #8]	; (800a34c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a342:	6002      	str	r2, [r0, #0]
 800a344:	2200      	movs	r2, #0
 800a346:	8082      	strh	r2, [r0, #4]
 800a348:	4770      	bx	lr
 800a34a:	bf00      	nop
 800a34c:	0801ecf8 	.word	0x0801ecf8

0800a350 <_ZN8touchgfx9Container13getFirstChildEv>:
 800a350:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800a352:	4770      	bx	lr

0800a354 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800a354:	b510      	push	{r4, lr}
 800a356:	6803      	ldr	r3, [r0, #0]
 800a358:	4604      	mov	r4, r0
 800a35a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800a35e:	4798      	blx	r3
 800a360:	b110      	cbz	r0, 800a368 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800a362:	4620      	mov	r0, r4
 800a364:	f7f7 ff9c 	bl	80022a0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800a368:	bd10      	pop	{r4, pc}

0800a36a <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800a36a:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800a36e:	4770      	bx	lr

0800a370 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800a370:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800a374:	4770      	bx	lr

0800a376 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800a376:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800a37a:	4770      	bx	lr

0800a37c <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800a37c:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800a380:	4770      	bx	lr

0800a382 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800a382:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a384:	461e      	mov	r6, r3
 800a386:	6803      	ldr	r3, [r0, #0]
 800a388:	460f      	mov	r7, r1
 800a38a:	4604      	mov	r4, r0
 800a38c:	4615      	mov	r5, r2
 800a38e:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800a392:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800a396:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800a39a:	4798      	blx	r3
 800a39c:	b93e      	cbnz	r6, 800a3ae <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800a39e:	1bed      	subs	r5, r5, r7
 800a3a0:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800a3a4:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800a3a8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800a3ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a3ae:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800a3b2:	e7f7      	b.n	800a3a4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800a3b4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800a3b4:	b510      	push	{r4, lr}
 800a3b6:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800a3ba:	600c      	str	r4, [r1, #0]
 800a3bc:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800a3c0:	6011      	str	r1, [r2, #0]
 800a3c2:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800a3c6:	801a      	strh	r2, [r3, #0]
 800a3c8:	9b02      	ldr	r3, [sp, #8]
 800a3ca:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800a3ce:	801a      	strh	r2, [r3, #0]
 800a3d0:	bd10      	pop	{r4, pc}

0800a3d2 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800a3d2:	b510      	push	{r4, lr}
 800a3d4:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800a3d8:	600c      	str	r4, [r1, #0]
 800a3da:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800a3de:	6011      	str	r1, [r2, #0]
 800a3e0:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800a3e4:	801a      	strh	r2, [r3, #0]
 800a3e6:	bd10      	pop	{r4, pc}

0800a3e8 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800a3e8:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800a3ec:	600b      	str	r3, [r1, #0]
 800a3ee:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800a3f2:	6013      	str	r3, [r2, #0]
 800a3f4:	4770      	bx	lr

0800a3f6 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800a3f6:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800a3fa:	4770      	bx	lr

0800a3fc <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800a3fc:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800a400:	4770      	bx	lr

0800a402 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800a402:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800a406:	4770      	bx	lr

0800a408 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800a408:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800a40c:	4770      	bx	lr

0800a40e <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800a40e:	4770      	bx	lr

0800a410 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800a410:	b510      	push	{r4, lr}
 800a412:	4604      	mov	r4, r0
 800a414:	21b4      	movs	r1, #180	; 0xb4
 800a416:	f011 fff6 	bl	801c406 <_ZdlPvj>
 800a41a:	4620      	mov	r0, r4
 800a41c:	bd10      	pop	{r4, pc}

0800a41e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800a41e:	b570      	push	{r4, r5, r6, lr}
 800a420:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800a424:	4604      	mov	r4, r0
 800a426:	4616      	mov	r6, r2
 800a428:	428d      	cmp	r5, r1
 800a42a:	bfb8      	it	lt
 800a42c:	460d      	movlt	r5, r1
 800a42e:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800a432:	428d      	cmp	r5, r1
 800a434:	bfa8      	it	ge
 800a436:	460d      	movge	r5, r1
 800a438:	b99a      	cbnz	r2, 800a462 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800a43a:	6803      	ldr	r3, [r0, #0]
 800a43c:	4629      	mov	r1, r5
 800a43e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800a442:	4798      	blx	r3
 800a444:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800a448:	b368      	cbz	r0, 800a4a6 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800a44a:	6803      	ldr	r3, [r0, #0]
 800a44c:	68db      	ldr	r3, [r3, #12]
 800a44e:	4798      	blx	r3
 800a450:	b348      	cbz	r0, 800a4a6 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800a452:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800a456:	4621      	mov	r1, r4
 800a458:	6803      	ldr	r3, [r0, #0]
 800a45a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a45e:	689b      	ldr	r3, [r3, #8]
 800a460:	4718      	bx	r3
 800a462:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800a466:	2b00      	cmp	r3, #0
 800a468:	dd08      	ble.n	800a47c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800a46a:	f005 fac3 	bl	800f9f4 <_ZN8touchgfx11Application11getInstanceEv>
 800a46e:	4621      	mov	r1, r4
 800a470:	3004      	adds	r0, #4
 800a472:	f005 fae4 	bl	800fa3e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800a476:	2300      	movs	r3, #0
 800a478:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800a47c:	6823      	ldr	r3, [r4, #0]
 800a47e:	4620      	mov	r0, r4
 800a480:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800a484:	4798      	blx	r3
 800a486:	2300      	movs	r3, #0
 800a488:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800a48c:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800a490:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800a494:	f005 faae 	bl	800f9f4 <_ZN8touchgfx11Application11getInstanceEv>
 800a498:	4621      	mov	r1, r4
 800a49a:	3004      	adds	r0, #4
 800a49c:	f005 fb78 	bl	800fb90 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800a4a0:	2301      	movs	r3, #1
 800a4a2:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800a4a6:	bd70      	pop	{r4, r5, r6, pc}

0800a4a8 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800a4a8:	b510      	push	{r4, lr}
 800a4aa:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800a4ae:	4604      	mov	r4, r0
 800a4b0:	4299      	cmp	r1, r3
 800a4b2:	bfb8      	it	lt
 800a4b4:	4619      	movlt	r1, r3
 800a4b6:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800a4ba:	4299      	cmp	r1, r3
 800a4bc:	bfa8      	it	ge
 800a4be:	4619      	movge	r1, r3
 800a4c0:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800a4c4:	428b      	cmp	r3, r1
 800a4c6:	d010      	beq.n	800a4ea <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800a4c8:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800a4cc:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800a4d0:	b158      	cbz	r0, 800a4ea <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800a4d2:	6803      	ldr	r3, [r0, #0]
 800a4d4:	68db      	ldr	r3, [r3, #12]
 800a4d6:	4798      	blx	r3
 800a4d8:	b138      	cbz	r0, 800a4ea <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800a4da:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800a4de:	4621      	mov	r1, r4
 800a4e0:	6803      	ldr	r3, [r0, #0]
 800a4e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a4e6:	689b      	ldr	r3, [r3, #8]
 800a4e8:	4718      	bx	r3
 800a4ea:	bd10      	pop	{r4, pc}

0800a4ec <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800a4ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a4ee:	4604      	mov	r4, r0
 800a4f0:	460d      	mov	r5, r1
 800a4f2:	b1a9      	cbz	r1, 800a520 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800a4f4:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800a4f8:	ab01      	add	r3, sp, #4
 800a4fa:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800a4fe:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800a502:	1b89      	subs	r1, r1, r6
 800a504:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800a508:	1a12      	subs	r2, r2, r0
 800a50a:	1a38      	subs	r0, r7, r0
 800a50c:	f006 fccb 	bl	8010ea6 <_ZN8touchgfx6muldivElllRl>
 800a510:	4629      	mov	r1, r5
 800a512:	ab01      	add	r3, sp, #4
 800a514:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800a518:	4430      	add	r0, r6
 800a51a:	f006 fcc4 	bl	8010ea6 <_ZN8touchgfx6muldivElllRl>
 800a51e:	b285      	uxth	r5, r0
 800a520:	4628      	mov	r0, r5
 800a522:	b003      	add	sp, #12
 800a524:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a526 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800a526:	b570      	push	{r4, r5, r6, lr}
 800a528:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800a52c:	4604      	mov	r4, r0
 800a52e:	2b00      	cmp	r3, #0
 800a530:	d035      	beq.n	800a59e <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800a532:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800a536:	2100      	movs	r1, #0
 800a538:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800a53c:	3001      	adds	r0, #1
 800a53e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800a542:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800a546:	b280      	uxth	r0, r0
 800a548:	1ad2      	subs	r2, r2, r3
 800a54a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800a54e:	b212      	sxth	r2, r2
 800a550:	47a8      	blx	r5
 800a552:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800a556:	6823      	ldr	r3, [r4, #0]
 800a558:	4401      	add	r1, r0
 800a55a:	4620      	mov	r0, r4
 800a55c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800a560:	4798      	blx	r3
 800a562:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800a566:	429a      	cmp	r2, r3
 800a568:	db19      	blt.n	800a59e <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800a56a:	2500      	movs	r5, #0
 800a56c:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800a570:	f005 fa40 	bl	800f9f4 <_ZN8touchgfx11Application11getInstanceEv>
 800a574:	4621      	mov	r1, r4
 800a576:	3004      	adds	r0, #4
 800a578:	f005 fa61 	bl	800fa3e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800a57c:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800a580:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800a584:	b158      	cbz	r0, 800a59e <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800a586:	6803      	ldr	r3, [r0, #0]
 800a588:	68db      	ldr	r3, [r3, #12]
 800a58a:	4798      	blx	r3
 800a58c:	b138      	cbz	r0, 800a59e <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800a58e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800a592:	4621      	mov	r1, r4
 800a594:	6803      	ldr	r3, [r0, #0]
 800a596:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a59a:	689b      	ldr	r3, [r3, #8]
 800a59c:	4718      	bx	r3
 800a59e:	bd70      	pop	{r4, r5, r6, pc}

0800a5a0 <_ZN8touchgfx8DrawableC1Ev>:
 800a5a0:	4a0a      	ldr	r2, [pc, #40]	; (800a5cc <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800a5a2:	6002      	str	r2, [r0, #0]
 800a5a4:	2200      	movs	r2, #0
 800a5a6:	8082      	strh	r2, [r0, #4]
 800a5a8:	80c2      	strh	r2, [r0, #6]
 800a5aa:	8102      	strh	r2, [r0, #8]
 800a5ac:	8142      	strh	r2, [r0, #10]
 800a5ae:	8182      	strh	r2, [r0, #12]
 800a5b0:	81c2      	strh	r2, [r0, #14]
 800a5b2:	8202      	strh	r2, [r0, #16]
 800a5b4:	8242      	strh	r2, [r0, #18]
 800a5b6:	61c2      	str	r2, [r0, #28]
 800a5b8:	8402      	strh	r2, [r0, #32]
 800a5ba:	8442      	strh	r2, [r0, #34]	; 0x22
 800a5bc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800a5c0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a5c4:	2201      	movs	r2, #1
 800a5c6:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a5ca:	4770      	bx	lr
 800a5cc:	0801f3ac 	.word	0x0801f3ac

0800a5d0 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800a5d0:	b570      	push	{r4, r5, r6, lr}
 800a5d2:	6803      	ldr	r3, [r0, #0]
 800a5d4:	4604      	mov	r4, r0
 800a5d6:	4615      	mov	r5, r2
 800a5d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a5da:	4798      	blx	r3
 800a5dc:	6823      	ldr	r3, [r4, #0]
 800a5de:	4629      	mov	r1, r5
 800a5e0:	4620      	mov	r0, r4
 800a5e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a5e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a5e8:	4718      	bx	r3

0800a5ea <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800a5ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a5ee:	4604      	mov	r4, r0
 800a5f0:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800a5f4:	4698      	mov	r8, r3
 800a5f6:	460e      	mov	r6, r1
 800a5f8:	4615      	mov	r5, r2
 800a5fa:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800a5fe:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800a602:	4619      	mov	r1, r3
 800a604:	463a      	mov	r2, r7
 800a606:	3058      	adds	r0, #88	; 0x58
 800a608:	f7ff ffe2 	bl	800a5d0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a60c:	4446      	add	r6, r8
 800a60e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800a612:	443d      	add	r5, r7
 800a614:	42b3      	cmp	r3, r6
 800a616:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800a61a:	bfb8      	it	lt
 800a61c:	8126      	strhlt	r6, [r4, #8]
 800a61e:	42ab      	cmp	r3, r5
 800a620:	bfb8      	it	lt
 800a622:	8165      	strhlt	r5, [r4, #10]
 800a624:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a628 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800a628:	b510      	push	{r4, lr}
 800a62a:	4604      	mov	r4, r0
 800a62c:	302c      	adds	r0, #44	; 0x2c
 800a62e:	f002 fdfc 	bl	800d22a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a632:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800a636:	4620      	mov	r0, r4
 800a638:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800a63c:	f7ff ffc8 	bl	800a5d0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a640:	bd10      	pop	{r4, pc}
	...

0800a644 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800a644:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a646:	4604      	mov	r4, r0
 800a648:	2500      	movs	r5, #0
 800a64a:	f7ff ffa9 	bl	800a5a0 <_ZN8touchgfx8DrawableC1Ev>
 800a64e:	4b24      	ldr	r3, [pc, #144]	; (800a6e0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800a650:	4626      	mov	r6, r4
 800a652:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800a656:	2226      	movs	r2, #38	; 0x26
 800a658:	4629      	mov	r1, r5
 800a65a:	62a5      	str	r5, [r4, #40]	; 0x28
 800a65c:	f846 3b2c 	str.w	r3, [r6], #44
 800a660:	4630      	mov	r0, r6
 800a662:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a666:	f012 fa31 	bl	801cacc <memset>
 800a66a:	4630      	mov	r0, r6
 800a66c:	f7ff ff98 	bl	800a5a0 <_ZN8touchgfx8DrawableC1Ev>
 800a670:	a902      	add	r1, sp, #8
 800a672:	4b1c      	ldr	r3, [pc, #112]	; (800a6e4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800a674:	4630      	mov	r0, r6
 800a676:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800a67a:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800a67e:	62e3      	str	r3, [r4, #44]	; 0x2c
 800a680:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800a684:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800a688:	f002 fdcf 	bl	800d22a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a68c:	4638      	mov	r0, r7
 800a68e:	f7ff ff87 	bl	800a5a0 <_ZN8touchgfx8DrawableC1Ev>
 800a692:	4b15      	ldr	r3, [pc, #84]	; (800a6e8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800a694:	4629      	mov	r1, r5
 800a696:	4630      	mov	r0, r6
 800a698:	65a3      	str	r3, [r4, #88]	; 0x58
 800a69a:	2364      	movs	r3, #100	; 0x64
 800a69c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800a6a0:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800a6a4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800a6a8:	4b10      	ldr	r3, [pc, #64]	; (800a6ec <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800a6aa:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800a6ae:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800a6b2:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800a6b6:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800a6ba:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800a6be:	f7f7 fd49 	bl	8002154 <_ZN8touchgfx8Drawable4setXEs>
 800a6c2:	4629      	mov	r1, r5
 800a6c4:	4630      	mov	r0, r6
 800a6c6:	f7f7 fd47 	bl	8002158 <_ZN8touchgfx8Drawable4setYEs>
 800a6ca:	4631      	mov	r1, r6
 800a6cc:	4620      	mov	r0, r4
 800a6ce:	f000 f819 	bl	800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a6d2:	4620      	mov	r0, r4
 800a6d4:	4639      	mov	r1, r7
 800a6d6:	f000 f815 	bl	800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a6da:	4620      	mov	r0, r4
 800a6dc:	b003      	add	sp, #12
 800a6de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a6e0:	0801ed2c 	.word	0x0801ed2c
 800a6e4:	0801f2e4 	.word	0x0801f2e4
 800a6e8:	0801ee00 	.word	0x0801ee00
 800a6ec:	08011519 	.word	0x08011519

0800a6f0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a6f0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a6f2:	2000      	movs	r0, #0
 800a6f4:	b12b      	cbz	r3, 800a702 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a6f6:	b920      	cbnz	r0, 800a702 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a6f8:	1a5a      	subs	r2, r3, r1
 800a6fa:	699b      	ldr	r3, [r3, #24]
 800a6fc:	4250      	negs	r0, r2
 800a6fe:	4150      	adcs	r0, r2
 800a700:	e7f8      	b.n	800a6f4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a702:	4770      	bx	lr

0800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a704:	2300      	movs	r3, #0
 800a706:	6148      	str	r0, [r1, #20]
 800a708:	618b      	str	r3, [r1, #24]
 800a70a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a70c:	b913      	cbnz	r3, 800a714 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a70e:	6281      	str	r1, [r0, #40]	; 0x28
 800a710:	4770      	bx	lr
 800a712:	4613      	mov	r3, r2
 800a714:	699a      	ldr	r2, [r3, #24]
 800a716:	2a00      	cmp	r2, #0
 800a718:	d1fb      	bne.n	800a712 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a71a:	6199      	str	r1, [r3, #24]
 800a71c:	4770      	bx	lr

0800a71e <_ZN8touchgfx9Container9removeAllEv>:
 800a71e:	2200      	movs	r2, #0
 800a720:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a722:	b123      	cbz	r3, 800a72e <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a724:	6999      	ldr	r1, [r3, #24]
 800a726:	6281      	str	r1, [r0, #40]	; 0x28
 800a728:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a72c:	e7f8      	b.n	800a720 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a72e:	4770      	bx	lr

0800a730 <_ZN8touchgfx9Container6unlinkEv>:
 800a730:	2300      	movs	r3, #0
 800a732:	6283      	str	r3, [r0, #40]	; 0x28
 800a734:	4770      	bx	lr

0800a736 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a736:	2200      	movs	r2, #0
 800a738:	8002      	strh	r2, [r0, #0]
 800a73a:	8042      	strh	r2, [r0, #2]
 800a73c:	8082      	strh	r2, [r0, #4]
 800a73e:	80c2      	strh	r2, [r0, #6]
 800a740:	4770      	bx	lr

0800a742 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a742:	b570      	push	{r4, r5, r6, lr}
 800a744:	460d      	mov	r5, r1
 800a746:	4616      	mov	r6, r2
 800a748:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a74a:	b13c      	cbz	r4, 800a75c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a74c:	6823      	ldr	r3, [r4, #0]
 800a74e:	4620      	mov	r0, r4
 800a750:	4632      	mov	r2, r6
 800a752:	4629      	mov	r1, r5
 800a754:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a756:	4798      	blx	r3
 800a758:	69a4      	ldr	r4, [r4, #24]
 800a75a:	e7f6      	b.n	800a74a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a75c:	bd70      	pop	{r4, r5, r6, pc}

0800a75e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a75e:	b538      	push	{r3, r4, r5, lr}
 800a760:	460d      	mov	r5, r1
 800a762:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a764:	b134      	cbz	r4, 800a774 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a766:	682b      	ldr	r3, [r5, #0]
 800a768:	4621      	mov	r1, r4
 800a76a:	4628      	mov	r0, r5
 800a76c:	689b      	ldr	r3, [r3, #8]
 800a76e:	4798      	blx	r3
 800a770:	69a4      	ldr	r4, [r4, #24]
 800a772:	e7f7      	b.n	800a764 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a774:	bd38      	pop	{r3, r4, r5, pc}

0800a776 <_ZN8touchgfx9ContainerD1Ev>:
 800a776:	4770      	bx	lr

0800a778 <_ZN8touchgfx9ContainerD0Ev>:
 800a778:	b510      	push	{r4, lr}
 800a77a:	4604      	mov	r4, r0
 800a77c:	212c      	movs	r1, #44	; 0x2c
 800a77e:	f011 fe42 	bl	801c406 <_ZdlPvj>
 800a782:	4620      	mov	r0, r4
 800a784:	bd10      	pop	{r4, pc}

0800a786 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a786:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a788:	b19b      	cbz	r3, 800a7b2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a78a:	428b      	cmp	r3, r1
 800a78c:	d109      	bne.n	800a7a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a78e:	699a      	ldr	r2, [r3, #24]
 800a790:	2100      	movs	r1, #0
 800a792:	6159      	str	r1, [r3, #20]
 800a794:	6282      	str	r2, [r0, #40]	; 0x28
 800a796:	b902      	cbnz	r2, 800a79a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a798:	4770      	bx	lr
 800a79a:	6199      	str	r1, [r3, #24]
 800a79c:	4770      	bx	lr
 800a79e:	4613      	mov	r3, r2
 800a7a0:	b13a      	cbz	r2, 800a7b2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a7a2:	699a      	ldr	r2, [r3, #24]
 800a7a4:	428a      	cmp	r2, r1
 800a7a6:	d1fa      	bne.n	800a79e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a7a8:	698a      	ldr	r2, [r1, #24]
 800a7aa:	619a      	str	r2, [r3, #24]
 800a7ac:	2300      	movs	r3, #0
 800a7ae:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a7b2:	4770      	bx	lr

0800a7b4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a7b4:	b410      	push	{r4}
 800a7b6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a7b8:	4604      	mov	r4, r0
 800a7ba:	b92b      	cbnz	r3, 800a7c8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a7bc:	6803      	ldr	r3, [r0, #0]
 800a7be:	4611      	mov	r1, r2
 800a7c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a7c4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a7c6:	4718      	bx	r3
 800a7c8:	b941      	cbnz	r1, 800a7dc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a7ca:	6193      	str	r3, [r2, #24]
 800a7cc:	6282      	str	r2, [r0, #40]	; 0x28
 800a7ce:	6154      	str	r4, [r2, #20]
 800a7d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a7d4:	4770      	bx	lr
 800a7d6:	4603      	mov	r3, r0
 800a7d8:	2800      	cmp	r0, #0
 800a7da:	d0f9      	beq.n	800a7d0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a7dc:	4299      	cmp	r1, r3
 800a7de:	6998      	ldr	r0, [r3, #24]
 800a7e0:	d1f9      	bne.n	800a7d6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a7e2:	6190      	str	r0, [r2, #24]
 800a7e4:	618a      	str	r2, [r1, #24]
 800a7e6:	e7f2      	b.n	800a7ce <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a7e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a7e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a7ec:	461f      	mov	r7, r3
 800a7ee:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a7f2:	460d      	mov	r5, r1
 800a7f4:	4616      	mov	r6, r2
 800a7f6:	b103      	cbz	r3, 800a7fa <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a7f8:	6038      	str	r0, [r7, #0]
 800a7fa:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a7fc:	b314      	cbz	r4, 800a844 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a7fe:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a802:	b1eb      	cbz	r3, 800a840 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a804:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a808:	428d      	cmp	r5, r1
 800a80a:	db19      	blt.n	800a840 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a80c:	b289      	uxth	r1, r1
 800a80e:	8923      	ldrh	r3, [r4, #8]
 800a810:	440b      	add	r3, r1
 800a812:	b21b      	sxth	r3, r3
 800a814:	429d      	cmp	r5, r3
 800a816:	da13      	bge.n	800a840 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a818:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a81c:	4296      	cmp	r6, r2
 800a81e:	db0f      	blt.n	800a840 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a820:	b292      	uxth	r2, r2
 800a822:	8963      	ldrh	r3, [r4, #10]
 800a824:	4413      	add	r3, r2
 800a826:	b21b      	sxth	r3, r3
 800a828:	429e      	cmp	r6, r3
 800a82a:	da09      	bge.n	800a840 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a82c:	6823      	ldr	r3, [r4, #0]
 800a82e:	1ab2      	subs	r2, r6, r2
 800a830:	1a69      	subs	r1, r5, r1
 800a832:	4620      	mov	r0, r4
 800a834:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800a838:	b212      	sxth	r2, r2
 800a83a:	463b      	mov	r3, r7
 800a83c:	b209      	sxth	r1, r1
 800a83e:	47c0      	blx	r8
 800a840:	69a4      	ldr	r4, [r4, #24]
 800a842:	e7db      	b.n	800a7fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a844:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a848 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a84c:	4c6d      	ldr	r4, [pc, #436]	; (800aa04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800a84e:	b0a1      	sub	sp, #132	; 0x84
 800a850:	4606      	mov	r6, r0
 800a852:	6824      	ldr	r4, [r4, #0]
 800a854:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800a856:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800a85a:	2400      	movs	r4, #0
 800a85c:	9303      	str	r3, [sp, #12]
 800a85e:	802c      	strh	r4, [r5, #0]
 800a860:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800a862:	802c      	strh	r4, [r5, #0]
 800a864:	601c      	str	r4, [r3, #0]
 800a866:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a86a:	f7ff ffbd 	bl	800a7e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a86e:	f1b9 0f03 	cmp.w	r9, #3
 800a872:	f340 80c1 	ble.w	800a9f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800a876:	4631      	mov	r1, r6
 800a878:	a80c      	add	r0, sp, #48	; 0x30
 800a87a:	f006 f9e5 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a87e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800a882:	9306      	str	r3, [sp, #24]
 800a884:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800a888:	9307      	str	r3, [sp, #28]
 800a88a:	9b03      	ldr	r3, [sp, #12]
 800a88c:	f8d3 a000 	ldr.w	sl, [r3]
 800a890:	f1ba 0f00 	cmp.w	sl, #0
 800a894:	f000 80b3 	beq.w	800a9fe <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800a898:	4651      	mov	r1, sl
 800a89a:	a810      	add	r0, sp, #64	; 0x40
 800a89c:	f006 f9d4 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a8a0:	2002      	movs	r0, #2
 800a8a2:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800a8a6:	9b01      	ldr	r3, [sp, #4]
 800a8a8:	9a06      	ldr	r2, [sp, #24]
 800a8aa:	fb91 f1f0 	sdiv	r1, r1, r0
 800a8ae:	189d      	adds	r5, r3, r2
 800a8b0:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800a8b4:	9a07      	ldr	r2, [sp, #28]
 800a8b6:	4419      	add	r1, r3
 800a8b8:	9b02      	ldr	r3, [sp, #8]
 800a8ba:	4413      	add	r3, r2
 800a8bc:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800a8c0:	1a6d      	subs	r5, r5, r1
 800a8c2:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800a8c6:	fb92 f2f0 	sdiv	r2, r2, r0
 800a8ca:	440a      	add	r2, r1
 800a8cc:	1a9b      	subs	r3, r3, r2
 800a8ce:	435b      	muls	r3, r3
 800a8d0:	fb05 3505 	mla	r5, r5, r5, r3
 800a8d4:	4f4c      	ldr	r7, [pc, #304]	; (800aa08 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a8d6:	ac10      	add	r4, sp, #64	; 0x40
 800a8d8:	f1b9 0f0c 	cmp.w	r9, #12
 800a8dc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a8de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a8e0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a8e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a8e4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a8e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a8e8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a8ec:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a8f0:	f04f 0303 	mov.w	r3, #3
 800a8f4:	bfd8      	it	le
 800a8f6:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a8fa:	f04f 0400 	mov.w	r4, #0
 800a8fe:	f8cd 9000 	str.w	r9, [sp]
 800a902:	bfcc      	ite	gt
 800a904:	4698      	movgt	r8, r3
 800a906:	fb92 f8f3 	sdivle	r8, r2, r3
 800a90a:	1c63      	adds	r3, r4, #1
 800a90c:	aa10      	add	r2, sp, #64	; 0x40
 800a90e:	f004 0401 	and.w	r4, r4, #1
 800a912:	f04f 0b00 	mov.w	fp, #0
 800a916:	9308      	str	r3, [sp, #32]
 800a918:	9b00      	ldr	r3, [sp, #0]
 800a91a:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a91e:	fb93 f3f8 	sdiv	r3, r3, r8
 800a922:	3404      	adds	r4, #4
 800a924:	b29b      	uxth	r3, r3
 800a926:	9304      	str	r3, [sp, #16]
 800a928:	9a04      	ldr	r2, [sp, #16]
 800a92a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a92e:	fb13 f302 	smulbb	r3, r3, r2
 800a932:	9a01      	ldr	r2, [sp, #4]
 800a934:	b29b      	uxth	r3, r3
 800a936:	1899      	adds	r1, r3, r2
 800a938:	9305      	str	r3, [sp, #20]
 800a93a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a93e:	b209      	sxth	r1, r1
 800a940:	4299      	cmp	r1, r3
 800a942:	db4d      	blt.n	800a9e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a944:	8932      	ldrh	r2, [r6, #8]
 800a946:	4413      	add	r3, r2
 800a948:	b21b      	sxth	r3, r3
 800a94a:	4299      	cmp	r1, r3
 800a94c:	da48      	bge.n	800a9e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a94e:	9b04      	ldr	r3, [sp, #16]
 800a950:	6827      	ldr	r7, [r4, #0]
 800a952:	fb17 f703 	smulbb	r7, r7, r3
 800a956:	9b02      	ldr	r3, [sp, #8]
 800a958:	b2bf      	uxth	r7, r7
 800a95a:	18fa      	adds	r2, r7, r3
 800a95c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a960:	b212      	sxth	r2, r2
 800a962:	429a      	cmp	r2, r3
 800a964:	db3c      	blt.n	800a9e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a966:	8970      	ldrh	r0, [r6, #10]
 800a968:	4403      	add	r3, r0
 800a96a:	b21b      	sxth	r3, r3
 800a96c:	429a      	cmp	r2, r3
 800a96e:	da37      	bge.n	800a9e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a970:	2300      	movs	r3, #0
 800a972:	4630      	mov	r0, r6
 800a974:	930b      	str	r3, [sp, #44]	; 0x2c
 800a976:	ab0b      	add	r3, sp, #44	; 0x2c
 800a978:	f7ff ff36 	bl	800a7e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a97c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a97e:	b37a      	cbz	r2, 800a9e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a980:	4552      	cmp	r2, sl
 800a982:	d02d      	beq.n	800a9e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a984:	4611      	mov	r1, r2
 800a986:	a80e      	add	r0, sp, #56	; 0x38
 800a988:	9209      	str	r2, [sp, #36]	; 0x24
 800a98a:	f006 f95d 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a98e:	f04f 0e02 	mov.w	lr, #2
 800a992:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800a996:	9a06      	ldr	r2, [sp, #24]
 800a998:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800a99c:	9b01      	ldr	r3, [sp, #4]
 800a99e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800a9a2:	4413      	add	r3, r2
 800a9a4:	9a07      	ldr	r2, [sp, #28]
 800a9a6:	fb91 f1fe 	sdiv	r1, r1, lr
 800a9aa:	fb9c fcfe 	sdiv	ip, ip, lr
 800a9ae:	4401      	add	r1, r0
 800a9b0:	1a58      	subs	r0, r3, r1
 800a9b2:	9b02      	ldr	r3, [sp, #8]
 800a9b4:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800a9b8:	4413      	add	r3, r2
 800a9ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a9bc:	448c      	add	ip, r1
 800a9be:	eba3 030c 	sub.w	r3, r3, ip
 800a9c2:	435b      	muls	r3, r3
 800a9c4:	fb00 3300 	mla	r3, r0, r0, r3
 800a9c8:	42ab      	cmp	r3, r5
 800a9ca:	d208      	bcs.n	800a9de <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a9cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a9ce:	461d      	mov	r5, r3
 800a9d0:	9803      	ldr	r0, [sp, #12]
 800a9d2:	6001      	str	r1, [r0, #0]
 800a9d4:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800a9d6:	9805      	ldr	r0, [sp, #20]
 800a9d8:	8008      	strh	r0, [r1, #0]
 800a9da:	992b      	ldr	r1, [sp, #172]	; 0xac
 800a9dc:	800f      	strh	r7, [r1, #0]
 800a9de:	4692      	mov	sl, r2
 800a9e0:	f10b 0b01 	add.w	fp, fp, #1
 800a9e4:	3408      	adds	r4, #8
 800a9e6:	f1bb 0f04 	cmp.w	fp, #4
 800a9ea:	d19d      	bne.n	800a928 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a9ec:	9b00      	ldr	r3, [sp, #0]
 800a9ee:	9c08      	ldr	r4, [sp, #32]
 800a9f0:	444b      	add	r3, r9
 800a9f2:	4544      	cmp	r4, r8
 800a9f4:	9300      	str	r3, [sp, #0]
 800a9f6:	d188      	bne.n	800a90a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a9f8:	b021      	add	sp, #132	; 0x84
 800a9fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a9fe:	f04f 35ff 	mov.w	r5, #4294967295
 800aa02:	e767      	b.n	800a8d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800aa04:	2400894c 	.word	0x2400894c
 800aa08:	0801da10 	.word	0x0801da10

0800aa0c <_ZN8touchgfx4RectaNERKS0_>:
 800aa0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aa10:	f9b1 7000 	ldrsh.w	r7, [r1]
 800aa14:	888c      	ldrh	r4, [r1, #4]
 800aa16:	f9b0 9000 	ldrsh.w	r9, [r0]
 800aa1a:	443c      	add	r4, r7
 800aa1c:	b2a4      	uxth	r4, r4
 800aa1e:	fa0f f884 	sxth.w	r8, r4
 800aa22:	45c1      	cmp	r9, r8
 800aa24:	da2f      	bge.n	800aa86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aa26:	8882      	ldrh	r2, [r0, #4]
 800aa28:	444a      	add	r2, r9
 800aa2a:	b292      	uxth	r2, r2
 800aa2c:	fa0f fe82 	sxth.w	lr, r2
 800aa30:	4577      	cmp	r7, lr
 800aa32:	da28      	bge.n	800aa86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aa34:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800aa38:	88cb      	ldrh	r3, [r1, #6]
 800aa3a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800aa3e:	442b      	add	r3, r5
 800aa40:	b21b      	sxth	r3, r3
 800aa42:	429e      	cmp	r6, r3
 800aa44:	da1f      	bge.n	800aa86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aa46:	88c3      	ldrh	r3, [r0, #6]
 800aa48:	4433      	add	r3, r6
 800aa4a:	b29b      	uxth	r3, r3
 800aa4c:	fa0f fc83 	sxth.w	ip, r3
 800aa50:	4565      	cmp	r5, ip
 800aa52:	da18      	bge.n	800aa86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aa54:	454f      	cmp	r7, r9
 800aa56:	bfb8      	it	lt
 800aa58:	464f      	movlt	r7, r9
 800aa5a:	42b5      	cmp	r5, r6
 800aa5c:	bfb8      	it	lt
 800aa5e:	4635      	movlt	r5, r6
 800aa60:	45f0      	cmp	r8, lr
 800aa62:	bfd8      	it	le
 800aa64:	4622      	movle	r2, r4
 800aa66:	1bd2      	subs	r2, r2, r7
 800aa68:	8082      	strh	r2, [r0, #4]
 800aa6a:	884a      	ldrh	r2, [r1, #2]
 800aa6c:	88c9      	ldrh	r1, [r1, #6]
 800aa6e:	8007      	strh	r7, [r0, #0]
 800aa70:	440a      	add	r2, r1
 800aa72:	8045      	strh	r5, [r0, #2]
 800aa74:	b292      	uxth	r2, r2
 800aa76:	b211      	sxth	r1, r2
 800aa78:	458c      	cmp	ip, r1
 800aa7a:	bfa8      	it	ge
 800aa7c:	4613      	movge	r3, r2
 800aa7e:	1b5b      	subs	r3, r3, r5
 800aa80:	80c3      	strh	r3, [r0, #6]
 800aa82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aa86:	2300      	movs	r3, #0
 800aa88:	8003      	strh	r3, [r0, #0]
 800aa8a:	8043      	strh	r3, [r0, #2]
 800aa8c:	8083      	strh	r3, [r0, #4]
 800aa8e:	80c3      	strh	r3, [r0, #6]
 800aa90:	e7f7      	b.n	800aa82 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800aa92:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800aa96:	2b00      	cmp	r3, #0
 800aa98:	dd06      	ble.n	800aaa8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800aa9a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800aa9e:	2800      	cmp	r0, #0
 800aaa0:	bfcc      	ite	gt
 800aaa2:	2000      	movgt	r0, #0
 800aaa4:	2001      	movle	r0, #1
 800aaa6:	4770      	bx	lr
 800aaa8:	2001      	movs	r0, #1
 800aaaa:	4770      	bx	lr

0800aaac <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800aaac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aab0:	2300      	movs	r3, #0
 800aab2:	4604      	mov	r4, r0
 800aab4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800aab6:	8003      	strh	r3, [r0, #0]
 800aab8:	8043      	strh	r3, [r0, #2]
 800aaba:	8083      	strh	r3, [r0, #4]
 800aabc:	80c3      	strh	r3, [r0, #6]
 800aabe:	2d00      	cmp	r5, #0
 800aac0:	d040      	beq.n	800ab44 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800aac2:	1d28      	adds	r0, r5, #4
 800aac4:	f7ff ffe5 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aac8:	b988      	cbnz	r0, 800aaee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800aaca:	4620      	mov	r0, r4
 800aacc:	f7ff ffe1 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aad0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800aad4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800aad8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800aadc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800aae0:	b138      	cbz	r0, 800aaf2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800aae2:	8022      	strh	r2, [r4, #0]
 800aae4:	8063      	strh	r3, [r4, #2]
 800aae6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800aaea:	f8a4 c006 	strh.w	ip, [r4, #6]
 800aaee:	69ad      	ldr	r5, [r5, #24]
 800aaf0:	e7e5      	b.n	800aabe <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800aaf2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800aaf6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800aafa:	4290      	cmp	r0, r2
 800aafc:	4607      	mov	r7, r0
 800aafe:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ab02:	460e      	mov	r6, r1
 800ab04:	bfa8      	it	ge
 800ab06:	4617      	movge	r7, r2
 800ab08:	4299      	cmp	r1, r3
 800ab0a:	4472      	add	r2, lr
 800ab0c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ab10:	bfa8      	it	ge
 800ab12:	461e      	movge	r6, r3
 800ab14:	4440      	add	r0, r8
 800ab16:	4471      	add	r1, lr
 800ab18:	4463      	add	r3, ip
 800ab1a:	b200      	sxth	r0, r0
 800ab1c:	8027      	strh	r7, [r4, #0]
 800ab1e:	b212      	sxth	r2, r2
 800ab20:	8066      	strh	r6, [r4, #2]
 800ab22:	b209      	sxth	r1, r1
 800ab24:	b21b      	sxth	r3, r3
 800ab26:	4290      	cmp	r0, r2
 800ab28:	bfac      	ite	ge
 800ab2a:	ebc7 0200 	rsbge	r2, r7, r0
 800ab2e:	ebc7 0202 	rsblt	r2, r7, r2
 800ab32:	4299      	cmp	r1, r3
 800ab34:	bfac      	ite	ge
 800ab36:	ebc6 0301 	rsbge	r3, r6, r1
 800ab3a:	ebc6 0303 	rsblt	r3, r6, r3
 800ab3e:	80a2      	strh	r2, [r4, #4]
 800ab40:	80e3      	strh	r3, [r4, #6]
 800ab42:	e7d4      	b.n	800aaee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ab44:	4620      	mov	r0, r4
 800ab46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab4a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ab4a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ab4e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ab52:	b383      	cbz	r3, 800abb6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ab54:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ab56:	b374      	cbz	r4, 800abb6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ab58:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ab5c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ab60:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ab64:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ab68:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ab6c:	b303      	cbz	r3, 800abb0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ab6e:	4668      	mov	r0, sp
 800ab70:	1d21      	adds	r1, r4, #4
 800ab72:	f8ad 5000 	strh.w	r5, [sp]
 800ab76:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ab7a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ab7e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ab82:	f7ff ff43 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 800ab86:	4668      	mov	r0, sp
 800ab88:	f7ff ff83 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ab8c:	b980      	cbnz	r0, 800abb0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ab8e:	f8bd 3000 	ldrh.w	r3, [sp]
 800ab92:	4669      	mov	r1, sp
 800ab94:	88a2      	ldrh	r2, [r4, #4]
 800ab96:	4620      	mov	r0, r4
 800ab98:	1a9b      	subs	r3, r3, r2
 800ab9a:	88e2      	ldrh	r2, [r4, #6]
 800ab9c:	f8ad 3000 	strh.w	r3, [sp]
 800aba0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800aba4:	1a9b      	subs	r3, r3, r2
 800aba6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800abaa:	6823      	ldr	r3, [r4, #0]
 800abac:	689b      	ldr	r3, [r3, #8]
 800abae:	4798      	blx	r3
 800abb0:	69a4      	ldr	r4, [r4, #24]
 800abb2:	2c00      	cmp	r4, #0
 800abb4:	d1d8      	bne.n	800ab68 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800abb6:	b002      	add	sp, #8
 800abb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800abbc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800abbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800abbe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800abc2:	460d      	mov	r5, r1
 800abc4:	4616      	mov	r6, r2
 800abc6:	b323      	cbz	r3, 800ac12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800abc8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800abca:	b314      	cbz	r4, 800ac12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800abcc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800abd0:	b1eb      	cbz	r3, 800ac0e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800abd2:	6828      	ldr	r0, [r5, #0]
 800abd4:	466b      	mov	r3, sp
 800abd6:	6869      	ldr	r1, [r5, #4]
 800abd8:	c303      	stmia	r3!, {r0, r1}
 800abda:	4668      	mov	r0, sp
 800abdc:	1d21      	adds	r1, r4, #4
 800abde:	f7ff ff15 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 800abe2:	4668      	mov	r0, sp
 800abe4:	f7ff ff55 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800abe8:	b988      	cbnz	r0, 800ac0e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800abea:	f8bd 3000 	ldrh.w	r3, [sp]
 800abee:	4669      	mov	r1, sp
 800abf0:	88a2      	ldrh	r2, [r4, #4]
 800abf2:	4620      	mov	r0, r4
 800abf4:	1a9b      	subs	r3, r3, r2
 800abf6:	88e2      	ldrh	r2, [r4, #6]
 800abf8:	f8ad 3000 	strh.w	r3, [sp]
 800abfc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ac00:	1a9b      	subs	r3, r3, r2
 800ac02:	4632      	mov	r2, r6
 800ac04:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ac08:	6823      	ldr	r3, [r4, #0]
 800ac0a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ac0c:	4798      	blx	r3
 800ac0e:	69a4      	ldr	r4, [r4, #24]
 800ac10:	e7db      	b.n	800abca <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ac12:	b002      	add	sp, #8
 800ac14:	bd70      	pop	{r4, r5, r6, pc}

0800ac16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ac16:	6803      	ldr	r3, [r0, #0]
 800ac18:	b513      	push	{r0, r1, r4, lr}
 800ac1a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800ac1e:	2300      	movs	r3, #0
 800ac20:	e9cd 3300 	strd	r3, r3, [sp]
 800ac24:	466b      	mov	r3, sp
 800ac26:	47a0      	blx	r4
 800ac28:	b002      	add	sp, #8
 800ac2a:	bd10      	pop	{r4, pc}

0800ac2c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ac2c:	2301      	movs	r3, #1
 800ac2e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ac32:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800ac36:	4770      	bx	lr

0800ac38 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ac38:	2301      	movs	r3, #1
 800ac3a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ac3e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800ac42:	4770      	bx	lr

0800ac44 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ac44:	6843      	ldr	r3, [r0, #4]
 800ac46:	2201      	movs	r2, #1
 800ac48:	725a      	strb	r2, [r3, #9]
 800ac4a:	6840      	ldr	r0, [r0, #4]
 800ac4c:	6803      	ldr	r3, [r0, #0]
 800ac4e:	691b      	ldr	r3, [r3, #16]
 800ac50:	4718      	bx	r3

0800ac52 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ac52:	6840      	ldr	r0, [r0, #4]
 800ac54:	6803      	ldr	r3, [r0, #0]
 800ac56:	689b      	ldr	r3, [r3, #8]
 800ac58:	4718      	bx	r3

0800ac5a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ac5a:	b530      	push	{r4, r5, lr}
 800ac5c:	b08b      	sub	sp, #44	; 0x2c
 800ac5e:	6804      	ldr	r4, [r0, #0]
 800ac60:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800ac64:	9509      	str	r5, [sp, #36]	; 0x24
 800ac66:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800ac6a:	9508      	str	r5, [sp, #32]
 800ac6c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800ac70:	9507      	str	r5, [sp, #28]
 800ac72:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800ac76:	9506      	str	r5, [sp, #24]
 800ac78:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800ac7c:	9505      	str	r5, [sp, #20]
 800ac7e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800ac82:	9504      	str	r5, [sp, #16]
 800ac84:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800ac88:	9503      	str	r5, [sp, #12]
 800ac8a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800ac8e:	9502      	str	r5, [sp, #8]
 800ac90:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800ac94:	e9cd 3500 	strd	r3, r5, [sp]
 800ac98:	4613      	mov	r3, r2
 800ac9a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800ac9c:	2200      	movs	r2, #0
 800ac9e:	47a0      	blx	r4
 800aca0:	b00b      	add	sp, #44	; 0x2c
 800aca2:	bd30      	pop	{r4, r5, pc}

0800aca4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800aca4:	4b04      	ldr	r3, [pc, #16]	; (800acb8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800aca6:	781b      	ldrb	r3, [r3, #0]
 800aca8:	b123      	cbz	r3, 800acb4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800acaa:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800acae:	f080 0001 	eor.w	r0, r0, #1
 800acb2:	4770      	bx	lr
 800acb4:	2001      	movs	r0, #1
 800acb6:	4770      	bx	lr
 800acb8:	2400894a 	.word	0x2400894a

0800acbc <_ZN8touchgfx3HAL8endFrameEv>:
 800acbc:	b510      	push	{r4, lr}
 800acbe:	4604      	mov	r4, r0
 800acc0:	6840      	ldr	r0, [r0, #4]
 800acc2:	6803      	ldr	r3, [r0, #0]
 800acc4:	689b      	ldr	r3, [r3, #8]
 800acc6:	4798      	blx	r3
 800acc8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800accc:	b113      	cbz	r3, 800acd4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800acce:	2301      	movs	r3, #1
 800acd0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800acd4:	bd10      	pop	{r4, pc}

0800acd6 <_ZN8touchgfx3HAL10initializeEv>:
 800acd6:	b510      	push	{r4, lr}
 800acd8:	4604      	mov	r4, r0
 800acda:	f7f6 fe85 	bl	80019e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800acde:	f7f6 fd45 	bl	800176c <_ZN8touchgfx4GPIO4initEv>
 800ace2:	6860      	ldr	r0, [r4, #4]
 800ace4:	6803      	ldr	r3, [r0, #0]
 800ace6:	68db      	ldr	r3, [r3, #12]
 800ace8:	4798      	blx	r3
 800acea:	68e0      	ldr	r0, [r4, #12]
 800acec:	6803      	ldr	r3, [r0, #0]
 800acee:	689b      	ldr	r3, [r3, #8]
 800acf0:	4798      	blx	r3
 800acf2:	6823      	ldr	r3, [r4, #0]
 800acf4:	4620      	mov	r0, r4
 800acf6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800acf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800acfc:	4718      	bx	r3
	...

0800ad00 <_ZN8touchgfx3HAL4tickEv>:
 800ad00:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ad02:	6803      	ldr	r3, [r0, #0]
 800ad04:	4604      	mov	r4, r0
 800ad06:	4d5b      	ldr	r5, [pc, #364]	; (800ae74 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800ad08:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ad0c:	4798      	blx	r3
 800ad0e:	2800      	cmp	r0, #0
 800ad10:	f000 8095 	beq.w	800ae3e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800ad14:	2001      	movs	r0, #1
 800ad16:	2600      	movs	r6, #0
 800ad18:	f7f6 fc86 	bl	8001628 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ad1c:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800ad20:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ad24:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800ad28:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800ad2c:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800ad30:	b133      	cbz	r3, 800ad40 <_ZN8touchgfx3HAL4tickEv+0x40>
 800ad32:	6823      	ldr	r3, [r4, #0]
 800ad34:	4620      	mov	r0, r4
 800ad36:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ad3a:	4798      	blx	r3
 800ad3c:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800ad40:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ad44:	2601      	movs	r6, #1
 800ad46:	6862      	ldr	r2, [r4, #4]
 800ad48:	f083 0301 	eor.w	r3, r3, #1
 800ad4c:	702e      	strb	r6, [r5, #0]
 800ad4e:	7253      	strb	r3, [r2, #9]
 800ad50:	f004 fe50 	bl	800f9f4 <_ZN8touchgfx11Application11getInstanceEv>
 800ad54:	6803      	ldr	r3, [r0, #0]
 800ad56:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ad58:	4798      	blx	r3
 800ad5a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800ad5e:	b90b      	cbnz	r3, 800ad64 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ad60:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800ad64:	f004 fe46 	bl	800f9f4 <_ZN8touchgfx11Application11getInstanceEv>
 800ad68:	6803      	ldr	r3, [r0, #0]
 800ad6a:	695b      	ldr	r3, [r3, #20]
 800ad6c:	4798      	blx	r3
 800ad6e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ad70:	6803      	ldr	r3, [r0, #0]
 800ad72:	691b      	ldr	r3, [r3, #16]
 800ad74:	4798      	blx	r3
 800ad76:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800ad7a:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800ad7e:	3b01      	subs	r3, #1
 800ad80:	b2db      	uxtb	r3, r3
 800ad82:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800ad86:	b10a      	cbz	r2, 800ad8c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ad88:	2b00      	cmp	r3, #0
 800ad8a:	d1eb      	bne.n	800ad64 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ad8c:	4a3a      	ldr	r2, [pc, #232]	; (800ae78 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ad8e:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800ad92:	7813      	ldrb	r3, [r2, #0]
 800ad94:	3301      	adds	r3, #1
 800ad96:	b25b      	sxtb	r3, r3
 800ad98:	4299      	cmp	r1, r3
 800ad9a:	7013      	strb	r3, [r2, #0]
 800ad9c:	dc10      	bgt.n	800adc0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ad9e:	2300      	movs	r3, #0
 800ada0:	68e0      	ldr	r0, [r4, #12]
 800ada2:	a902      	add	r1, sp, #8
 800ada4:	7013      	strb	r3, [r2, #0]
 800ada6:	aa03      	add	r2, sp, #12
 800ada8:	6803      	ldr	r3, [r0, #0]
 800adaa:	68db      	ldr	r3, [r3, #12]
 800adac:	4798      	blx	r3
 800adae:	6823      	ldr	r3, [r4, #0]
 800adb0:	2800      	cmp	r0, #0
 800adb2:	d050      	beq.n	800ae56 <_ZN8touchgfx3HAL4tickEv+0x156>
 800adb4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800adb8:	4620      	mov	r0, r4
 800adba:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800adbe:	4798      	blx	r3
 800adc0:	2300      	movs	r3, #0
 800adc2:	6960      	ldr	r0, [r4, #20]
 800adc4:	f88d 3007 	strb.w	r3, [sp, #7]
 800adc8:	b158      	cbz	r0, 800ade2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800adca:	6803      	ldr	r3, [r0, #0]
 800adcc:	f10d 0107 	add.w	r1, sp, #7
 800add0:	68db      	ldr	r3, [r3, #12]
 800add2:	4798      	blx	r3
 800add4:	b128      	cbz	r0, 800ade2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800add6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800add8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800addc:	6803      	ldr	r3, [r0, #0]
 800adde:	68db      	ldr	r3, [r3, #12]
 800ade0:	4798      	blx	r3
 800ade2:	f104 001c 	add.w	r0, r4, #28
 800ade6:	f010 f84d 	bl	801ae84 <_ZN8touchgfx8Gestures4tickEv>
 800adea:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800adee:	b30b      	cbz	r3, 800ae34 <_ZN8touchgfx3HAL4tickEv+0x134>
 800adf0:	6920      	ldr	r0, [r4, #16]
 800adf2:	6803      	ldr	r3, [r0, #0]
 800adf4:	691b      	ldr	r3, [r3, #16]
 800adf6:	4798      	blx	r3
 800adf8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800adfa:	4606      	mov	r6, r0
 800adfc:	b903      	cbnz	r3, 800ae00 <_ZN8touchgfx3HAL4tickEv+0x100>
 800adfe:	6720      	str	r0, [r4, #112]	; 0x70
 800ae00:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ae02:	4a1e      	ldr	r2, [pc, #120]	; (800ae7c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800ae04:	1af3      	subs	r3, r6, r3
 800ae06:	4293      	cmp	r3, r2
 800ae08:	d914      	bls.n	800ae34 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ae0a:	6920      	ldr	r0, [r4, #16]
 800ae0c:	6803      	ldr	r3, [r0, #0]
 800ae0e:	699b      	ldr	r3, [r3, #24]
 800ae10:	4798      	blx	r3
 800ae12:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ae14:	2264      	movs	r2, #100	; 0x64
 800ae16:	1af3      	subs	r3, r6, r3
 800ae18:	fbb3 f3f2 	udiv	r3, r3, r2
 800ae1c:	fbb0 f0f3 	udiv	r0, r0, r3
 800ae20:	2800      	cmp	r0, #0
 800ae22:	dc1d      	bgt.n	800ae60 <_ZN8touchgfx3HAL4tickEv+0x160>
 800ae24:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800ae28:	6920      	ldr	r0, [r4, #16]
 800ae2a:	2100      	movs	r1, #0
 800ae2c:	6803      	ldr	r3, [r0, #0]
 800ae2e:	69db      	ldr	r3, [r3, #28]
 800ae30:	4798      	blx	r3
 800ae32:	6726      	str	r6, [r4, #112]	; 0x70
 800ae34:	f004 fdde 	bl	800f9f4 <_ZN8touchgfx11Application11getInstanceEv>
 800ae38:	6803      	ldr	r3, [r0, #0]
 800ae3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ae3c:	4798      	blx	r3
 800ae3e:	6823      	ldr	r3, [r4, #0]
 800ae40:	4620      	mov	r0, r4
 800ae42:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800ae46:	4798      	blx	r3
 800ae48:	2001      	movs	r0, #1
 800ae4a:	f7f6 fc1f 	bl	800168c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ae4e:	2300      	movs	r3, #0
 800ae50:	702b      	strb	r3, [r5, #0]
 800ae52:	b004      	add	sp, #16
 800ae54:	bd70      	pop	{r4, r5, r6, pc}
 800ae56:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800ae5a:	4620      	mov	r0, r4
 800ae5c:	4798      	blx	r3
 800ae5e:	e7af      	b.n	800adc0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ae60:	2863      	cmp	r0, #99	; 0x63
 800ae62:	bfcb      	itete	gt
 800ae64:	2300      	movgt	r3, #0
 800ae66:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800ae6a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800ae6e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800ae72:	e7d9      	b.n	800ae28 <_ZN8touchgfx3HAL4tickEv+0x128>
 800ae74:	24008950 	.word	0x24008950
 800ae78:	24008951 	.word	0x24008951
 800ae7c:	05f5e100 	.word	0x05f5e100

0800ae80 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800ae80:	f7f6 bde2 	b.w	8001a48 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ae84 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ae84:	6581      	str	r1, [r0, #88]	; 0x58
 800ae86:	301c      	adds	r0, #28
 800ae88:	f00f bffa 	b.w	801ae80 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800ae8c <_ZN8touchgfx3HAL5touchEll>:
 800ae8c:	b530      	push	{r4, r5, lr}
 800ae8e:	b087      	sub	sp, #28
 800ae90:	4604      	mov	r4, r0
 800ae92:	a804      	add	r0, sp, #16
 800ae94:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ae98:	f004 fb90 	bl	800f5bc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ae9c:	9b04      	ldr	r3, [sp, #16]
 800ae9e:	a906      	add	r1, sp, #24
 800aea0:	a803      	add	r0, sp, #12
 800aea2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800aea6:	9b05      	ldr	r3, [sp, #20]
 800aea8:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800aeac:	f004 fbd8 	bl	800f660 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800aeb0:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800aeb4:	f104 001c 	add.w	r0, r4, #28
 800aeb8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800aebc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800aec0:	b189      	cbz	r1, 800aee6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800aec2:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800aec6:	9300      	str	r3, [sp, #0]
 800aec8:	4613      	mov	r3, r2
 800aeca:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800aece:	462a      	mov	r2, r5
 800aed0:	f00f ffe6 	bl	801aea0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800aed4:	b128      	cbz	r0, 800aee2 <_ZN8touchgfx3HAL5touchEll+0x56>
 800aed6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800aeda:	65e3      	str	r3, [r4, #92]	; 0x5c
 800aedc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800aee0:	6623      	str	r3, [r4, #96]	; 0x60
 800aee2:	b007      	add	sp, #28
 800aee4:	bd30      	pop	{r4, r5, pc}
 800aee6:	f010 f81b 	bl	801af20 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800aeea:	2301      	movs	r3, #1
 800aeec:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800aef0:	e7f1      	b.n	800aed6 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800aef2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800aef2:	b510      	push	{r4, lr}
 800aef4:	2b00      	cmp	r3, #0
 800aef6:	d046      	beq.n	800af86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800aef8:	ea81 0002 	eor.w	r0, r1, r2
 800aefc:	07c4      	lsls	r4, r0, #31
 800aefe:	d508      	bpl.n	800af12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800af00:	440b      	add	r3, r1
 800af02:	3a01      	subs	r2, #1
 800af04:	428b      	cmp	r3, r1
 800af06:	d93e      	bls.n	800af86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800af08:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800af0c:	f801 0b01 	strb.w	r0, [r1], #1
 800af10:	e7f8      	b.n	800af04 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800af12:	07d0      	lsls	r0, r2, #31
 800af14:	bf42      	ittt	mi
 800af16:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800af1a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800af1e:	f801 0b01 	strbmi.w	r0, [r1], #1
 800af22:	2b01      	cmp	r3, #1
 800af24:	d911      	bls.n	800af4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800af26:	ea81 0402 	eor.w	r4, r1, r2
 800af2a:	4610      	mov	r0, r2
 800af2c:	07a4      	lsls	r4, r4, #30
 800af2e:	d022      	beq.n	800af76 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800af30:	f023 0401 	bic.w	r4, r3, #1
 800af34:	440c      	add	r4, r1
 800af36:	428c      	cmp	r4, r1
 800af38:	4602      	mov	r2, r0
 800af3a:	d904      	bls.n	800af46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800af3c:	8812      	ldrh	r2, [r2, #0]
 800af3e:	3002      	adds	r0, #2
 800af40:	f821 2b02 	strh.w	r2, [r1], #2
 800af44:	e7f7      	b.n	800af36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800af46:	f003 0301 	and.w	r3, r3, #1
 800af4a:	f023 0003 	bic.w	r0, r3, #3
 800af4e:	4408      	add	r0, r1
 800af50:	4288      	cmp	r0, r1
 800af52:	4614      	mov	r4, r2
 800af54:	d904      	bls.n	800af60 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800af56:	6824      	ldr	r4, [r4, #0]
 800af58:	3204      	adds	r2, #4
 800af5a:	f841 4b04 	str.w	r4, [r1], #4
 800af5e:	e7f7      	b.n	800af50 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800af60:	f003 0303 	and.w	r3, r3, #3
 800af64:	3a01      	subs	r2, #1
 800af66:	440b      	add	r3, r1
 800af68:	428b      	cmp	r3, r1
 800af6a:	d90c      	bls.n	800af86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800af6c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800af70:	f801 0b01 	strb.w	r0, [r1], #1
 800af74:	e7f8      	b.n	800af68 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800af76:	0790      	lsls	r0, r2, #30
 800af78:	d0e7      	beq.n	800af4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800af7a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800af7e:	3b02      	subs	r3, #2
 800af80:	f821 0b02 	strh.w	r0, [r1], #2
 800af84:	e7e1      	b.n	800af4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800af86:	2001      	movs	r0, #1
 800af88:	bd10      	pop	{r4, pc}

0800af8a <_ZN8touchgfx3HAL7noTouchEv>:
 800af8a:	b510      	push	{r4, lr}
 800af8c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800af90:	4604      	mov	r4, r0
 800af92:	b153      	cbz	r3, 800afaa <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800af94:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800af98:	2101      	movs	r1, #1
 800af9a:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800af9e:	301c      	adds	r0, #28
 800afa0:	f00f ffbe 	bl	801af20 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800afa4:	2300      	movs	r3, #0
 800afa6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800afaa:	bd10      	pop	{r4, pc}

0800afac <_ZN8touchgfx3HAL3lcdEv>:
 800afac:	4b04      	ldr	r3, [pc, #16]	; (800afc0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800afae:	681b      	ldr	r3, [r3, #0]
 800afb0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800afb4:	b10a      	cbz	r2, 800afba <_ZN8touchgfx3HAL3lcdEv+0xe>
 800afb6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800afb8:	b900      	cbnz	r0, 800afbc <_ZN8touchgfx3HAL3lcdEv+0x10>
 800afba:	6898      	ldr	r0, [r3, #8]
 800afbc:	4770      	bx	lr
 800afbe:	bf00      	nop
 800afc0:	2400894c 	.word	0x2400894c

0800afc4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800afc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800afc8:	b085      	sub	sp, #20
 800afca:	4604      	mov	r4, r0
 800afcc:	2000      	movs	r0, #0
 800afce:	4699      	mov	r9, r3
 800afd0:	ad04      	add	r5, sp, #16
 800afd2:	460f      	mov	r7, r1
 800afd4:	4690      	mov	r8, r2
 800afd6:	f845 0d04 	str.w	r0, [r5, #-4]!
 800afda:	69a0      	ldr	r0, [r4, #24]
 800afdc:	6806      	ldr	r6, [r0, #0]
 800afde:	9501      	str	r5, [sp, #4]
 800afe0:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800afe4:	9500      	str	r5, [sp, #0]
 800afe6:	6835      	ldr	r5, [r6, #0]
 800afe8:	47a8      	blx	r5
 800afea:	4d10      	ldr	r5, [pc, #64]	; (800b02c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800afec:	4606      	mov	r6, r0
 800afee:	f8a5 9000 	strh.w	r9, [r5]
 800aff2:	f7ff ffdb 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 800aff6:	6803      	ldr	r3, [r0, #0]
 800aff8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800affa:	4798      	blx	r3
 800affc:	b128      	cbz	r0, 800b00a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800affe:	2801      	cmp	r0, #1
 800b000:	d00b      	beq.n	800b01a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b002:	4630      	mov	r0, r6
 800b004:	b005      	add	sp, #20
 800b006:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b00a:	882b      	ldrh	r3, [r5, #0]
 800b00c:	fb08 7203 	mla	r2, r8, r3, r7
 800b010:	9b03      	ldr	r3, [sp, #12]
 800b012:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b016:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b018:	e7f3      	b.n	800b002 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b01a:	882a      	ldrh	r2, [r5, #0]
 800b01c:	9b03      	ldr	r3, [sp, #12]
 800b01e:	fb08 7202 	mla	r2, r8, r2, r7
 800b022:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b026:	1a9a      	subs	r2, r3, r2
 800b028:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b02a:	e7ea      	b.n	800b002 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b02c:	24008946 	.word	0x24008946

0800b030 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b030:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b032:	b08b      	sub	sp, #44	; 0x2c
 800b034:	4617      	mov	r7, r2
 800b036:	4604      	mov	r4, r0
 800b038:	460e      	mov	r6, r1
 800b03a:	461d      	mov	r5, r3
 800b03c:	f7ff ffb6 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 800b040:	6803      	ldr	r3, [r0, #0]
 800b042:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b044:	4798      	blx	r3
 800b046:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b04a:	9007      	str	r0, [sp, #28]
 800b04c:	4631      	mov	r1, r6
 800b04e:	6822      	ldr	r2, [r4, #0]
 800b050:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b054:	4b0c      	ldr	r3, [pc, #48]	; (800b088 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b056:	4620      	mov	r0, r4
 800b058:	881b      	ldrh	r3, [r3, #0]
 800b05a:	9306      	str	r3, [sp, #24]
 800b05c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b060:	9305      	str	r3, [sp, #20]
 800b062:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b066:	9304      	str	r3, [sp, #16]
 800b068:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b06c:	9303      	str	r3, [sp, #12]
 800b06e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b072:	9302      	str	r3, [sp, #8]
 800b074:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b078:	e9cd 5300 	strd	r5, r3, [sp]
 800b07c:	463b      	mov	r3, r7
 800b07e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b080:	2200      	movs	r2, #0
 800b082:	47a8      	blx	r5
 800b084:	b00b      	add	sp, #44	; 0x2c
 800b086:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b088:	24008946 	.word	0x24008946

0800b08c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b08c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b090:	4698      	mov	r8, r3
 800b092:	6803      	ldr	r3, [r0, #0]
 800b094:	b08b      	sub	sp, #44	; 0x2c
 800b096:	4617      	mov	r7, r2
 800b098:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b09a:	460e      	mov	r6, r1
 800b09c:	4b13      	ldr	r3, [pc, #76]	; (800b0ec <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b09e:	4604      	mov	r4, r0
 800b0a0:	f8b3 9000 	ldrh.w	r9, [r3]
 800b0a4:	f7ff ff82 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 800b0a8:	6803      	ldr	r3, [r0, #0]
 800b0aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0ac:	4798      	blx	r3
 800b0ae:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b0b2:	2200      	movs	r2, #0
 800b0b4:	4631      	mov	r1, r6
 800b0b6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b0ba:	2302      	movs	r3, #2
 800b0bc:	4620      	mov	r0, r4
 800b0be:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b0c2:	2301      	movs	r3, #1
 800b0c4:	9305      	str	r3, [sp, #20]
 800b0c6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b0ca:	9304      	str	r3, [sp, #16]
 800b0cc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b0d0:	9303      	str	r3, [sp, #12]
 800b0d2:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b0d6:	9302      	str	r3, [sp, #8]
 800b0d8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b0dc:	e9cd 8300 	strd	r8, r3, [sp]
 800b0e0:	463b      	mov	r3, r7
 800b0e2:	47a8      	blx	r5
 800b0e4:	b00b      	add	sp, #44	; 0x2c
 800b0e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b0ea:	bf00      	nop
 800b0ec:	24008946 	.word	0x24008946

0800b0f0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b0f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b0f4:	4698      	mov	r8, r3
 800b0f6:	6803      	ldr	r3, [r0, #0]
 800b0f8:	b087      	sub	sp, #28
 800b0fa:	460e      	mov	r6, r1
 800b0fc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b0fe:	4617      	mov	r7, r2
 800b100:	4b0f      	ldr	r3, [pc, #60]	; (800b140 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b102:	4604      	mov	r4, r0
 800b104:	f8b3 9000 	ldrh.w	r9, [r3]
 800b108:	f7ff ff50 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 800b10c:	6803      	ldr	r3, [r0, #0]
 800b10e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b110:	4798      	blx	r3
 800b112:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b116:	463a      	mov	r2, r7
 800b118:	4631      	mov	r1, r6
 800b11a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b11e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b122:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b126:	4620      	mov	r0, r4
 800b128:	9302      	str	r3, [sp, #8]
 800b12a:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b12e:	9301      	str	r3, [sp, #4]
 800b130:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b134:	9300      	str	r3, [sp, #0]
 800b136:	4643      	mov	r3, r8
 800b138:	47a8      	blx	r5
 800b13a:	b007      	add	sp, #28
 800b13c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b140:	24008946 	.word	0x24008946

0800b144 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b148:	4604      	mov	r4, r0
 800b14a:	b08f      	sub	sp, #60	; 0x3c
 800b14c:	4610      	mov	r0, r2
 800b14e:	460d      	mov	r5, r1
 800b150:	4691      	mov	r9, r2
 800b152:	461e      	mov	r6, r3
 800b154:	f007 fcf4 	bl	8012b40 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b158:	2800      	cmp	r0, #0
 800b15a:	f000 809d 	beq.w	800b298 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b15e:	6823      	ldr	r3, [r4, #0]
 800b160:	4620      	mov	r0, r4
 800b162:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b2fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b166:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b16a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b16c:	4798      	blx	r3
 800b16e:	6823      	ldr	r3, [r4, #0]
 800b170:	4620      	mov	r0, r4
 800b172:	f8df a18c 	ldr.w	sl, [pc, #396]	; 800b300 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b176:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b178:	4798      	blx	r3
 800b17a:	f8bb 3000 	ldrh.w	r3, [fp]
 800b17e:	4f5c      	ldr	r7, [pc, #368]	; (800b2f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b180:	9301      	str	r3, [sp, #4]
 800b182:	f8ba 3000 	ldrh.w	r3, [sl]
 800b186:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b18a:	4640      	mov	r0, r8
 800b18c:	9302      	str	r3, [sp, #8]
 800b18e:	883b      	ldrh	r3, [r7, #0]
 800b190:	9303      	str	r3, [sp, #12]
 800b192:	4b58      	ldr	r3, [pc, #352]	; (800b2f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b194:	881a      	ldrh	r2, [r3, #0]
 800b196:	9305      	str	r3, [sp, #20]
 800b198:	9204      	str	r2, [sp, #16]
 800b19a:	f007 fe15 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b19e:	8038      	strh	r0, [r7, #0]
 800b1a0:	4640      	mov	r0, r8
 800b1a2:	f007 fe45 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b1a6:	9b05      	ldr	r3, [sp, #20]
 800b1a8:	b280      	uxth	r0, r0
 800b1aa:	8018      	strh	r0, [r3, #0]
 800b1ac:	4b52      	ldr	r3, [pc, #328]	; (800b2f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b1ae:	781b      	ldrb	r3, [r3, #0]
 800b1b0:	2b00      	cmp	r3, #0
 800b1b2:	d174      	bne.n	800b29e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b1b4:	883b      	ldrh	r3, [r7, #0]
 800b1b6:	f8aa 0000 	strh.w	r0, [sl]
 800b1ba:	f8ab 3000 	strh.w	r3, [fp]
 800b1be:	4648      	mov	r0, r9
 800b1c0:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b1c4:	f007 fcbc 	bl	8012b40 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b1c8:	2200      	movs	r2, #0
 800b1ca:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b1ce:	4611      	mov	r1, r2
 800b1d0:	4628      	mov	r0, r5
 800b1d2:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b1d6:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b1da:	f7f7 fc30 	bl	8002a3e <_ZN8touchgfx8Drawable5setXYEss>
 800b1de:	2301      	movs	r3, #1
 800b1e0:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b1e4:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b1e8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b1ec:	2b00      	cmp	r3, #0
 800b1ee:	dd5c      	ble.n	800b2aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b1f0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b1f4:	2b00      	cmp	r3, #0
 800b1f6:	dd58      	ble.n	800b2aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b1f8:	462a      	mov	r2, r5
 800b1fa:	ab0a      	add	r3, sp, #40	; 0x28
 800b1fc:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b200:	6851      	ldr	r1, [r2, #4]
 800b202:	c303      	stmia	r3!, {r0, r1}
 800b204:	4631      	mov	r1, r6
 800b206:	a80a      	add	r0, sp, #40	; 0x28
 800b208:	f7ff fc00 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 800b20c:	4b38      	ldr	r3, [pc, #224]	; (800b2f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b20e:	2100      	movs	r1, #0
 800b210:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b214:	4b37      	ldr	r3, [pc, #220]	; (800b2f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b216:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b21a:	aa0a      	add	r2, sp, #40	; 0x28
 800b21c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b220:	910c      	str	r1, [sp, #48]	; 0x30
 800b222:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b226:	ab08      	add	r3, sp, #32
 800b228:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b22c:	e883 0003 	stmia.w	r3, {r0, r1}
 800b230:	4618      	mov	r0, r3
 800b232:	a90c      	add	r1, sp, #48	; 0x30
 800b234:	f7ff fbea 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 800b238:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b23a:	2b00      	cmp	r3, #0
 800b23c:	d13c      	bne.n	800b2b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b23e:	2000      	movs	r0, #0
 800b240:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b244:	2600      	movs	r6, #0
 800b246:	696b      	ldr	r3, [r5, #20]
 800b248:	a908      	add	r1, sp, #32
 800b24a:	682a      	ldr	r2, [r5, #0]
 800b24c:	4628      	mov	r0, r5
 800b24e:	9305      	str	r3, [sp, #20]
 800b250:	616e      	str	r6, [r5, #20]
 800b252:	6892      	ldr	r2, [r2, #8]
 800b254:	4790      	blx	r2
 800b256:	9b05      	ldr	r3, [sp, #20]
 800b258:	4652      	mov	r2, sl
 800b25a:	4649      	mov	r1, r9
 800b25c:	616b      	str	r3, [r5, #20]
 800b25e:	4628      	mov	r0, r5
 800b260:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b264:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b268:	f7f7 fbe9 	bl	8002a3e <_ZN8touchgfx8Drawable5setXYEss>
 800b26c:	9a01      	ldr	r2, [sp, #4]
 800b26e:	4b23      	ldr	r3, [pc, #140]	; (800b2fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b270:	4620      	mov	r0, r4
 800b272:	801a      	strh	r2, [r3, #0]
 800b274:	9a02      	ldr	r2, [sp, #8]
 800b276:	4b22      	ldr	r3, [pc, #136]	; (800b300 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b278:	801a      	strh	r2, [r3, #0]
 800b27a:	9a03      	ldr	r2, [sp, #12]
 800b27c:	4b1c      	ldr	r3, [pc, #112]	; (800b2f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b27e:	801a      	strh	r2, [r3, #0]
 800b280:	4b1c      	ldr	r3, [pc, #112]	; (800b2f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b282:	9a04      	ldr	r2, [sp, #16]
 800b284:	801a      	strh	r2, [r3, #0]
 800b286:	6823      	ldr	r3, [r4, #0]
 800b288:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b28c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b28e:	4798      	blx	r3
 800b290:	6823      	ldr	r3, [r4, #0]
 800b292:	4620      	mov	r0, r4
 800b294:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b296:	4798      	blx	r3
 800b298:	b00f      	add	sp, #60	; 0x3c
 800b29a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b29e:	883b      	ldrh	r3, [r7, #0]
 800b2a0:	f8ab 0000 	strh.w	r0, [fp]
 800b2a4:	f8aa 3000 	strh.w	r3, [sl]
 800b2a8:	e789      	b.n	800b1be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b2aa:	462a      	mov	r2, r5
 800b2ac:	ab0a      	add	r3, sp, #40	; 0x28
 800b2ae:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b2b2:	6851      	ldr	r1, [r2, #4]
 800b2b4:	c303      	stmia	r3!, {r0, r1}
 800b2b6:	e7a9      	b.n	800b20c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b2b8:	a807      	add	r0, sp, #28
 800b2ba:	f007 fef5 	bl	80130a8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b2be:	4606      	mov	r6, r0
 800b2c0:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b2c2:	6803      	ldr	r3, [r0, #0]
 800b2c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b2c6:	4798      	blx	r3
 800b2c8:	4286      	cmp	r6, r0
 800b2ca:	d1b8      	bne.n	800b23e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b2cc:	f7ff fe6e 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 800b2d0:	6803      	ldr	r3, [r0, #0]
 800b2d2:	4606      	mov	r6, r0
 800b2d4:	a807      	add	r0, sp, #28
 800b2d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b2d8:	9305      	str	r3, [sp, #20]
 800b2da:	f007 fee5 	bl	80130a8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b2de:	9b05      	ldr	r3, [sp, #20]
 800b2e0:	4601      	mov	r1, r0
 800b2e2:	4630      	mov	r0, r6
 800b2e4:	4798      	blx	r3
 800b2e6:	f080 0001 	eor.w	r0, r0, #1
 800b2ea:	b2c0      	uxtb	r0, r0
 800b2ec:	e7a8      	b.n	800b240 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b2ee:	bf00      	nop
 800b2f0:	24008940 	.word	0x24008940
 800b2f4:	24008942 	.word	0x24008942
 800b2f8:	24008944 	.word	0x24008944
 800b2fc:	24008946 	.word	0x24008946
 800b300:	24008948 	.word	0x24008948

0800b304 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b304:	4b07      	ldr	r3, [pc, #28]	; (800b324 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b306:	b510      	push	{r4, lr}
 800b308:	781b      	ldrb	r3, [r3, #0]
 800b30a:	4604      	mov	r4, r0
 800b30c:	b13b      	cbz	r3, 800b31e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b30e:	6803      	ldr	r3, [r0, #0]
 800b310:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b312:	4798      	blx	r3
 800b314:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b316:	4283      	cmp	r3, r0
 800b318:	d101      	bne.n	800b31e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b31a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b31c:	bd10      	pop	{r4, pc}
 800b31e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b320:	e7fc      	b.n	800b31c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b322:	bf00      	nop
 800b324:	2400894a 	.word	0x2400894a

0800b328 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b32c:	461d      	mov	r5, r3
 800b32e:	b08a      	sub	sp, #40	; 0x28
 800b330:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b334:	4690      	mov	r8, r2
 800b336:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b33a:	2400      	movs	r4, #0
 800b33c:	4607      	mov	r7, r0
 800b33e:	fb06 8505 	mla	r5, r6, r5, r8
 800b342:	9404      	str	r4, [sp, #16]
 800b344:	f88d 4020 	strb.w	r4, [sp, #32]
 800b348:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b34c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b350:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b354:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b358:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b35c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b360:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b364:	f7ff ffce 	bl	800b304 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b368:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b36c:	6878      	ldr	r0, [r7, #4]
 800b36e:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b372:	a901      	add	r1, sp, #4
 800b374:	9505      	str	r5, [sp, #20]
 800b376:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b37a:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b37e:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b382:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b386:	6803      	ldr	r3, [r0, #0]
 800b388:	685b      	ldr	r3, [r3, #4]
 800b38a:	4798      	blx	r3
 800b38c:	b00a      	add	sp, #40	; 0x28
 800b38e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b392 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b392:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b396:	b08b      	sub	sp, #44	; 0x2c
 800b398:	2400      	movs	r4, #0
 800b39a:	4691      	mov	r9, r2
 800b39c:	461d      	mov	r5, r3
 800b39e:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b3a2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b3a6:	4688      	mov	r8, r1
 800b3a8:	4607      	mov	r7, r0
 800b3aa:	9404      	str	r4, [sp, #16]
 800b3ac:	fb06 9505 	mla	r5, r6, r5, r9
 800b3b0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b3b4:	f7ff ffa6 	bl	800b304 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b3b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b3bc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b3c0:	6878      	ldr	r0, [r7, #4]
 800b3c2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b3c6:	a901      	add	r1, sp, #4
 800b3c8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b3cc:	9505      	str	r5, [sp, #20]
 800b3ce:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b3d2:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b3d6:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b3da:	f8cd 8010 	str.w	r8, [sp, #16]
 800b3de:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b3e2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b3e6:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b3ea:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b3ee:	6803      	ldr	r3, [r0, #0]
 800b3f0:	685b      	ldr	r3, [r3, #4]
 800b3f2:	4798      	blx	r3
 800b3f4:	b00b      	add	sp, #44	; 0x2c
 800b3f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b3fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b3fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b400:	b08a      	sub	sp, #40	; 0x28
 800b402:	4698      	mov	r8, r3
 800b404:	2300      	movs	r3, #0
 800b406:	4606      	mov	r6, r0
 800b408:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b40c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b410:	2d0b      	cmp	r5, #11
 800b412:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b416:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b41a:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b41e:	9304      	str	r3, [sp, #16]
 800b420:	d137      	bne.n	800b492 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b422:	2380      	movs	r3, #128	; 0x80
 800b424:	f88d 0020 	strb.w	r0, [sp, #32]
 800b428:	4630      	mov	r0, r6
 800b42a:	9203      	str	r2, [sp, #12]
 800b42c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b430:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b434:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b438:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b43c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b440:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b444:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b448:	f7ff ff5c 	bl	800b304 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b44c:	2c0b      	cmp	r4, #11
 800b44e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b452:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b456:	bf94      	ite	ls
 800b458:	4b19      	ldrls	r3, [pc, #100]	; (800b4c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b45a:	2100      	movhi	r1, #0
 800b45c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b460:	bf98      	it	ls
 800b462:	5d19      	ldrbls	r1, [r3, r4]
 800b464:	fb02 8307 	mla	r3, r2, r7, r8
 800b468:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b46c:	10c9      	asrs	r1, r1, #3
 800b46e:	fb01 0003 	mla	r0, r1, r3, r0
 800b472:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b476:	a901      	add	r1, sp, #4
 800b478:	9005      	str	r0, [sp, #20]
 800b47a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b47e:	2300      	movs	r3, #0
 800b480:	6870      	ldr	r0, [r6, #4]
 800b482:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b486:	6803      	ldr	r3, [r0, #0]
 800b488:	685b      	ldr	r3, [r3, #4]
 800b48a:	4798      	blx	r3
 800b48c:	b00a      	add	sp, #40	; 0x28
 800b48e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b492:	2d02      	cmp	r5, #2
 800b494:	d109      	bne.n	800b4aa <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b496:	28ff      	cmp	r0, #255	; 0xff
 800b498:	d105      	bne.n	800b4a6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b49a:	f1bc 0f00 	cmp.w	ip, #0
 800b49e:	bf14      	ite	ne
 800b4a0:	2340      	movne	r3, #64	; 0x40
 800b4a2:	2320      	moveq	r3, #32
 800b4a4:	e7be      	b.n	800b424 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b4a6:	2340      	movs	r3, #64	; 0x40
 800b4a8:	e7bc      	b.n	800b424 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b4aa:	28ff      	cmp	r0, #255	; 0xff
 800b4ac:	d105      	bne.n	800b4ba <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b4ae:	f1bc 0f00 	cmp.w	ip, #0
 800b4b2:	bf14      	ite	ne
 800b4b4:	2304      	movne	r3, #4
 800b4b6:	2301      	moveq	r3, #1
 800b4b8:	e7b4      	b.n	800b424 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b4ba:	2304      	movs	r3, #4
 800b4bc:	e7b2      	b.n	800b424 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b4be:	bf00      	nop
 800b4c0:	0801ee88 	.word	0x0801ee88

0800b4c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b4c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b4c8:	b08b      	sub	sp, #44	; 0x2c
 800b4ca:	461d      	mov	r5, r3
 800b4cc:	2400      	movs	r4, #0
 800b4ce:	4688      	mov	r8, r1
 800b4d0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b4d4:	4693      	mov	fp, r2
 800b4d6:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b4da:	4607      	mov	r7, r0
 800b4dc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b4e0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b4e4:	9404      	str	r4, [sp, #16]
 800b4e6:	bf14      	ite	ne
 800b4e8:	2308      	movne	r3, #8
 800b4ea:	2302      	moveq	r3, #2
 800b4ec:	fb05 b50a 	mla	r5, r5, sl, fp
 800b4f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b4f4:	f7ff ff06 	bl	800b304 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b4f8:	2e0b      	cmp	r6, #11
 800b4fa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b4fe:	a901      	add	r1, sp, #4
 800b500:	bf98      	it	ls
 800b502:	4b13      	ldrls	r3, [pc, #76]	; (800b550 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b504:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b508:	bf98      	it	ls
 800b50a:	5d9c      	ldrbls	r4, [r3, r6]
 800b50c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b510:	10e4      	asrs	r4, r4, #3
 800b512:	f8cd 8010 	str.w	r8, [sp, #16]
 800b516:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b51a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b51e:	fb04 0405 	mla	r4, r4, r5, r0
 800b522:	6878      	ldr	r0, [r7, #4]
 800b524:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b528:	2300      	movs	r3, #0
 800b52a:	9405      	str	r4, [sp, #20]
 800b52c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b530:	f88d 9020 	strb.w	r9, [sp, #32]
 800b534:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b538:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b53c:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b540:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b544:	6803      	ldr	r3, [r0, #0]
 800b546:	685b      	ldr	r3, [r3, #4]
 800b548:	4798      	blx	r3
 800b54a:	b00b      	add	sp, #44	; 0x2c
 800b54c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b550:	0801ee88 	.word	0x0801ee88

0800b554 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b554:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b558:	461e      	mov	r6, r3
 800b55a:	4b0a      	ldr	r3, [pc, #40]	; (800b584 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b55c:	460f      	mov	r7, r1
 800b55e:	4690      	mov	r8, r2
 800b560:	881d      	ldrh	r5, [r3, #0]
 800b562:	f7ff fd23 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 800b566:	6803      	ldr	r3, [r0, #0]
 800b568:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b56a:	4798      	blx	r3
 800b56c:	280b      	cmp	r0, #11
 800b56e:	bf96      	itet	ls
 800b570:	4b05      	ldrls	r3, [pc, #20]	; (800b588 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b572:	2400      	movhi	r4, #0
 800b574:	5c1c      	ldrbls	r4, [r3, r0]
 800b576:	fb08 7005 	mla	r0, r8, r5, r7
 800b57a:	10e4      	asrs	r4, r4, #3
 800b57c:	fb04 6000 	mla	r0, r4, r0, r6
 800b580:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b584:	24008946 	.word	0x24008946
 800b588:	0801ee88 	.word	0x0801ee88

0800b58c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b58c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b58e:	b08b      	sub	sp, #44	; 0x2c
 800b590:	461f      	mov	r7, r3
 800b592:	4604      	mov	r4, r0
 800b594:	4616      	mov	r6, r2
 800b596:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b59a:	2500      	movs	r5, #0
 800b59c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b5a0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b5a4:	9504      	str	r5, [sp, #16]
 800b5a6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b5aa:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b5ae:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b5b2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b5b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b5ba:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b5be:	f88d 3020 	strb.w	r3, [sp, #32]
 800b5c2:	f7ff fe9f 	bl	800b304 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b5c6:	463a      	mov	r2, r7
 800b5c8:	4631      	mov	r1, r6
 800b5ca:	4603      	mov	r3, r0
 800b5cc:	4620      	mov	r0, r4
 800b5ce:	f7ff ffc1 	bl	800b554 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b5d2:	4b0e      	ldr	r3, [pc, #56]	; (800b60c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b5d4:	9005      	str	r0, [sp, #20]
 800b5d6:	881b      	ldrh	r3, [r3, #0]
 800b5d8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b5dc:	f7ff fce6 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 800b5e0:	6803      	ldr	r3, [r0, #0]
 800b5e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5e4:	4798      	blx	r3
 800b5e6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b5e8:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b5ec:	a901      	add	r1, sp, #4
 800b5ee:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b5f2:	9304      	str	r3, [sp, #16]
 800b5f4:	6860      	ldr	r0, [r4, #4]
 800b5f6:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b5fa:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b5fe:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b602:	6803      	ldr	r3, [r0, #0]
 800b604:	685b      	ldr	r3, [r3, #4]
 800b606:	4798      	blx	r3
 800b608:	b00b      	add	sp, #44	; 0x2c
 800b60a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b60c:	24008946 	.word	0x24008946

0800b610 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b610:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b612:	b08d      	sub	sp, #52	; 0x34
 800b614:	2501      	movs	r5, #1
 800b616:	4604      	mov	r4, r0
 800b618:	466b      	mov	r3, sp
 800b61a:	9503      	str	r5, [sp, #12]
 800b61c:	e883 0006 	stmia.w	r3, {r1, r2}
 800b620:	2300      	movs	r3, #0
 800b622:	f8bd 6000 	ldrh.w	r6, [sp]
 800b626:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b62a:	9306      	str	r3, [sp, #24]
 800b62c:	6803      	ldr	r3, [r0, #0]
 800b62e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b630:	4798      	blx	r3
 800b632:	463a      	mov	r2, r7
 800b634:	4631      	mov	r1, r6
 800b636:	4603      	mov	r3, r0
 800b638:	4620      	mov	r0, r4
 800b63a:	f7ff ff8b 	bl	800b554 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b63e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b640:	9004      	str	r0, [sp, #16]
 800b642:	9307      	str	r3, [sp, #28]
 800b644:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b648:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b64c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b650:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b654:	4b0e      	ldr	r3, [pc, #56]	; (800b690 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b656:	881b      	ldrh	r3, [r3, #0]
 800b658:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b65c:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b660:	f7ff fca4 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 800b664:	6803      	ldr	r3, [r0, #0]
 800b666:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b668:	4798      	blx	r3
 800b66a:	23ff      	movs	r3, #255	; 0xff
 800b66c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b670:	a903      	add	r1, sp, #12
 800b672:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b676:	6860      	ldr	r0, [r4, #4]
 800b678:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b67c:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b680:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b684:	6803      	ldr	r3, [r0, #0]
 800b686:	685b      	ldr	r3, [r3, #4]
 800b688:	4798      	blx	r3
 800b68a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b68c:	b00d      	add	sp, #52	; 0x34
 800b68e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b690:	24008946 	.word	0x24008946

0800b694 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b694:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b698:	b08c      	sub	sp, #48	; 0x30
 800b69a:	461e      	mov	r6, r3
 800b69c:	2300      	movs	r3, #0
 800b69e:	4604      	mov	r4, r0
 800b6a0:	466d      	mov	r5, sp
 800b6a2:	9306      	str	r3, [sp, #24]
 800b6a4:	6803      	ldr	r3, [r0, #0]
 800b6a6:	e885 0006 	stmia.w	r5, {r1, r2}
 800b6aa:	2501      	movs	r5, #1
 800b6ac:	f8bd 7000 	ldrh.w	r7, [sp]
 800b6b0:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b6b4:	9503      	str	r5, [sp, #12]
 800b6b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b6b8:	4798      	blx	r3
 800b6ba:	4642      	mov	r2, r8
 800b6bc:	4639      	mov	r1, r7
 800b6be:	4603      	mov	r3, r0
 800b6c0:	4620      	mov	r0, r4
 800b6c2:	f7ff ff47 	bl	800b554 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b6c6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b6ca:	9004      	str	r0, [sp, #16]
 800b6cc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b6d0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b6d4:	9607      	str	r6, [sp, #28]
 800b6d6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b6da:	4b10      	ldr	r3, [pc, #64]	; (800b71c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b6dc:	881b      	ldrh	r3, [r3, #0]
 800b6de:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b6e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b6e4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b6e8:	f7ff fc60 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 800b6ec:	6803      	ldr	r3, [r0, #0]
 800b6ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6f0:	4798      	blx	r3
 800b6f2:	23ff      	movs	r3, #255	; 0xff
 800b6f4:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b6f8:	a903      	add	r1, sp, #12
 800b6fa:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b6fe:	6860      	ldr	r0, [r4, #4]
 800b700:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b704:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b708:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b70c:	6803      	ldr	r3, [r0, #0]
 800b70e:	685b      	ldr	r3, [r3, #4]
 800b710:	4798      	blx	r3
 800b712:	4630      	mov	r0, r6
 800b714:	b00c      	add	sp, #48	; 0x30
 800b716:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b71a:	bf00      	nop
 800b71c:	24008946 	.word	0x24008946

0800b720 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b720:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b722:	b085      	sub	sp, #20
 800b724:	4605      	mov	r5, r0
 800b726:	ac02      	add	r4, sp, #8
 800b728:	e884 0006 	stmia.w	r4, {r1, r2}
 800b72c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b730:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b734:	f7ff fde6 	bl	800b304 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b738:	4631      	mov	r1, r6
 800b73a:	4603      	mov	r3, r0
 800b73c:	463a      	mov	r2, r7
 800b73e:	4628      	mov	r0, r5
 800b740:	f7ff ff08 	bl	800b554 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b744:	4a05      	ldr	r2, [pc, #20]	; (800b75c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b746:	682b      	ldr	r3, [r5, #0]
 800b748:	8812      	ldrh	r2, [r2, #0]
 800b74a:	9200      	str	r2, [sp, #0]
 800b74c:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800b74e:	4603      	mov	r3, r0
 800b750:	4628      	mov	r0, r5
 800b752:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b756:	47b0      	blx	r6
 800b758:	b005      	add	sp, #20
 800b75a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b75c:	24008946 	.word	0x24008946

0800b760 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b760:	b570      	push	{r4, r5, r6, lr}
 800b762:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b766:	4604      	mov	r4, r0
 800b768:	b19b      	cbz	r3, 800b792 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b76a:	2002      	movs	r0, #2
 800b76c:	f7f5 ffc0 	bl	80016f0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b770:	2300      	movs	r3, #0
 800b772:	4620      	mov	r0, r4
 800b774:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b778:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b77c:	6823      	ldr	r3, [r4, #0]
 800b77e:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800b782:	f7ff fdbf 	bl	800b304 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b786:	4601      	mov	r1, r0
 800b788:	4620      	mov	r0, r4
 800b78a:	462b      	mov	r3, r5
 800b78c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b790:	4718      	bx	r3
 800b792:	bd70      	pop	{r4, r5, r6, pc}

0800b794 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b794:	b570      	push	{r4, r5, r6, lr}
 800b796:	4605      	mov	r5, r0
 800b798:	460c      	mov	r4, r1
 800b79a:	2003      	movs	r0, #3
 800b79c:	b149      	cbz	r1, 800b7b2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b79e:	f7f5 ff43 	bl	8001628 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b7a2:	6928      	ldr	r0, [r5, #16]
 800b7a4:	b168      	cbz	r0, 800b7c2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b7a6:	6803      	ldr	r3, [r0, #0]
 800b7a8:	2101      	movs	r1, #1
 800b7aa:	695b      	ldr	r3, [r3, #20]
 800b7ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b7b0:	4718      	bx	r3
 800b7b2:	f7f5 ff6b 	bl	800168c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b7b6:	6928      	ldr	r0, [r5, #16]
 800b7b8:	b118      	cbz	r0, 800b7c2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b7ba:	6803      	ldr	r3, [r0, #0]
 800b7bc:	4621      	mov	r1, r4
 800b7be:	695b      	ldr	r3, [r3, #20]
 800b7c0:	e7f4      	b.n	800b7ac <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b7c2:	bd70      	pop	{r4, r5, r6, pc}

0800b7c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b7c4:	b538      	push	{r3, r4, r5, lr}
 800b7c6:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800b7ca:	4604      	mov	r4, r0
 800b7cc:	460d      	mov	r5, r1
 800b7ce:	428b      	cmp	r3, r1
 800b7d0:	d006      	beq.n	800b7e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b7d2:	6803      	ldr	r3, [r0, #0]
 800b7d4:	b929      	cbnz	r1, 800b7e2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b7d6:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800b7da:	4798      	blx	r3
 800b7dc:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800b7e0:	bd38      	pop	{r3, r4, r5, pc}
 800b7e2:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800b7e6:	e7f8      	b.n	800b7da <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b7e8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b7e8:	4b0d      	ldr	r3, [pc, #52]	; (800b820 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b7ea:	b510      	push	{r4, lr}
 800b7ec:	781b      	ldrb	r3, [r3, #0]
 800b7ee:	4604      	mov	r4, r0
 800b7f0:	b95b      	cbnz	r3, 800b80a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b7f2:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b7f6:	2b02      	cmp	r3, #2
 800b7f8:	d007      	beq.n	800b80a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b7fa:	6840      	ldr	r0, [r0, #4]
 800b7fc:	f000 f92a 	bl	800ba54 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b800:	b118      	cbz	r0, 800b80a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b802:	6862      	ldr	r2, [r4, #4]
 800b804:	7a53      	ldrb	r3, [r2, #9]
 800b806:	2b00      	cmp	r3, #0
 800b808:	d0fc      	beq.n	800b804 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b80a:	f7f6 f915 	bl	8001a38 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b80e:	4620      	mov	r0, r4
 800b810:	2100      	movs	r1, #0
 800b812:	f7ff ffd7 	bl	800b7c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b816:	4620      	mov	r0, r4
 800b818:	f7ff fd74 	bl	800b304 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b81c:	bd10      	pop	{r4, pc}
 800b81e:	bf00      	nop
 800b820:	2400894a 	.word	0x2400894a

0800b824 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b824:	b570      	push	{r4, r5, r6, lr}
 800b826:	4604      	mov	r4, r0
 800b828:	6803      	ldr	r3, [r0, #0]
 800b82a:	b919      	cbnz	r1, 800b834 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b82c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b82e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b832:	4718      	bx	r3
 800b834:	2200      	movs	r2, #0
 800b836:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800b83a:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800b83e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b840:	4798      	blx	r3
 800b842:	4605      	mov	r5, r0
 800b844:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800b848:	4620      	mov	r0, r4
 800b84a:	2101      	movs	r1, #1
 800b84c:	f7ff ffba 	bl	800b7c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b850:	4628      	mov	r0, r5
 800b852:	bd70      	pop	{r4, r5, r6, pc}

0800b854 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b854:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b858:	1a13      	subs	r3, r2, r0
 800b85a:	4258      	negs	r0, r3
 800b85c:	4158      	adcs	r0, r3
 800b85e:	4770      	bx	lr

0800b860 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b860:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b864:	1a9b      	subs	r3, r3, r2
 800b866:	2b00      	cmp	r3, #0
 800b868:	bfdc      	itt	le
 800b86a:	6882      	ldrle	r2, [r0, #8]
 800b86c:	189b      	addle	r3, r3, r2
 800b86e:	2b01      	cmp	r3, #1
 800b870:	bfcc      	ite	gt
 800b872:	2000      	movgt	r0, #0
 800b874:	2001      	movle	r0, #1
 800b876:	4770      	bx	lr

0800b878 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b878:	6902      	ldr	r2, [r0, #16]
 800b87a:	6843      	ldr	r3, [r0, #4]
 800b87c:	2024      	movs	r0, #36	; 0x24
 800b87e:	fb00 3002 	mla	r0, r0, r2, r3
 800b882:	4770      	bx	lr

0800b884 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b884:	6803      	ldr	r3, [r0, #0]
 800b886:	691b      	ldr	r3, [r3, #16]
 800b888:	4718      	bx	r3

0800b88a <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b88a:	2301      	movs	r3, #1
 800b88c:	b570      	push	{r4, r5, r6, lr}
 800b88e:	7203      	strb	r3, [r0, #8]
 800b890:	4604      	mov	r4, r0
 800b892:	6840      	ldr	r0, [r0, #4]
 800b894:	6803      	ldr	r3, [r0, #0]
 800b896:	699b      	ldr	r3, [r3, #24]
 800b898:	4798      	blx	r3
 800b89a:	6803      	ldr	r3, [r0, #0]
 800b89c:	4605      	mov	r5, r0
 800b89e:	2b40      	cmp	r3, #64	; 0x40
 800b8a0:	d00c      	beq.n	800b8bc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b8a2:	d810      	bhi.n	800b8c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b8a4:	2b04      	cmp	r3, #4
 800b8a6:	d01d      	beq.n	800b8e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b8a8:	d804      	bhi.n	800b8b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b8aa:	2b01      	cmp	r3, #1
 800b8ac:	d006      	beq.n	800b8bc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b8ae:	2b02      	cmp	r3, #2
 800b8b0:	d02c      	beq.n	800b90c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b8b2:	bd70      	pop	{r4, r5, r6, pc}
 800b8b4:	2b08      	cmp	r3, #8
 800b8b6:	d01d      	beq.n	800b8f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b8b8:	2b20      	cmp	r3, #32
 800b8ba:	d1fa      	bne.n	800b8b2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b8bc:	6823      	ldr	r3, [r4, #0]
 800b8be:	4620      	mov	r0, r4
 800b8c0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b8c2:	4798      	blx	r3
 800b8c4:	e013      	b.n	800b8ee <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b8c6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b8ca:	d0f7      	beq.n	800b8bc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b8cc:	d804      	bhi.n	800b8d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b8ce:	2b80      	cmp	r3, #128	; 0x80
 800b8d0:	d0f4      	beq.n	800b8bc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b8d2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b8d6:	e7f0      	b.n	800b8ba <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b8d8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b8dc:	d0ee      	beq.n	800b8bc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b8de:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b8e2:	e7e5      	b.n	800b8b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b8e4:	6823      	ldr	r3, [r4, #0]
 800b8e6:	7f01      	ldrb	r1, [r0, #28]
 800b8e8:	4620      	mov	r0, r4
 800b8ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b8ec:	4798      	blx	r3
 800b8ee:	6823      	ldr	r3, [r4, #0]
 800b8f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b8f2:	e006      	b.n	800b902 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b8f4:	6823      	ldr	r3, [r4, #0]
 800b8f6:	7f01      	ldrb	r1, [r0, #28]
 800b8f8:	4620      	mov	r0, r4
 800b8fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b8fc:	4798      	blx	r3
 800b8fe:	6823      	ldr	r3, [r4, #0]
 800b900:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b902:	4629      	mov	r1, r5
 800b904:	4620      	mov	r0, r4
 800b906:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b90a:	4718      	bx	r3
 800b90c:	6823      	ldr	r3, [r4, #0]
 800b90e:	4620      	mov	r0, r4
 800b910:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b912:	4798      	blx	r3
 800b914:	e7f3      	b.n	800b8fe <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b916 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b916:	4770      	bx	lr

0800b918 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b918:	4770      	bx	lr

0800b91a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b91a:	4770      	bx	lr

0800b91c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b91c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b920:	b510      	push	{r4, lr}
 800b922:	1ad2      	subs	r2, r2, r3
 800b924:	2a00      	cmp	r2, #0
 800b926:	bfdc      	itt	le
 800b928:	6884      	ldrle	r4, [r0, #8]
 800b92a:	1912      	addle	r2, r2, r4
 800b92c:	2a01      	cmp	r2, #1
 800b92e:	dd16      	ble.n	800b95e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b930:	6842      	ldr	r2, [r0, #4]
 800b932:	2424      	movs	r4, #36	; 0x24
 800b934:	fb04 2303 	mla	r3, r4, r3, r2
 800b938:	f101 0220 	add.w	r2, r1, #32
 800b93c:	f851 4b04 	ldr.w	r4, [r1], #4
 800b940:	4291      	cmp	r1, r2
 800b942:	f843 4b04 	str.w	r4, [r3], #4
 800b946:	d1f9      	bne.n	800b93c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b948:	780a      	ldrb	r2, [r1, #0]
 800b94a:	701a      	strb	r2, [r3, #0]
 800b94c:	68c3      	ldr	r3, [r0, #12]
 800b94e:	6882      	ldr	r2, [r0, #8]
 800b950:	f3bf 8f5b 	dmb	ish
 800b954:	3301      	adds	r3, #1
 800b956:	429a      	cmp	r2, r3
 800b958:	bfd8      	it	le
 800b95a:	1a9b      	suble	r3, r3, r2
 800b95c:	60c3      	str	r3, [r0, #12]
 800b95e:	bd10      	pop	{r4, pc}

0800b960 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b960:	6903      	ldr	r3, [r0, #16]
 800b962:	6882      	ldr	r2, [r0, #8]
 800b964:	f3bf 8f5b 	dmb	ish
 800b968:	3301      	adds	r3, #1
 800b96a:	429a      	cmp	r2, r3
 800b96c:	bfd8      	it	le
 800b96e:	1a9b      	suble	r3, r3, r2
 800b970:	6103      	str	r3, [r0, #16]
 800b972:	4770      	bx	lr

0800b974 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b974:	b570      	push	{r4, r5, r6, lr}
 800b976:	4604      	mov	r4, r0
 800b978:	460e      	mov	r6, r1
 800b97a:	6860      	ldr	r0, [r4, #4]
 800b97c:	6803      	ldr	r3, [r0, #0]
 800b97e:	685b      	ldr	r3, [r3, #4]
 800b980:	4798      	blx	r3
 800b982:	2800      	cmp	r0, #0
 800b984:	d1f9      	bne.n	800b97a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b986:	4d0d      	ldr	r5, [pc, #52]	; (800b9bc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b988:	6828      	ldr	r0, [r5, #0]
 800b98a:	6803      	ldr	r3, [r0, #0]
 800b98c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b98e:	4798      	blx	r3
 800b990:	f7f6 f860 	bl	8001a54 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b994:	6828      	ldr	r0, [r5, #0]
 800b996:	2101      	movs	r1, #1
 800b998:	f7ff ff14 	bl	800b7c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b99c:	6860      	ldr	r0, [r4, #4]
 800b99e:	4631      	mov	r1, r6
 800b9a0:	6803      	ldr	r3, [r0, #0]
 800b9a2:	689b      	ldr	r3, [r3, #8]
 800b9a4:	4798      	blx	r3
 800b9a6:	6823      	ldr	r3, [r4, #0]
 800b9a8:	4620      	mov	r0, r4
 800b9aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b9ac:	4798      	blx	r3
 800b9ae:	6828      	ldr	r0, [r5, #0]
 800b9b0:	6803      	ldr	r3, [r0, #0]
 800b9b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9b6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b9b8:	4718      	bx	r3
 800b9ba:	bf00      	nop
 800b9bc:	2400894c 	.word	0x2400894c

0800b9c0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b9c0:	b508      	push	{r3, lr}
 800b9c2:	f7f6 f839 	bl	8001a38 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b9c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b9ca:	f7f6 b83d 	b.w	8001a48 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b9ce <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b9ce:	b510      	push	{r4, lr}
 800b9d0:	4604      	mov	r4, r0
 800b9d2:	2114      	movs	r1, #20
 800b9d4:	f010 fd17 	bl	801c406 <_ZdlPvj>
 800b9d8:	4620      	mov	r0, r4
 800b9da:	bd10      	pop	{r4, pc}

0800b9dc <_ZN8touchgfx13DMA_Interface5startEv>:
 800b9dc:	b510      	push	{r4, lr}
 800b9de:	4604      	mov	r4, r0
 800b9e0:	6840      	ldr	r0, [r0, #4]
 800b9e2:	6803      	ldr	r3, [r0, #0]
 800b9e4:	681b      	ldr	r3, [r3, #0]
 800b9e6:	4798      	blx	r3
 800b9e8:	b948      	cbnz	r0, 800b9fe <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b9ea:	7a63      	ldrb	r3, [r4, #9]
 800b9ec:	b13b      	cbz	r3, 800b9fe <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b9ee:	7a23      	ldrb	r3, [r4, #8]
 800b9f0:	b92b      	cbnz	r3, 800b9fe <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b9f2:	6823      	ldr	r3, [r4, #0]
 800b9f4:	4620      	mov	r0, r4
 800b9f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b9f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b9fc:	4718      	bx	r3
 800b9fe:	bd10      	pop	{r4, pc}

0800ba00 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800ba00:	b570      	push	{r4, r5, r6, lr}
 800ba02:	4604      	mov	r4, r0
 800ba04:	6840      	ldr	r0, [r0, #4]
 800ba06:	6803      	ldr	r3, [r0, #0]
 800ba08:	681b      	ldr	r3, [r3, #0]
 800ba0a:	4798      	blx	r3
 800ba0c:	4605      	mov	r5, r0
 800ba0e:	b930      	cbnz	r0, 800ba1e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ba10:	7a23      	ldrb	r3, [r4, #8]
 800ba12:	b123      	cbz	r3, 800ba1e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ba14:	6860      	ldr	r0, [r4, #4]
 800ba16:	6803      	ldr	r3, [r0, #0]
 800ba18:	695b      	ldr	r3, [r3, #20]
 800ba1a:	4798      	blx	r3
 800ba1c:	7225      	strb	r5, [r4, #8]
 800ba1e:	6860      	ldr	r0, [r4, #4]
 800ba20:	6803      	ldr	r3, [r0, #0]
 800ba22:	681b      	ldr	r3, [r3, #0]
 800ba24:	4798      	blx	r3
 800ba26:	b928      	cbnz	r0, 800ba34 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800ba28:	6823      	ldr	r3, [r4, #0]
 800ba2a:	4620      	mov	r0, r4
 800ba2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ba2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba32:	4718      	bx	r3
 800ba34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba38:	f7f6 b814 	b.w	8001a64 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800ba3c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800ba3c:	b510      	push	{r4, lr}
 800ba3e:	6082      	str	r2, [r0, #8]
 800ba40:	2200      	movs	r2, #0
 800ba42:	4c03      	ldr	r4, [pc, #12]	; (800ba50 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800ba44:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800ba48:	e9c0 4100 	strd	r4, r1, [r0]
 800ba4c:	bd10      	pop	{r4, pc}
 800ba4e:	bf00      	nop
 800ba50:	0801ee9c 	.word	0x0801ee9c

0800ba54 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800ba54:	6840      	ldr	r0, [r0, #4]
 800ba56:	6803      	ldr	r3, [r0, #0]
 800ba58:	681b      	ldr	r3, [r3, #0]
 800ba5a:	4718      	bx	r3

0800ba5c <_ZNK8touchgfx19PainterRGB888Bitmap18getRenderingMethodEv>:
 800ba5c:	b508      	push	{r3, lr}
 800ba5e:	4b05      	ldr	r3, [pc, #20]	; (800ba74 <_ZNK8touchgfx19PainterRGB888Bitmap18getRenderingMethodEv+0x18>)
 800ba60:	6818      	ldr	r0, [r3, #0]
 800ba62:	6803      	ldr	r3, [r0, #0]
 800ba64:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800ba68:	4798      	blx	r3
 800ba6a:	1e43      	subs	r3, r0, #1
 800ba6c:	4258      	negs	r0, r3
 800ba6e:	4158      	adcs	r0, r3
 800ba70:	bd08      	pop	{r3, pc}
 800ba72:	bf00      	nop
 800ba74:	2400894c 	.word	0x2400894c

0800ba78 <_ZN8touchgfx19PainterRGB888BitmapD1Ev>:
 800ba78:	4770      	bx	lr

0800ba7a <_ZThn8_N8touchgfx19PainterRGB888BitmapD1Ev>:
 800ba7a:	3808      	subs	r0, #8
 800ba7c:	4770      	bx	lr
	...

0800ba80 <_ZNK8touchgfx19PainterRGB888Bitmap5setupERKNS_4RectE>:
 800ba80:	b538      	push	{r3, r4, r5, lr}
 800ba82:	4b10      	ldr	r3, [pc, #64]	; (800bac4 <_ZNK8touchgfx19PainterRGB888Bitmap5setupERKNS_4RectE+0x44>)
 800ba84:	4604      	mov	r4, r0
 800ba86:	f9b1 5004 	ldrsh.w	r5, [r1, #4]
 800ba8a:	781b      	ldrb	r3, [r3, #0]
 800ba8c:	8085      	strh	r5, [r0, #4]
 800ba8e:	b96b      	cbnz	r3, 800baac <_ZNK8touchgfx19PainterRGB888Bitmap5setupERKNS_4RectE+0x2c>
 800ba90:	f9b0 201c 	ldrsh.w	r2, [r0, #28]
 800ba94:	8462      	strh	r2, [r4, #34]	; 0x22
 800ba96:	b963      	cbnz	r3, 800bab2 <_ZNK8touchgfx19PainterRGB888Bitmap5setupERKNS_4RectE+0x32>
 800ba98:	f9b4 001e 	ldrsh.w	r0, [r4, #30]
 800ba9c:	84a0      	strh	r0, [r4, #36]	; 0x24
 800ba9e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800baa2:	89a0      	ldrh	r0, [r4, #12]
 800baa4:	1ac0      	subs	r0, r0, r3
 800baa6:	bf18      	it	ne
 800baa8:	2001      	movne	r0, #1
 800baaa:	bd38      	pop	{r3, r4, r5, pc}
 800baac:	f9b0 201e 	ldrsh.w	r2, [r0, #30]
 800bab0:	e7f0      	b.n	800ba94 <_ZNK8touchgfx19PainterRGB888Bitmap5setupERKNS_4RectE+0x14>
 800bab2:	f104 000c 	add.w	r0, r4, #12
 800bab6:	f007 f987 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800baba:	1b40      	subs	r0, r0, r5
 800babc:	8ba5      	ldrh	r5, [r4, #28]
 800babe:	1b40      	subs	r0, r0, r5
 800bac0:	b200      	sxth	r0, r0
 800bac2:	e7eb      	b.n	800ba9c <_ZNK8touchgfx19PainterRGB888Bitmap5setupERKNS_4RectE+0x1c>
 800bac4:	24008944 	.word	0x24008944

0800bac8 <_ZNK8touchgfx19PainterRGB888Bitmap8tearDownEv>:
 800bac8:	f7f6 b978 	b.w	8001dbc <_ZN8touchgfx5paint8tearDownEv>

0800bacc <_ZN8touchgfx19PainterRGB888BitmapD0Ev>:
 800bacc:	b510      	push	{r4, lr}
 800bace:	4604      	mov	r4, r0
 800bad0:	2128      	movs	r1, #40	; 0x28
 800bad2:	f010 fc98 	bl	801c406 <_ZdlPvj>
 800bad6:	4620      	mov	r0, r4
 800bad8:	bd10      	pop	{r4, pc}

0800bada <_ZThn8_N8touchgfx19PainterRGB888BitmapD0Ev>:
 800bada:	f1a0 0008 	sub.w	r0, r0, #8
 800bade:	e7f5      	b.n	800bacc <_ZN8touchgfx19PainterRGB888BitmapD0Ev>

0800bae0 <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh>:
 800bae0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bae4:	4607      	mov	r7, r0
 800bae6:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 800bae8:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 800baec:	4403      	add	r3, r0
 800baee:	8cb8      	ldrh	r0, [r7, #36]	; 0x24
 800baf0:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 800baf4:	4406      	add	r6, r0
 800baf6:	b29b      	uxth	r3, r3
 800baf8:	f897 0020 	ldrb.w	r0, [r7, #32]
 800bafc:	f89d a030 	ldrb.w	sl, [sp, #48]	; 0x30
 800bb00:	b21c      	sxth	r4, r3
 800bb02:	b236      	sxth	r6, r6
 800bb04:	b1a0      	cbz	r0, 800bb30 <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0x50>
 800bb06:	f9b7 0014 	ldrsh.w	r0, [r7, #20]
 800bb0a:	fb94 f3f0 	sdiv	r3, r4, r0
 800bb0e:	fb00 4413 	mls	r4, r0, r3, r4
 800bb12:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800bb16:	2c00      	cmp	r4, #0
 800bb18:	bfb8      	it	lt
 800bb1a:	1824      	addlt	r4, r4, r0
 800bb1c:	fb96 f0f3 	sdiv	r0, r6, r3
 800bb20:	fb03 6610 	mls	r6, r3, r0, r6
 800bb24:	b224      	sxth	r4, r4
 800bb26:	2e00      	cmp	r6, #0
 800bb28:	da00      	bge.n	800bb2c <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0x4c>
 800bb2a:	441e      	add	r6, r3
 800bb2c:	b236      	sxth	r6, r6
 800bb2e:	e018      	b.n	800bb62 <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0x82>
 800bb30:	2c00      	cmp	r4, #0
 800bb32:	da07      	bge.n	800bb44 <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0x64>
 800bb34:	442c      	add	r4, r5
 800bb36:	2c00      	cmp	r4, #0
 800bb38:	dd3f      	ble.n	800bbba <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0xda>
 800bb3a:	441d      	add	r5, r3
 800bb3c:	1ad3      	subs	r3, r2, r3
 800bb3e:	4604      	mov	r4, r0
 800bb40:	b22d      	sxth	r5, r5
 800bb42:	b21a      	sxth	r2, r3
 800bb44:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 800bb48:	42a3      	cmp	r3, r4
 800bb4a:	dd36      	ble.n	800bbba <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0xda>
 800bb4c:	2e00      	cmp	r6, #0
 800bb4e:	db34      	blt.n	800bbba <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0xda>
 800bb50:	f9b7 0016 	ldrsh.w	r0, [r7, #22]
 800bb54:	42b0      	cmp	r0, r6
 800bb56:	dd30      	ble.n	800bbba <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0xda>
 800bb58:	1960      	adds	r0, r4, r5
 800bb5a:	4298      	cmp	r0, r3
 800bb5c:	dd01      	ble.n	800bb62 <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0x82>
 800bb5e:	1b1d      	subs	r5, r3, r4
 800bb60:	b22d      	sxth	r5, r5
 800bb62:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 800bb66:	f9b7 b014 	ldrsh.w	fp, [r7, #20]
 800bb6a:	7bba      	ldrb	r2, [r7, #14]
 800bb6c:	eb05 0945 	add.w	r9, r5, r5, lsl #1
 800bb70:	eb01 0803 	add.w	r8, r1, r3
 800bb74:	fb06 f60b 	mul.w	r6, r6, fp
 800bb78:	2a01      	cmp	r2, #1
 800bb7a:	ebab 0b04 	sub.w	fp, fp, r4
 800bb7e:	44c1      	add	r9, r8
 800bb80:	69bb      	ldr	r3, [r7, #24]
 800bb82:	fa0f fb8b 	sxth.w	fp, fp
 800bb86:	d11a      	bne.n	800bbbe <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0xde>
 800bb88:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 800bb8c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800bb90:	441e      	add	r6, r3
 800bb92:	1931      	adds	r1, r6, r4
 800bb94:	45ab      	cmp	fp, r5
 800bb96:	4640      	mov	r0, r8
 800bb98:	4653      	mov	r3, sl
 800bb9a:	bfa8      	it	ge
 800bb9c:	46ab      	movge	fp, r5
 800bb9e:	eba5 050b 	sub.w	r5, r5, fp
 800bba2:	465a      	mov	r2, fp
 800bba4:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 800bba8:	f7f6 f912 	bl	8001dd0 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh>
 800bbac:	4631      	mov	r1, r6
 800bbae:	44d8      	add	r8, fp
 800bbb0:	b22d      	sxth	r5, r5
 800bbb2:	f9b7 b014 	ldrsh.w	fp, [r7, #20]
 800bbb6:	45c1      	cmp	r9, r8
 800bbb8:	d8ec      	bhi.n	800bb94 <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0xb4>
 800bbba:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bbbe:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 800bbc2:	eb06 0184 	add.w	r1, r6, r4, lsl #2
 800bbc6:	45ab      	cmp	fp, r5
 800bbc8:	4640      	mov	r0, r8
 800bbca:	4653      	mov	r3, sl
 800bbcc:	bfa8      	it	ge
 800bbce:	46ab      	movge	fp, r5
 800bbd0:	eba5 050b 	sub.w	r5, r5, fp
 800bbd4:	465a      	mov	r2, fp
 800bbd6:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 800bbda:	f7f6 f91d 	bl	8001e18 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh>
 800bbde:	4631      	mov	r1, r6
 800bbe0:	44d8      	add	r8, fp
 800bbe2:	b22d      	sxth	r5, r5
 800bbe4:	f9b7 b014 	ldrsh.w	fp, [r7, #20]
 800bbe8:	45c1      	cmp	r9, r8
 800bbea:	d8ec      	bhi.n	800bbc6 <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0xe6>
 800bbec:	e7e5      	b.n	800bbba <_ZNK8touchgfx19PainterRGB888Bitmap5paintEPhssssh+0xda>

0800bbee <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE>:
 800bbee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bbf0:	880b      	ldrh	r3, [r1, #0]
 800bbf2:	f100 050c 	add.w	r5, r0, #12
 800bbf6:	4604      	mov	r4, r0
 800bbf8:	8183      	strh	r3, [r0, #12]
 800bbfa:	4628      	mov	r0, r5
 800bbfc:	f007 fa54 	bl	80130a8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800bc00:	73a0      	strb	r0, [r4, #14]
 800bc02:	4628      	mov	r0, r5
 800bc04:	f007 f8e0 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bc08:	4607      	mov	r7, r0
 800bc0a:	4628      	mov	r0, r5
 800bc0c:	f007 f910 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bc10:	2300      	movs	r3, #0
 800bc12:	82e0      	strh	r0, [r4, #22]
 800bc14:	f104 0010 	add.w	r0, r4, #16
 800bc18:	6123      	str	r3, [r4, #16]
 800bc1a:	82a7      	strh	r7, [r4, #20]
 800bc1c:	f003 fd4e 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800bc20:	4628      	mov	r0, r5
 800bc22:	f007 f9bd 	bl	8012fa0 <_ZNK8touchgfx6Bitmap7getDataEv>
 800bc26:	61a0      	str	r0, [r4, #24]
 800bc28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bc2a <_ZThn8_N8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE>:
 800bc2a:	f1a0 0008 	sub.w	r0, r0, #8
 800bc2e:	f7ff bfde 	b.w	800bbee <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE>

0800bc32 <_ZN8touchgfx6CircleD1Ev>:
 800bc32:	4770      	bx	lr

0800bc34 <_ZN8touchgfx6CircleD0Ev>:
 800bc34:	b510      	push	{r4, lr}
 800bc36:	4604      	mov	r4, r0
 800bc38:	2148      	movs	r1, #72	; 0x48
 800bc3a:	f010 fbe4 	bl	801c406 <_ZdlPvj>
 800bc3e:	4620      	mov	r0, r4
 800bc40:	bd10      	pop	{r4, pc}

0800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800bc42:	b507      	push	{r0, r1, r2, lr}
 800bc44:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800bc48:	ab01      	add	r3, sp, #4
 800bc4a:	6809      	ldr	r1, [r1, #0]
 800bc4c:	6800      	ldr	r0, [r0, #0]
 800bc4e:	f005 f92a 	bl	8010ea6 <_ZN8touchgfx6muldivElllRl>
 800bc52:	b003      	add	sp, #12
 800bc54:	f85d fb04 	ldr.w	pc, [sp], #4

0800bc58 <_ZN8touchgfx7CWRUtil4sineEi>:
 800bc58:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800bc5c:	fb90 f2f3 	sdiv	r2, r0, r3
 800bc60:	fb02 0013 	mls	r0, r2, r3, r0
 800bc64:	2800      	cmp	r0, #0
 800bc66:	bfb8      	it	lt
 800bc68:	18c0      	addlt	r0, r0, r3
 800bc6a:	4b0a      	ldr	r3, [pc, #40]	; (800bc94 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800bc6c:	285a      	cmp	r0, #90	; 0x5a
 800bc6e:	dc02      	bgt.n	800bc76 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800bc70:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800bc74:	4770      	bx	lr
 800bc76:	28b4      	cmp	r0, #180	; 0xb4
 800bc78:	dc02      	bgt.n	800bc80 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800bc7a:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800bc7e:	e7f7      	b.n	800bc70 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800bc80:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800bc84:	bfd4      	ite	le
 800bc86:	38b4      	suble	r0, #180	; 0xb4
 800bc88:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800bc8c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800bc90:	4240      	negs	r0, r0
 800bc92:	4770      	bx	lr
 800bc94:	0801eef8 	.word	0x0801eef8

0800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800bc98:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 800bc9c:	fb90 f2f3 	sdiv	r2, r0, r3
 800bca0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bca2:	fb02 0013 	mls	r0, r2, r3, r0
 800bca6:	2800      	cmp	r0, #0
 800bca8:	bfb8      	it	lt
 800bcaa:	18c0      	addlt	r0, r0, r3
 800bcac:	1144      	asrs	r4, r0, #5
 800bcae:	f000 061f 	and.w	r6, r0, #31
 800bcb2:	4620      	mov	r0, r4
 800bcb4:	f7ff ffd0 	bl	800bc58 <_ZN8touchgfx7CWRUtil4sineEi>
 800bcb8:	4605      	mov	r5, r0
 800bcba:	b90e      	cbnz	r6, 800bcc0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 800bcbc:	b002      	add	sp, #8
 800bcbe:	bd70      	pop	{r4, r5, r6, pc}
 800bcc0:	1c60      	adds	r0, r4, #1
 800bcc2:	f7ff ffc9 	bl	800bc58 <_ZN8touchgfx7CWRUtil4sineEi>
 800bcc6:	ab01      	add	r3, sp, #4
 800bcc8:	2220      	movs	r2, #32
 800bcca:	4631      	mov	r1, r6
 800bccc:	1b40      	subs	r0, r0, r5
 800bcce:	f005 f8ea 	bl	8010ea6 <_ZN8touchgfx6muldivElllRl>
 800bcd2:	4428      	add	r0, r5
 800bcd4:	e7f2      	b.n	800bcbc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800bcd6:	b508      	push	{r3, lr}
 800bcd8:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 800bcdc:	f7ff ffdc 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bce0:	bd08      	pop	{r3, pc}
	...

0800bce4 <_ZN8touchgfx6CircleC1Ev>:
 800bce4:	b510      	push	{r4, lr}
 800bce6:	4604      	mov	r4, r0
 800bce8:	f000 fd64 	bl	800c7b4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800bcec:	4b08      	ldr	r3, [pc, #32]	; (800bd10 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800bcee:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800bcf2:	4620      	mov	r0, r4
 800bcf4:	6023      	str	r3, [r4, #0]
 800bcf6:	2300      	movs	r3, #0
 800bcf8:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 800bcfc:	f24b 4205 	movw	r2, #46085	; 0xb405
 800bd00:	60a3      	str	r3, [r4, #8]
 800bd02:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 800bd06:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 800bd0a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 800bd0e:	bd10      	pop	{r4, pc}
 800bd10:	0801efb8 	.word	0x0801efb8

0800bd14 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 800bd14:	29b4      	cmp	r1, #180	; 0xb4
 800bd16:	bfa8      	it	ge
 800bd18:	21b4      	movge	r1, #180	; 0xb4
 800bd1a:	2901      	cmp	r1, #1
 800bd1c:	bfb8      	it	lt
 800bd1e:	2101      	movlt	r1, #1
 800bd20:	f880 1045 	strb.w	r1, [r0, #69]	; 0x45
 800bd24:	4770      	bx	lr

0800bd26 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800bd26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd2a:	428a      	cmp	r2, r1
 800bd2c:	4680      	mov	r8, r0
 800bd2e:	4610      	mov	r0, r2
 800bd30:	4699      	mov	r9, r3
 800bd32:	bfaa      	itet	ge
 800bd34:	460a      	movge	r2, r1
 800bd36:	460b      	movlt	r3, r1
 800bd38:	4603      	movge	r3, r0
 800bd3a:	b085      	sub	sp, #20
 800bd3c:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 800bd40:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 800bd44:	1a99      	subs	r1, r3, r2
 800bd46:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800bd48:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 800bd4c:	bfa4      	itt	ge
 800bd4e:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800bd52:	2200      	movge	r2, #0
 800bd54:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 800bd58:	9300      	str	r3, [sp, #0]
 800bd5a:	f102 0b01 	add.w	fp, r2, #1
 800bd5e:	2c00      	cmp	r4, #0
 800bd60:	f040 80ae 	bne.w	800bec0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19a>
 800bd64:	4610      	mov	r0, r2
 800bd66:	9201      	str	r2, [sp, #4]
 800bd68:	f7ff ff96 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bd6c:	a903      	add	r1, sp, #12
 800bd6e:	9003      	str	r0, [sp, #12]
 800bd70:	4650      	mov	r0, sl
 800bd72:	f7ff ff66 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bd76:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 800bd7a:	9a01      	ldr	r2, [sp, #4]
 800bd7c:	4408      	add	r0, r1
 800bd7e:	f8d9 1000 	ldr.w	r1, [r9]
 800bd82:	4281      	cmp	r1, r0
 800bd84:	bfc8      	it	gt
 800bd86:	f8c9 0000 	strgt.w	r0, [r9]
 800bd8a:	6839      	ldr	r1, [r7, #0]
 800bd8c:	4288      	cmp	r0, r1
 800bd8e:	bfc8      	it	gt
 800bd90:	6038      	strgt	r0, [r7, #0]
 800bd92:	4610      	mov	r0, r2
 800bd94:	f7ff ff9f 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bd98:	a903      	add	r1, sp, #12
 800bd9a:	9003      	str	r0, [sp, #12]
 800bd9c:	4650      	mov	r0, sl
 800bd9e:	f7ff ff50 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bda2:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800bda6:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 800bdaa:	1a10      	subs	r0, r2, r0
 800bdac:	6832      	ldr	r2, [r6, #0]
 800bdae:	4282      	cmp	r2, r0
 800bdb0:	bfc8      	it	gt
 800bdb2:	6030      	strgt	r0, [r6, #0]
 800bdb4:	682a      	ldr	r2, [r5, #0]
 800bdb6:	4290      	cmp	r0, r2
 800bdb8:	fb9b f2f1 	sdiv	r2, fp, r1
 800bdbc:	fb01 b212 	mls	r2, r1, r2, fp
 800bdc0:	bfc8      	it	gt
 800bdc2:	6028      	strgt	r0, [r5, #0]
 800bdc4:	1a8a      	subs	r2, r1, r2
 800bdc6:	fb92 f0f1 	sdiv	r0, r2, r1
 800bdca:	fb01 2210 	mls	r2, r1, r0, r2
 800bdce:	4493      	add	fp, r2
 800bdd0:	9b00      	ldr	r3, [sp, #0]
 800bdd2:	455b      	cmp	r3, fp
 800bdd4:	db2a      	blt.n	800be2c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x106>
 800bdd6:	4658      	mov	r0, fp
 800bdd8:	f7ff ff5e 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bddc:	a903      	add	r1, sp, #12
 800bdde:	9003      	str	r0, [sp, #12]
 800bde0:	4650      	mov	r0, sl
 800bde2:	f7ff ff2e 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bde6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800bdea:	4410      	add	r0, r2
 800bdec:	f8d9 2000 	ldr.w	r2, [r9]
 800bdf0:	4282      	cmp	r2, r0
 800bdf2:	bfc8      	it	gt
 800bdf4:	f8c9 0000 	strgt.w	r0, [r9]
 800bdf8:	683a      	ldr	r2, [r7, #0]
 800bdfa:	4290      	cmp	r0, r2
 800bdfc:	bfc8      	it	gt
 800bdfe:	6038      	strgt	r0, [r7, #0]
 800be00:	4658      	mov	r0, fp
 800be02:	f7ff ff68 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800be06:	a903      	add	r1, sp, #12
 800be08:	9003      	str	r0, [sp, #12]
 800be0a:	4650      	mov	r0, sl
 800be0c:	f7ff ff19 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800be10:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800be14:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 800be18:	1a10      	subs	r0, r2, r0
 800be1a:	6832      	ldr	r2, [r6, #0]
 800be1c:	4282      	cmp	r2, r0
 800be1e:	bfc8      	it	gt
 800be20:	6030      	strgt	r0, [r6, #0]
 800be22:	682a      	ldr	r2, [r5, #0]
 800be24:	4290      	cmp	r0, r2
 800be26:	bfc8      	it	gt
 800be28:	6028      	strgt	r0, [r5, #0]
 800be2a:	e7d1      	b.n	800bdd0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xaa>
 800be2c:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 800be30:	9b00      	ldr	r3, [sp, #0]
 800be32:	455b      	cmp	r3, fp
 800be34:	dd27      	ble.n	800be86 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x160>
 800be36:	4618      	mov	r0, r3
 800be38:	f7ff ff2e 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800be3c:	a903      	add	r1, sp, #12
 800be3e:	9003      	str	r0, [sp, #12]
 800be40:	4650      	mov	r0, sl
 800be42:	f7ff fefe 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800be46:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800be4a:	4410      	add	r0, r2
 800be4c:	f8d9 2000 	ldr.w	r2, [r9]
 800be50:	4282      	cmp	r2, r0
 800be52:	bfc8      	it	gt
 800be54:	f8c9 0000 	strgt.w	r0, [r9]
 800be58:	683a      	ldr	r2, [r7, #0]
 800be5a:	4290      	cmp	r0, r2
 800be5c:	bfc8      	it	gt
 800be5e:	6038      	strgt	r0, [r7, #0]
 800be60:	9800      	ldr	r0, [sp, #0]
 800be62:	f7ff ff38 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800be66:	a903      	add	r1, sp, #12
 800be68:	9003      	str	r0, [sp, #12]
 800be6a:	4650      	mov	r0, sl
 800be6c:	f7ff fee9 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800be70:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800be74:	1a10      	subs	r0, r2, r0
 800be76:	6832      	ldr	r2, [r6, #0]
 800be78:	4282      	cmp	r2, r0
 800be7a:	bfc8      	it	gt
 800be7c:	6030      	strgt	r0, [r6, #0]
 800be7e:	682a      	ldr	r2, [r5, #0]
 800be80:	4290      	cmp	r0, r2
 800be82:	bfc8      	it	gt
 800be84:	6028      	strgt	r0, [r5, #0]
 800be86:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800be8a:	f8d9 1000 	ldr.w	r1, [r9]
 800be8e:	4291      	cmp	r1, r2
 800be90:	bfc8      	it	gt
 800be92:	f8c9 2000 	strgt.w	r2, [r9]
 800be96:	683a      	ldr	r2, [r7, #0]
 800be98:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 800be9c:	429a      	cmp	r2, r3
 800be9e:	bfb8      	it	lt
 800bea0:	603b      	strlt	r3, [r7, #0]
 800bea2:	6832      	ldr	r2, [r6, #0]
 800bea4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800bea8:	429a      	cmp	r2, r3
 800beaa:	bfc8      	it	gt
 800beac:	6033      	strgt	r3, [r6, #0]
 800beae:	682a      	ldr	r2, [r5, #0]
 800beb0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800beb4:	429a      	cmp	r2, r3
 800beb6:	da00      	bge.n	800beba <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
 800beb8:	602b      	str	r3, [r5, #0]
 800beba:	b005      	add	sp, #20
 800bebc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bec0:	2002      	movs	r0, #2
 800bec2:	3401      	adds	r4, #1
 800bec4:	9201      	str	r2, [sp, #4]
 800bec6:	fb94 f4f0 	sdiv	r4, r4, r0
 800beca:	4610      	mov	r0, r2
 800becc:	f7ff fee4 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bed0:	a903      	add	r1, sp, #12
 800bed2:	9003      	str	r0, [sp, #12]
 800bed4:	4650      	mov	r0, sl
 800bed6:	f7ff feb4 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800beda:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 800bede:	9a01      	ldr	r2, [sp, #4]
 800bee0:	4408      	add	r0, r1
 800bee2:	f8d9 1000 	ldr.w	r1, [r9]
 800bee6:	1b03      	subs	r3, r0, r4
 800bee8:	4420      	add	r0, r4
 800beea:	4299      	cmp	r1, r3
 800beec:	bfc8      	it	gt
 800beee:	f8c9 3000 	strgt.w	r3, [r9]
 800bef2:	6839      	ldr	r1, [r7, #0]
 800bef4:	428b      	cmp	r3, r1
 800bef6:	bfc8      	it	gt
 800bef8:	603b      	strgt	r3, [r7, #0]
 800befa:	f8d9 1000 	ldr.w	r1, [r9]
 800befe:	4281      	cmp	r1, r0
 800bf00:	bfc8      	it	gt
 800bf02:	f8c9 0000 	strgt.w	r0, [r9]
 800bf06:	6839      	ldr	r1, [r7, #0]
 800bf08:	4288      	cmp	r0, r1
 800bf0a:	bfc8      	it	gt
 800bf0c:	6038      	strgt	r0, [r7, #0]
 800bf0e:	4610      	mov	r0, r2
 800bf10:	f7ff fee1 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bf14:	a903      	add	r1, sp, #12
 800bf16:	9003      	str	r0, [sp, #12]
 800bf18:	4650      	mov	r0, sl
 800bf1a:	f7ff fe92 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bf1e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800bf22:	1a10      	subs	r0, r2, r0
 800bf24:	6832      	ldr	r2, [r6, #0]
 800bf26:	1b01      	subs	r1, r0, r4
 800bf28:	4420      	add	r0, r4
 800bf2a:	428a      	cmp	r2, r1
 800bf2c:	bfc8      	it	gt
 800bf2e:	6031      	strgt	r1, [r6, #0]
 800bf30:	682a      	ldr	r2, [r5, #0]
 800bf32:	4291      	cmp	r1, r2
 800bf34:	bfc8      	it	gt
 800bf36:	6029      	strgt	r1, [r5, #0]
 800bf38:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 800bf3c:	6832      	ldr	r2, [r6, #0]
 800bf3e:	4282      	cmp	r2, r0
 800bf40:	bfc8      	it	gt
 800bf42:	6030      	strgt	r0, [r6, #0]
 800bf44:	682a      	ldr	r2, [r5, #0]
 800bf46:	4290      	cmp	r0, r2
 800bf48:	fb9b f2f1 	sdiv	r2, fp, r1
 800bf4c:	fb01 b212 	mls	r2, r1, r2, fp
 800bf50:	bfc8      	it	gt
 800bf52:	6028      	strgt	r0, [r5, #0]
 800bf54:	1a8a      	subs	r2, r1, r2
 800bf56:	fb92 f0f1 	sdiv	r0, r2, r1
 800bf5a:	fb01 2210 	mls	r2, r1, r0, r2
 800bf5e:	4493      	add	fp, r2
 800bf60:	9b00      	ldr	r3, [sp, #0]
 800bf62:	455b      	cmp	r3, fp
 800bf64:	db40      	blt.n	800bfe8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c2>
 800bf66:	4658      	mov	r0, fp
 800bf68:	f7ff fe96 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bf6c:	a903      	add	r1, sp, #12
 800bf6e:	9003      	str	r0, [sp, #12]
 800bf70:	4650      	mov	r0, sl
 800bf72:	f7ff fe66 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bf76:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800bf7a:	4410      	add	r0, r2
 800bf7c:	f8d9 2000 	ldr.w	r2, [r9]
 800bf80:	1b01      	subs	r1, r0, r4
 800bf82:	4420      	add	r0, r4
 800bf84:	428a      	cmp	r2, r1
 800bf86:	bfc8      	it	gt
 800bf88:	f8c9 1000 	strgt.w	r1, [r9]
 800bf8c:	683a      	ldr	r2, [r7, #0]
 800bf8e:	4291      	cmp	r1, r2
 800bf90:	bfc8      	it	gt
 800bf92:	6039      	strgt	r1, [r7, #0]
 800bf94:	f8d9 2000 	ldr.w	r2, [r9]
 800bf98:	4282      	cmp	r2, r0
 800bf9a:	bfc8      	it	gt
 800bf9c:	f8c9 0000 	strgt.w	r0, [r9]
 800bfa0:	683a      	ldr	r2, [r7, #0]
 800bfa2:	4290      	cmp	r0, r2
 800bfa4:	bfc8      	it	gt
 800bfa6:	6038      	strgt	r0, [r7, #0]
 800bfa8:	4658      	mov	r0, fp
 800bfaa:	f7ff fe94 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bfae:	a903      	add	r1, sp, #12
 800bfb0:	9003      	str	r0, [sp, #12]
 800bfb2:	4650      	mov	r0, sl
 800bfb4:	f7ff fe45 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bfb8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800bfbc:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 800bfc0:	1a10      	subs	r0, r2, r0
 800bfc2:	6832      	ldr	r2, [r6, #0]
 800bfc4:	1b01      	subs	r1, r0, r4
 800bfc6:	4420      	add	r0, r4
 800bfc8:	428a      	cmp	r2, r1
 800bfca:	bfc8      	it	gt
 800bfcc:	6031      	strgt	r1, [r6, #0]
 800bfce:	682a      	ldr	r2, [r5, #0]
 800bfd0:	4291      	cmp	r1, r2
 800bfd2:	bfc8      	it	gt
 800bfd4:	6029      	strgt	r1, [r5, #0]
 800bfd6:	6832      	ldr	r2, [r6, #0]
 800bfd8:	4282      	cmp	r2, r0
 800bfda:	bfc8      	it	gt
 800bfdc:	6030      	strgt	r0, [r6, #0]
 800bfde:	682a      	ldr	r2, [r5, #0]
 800bfe0:	4290      	cmp	r0, r2
 800bfe2:	bfc8      	it	gt
 800bfe4:	6028      	strgt	r0, [r5, #0]
 800bfe6:	e7bb      	b.n	800bf60 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23a>
 800bfe8:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 800bfec:	9b00      	ldr	r3, [sp, #0]
 800bfee:	455b      	cmp	r3, fp
 800bff0:	f77f af63 	ble.w	800beba <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
 800bff4:	4618      	mov	r0, r3
 800bff6:	f7ff fe4f 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bffa:	a903      	add	r1, sp, #12
 800bffc:	9003      	str	r0, [sp, #12]
 800bffe:	4650      	mov	r0, sl
 800c000:	f7ff fe1f 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c004:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800c008:	4410      	add	r0, r2
 800c00a:	f8d9 2000 	ldr.w	r2, [r9]
 800c00e:	1b01      	subs	r1, r0, r4
 800c010:	4420      	add	r0, r4
 800c012:	428a      	cmp	r2, r1
 800c014:	bfc8      	it	gt
 800c016:	f8c9 1000 	strgt.w	r1, [r9]
 800c01a:	683a      	ldr	r2, [r7, #0]
 800c01c:	4291      	cmp	r1, r2
 800c01e:	bfc8      	it	gt
 800c020:	6039      	strgt	r1, [r7, #0]
 800c022:	f8d9 2000 	ldr.w	r2, [r9]
 800c026:	4282      	cmp	r2, r0
 800c028:	bfc8      	it	gt
 800c02a:	f8c9 0000 	strgt.w	r0, [r9]
 800c02e:	683b      	ldr	r3, [r7, #0]
 800c030:	4298      	cmp	r0, r3
 800c032:	bfc8      	it	gt
 800c034:	6038      	strgt	r0, [r7, #0]
 800c036:	9800      	ldr	r0, [sp, #0]
 800c038:	f7ff fe4d 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c03c:	a903      	add	r1, sp, #12
 800c03e:	9003      	str	r0, [sp, #12]
 800c040:	4650      	mov	r0, sl
 800c042:	f7ff fdfe 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c046:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800c04a:	6832      	ldr	r2, [r6, #0]
 800c04c:	1a18      	subs	r0, r3, r0
 800c04e:	1b03      	subs	r3, r0, r4
 800c050:	4404      	add	r4, r0
 800c052:	429a      	cmp	r2, r3
 800c054:	bfc8      	it	gt
 800c056:	6033      	strgt	r3, [r6, #0]
 800c058:	682a      	ldr	r2, [r5, #0]
 800c05a:	4293      	cmp	r3, r2
 800c05c:	bfc8      	it	gt
 800c05e:	602b      	strgt	r3, [r5, #0]
 800c060:	6833      	ldr	r3, [r6, #0]
 800c062:	42a3      	cmp	r3, r4
 800c064:	bfc8      	it	gt
 800c066:	6034      	strgt	r4, [r6, #0]
 800c068:	682b      	ldr	r3, [r5, #0]
 800c06a:	429c      	cmp	r4, r3
 800c06c:	bfc8      	it	gt
 800c06e:	602c      	strgt	r4, [r5, #0]
 800c070:	e723      	b.n	800beba <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>

0800c072 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800c072:	b530      	push	{r4, r5, lr}
 800c074:	4604      	mov	r4, r0
 800c076:	4608      	mov	r0, r1
 800c078:	4611      	mov	r1, r2
 800c07a:	461a      	mov	r2, r3
 800c07c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c080:	b089      	sub	sp, #36	; 0x24
 800c082:	2500      	movs	r5, #0
 800c084:	015b      	lsls	r3, r3, #5
 800c086:	9505      	str	r5, [sp, #20]
 800c088:	9304      	str	r3, [sp, #16]
 800c08a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c08e:	015b      	lsls	r3, r3, #5
 800c090:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800c094:	ab07      	add	r3, sp, #28
 800c096:	2520      	movs	r5, #32
 800c098:	9302      	str	r3, [sp, #8]
 800c09a:	ab06      	add	r3, sp, #24
 800c09c:	9301      	str	r3, [sp, #4]
 800c09e:	ab05      	add	r3, sp, #20
 800c0a0:	9300      	str	r3, [sp, #0]
 800c0a2:	ab04      	add	r3, sp, #16
 800c0a4:	f7ff fe3f 	bl	800bd26 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800c0a8:	9a04      	ldr	r2, [sp, #16]
 800c0aa:	9805      	ldr	r0, [sp, #20]
 800c0ac:	9b06      	ldr	r3, [sp, #24]
 800c0ae:	9907      	ldr	r1, [sp, #28]
 800c0b0:	fb92 f2f5 	sdiv	r2, r2, r5
 800c0b4:	fb90 f0f5 	sdiv	r0, r0, r5
 800c0b8:	fb93 f3f5 	sdiv	r3, r3, r5
 800c0bc:	fb91 f1f5 	sdiv	r1, r1, r5
 800c0c0:	b292      	uxth	r2, r2
 800c0c2:	3002      	adds	r0, #2
 800c0c4:	b29b      	uxth	r3, r3
 800c0c6:	3102      	adds	r1, #2
 800c0c8:	1a80      	subs	r0, r0, r2
 800c0ca:	3a01      	subs	r2, #1
 800c0cc:	1ac9      	subs	r1, r1, r3
 800c0ce:	3b01      	subs	r3, #1
 800c0d0:	80a0      	strh	r0, [r4, #4]
 800c0d2:	4620      	mov	r0, r4
 800c0d4:	8022      	strh	r2, [r4, #0]
 800c0d6:	8063      	strh	r3, [r4, #2]
 800c0d8:	80e1      	strh	r1, [r4, #6]
 800c0da:	b009      	add	sp, #36	; 0x24
 800c0dc:	bd30      	pop	{r4, r5, pc}

0800c0de <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800c0de:	b510      	push	{r4, lr}
 800c0e0:	4604      	mov	r4, r0
 800c0e2:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 800c0e6:	f7ff ffc4 	bl	800c072 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800c0ea:	4620      	mov	r0, r4
 800c0ec:	bd10      	pop	{r4, pc}

0800c0ee <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 800c0ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c0f0:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 800c0f4:	4606      	mov	r6, r0
 800c0f6:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 800c0fa:	42a5      	cmp	r5, r4
 800c0fc:	6813      	ldr	r3, [r2, #0]
 800c0fe:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c102:	da2b      	bge.n	800c15c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 800c104:	42a3      	cmp	r3, r4
 800c106:	dd14      	ble.n	800c132 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 800c108:	b168      	cbz	r0, 800c126 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800c10a:	4267      	negs	r7, r4
 800c10c:	fb97 f2f0 	sdiv	r2, r7, r0
 800c110:	fb00 7212 	mls	r2, r0, r2, r7
 800c114:	1a82      	subs	r2, r0, r2
 800c116:	fb92 f7f0 	sdiv	r7, r2, r0
 800c11a:	fb00 2017 	mls	r0, r0, r7, r2
 800c11e:	1a24      	subs	r4, r4, r0
 800c120:	42ac      	cmp	r4, r5
 800c122:	bfb8      	it	lt
 800c124:	462c      	movlt	r4, r5
 800c126:	4630      	mov	r0, r6
 800c128:	4622      	mov	r2, r4
 800c12a:	f7ff ffa2 	bl	800c072 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800c12e:	4630      	mov	r0, r6
 800c130:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c132:	42ab      	cmp	r3, r5
 800c134:	dd0e      	ble.n	800c154 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 800c136:	b168      	cbz	r0, 800c154 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 800c138:	425f      	negs	r7, r3
 800c13a:	fb97 f2f0 	sdiv	r2, r7, r0
 800c13e:	fb00 7212 	mls	r2, r0, r2, r7
 800c142:	1a82      	subs	r2, r0, r2
 800c144:	fb92 f7f0 	sdiv	r7, r2, r0
 800c148:	fb00 2017 	mls	r0, r0, r7, r2
 800c14c:	1a1b      	subs	r3, r3, r0
 800c14e:	42ab      	cmp	r3, r5
 800c150:	bfb8      	it	lt
 800c152:	462b      	movlt	r3, r5
 800c154:	4622      	mov	r2, r4
 800c156:	461c      	mov	r4, r3
 800c158:	4613      	mov	r3, r2
 800c15a:	e7e4      	b.n	800c126 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800c15c:	42a3      	cmp	r3, r4
 800c15e:	da10      	bge.n	800c182 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 800c160:	b148      	cbz	r0, 800c176 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 800c162:	fb94 f2f0 	sdiv	r2, r4, r0
 800c166:	fb00 4212 	mls	r2, r0, r2, r4
 800c16a:	1a82      	subs	r2, r0, r2
 800c16c:	fb92 f7f0 	sdiv	r7, r2, r0
 800c170:	fb00 2017 	mls	r0, r0, r7, r2
 800c174:	4404      	add	r4, r0
 800c176:	42a5      	cmp	r5, r4
 800c178:	bfa8      	it	ge
 800c17a:	4625      	movge	r5, r4
 800c17c:	461c      	mov	r4, r3
 800c17e:	462b      	mov	r3, r5
 800c180:	e7d1      	b.n	800c126 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800c182:	42ab      	cmp	r3, r5
 800c184:	dacf      	bge.n	800c126 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800c186:	2800      	cmp	r0, #0
 800c188:	d0cd      	beq.n	800c126 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800c18a:	fb93 f2f0 	sdiv	r2, r3, r0
 800c18e:	fb00 3212 	mls	r2, r0, r2, r3
 800c192:	1a82      	subs	r2, r0, r2
 800c194:	fb92 f7f0 	sdiv	r7, r2, r0
 800c198:	fb00 2017 	mls	r0, r0, r7, r2
 800c19c:	4403      	add	r3, r0
 800c19e:	42ab      	cmp	r3, r5
 800c1a0:	bfa8      	it	ge
 800c1a2:	462b      	movge	r3, r5
 800c1a4:	e7bf      	b.n	800c126 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
	...

0800c1a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800c1a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1ac:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 800c1b0:	2220      	movs	r2, #32
 800c1b2:	468b      	mov	fp, r1
 800c1b4:	42ae      	cmp	r6, r5
 800c1b6:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 800c1ba:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 800c1be:	b0ab      	sub	sp, #172	; 0xac
 800c1c0:	bfa4      	itt	ge
 800c1c2:	4633      	movge	r3, r6
 800c1c4:	462e      	movge	r6, r5
 800c1c6:	6c01      	ldr	r1, [r0, #64]	; 0x40
 800c1c8:	4604      	mov	r4, r0
 800c1ca:	bfa8      	it	ge
 800c1cc:	461d      	movge	r5, r3
 800c1ce:	1bab      	subs	r3, r5, r6
 800c1d0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c1d4:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800c1d6:	bfa4      	itt	ge
 800c1d8:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 800c1dc:	2600      	movge	r6, #0
 800c1de:	fb99 f9f2 	sdiv	r9, r9, r2
 800c1e2:	fb9a faf2 	sdiv	sl, sl, r2
 800c1e6:	2900      	cmp	r1, #0
 800c1e8:	f000 80f1 	beq.w	800c3ce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x226>
 800c1ec:	f9bb 0000 	ldrsh.w	r0, [fp]
 800c1f0:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 800c1f4:	eba9 0700 	sub.w	r7, r9, r0
 800c1f8:	ebaa 0802 	sub.w	r8, sl, r2
 800c1fc:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 800c200:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 800c204:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 800c208:	4407      	add	r7, r0
 800c20a:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 800c20e:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 800c212:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 800c216:	b23f      	sxth	r7, r7
 800c218:	4490      	add	r8, r2
 800c21a:	2202      	movs	r2, #2
 800c21c:	eba9 0707 	sub.w	r7, r9, r7
 800c220:	fa0f f888 	sxth.w	r8, r8
 800c224:	9201      	str	r2, [sp, #4]
 800c226:	2f00      	cmp	r7, #0
 800c228:	ebaa 0808 	sub.w	r8, sl, r8
 800c22c:	bfb8      	it	lt
 800c22e:	427f      	neglt	r7, r7
 800c230:	f1b8 0f00 	cmp.w	r8, #0
 800c234:	bfb8      	it	lt
 800c236:	f1c8 0800 	rsblt	r8, r8, #0
 800c23a:	45bc      	cmp	ip, r7
 800c23c:	bfcc      	ite	gt
 800c23e:	f10c 0701 	addgt.w	r7, ip, #1
 800c242:	3701      	addle	r7, #1
 800c244:	4540      	cmp	r0, r8
 800c246:	bfc8      	it	gt
 800c248:	f100 0801 	addgt.w	r8, r0, #1
 800c24c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 800c250:	bfd8      	it	le
 800c252:	f108 0801 	addle.w	r8, r8, #1
 800c256:	3001      	adds	r0, #1
 800c258:	fb08 f808 	mul.w	r8, r8, r8
 800c25c:	1040      	asrs	r0, r0, #1
 800c25e:	fb07 8707 	mla	r7, r7, r7, r8
 800c262:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800c266:	fb91 f1f2 	sdiv	r1, r1, r2
 800c26a:	1a5b      	subs	r3, r3, r1
 800c26c:	930d      	str	r3, [sp, #52]	; 0x34
 800c26e:	f7ff fcf3 	bl	800bc58 <_ZN8touchgfx7CWRUtil4sineEi>
 800c272:	a92a      	add	r1, sp, #168	; 0xa8
 800c274:	f841 0d70 	str.w	r0, [r1, #-112]!
 800c278:	a80d      	add	r0, sp, #52	; 0x34
 800c27a:	f7ff fce2 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c27e:	f04f 0c20 	mov.w	ip, #32
 800c282:	9a01      	ldr	r2, [sp, #4]
 800c284:	fb90 f0fc 	sdiv	r0, r0, ip
 800c288:	4340      	muls	r0, r0
 800c28a:	4287      	cmp	r7, r0
 800c28c:	da04      	bge.n	800c298 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 800c28e:	2401      	movs	r4, #1
 800c290:	4620      	mov	r0, r4
 800c292:	b02b      	add	sp, #172	; 0xac
 800c294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c298:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800c29a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800c29c:	fb91 f3f2 	sdiv	r3, r1, r2
 800c2a0:	4403      	add	r3, r0
 800c2a2:	fb93 f3fc 	sdiv	r3, r3, ip
 800c2a6:	f9bb 1000 	ldrsh.w	r1, [fp]
 800c2aa:	3301      	adds	r3, #1
 800c2ac:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 800c2b0:	435b      	muls	r3, r3
 800c2b2:	440a      	add	r2, r1
 800c2b4:	b212      	sxth	r2, r2
 800c2b6:	454a      	cmp	r2, r9
 800c2b8:	bfa8      	it	ge
 800c2ba:	464a      	movge	r2, r9
 800c2bc:	428a      	cmp	r2, r1
 800c2be:	bfac      	ite	ge
 800c2c0:	eba9 0902 	subge.w	r9, r9, r2
 800c2c4:	eba9 0901 	sublt.w	r9, r9, r1
 800c2c8:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 800c2cc:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c2d0:	440a      	add	r2, r1
 800c2d2:	b212      	sxth	r2, r2
 800c2d4:	4552      	cmp	r2, sl
 800c2d6:	bfa8      	it	ge
 800c2d8:	4652      	movge	r2, sl
 800c2da:	428a      	cmp	r2, r1
 800c2dc:	bfac      	ite	ge
 800c2de:	ebaa 0a02 	subge.w	sl, sl, r2
 800c2e2:	ebaa 0a01 	sublt.w	sl, sl, r1
 800c2e6:	fb0a fa0a 	mul.w	sl, sl, sl
 800c2ea:	fb09 a909 	mla	r9, r9, r9, sl
 800c2ee:	4599      	cmp	r9, r3
 800c2f0:	dccd      	bgt.n	800c28e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe6>
 800c2f2:	465a      	mov	r2, fp
 800c2f4:	4621      	mov	r1, r4
 800c2f6:	a80e      	add	r0, sp, #56	; 0x38
 800c2f8:	f00e ff60 	bl	801b1bc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800c2fc:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800c2fe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c300:	9209      	str	r2, [sp, #36]	; 0x24
 800c302:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800c306:	930a      	str	r3, [sp, #40]	; 0x28
 800c308:	dd07      	ble.n	800c31a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x172>
 800c30a:	2102      	movs	r1, #2
 800c30c:	fb93 f3f1 	sdiv	r3, r3, r1
 800c310:	4413      	add	r3, r2
 800c312:	930a      	str	r3, [sp, #40]	; 0x28
 800c314:	fb93 f3f1 	sdiv	r3, r3, r1
 800c318:	9309      	str	r3, [sp, #36]	; 0x24
 800c31a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 800c31e:	f04f 0a02 	mov.w	sl, #2
 800c322:	4630      	mov	r0, r6
 800c324:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 800c328:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 800c32c:	017f      	lsls	r7, r7, #5
 800c32e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c332:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c336:	930b      	str	r3, [sp, #44]	; 0x2c
 800c338:	f7ff fcae 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c33c:	f849 0d74 	str.w	r0, [r9, #-116]!
 800c340:	a80b      	add	r0, sp, #44	; 0x2c
 800c342:	4649      	mov	r1, r9
 800c344:	f7ff fc7d 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c348:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c34a:	fb90 f0fa 	sdiv	r0, r0, sl
 800c34e:	eb00 0b03 	add.w	fp, r0, r3
 800c352:	4630      	mov	r0, r6
 800c354:	f7ff fcbf 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c358:	f848 0d78 	str.w	r0, [r8, #-120]!
 800c35c:	a80b      	add	r0, sp, #44	; 0x2c
 800c35e:	4641      	mov	r1, r8
 800c360:	f7ff fc6f 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c364:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c366:	4659      	mov	r1, fp
 800c368:	fb90 f0fa 	sdiv	r0, r0, sl
 800c36c:	1a12      	subs	r2, r2, r0
 800c36e:	a80e      	add	r0, sp, #56	; 0x38
 800c370:	f00f f89e 	bl	801b4b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c374:	f106 0a20 	add.w	sl, r6, #32
 800c378:	bb67      	cbnz	r7, 800c3d4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22c>
 800c37a:	46b3      	mov	fp, r6
 800c37c:	45aa      	cmp	sl, r5
 800c37e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c380:	dc33      	bgt.n	800c3ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 800c382:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c384:	4650      	mov	r0, sl
 800c386:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 800c38a:	920b      	str	r2, [sp, #44]	; 0x2c
 800c38c:	f7ff fc84 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c390:	4641      	mov	r1, r8
 800c392:	900c      	str	r0, [sp, #48]	; 0x30
 800c394:	a80b      	add	r0, sp, #44	; 0x2c
 800c396:	f7ff fc54 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c39a:	2302      	movs	r3, #2
 800c39c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c39e:	fb90 f0f3 	sdiv	r0, r0, r3
 800c3a2:	eb00 0b02 	add.w	fp, r0, r2
 800c3a6:	4650      	mov	r0, sl
 800c3a8:	f7ff fc95 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c3ac:	4649      	mov	r1, r9
 800c3ae:	900d      	str	r0, [sp, #52]	; 0x34
 800c3b0:	a80b      	add	r0, sp, #44	; 0x2c
 800c3b2:	f7ff fc46 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c3b6:	2302      	movs	r3, #2
 800c3b8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c3ba:	4659      	mov	r1, fp
 800c3bc:	46d3      	mov	fp, sl
 800c3be:	44ba      	add	sl, r7
 800c3c0:	fb90 f0f3 	sdiv	r0, r0, r3
 800c3c4:	1a12      	subs	r2, r2, r0
 800c3c6:	a80e      	add	r0, sp, #56	; 0x38
 800c3c8:	f00f f8bf 	bl	801b54a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c3cc:	e7d6      	b.n	800c37c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1d4>
 800c3ce:	fb93 f3f2 	sdiv	r3, r3, r2
 800c3d2:	e768      	b.n	800c2a6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xfe>
 800c3d4:	fb9a f2f7 	sdiv	r2, sl, r7
 800c3d8:	fb07 a212 	mls	r2, r7, r2, sl
 800c3dc:	1aba      	subs	r2, r7, r2
 800c3de:	fb92 f1f7 	sdiv	r1, r2, r7
 800c3e2:	fb07 2211 	mls	r2, r7, r1, r2
 800c3e6:	4492      	add	sl, r2
 800c3e8:	e7c7      	b.n	800c37a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1d2>
 800c3ea:	45ab      	cmp	fp, r5
 800c3ec:	da23      	bge.n	800c436 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x28e>
 800c3ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c3f0:	f04f 0a02 	mov.w	sl, #2
 800c3f4:	4628      	mov	r0, r5
 800c3f6:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800c3fa:	920b      	str	r2, [sp, #44]	; 0x2c
 800c3fc:	f7ff fc4c 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c400:	4641      	mov	r1, r8
 800c402:	900c      	str	r0, [sp, #48]	; 0x30
 800c404:	a80b      	add	r0, sp, #44	; 0x2c
 800c406:	f7ff fc1c 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c40a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c40c:	fb90 f0fa 	sdiv	r0, r0, sl
 800c410:	4403      	add	r3, r0
 800c412:	4628      	mov	r0, r5
 800c414:	9301      	str	r3, [sp, #4]
 800c416:	f7ff fc5e 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c41a:	4649      	mov	r1, r9
 800c41c:	900d      	str	r0, [sp, #52]	; 0x34
 800c41e:	a80b      	add	r0, sp, #44	; 0x2c
 800c420:	f7ff fc0f 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c424:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c426:	9b01      	ldr	r3, [sp, #4]
 800c428:	fb90 f0fa 	sdiv	r0, r0, sl
 800c42c:	4619      	mov	r1, r3
 800c42e:	1a12      	subs	r2, r2, r0
 800c430:	a80e      	add	r0, sp, #56	; 0x38
 800c432:	f00f f88a 	bl	801b54a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c436:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c438:	b99b      	cbnz	r3, 800c462 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
 800c43a:	1bad      	subs	r5, r5, r6
 800c43c:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 800c440:	da04      	bge.n	800c44c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
 800c442:	a80e      	add	r0, sp, #56	; 0x38
 800c444:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 800c448:	f00f f87f 	bl	801b54a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c44c:	21ff      	movs	r1, #255	; 0xff
 800c44e:	a80e      	add	r0, sp, #56	; 0x38
 800c450:	f00e ff70 	bl	801b334 <_ZN8touchgfx6Canvas6renderEh>
 800c454:	4604      	mov	r4, r0
 800c456:	4b8a      	ldr	r3, [pc, #552]	; (800c680 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4d8>)
 800c458:	a816      	add	r0, sp, #88	; 0x58
 800c45a:	930e      	str	r3, [sp, #56]	; 0x38
 800c45c:	f000 ff62 	bl	800d324 <_ZN8touchgfx7OutlineD1Ev>
 800c460:	e716      	b.n	800c290 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
 800c462:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 800c466:	429a      	cmp	r2, r3
 800c468:	f0c0 8107 	bcc.w	800c67a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4d2>
 800c46c:	1bab      	subs	r3, r5, r6
 800c46e:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 800c472:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c476:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 800c47a:	9301      	str	r3, [sp, #4]
 800c47c:	da43      	bge.n	800c506 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x35e>
 800c47e:	4628      	mov	r0, r5
 800c480:	f7ff fc0a 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c484:	4649      	mov	r1, r9
 800c486:	900d      	str	r0, [sp, #52]	; 0x34
 800c488:	a809      	add	r0, sp, #36	; 0x24
 800c48a:	f7ff fbda 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c48e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c490:	18c3      	adds	r3, r0, r3
 800c492:	4628      	mov	r0, r5
 800c494:	9303      	str	r3, [sp, #12]
 800c496:	f7ff fc1e 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c49a:	4649      	mov	r1, r9
 800c49c:	900d      	str	r0, [sp, #52]	; 0x34
 800c49e:	a809      	add	r0, sp, #36	; 0x24
 800c4a0:	f7ff fbcf 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c4a4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c4a6:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 800c4aa:	1a1b      	subs	r3, r3, r0
 800c4ac:	9204      	str	r2, [sp, #16]
 800c4ae:	9302      	str	r3, [sp, #8]
 800c4b0:	eb0a 0305 	add.w	r3, sl, r5
 800c4b4:	9a04      	ldr	r2, [sp, #16]
 800c4b6:	4293      	cmp	r3, r2
 800c4b8:	da25      	bge.n	800c506 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x35e>
 800c4ba:	4618      	mov	r0, r3
 800c4bc:	9306      	str	r3, [sp, #24]
 800c4be:	f7ff fbeb 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c4c2:	4649      	mov	r1, r9
 800c4c4:	900d      	str	r0, [sp, #52]	; 0x34
 800c4c6:	a80a      	add	r0, sp, #40	; 0x28
 800c4c8:	f7ff fbbb 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c4cc:	2202      	movs	r2, #2
 800c4ce:	9b03      	ldr	r3, [sp, #12]
 800c4d0:	9207      	str	r2, [sp, #28]
 800c4d2:	fb90 f0f2 	sdiv	r0, r0, r2
 800c4d6:	18c3      	adds	r3, r0, r3
 800c4d8:	9305      	str	r3, [sp, #20]
 800c4da:	9b06      	ldr	r3, [sp, #24]
 800c4dc:	4618      	mov	r0, r3
 800c4de:	f7ff fbfa 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c4e2:	a92a      	add	r1, sp, #168	; 0xa8
 800c4e4:	f841 0d78 	str.w	r0, [r1, #-120]!
 800c4e8:	a80a      	add	r0, sp, #40	; 0x28
 800c4ea:	f7ff fbaa 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c4ee:	9a07      	ldr	r2, [sp, #28]
 800c4f0:	9b02      	ldr	r3, [sp, #8]
 800c4f2:	9905      	ldr	r1, [sp, #20]
 800c4f4:	fb90 f2f2 	sdiv	r2, r0, r2
 800c4f8:	a80e      	add	r0, sp, #56	; 0x38
 800c4fa:	1a9a      	subs	r2, r3, r2
 800c4fc:	f00f f825 	bl	801b54a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c500:	9b06      	ldr	r3, [sp, #24]
 800c502:	4453      	add	r3, sl
 800c504:	e7d6      	b.n	800c4b4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x30c>
 800c506:	45ab      	cmp	fp, r5
 800c508:	da25      	bge.n	800c556 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ae>
 800c50a:	4628      	mov	r0, r5
 800c50c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c510:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c514:	930b      	str	r3, [sp, #44]	; 0x2c
 800c516:	f7ff fbbf 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c51a:	4641      	mov	r1, r8
 800c51c:	900c      	str	r0, [sp, #48]	; 0x30
 800c51e:	a80b      	add	r0, sp, #44	; 0x2c
 800c520:	f7ff fb8f 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c524:	2202      	movs	r2, #2
 800c526:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c528:	9202      	str	r2, [sp, #8]
 800c52a:	fb90 f0f2 	sdiv	r0, r0, r2
 800c52e:	eb00 0903 	add.w	r9, r0, r3
 800c532:	4628      	mov	r0, r5
 800c534:	f7ff fbcf 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c538:	a92a      	add	r1, sp, #168	; 0xa8
 800c53a:	f841 0d74 	str.w	r0, [r1, #-116]!
 800c53e:	a80b      	add	r0, sp, #44	; 0x2c
 800c540:	f7ff fb7f 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c544:	9a02      	ldr	r2, [sp, #8]
 800c546:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c548:	4649      	mov	r1, r9
 800c54a:	fb90 f2f2 	sdiv	r2, r0, r2
 800c54e:	a80e      	add	r0, sp, #56	; 0x38
 800c550:	1a9a      	subs	r2, r3, r2
 800c552:	f00e fffa 	bl	801b54a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c556:	46d9      	mov	r9, fp
 800c558:	2502      	movs	r5, #2
 800c55a:	45b1      	cmp	r9, r6
 800c55c:	db25      	blt.n	800c5aa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x402>
 800c55e:	4648      	mov	r0, r9
 800c560:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c564:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c568:	930b      	str	r3, [sp, #44]	; 0x2c
 800c56a:	f7ff fb95 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c56e:	4641      	mov	r1, r8
 800c570:	900c      	str	r0, [sp, #48]	; 0x30
 800c572:	a80b      	add	r0, sp, #44	; 0x2c
 800c574:	f7ff fb65 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c578:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c57a:	fb90 f0f5 	sdiv	r0, r0, r5
 800c57e:	eb00 0b03 	add.w	fp, r0, r3
 800c582:	4648      	mov	r0, r9
 800c584:	f7ff fba7 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c588:	a90d      	add	r1, sp, #52	; 0x34
 800c58a:	900d      	str	r0, [sp, #52]	; 0x34
 800c58c:	a80b      	add	r0, sp, #44	; 0x2c
 800c58e:	f7ff fb58 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c592:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c594:	4659      	mov	r1, fp
 800c596:	46cb      	mov	fp, r9
 800c598:	eba9 0907 	sub.w	r9, r9, r7
 800c59c:	fb90 f0f5 	sdiv	r0, r0, r5
 800c5a0:	1a12      	subs	r2, r2, r0
 800c5a2:	a80e      	add	r0, sp, #56	; 0x38
 800c5a4:	f00e ffd1 	bl	801b54a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c5a8:	e7d7      	b.n	800c55a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b2>
 800c5aa:	455e      	cmp	r6, fp
 800c5ac:	da22      	bge.n	800c5f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x44c>
 800c5ae:	2502      	movs	r5, #2
 800c5b0:	4630      	mov	r0, r6
 800c5b2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c5b6:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c5ba:	930b      	str	r3, [sp, #44]	; 0x2c
 800c5bc:	f7ff fb6c 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c5c0:	4641      	mov	r1, r8
 800c5c2:	900c      	str	r0, [sp, #48]	; 0x30
 800c5c4:	a80b      	add	r0, sp, #44	; 0x2c
 800c5c6:	f7ff fb3c 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c5ca:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800c5cc:	fb90 f0f5 	sdiv	r0, r0, r5
 800c5d0:	4407      	add	r7, r0
 800c5d2:	4630      	mov	r0, r6
 800c5d4:	f7ff fb7f 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c5d8:	a92a      	add	r1, sp, #168	; 0xa8
 800c5da:	f841 0d74 	str.w	r0, [r1, #-116]!
 800c5de:	a80b      	add	r0, sp, #44	; 0x2c
 800c5e0:	f7ff fb2f 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c5e4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c5e6:	4639      	mov	r1, r7
 800c5e8:	fb90 f0f5 	sdiv	r0, r0, r5
 800c5ec:	1a12      	subs	r2, r2, r0
 800c5ee:	a80e      	add	r0, sp, #56	; 0x38
 800c5f0:	f00e ffab 	bl	801b54a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c5f4:	9b01      	ldr	r3, [sp, #4]
 800c5f6:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c5fa:	f6bf af27 	bge.w	800c44c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
 800c5fe:	ad2a      	add	r5, sp, #168	; 0xa8
 800c600:	4630      	mov	r0, r6
 800c602:	f7ff fb49 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c606:	f04f 0b02 	mov.w	fp, #2
 800c60a:	f845 0d74 	str.w	r0, [r5, #-116]!
 800c60e:	a809      	add	r0, sp, #36	; 0x24
 800c610:	4629      	mov	r1, r5
 800c612:	f7ff fb16 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c616:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c618:	eb00 0903 	add.w	r9, r0, r3
 800c61c:	4630      	mov	r0, r6
 800c61e:	f7ff fb5a 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c622:	4629      	mov	r1, r5
 800c624:	900d      	str	r0, [sp, #52]	; 0x34
 800c626:	a809      	add	r0, sp, #36	; 0x24
 800c628:	f7ff fb0b 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c62c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c62e:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 800c632:	eba3 0800 	sub.w	r8, r3, r0
 800c636:	4454      	add	r4, sl
 800c638:	42a6      	cmp	r6, r4
 800c63a:	f77f af07 	ble.w	800c44c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
 800c63e:	4620      	mov	r0, r4
 800c640:	f7ff fb2a 	bl	800bc98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c644:	4629      	mov	r1, r5
 800c646:	900d      	str	r0, [sp, #52]	; 0x34
 800c648:	a80a      	add	r0, sp, #40	; 0x28
 800c64a:	f7ff fafa 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c64e:	fb90 f0fb 	sdiv	r0, r0, fp
 800c652:	eb00 0709 	add.w	r7, r0, r9
 800c656:	4620      	mov	r0, r4
 800c658:	f7ff fb3d 	bl	800bcd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c65c:	a90c      	add	r1, sp, #48	; 0x30
 800c65e:	900c      	str	r0, [sp, #48]	; 0x30
 800c660:	a80a      	add	r0, sp, #40	; 0x28
 800c662:	f7ff faee 	bl	800bc42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c666:	4639      	mov	r1, r7
 800c668:	4454      	add	r4, sl
 800c66a:	fb90 f2fb 	sdiv	r2, r0, fp
 800c66e:	a80e      	add	r0, sp, #56	; 0x38
 800c670:	eba8 0202 	sub.w	r2, r8, r2
 800c674:	f00e ff69 	bl	801b54a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c678:	e7de      	b.n	800c638 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x490>
 800c67a:	2400      	movs	r4, #0
 800c67c:	e6eb      	b.n	800c456 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ae>
 800c67e:	bf00      	nop
 800c680:	0801f6cc 	.word	0x0801f6cc

0800c684 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800c684:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c686:	6803      	ldr	r3, [r0, #0]
 800c688:	460d      	mov	r5, r1
 800c68a:	4604      	mov	r4, r0
 800c68c:	4601      	mov	r1, r0
 800c68e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c690:	a802      	add	r0, sp, #8
 800c692:	4798      	blx	r3
 800c694:	6828      	ldr	r0, [r5, #0]
 800c696:	6869      	ldr	r1, [r5, #4]
 800c698:	466b      	mov	r3, sp
 800c69a:	c303      	stmia	r3!, {r0, r1}
 800c69c:	4668      	mov	r0, sp
 800c69e:	4619      	mov	r1, r3
 800c6a0:	f7fe f9b4 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 800c6a4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c6a6:	b1a8      	cbz	r0, 800c6d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c6a8:	6803      	ldr	r3, [r0, #0]
 800c6aa:	1d21      	adds	r1, r4, #4
 800c6ac:	68db      	ldr	r3, [r3, #12]
 800c6ae:	4798      	blx	r3
 800c6b0:	b180      	cbz	r0, 800c6d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c6b2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c6b6:	2b00      	cmp	r3, #0
 800c6b8:	dd0c      	ble.n	800c6d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c6ba:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800c6be:	2d00      	cmp	r5, #0
 800c6c0:	dd08      	ble.n	800c6d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c6c2:	4a2d      	ldr	r2, [pc, #180]	; (800c778 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800c6c4:	7812      	ldrb	r2, [r2, #0]
 800c6c6:	b13a      	cbz	r2, 800c6d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800c6c8:	2a01      	cmp	r2, #1
 800c6ca:	d02d      	beq.n	800c728 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800c6cc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c6ce:	6803      	ldr	r3, [r0, #0]
 800c6d0:	691b      	ldr	r3, [r3, #16]
 800c6d2:	4798      	blx	r3
 800c6d4:	b004      	add	sp, #16
 800c6d6:	bd70      	pop	{r4, r5, r6, pc}
 800c6d8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c6dc:	441d      	add	r5, r3
 800c6de:	b2ad      	uxth	r5, r5
 800c6e0:	b22e      	sxth	r6, r5
 800c6e2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800c6e6:	42b3      	cmp	r3, r6
 800c6e8:	daf0      	bge.n	800c6cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c6ea:	6823      	ldr	r3, [r4, #0]
 800c6ec:	4669      	mov	r1, sp
 800c6ee:	4620      	mov	r0, r4
 800c6f0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c6f2:	4798      	blx	r3
 800c6f4:	b940      	cbnz	r0, 800c708 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800c6f6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c6fa:	2b01      	cmp	r3, #1
 800c6fc:	d004      	beq.n	800c708 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800c6fe:	3301      	adds	r3, #1
 800c700:	105b      	asrs	r3, r3, #1
 800c702:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c706:	e7f0      	b.n	800c6ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800c708:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800c70c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c710:	4413      	add	r3, r2
 800c712:	b29b      	uxth	r3, r3
 800c714:	441a      	add	r2, r3
 800c716:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c71a:	b212      	sxth	r2, r2
 800c71c:	4296      	cmp	r6, r2
 800c71e:	dae0      	bge.n	800c6e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c720:	1aeb      	subs	r3, r5, r3
 800c722:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c726:	e7dc      	b.n	800c6e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c728:	f8bd 5000 	ldrh.w	r5, [sp]
 800c72c:	441d      	add	r5, r3
 800c72e:	b2ad      	uxth	r5, r5
 800c730:	b22e      	sxth	r6, r5
 800c732:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c736:	42b3      	cmp	r3, r6
 800c738:	dac8      	bge.n	800c6cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c73a:	6823      	ldr	r3, [r4, #0]
 800c73c:	4669      	mov	r1, sp
 800c73e:	4620      	mov	r0, r4
 800c740:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c742:	4798      	blx	r3
 800c744:	b940      	cbnz	r0, 800c758 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800c746:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c74a:	2b01      	cmp	r3, #1
 800c74c:	d004      	beq.n	800c758 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800c74e:	3301      	adds	r3, #1
 800c750:	105b      	asrs	r3, r3, #1
 800c752:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c756:	e7f0      	b.n	800c73a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800c758:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800c75c:	f8bd 3000 	ldrh.w	r3, [sp]
 800c760:	4413      	add	r3, r2
 800c762:	b29b      	uxth	r3, r3
 800c764:	441a      	add	r2, r3
 800c766:	f8ad 3000 	strh.w	r3, [sp]
 800c76a:	b212      	sxth	r2, r2
 800c76c:	4296      	cmp	r6, r2
 800c76e:	dae0      	bge.n	800c732 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800c770:	1aeb      	subs	r3, r5, r3
 800c772:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c776:	e7dc      	b.n	800c732 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800c778:	24008944 	.word	0x24008944

0800c77c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800c77c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c77e:	6803      	ldr	r3, [r0, #0]
 800c780:	4604      	mov	r4, r0
 800c782:	4601      	mov	r1, r0
 800c784:	4668      	mov	r0, sp
 800c786:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c788:	4798      	blx	r3
 800c78a:	2100      	movs	r1, #0
 800c78c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c790:	4668      	mov	r0, sp
 800c792:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c796:	9102      	str	r1, [sp, #8]
 800c798:	a902      	add	r1, sp, #8
 800c79a:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c79e:	f8ad 300e 	strh.w	r3, [sp, #14]
 800c7a2:	f7fe f933 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 800c7a6:	6823      	ldr	r3, [r4, #0]
 800c7a8:	4669      	mov	r1, sp
 800c7aa:	4620      	mov	r0, r4
 800c7ac:	691b      	ldr	r3, [r3, #16]
 800c7ae:	4798      	blx	r3
 800c7b0:	b004      	add	sp, #16
 800c7b2:	bd10      	pop	{r4, pc}

0800c7b4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800c7b4:	2101      	movs	r1, #1
 800c7b6:	2200      	movs	r2, #0
 800c7b8:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c7bc:	490a      	ldr	r1, [pc, #40]	; (800c7e8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800c7be:	8082      	strh	r2, [r0, #4]
 800c7c0:	6001      	str	r1, [r0, #0]
 800c7c2:	21ff      	movs	r1, #255	; 0xff
 800c7c4:	80c2      	strh	r2, [r0, #6]
 800c7c6:	8102      	strh	r2, [r0, #8]
 800c7c8:	8142      	strh	r2, [r0, #10]
 800c7ca:	8182      	strh	r2, [r0, #12]
 800c7cc:	81c2      	strh	r2, [r0, #14]
 800c7ce:	8202      	strh	r2, [r0, #16]
 800c7d0:	8242      	strh	r2, [r0, #18]
 800c7d2:	61c2      	str	r2, [r0, #28]
 800c7d4:	8402      	strh	r2, [r0, #32]
 800c7d6:	8442      	strh	r2, [r0, #34]	; 0x22
 800c7d8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c7dc:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800c7e0:	6282      	str	r2, [r0, #40]	; 0x28
 800c7e2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c7e6:	4770      	bx	lr
 800c7e8:	0801f030 	.word	0x0801f030

0800c7ec <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800c7ec:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c7f0:	4770      	bx	lr

0800c7f2 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800c7f2:	4770      	bx	lr

0800c7f4 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800c7f4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c7f8:	b133      	cbz	r3, 800c808 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800c7fa:	790b      	ldrb	r3, [r1, #4]
 800c7fc:	2b01      	cmp	r3, #1
 800c7fe:	bf01      	itttt	eq
 800c800:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800c802:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800c804:	8603      	strheq	r3, [r0, #48]	; 0x30
 800c806:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800c808:	f00e bf0e 	b.w	801b628 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800c80c <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800c80c:	8813      	ldrh	r3, [r2, #0]
 800c80e:	8683      	strh	r3, [r0, #52]	; 0x34
 800c810:	f000 bb30 	b.w	800ce74 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800c814 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800c814:	b510      	push	{r4, lr}
 800c816:	4604      	mov	r4, r0
 800c818:	2138      	movs	r1, #56	; 0x38
 800c81a:	f00f fdf4 	bl	801c406 <_ZdlPvj>
 800c81e:	4620      	mov	r0, r4
 800c820:	bd10      	pop	{r4, pc}

0800c822 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800c822:	b510      	push	{r4, lr}
 800c824:	4604      	mov	r4, r0
 800c826:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c828:	b150      	cbz	r0, 800c840 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c82a:	6803      	ldr	r3, [r0, #0]
 800c82c:	68db      	ldr	r3, [r3, #12]
 800c82e:	4798      	blx	r3
 800c830:	b130      	cbz	r0, 800c840 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c832:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c834:	4621      	mov	r1, r4
 800c836:	6803      	ldr	r3, [r0, #0]
 800c838:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c83c:	689b      	ldr	r3, [r3, #8]
 800c83e:	4718      	bx	r3
 800c840:	bd10      	pop	{r4, pc}

0800c842 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800c842:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800c846:	b12a      	cbz	r2, 800c854 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800c848:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800c84c:	b112      	cbz	r2, 800c854 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800c84e:	6803      	ldr	r3, [r0, #0]
 800c850:	695b      	ldr	r3, [r3, #20]
 800c852:	4718      	bx	r3
 800c854:	4770      	bx	lr
	...

0800c858 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800c858:	4b07      	ldr	r3, [pc, #28]	; (800c878 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800c85a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c85c:	881b      	ldrh	r3, [r3, #0]
 800c85e:	4293      	cmp	r3, r2
 800c860:	bf81      	itttt	hi
 800c862:	4b06      	ldrhi	r3, [pc, #24]	; (800c87c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800c864:	681b      	ldrhi	r3, [r3, #0]
 800c866:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800c86a:	7858      	ldrbhi	r0, [r3, #1]
 800c86c:	bf8c      	ite	hi
 800c86e:	f000 0003 	andhi.w	r0, r0, #3
 800c872:	2000      	movls	r0, #0
 800c874:	4770      	bx	lr
 800c876:	bf00      	nop
 800c878:	240089a8 	.word	0x240089a8
 800c87c:	240089a4 	.word	0x240089a4

0800c880 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800c880:	4b11      	ldr	r3, [pc, #68]	; (800c8c8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800c882:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c886:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c888:	4604      	mov	r4, r0
 800c88a:	881b      	ldrh	r3, [r3, #0]
 800c88c:	428b      	cmp	r3, r1
 800c88e:	d918      	bls.n	800c8c2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800c890:	6803      	ldr	r3, [r0, #0]
 800c892:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800c894:	4b0d      	ldr	r3, [pc, #52]	; (800c8cc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800c896:	6818      	ldr	r0, [r3, #0]
 800c898:	f7f6 fc92 	bl	80031c0 <_ZNK8touchgfx5Texts7getTextEt>
 800c89c:	6823      	ldr	r3, [r4, #0]
 800c89e:	4606      	mov	r6, r0
 800c8a0:	4620      	mov	r0, r4
 800c8a2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c8a4:	4798      	blx	r3
 800c8a6:	6823      	ldr	r3, [r4, #0]
 800c8a8:	4607      	mov	r7, r0
 800c8aa:	4620      	mov	r0, r4
 800c8ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c8b0:	4798      	blx	r3
 800c8b2:	463a      	mov	r2, r7
 800c8b4:	4603      	mov	r3, r0
 800c8b6:	4631      	mov	r1, r6
 800c8b8:	4620      	mov	r0, r4
 800c8ba:	46ac      	mov	ip, r5
 800c8bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c8c0:	4760      	bx	ip
 800c8c2:	2000      	movs	r0, #0
 800c8c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c8c8:	240089a8 	.word	0x240089a8
 800c8cc:	240089b0 	.word	0x240089b0

0800c8d0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800c8d0:	4b18      	ldr	r3, [pc, #96]	; (800c934 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800c8d2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c8d6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c8d8:	4604      	mov	r4, r0
 800c8da:	881b      	ldrh	r3, [r3, #0]
 800c8dc:	428b      	cmp	r3, r1
 800c8de:	d926      	bls.n	800c92e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800c8e0:	4b15      	ldr	r3, [pc, #84]	; (800c938 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800c8e2:	681b      	ldr	r3, [r3, #0]
 800c8e4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800c8e8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800c8ec:	4b13      	ldr	r3, [pc, #76]	; (800c93c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800c8ee:	7855      	ldrb	r5, [r2, #1]
 800c8f0:	681b      	ldr	r3, [r3, #0]
 800c8f2:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800c8f6:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800c8fa:	6833      	ldr	r3, [r6, #0]
 800c8fc:	69df      	ldr	r7, [r3, #28]
 800c8fe:	4b10      	ldr	r3, [pc, #64]	; (800c940 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800c900:	6818      	ldr	r0, [r3, #0]
 800c902:	f7f6 fc5d 	bl	80031c0 <_ZNK8touchgfx5Texts7getTextEt>
 800c906:	6823      	ldr	r3, [r4, #0]
 800c908:	4680      	mov	r8, r0
 800c90a:	4620      	mov	r0, r4
 800c90c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c90e:	4798      	blx	r3
 800c910:	6823      	ldr	r3, [r4, #0]
 800c912:	4681      	mov	r9, r0
 800c914:	4620      	mov	r0, r4
 800c916:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c91a:	4798      	blx	r3
 800c91c:	464b      	mov	r3, r9
 800c91e:	9000      	str	r0, [sp, #0]
 800c920:	4642      	mov	r2, r8
 800c922:	4629      	mov	r1, r5
 800c924:	4630      	mov	r0, r6
 800c926:	47b8      	blx	r7
 800c928:	b003      	add	sp, #12
 800c92a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c92e:	2000      	movs	r0, #0
 800c930:	e7fa      	b.n	800c928 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800c932:	bf00      	nop
 800c934:	240089a8 	.word	0x240089a8
 800c938:	240089a4 	.word	0x240089a4
 800c93c:	240089ac 	.word	0x240089ac
 800c940:	240089b0 	.word	0x240089b0

0800c944 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800c944:	b40e      	push	{r1, r2, r3}
 800c946:	4b30      	ldr	r3, [pc, #192]	; (800ca08 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800c948:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c94c:	881a      	ldrh	r2, [r3, #0]
 800c94e:	b09d      	sub	sp, #116	; 0x74
 800c950:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800c952:	4604      	mov	r4, r0
 800c954:	429a      	cmp	r2, r3
 800c956:	d954      	bls.n	800ca02 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800c958:	aa26      	add	r2, sp, #152	; 0x98
 800c95a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800ca0c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800c95e:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800ca10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800c962:	9202      	str	r2, [sp, #8]
 800c964:	f8d9 2000 	ldr.w	r2, [r9]
 800c968:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c96c:	f8d8 3000 	ldr.w	r3, [r8]
 800c970:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800c974:	682b      	ldr	r3, [r5, #0]
 800c976:	4628      	mov	r0, r5
 800c978:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c97a:	4798      	blx	r3
 800c97c:	4606      	mov	r6, r0
 800c97e:	b207      	sxth	r7, r0
 800c980:	a803      	add	r0, sp, #12
 800c982:	f004 fdf8 	bl	8011576 <_ZN8touchgfx12TextProviderC1Ev>
 800c986:	682b      	ldr	r3, [r5, #0]
 800c988:	4628      	mov	r0, r5
 800c98a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c98c:	4798      	blx	r3
 800c98e:	682b      	ldr	r3, [r5, #0]
 800c990:	4682      	mov	sl, r0
 800c992:	4628      	mov	r0, r5
 800c994:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c996:	4798      	blx	r3
 800c998:	4653      	mov	r3, sl
 800c99a:	9000      	str	r0, [sp, #0]
 800c99c:	a803      	add	r0, sp, #12
 800c99e:	9a02      	ldr	r2, [sp, #8]
 800c9a0:	9925      	ldr	r1, [sp, #148]	; 0x94
 800c9a2:	f004 fe3b 	bl	801161c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c9a6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800c9a8:	f8d9 3000 	ldr.w	r3, [r9]
 800c9ac:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800c9b0:	8925      	ldrh	r5, [r4, #8]
 800c9b2:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800c9b6:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800c9ba:	eba5 050c 	sub.w	r5, r5, ip
 800c9be:	784a      	ldrb	r2, [r1, #1]
 800c9c0:	f8d8 3000 	ldr.w	r3, [r8]
 800c9c4:	b22d      	sxth	r5, r5
 800c9c6:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800c9ca:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800c9ce:	9500      	str	r5, [sp, #0]
 800c9d0:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800c9d4:	a803      	add	r0, sp, #12
 800c9d6:	f002 fb7f 	bl	800f0d8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800c9da:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800c9de:	b203      	sxth	r3, r0
 800c9e0:	18b9      	adds	r1, r7, r2
 800c9e2:	2900      	cmp	r1, #0
 800c9e4:	dd0b      	ble.n	800c9fe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800c9e6:	3b01      	subs	r3, #1
 800c9e8:	fb13 f302 	smulbb	r3, r3, r2
 800c9ec:	fb16 3300 	smlabb	r3, r6, r0, r3
 800c9f0:	b21f      	sxth	r7, r3
 800c9f2:	4638      	mov	r0, r7
 800c9f4:	b01d      	add	sp, #116	; 0x74
 800c9f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c9fa:	b003      	add	sp, #12
 800c9fc:	4770      	bx	lr
 800c9fe:	2b00      	cmp	r3, #0
 800ca00:	dcf7      	bgt.n	800c9f2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800ca02:	2700      	movs	r7, #0
 800ca04:	e7f5      	b.n	800c9f2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800ca06:	bf00      	nop
 800ca08:	240089a8 	.word	0x240089a8
 800ca0c:	240089a4 	.word	0x240089a4
 800ca10:	240089ac 	.word	0x240089ac

0800ca14 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800ca14:	b538      	push	{r3, r4, r5, lr}
 800ca16:	4b0e      	ldr	r3, [pc, #56]	; (800ca50 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800ca18:	4604      	mov	r4, r0
 800ca1a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ca1c:	881b      	ldrh	r3, [r3, #0]
 800ca1e:	429a      	cmp	r2, r3
 800ca20:	d214      	bcs.n	800ca4c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800ca22:	6803      	ldr	r3, [r0, #0]
 800ca24:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ca26:	4798      	blx	r3
 800ca28:	6823      	ldr	r3, [r4, #0]
 800ca2a:	4605      	mov	r5, r0
 800ca2c:	4620      	mov	r0, r4
 800ca2e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ca30:	4798      	blx	r3
 800ca32:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ca36:	b22d      	sxth	r5, r5
 800ca38:	4601      	mov	r1, r0
 800ca3a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ca3e:	bf06      	itte	eq
 800ca40:	4602      	moveq	r2, r0
 800ca42:	4629      	moveq	r1, r5
 800ca44:	462a      	movne	r2, r5
 800ca46:	4620      	mov	r0, r4
 800ca48:	f7fd fdc2 	bl	800a5d0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ca4c:	bd38      	pop	{r3, r4, r5, pc}
 800ca4e:	bf00      	nop
 800ca50:	240089a8 	.word	0x240089a8

0800ca54 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800ca54:	b530      	push	{r4, r5, lr}
 800ca56:	888b      	ldrh	r3, [r1, #4]
 800ca58:	b085      	sub	sp, #20
 800ca5a:	4604      	mov	r4, r0
 800ca5c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800ca5e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800ca62:	b923      	cbnz	r3, 800ca6e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800ca64:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ca68:	b90b      	cbnz	r3, 800ca6e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800ca6a:	f7ff ffd3 	bl	800ca14 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800ca6e:	6823      	ldr	r3, [r4, #0]
 800ca70:	466d      	mov	r5, sp
 800ca72:	4621      	mov	r1, r4
 800ca74:	343c      	adds	r4, #60	; 0x3c
 800ca76:	4628      	mov	r0, r5
 800ca78:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ca7c:	4798      	blx	r3
 800ca7e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800ca82:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800ca86:	b005      	add	sp, #20
 800ca88:	bd30      	pop	{r4, r5, pc}

0800ca8a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800ca8a:	2300      	movs	r3, #0
 800ca8c:	8083      	strh	r3, [r0, #4]
 800ca8e:	80c3      	strh	r3, [r0, #6]
 800ca90:	8003      	strh	r3, [r0, #0]
 800ca92:	8043      	strh	r3, [r0, #2]
 800ca94:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800ca98:	2bff      	cmp	r3, #255	; 0xff
 800ca9a:	bf01      	itttt	eq
 800ca9c:	890b      	ldrheq	r3, [r1, #8]
 800ca9e:	8083      	strheq	r3, [r0, #4]
 800caa0:	894b      	ldrheq	r3, [r1, #10]
 800caa2:	80c3      	strheq	r3, [r0, #6]
 800caa4:	4770      	bx	lr
	...

0800caa8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800caa8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800caaa:	4604      	mov	r4, r0
 800caac:	466b      	mov	r3, sp
 800caae:	6808      	ldr	r0, [r1, #0]
 800cab0:	6849      	ldr	r1, [r1, #4]
 800cab2:	c303      	stmia	r3!, {r0, r1}
 800cab4:	6823      	ldr	r3, [r4, #0]
 800cab6:	4669      	mov	r1, sp
 800cab8:	4620      	mov	r0, r4
 800caba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cabc:	4798      	blx	r3
 800cabe:	4b08      	ldr	r3, [pc, #32]	; (800cae0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800cac0:	681b      	ldr	r3, [r3, #0]
 800cac2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800cac6:	b10a      	cbz	r2, 800cacc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800cac8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800caca:	b900      	cbnz	r0, 800cace <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800cacc:	6898      	ldr	r0, [r3, #8]
 800cace:	6803      	ldr	r3, [r0, #0]
 800cad0:	4669      	mov	r1, sp
 800cad2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800cad4:	6a1d      	ldr	r5, [r3, #32]
 800cad6:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800cada:	47a8      	blx	r5
 800cadc:	b003      	add	sp, #12
 800cade:	bd30      	pop	{r4, r5, pc}
 800cae0:	2400894c 	.word	0x2400894c

0800cae4 <_ZN8touchgfx3BoxD1Ev>:
 800cae4:	4770      	bx	lr

0800cae6 <_ZN8touchgfx3BoxD0Ev>:
 800cae6:	b510      	push	{r4, lr}
 800cae8:	4604      	mov	r4, r0
 800caea:	212c      	movs	r1, #44	; 0x2c
 800caec:	f00f fc8b 	bl	801c406 <_ZdlPvj>
 800caf0:	4620      	mov	r0, r4
 800caf2:	bd10      	pop	{r4, pc}

0800caf4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800caf4:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800caf8:	b12a      	cbz	r2, 800cb06 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800cafa:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800cafe:	b112      	cbz	r2, 800cb06 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800cb00:	6803      	ldr	r3, [r0, #0]
 800cb02:	695b      	ldr	r3, [r3, #20]
 800cb04:	4718      	bx	r3
 800cb06:	4770      	bx	lr

0800cb08 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 800cb08:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 800cb0c:	600b      	str	r3, [r1, #0]
 800cb0e:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 800cb12:	6013      	str	r3, [r2, #0]
 800cb14:	4770      	bx	lr

0800cb16 <_ZN8touchgfx5Gauge8setWidthEs>:
 800cb16:	8101      	strh	r1, [r0, #8]
 800cb18:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 800cb1c:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 800cb20:	4770      	bx	lr

0800cb22 <_ZN8touchgfx5Gauge9setHeightEs>:
 800cb22:	8141      	strh	r1, [r0, #10]
 800cb24:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 800cb28:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 800cb2c:	4770      	bx	lr

0800cb2e <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 800cb2e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800cb32:	4770      	bx	lr

0800cb34 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 800cb34:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 800cb38:	4770      	bx	lr

0800cb3a <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 800cb3a:	4770      	bx	lr

0800cb3c <_ZN8touchgfx5GaugeD1Ev>:
 800cb3c:	4770      	bx	lr

0800cb3e <_ZN8touchgfx5Gauge8setAlphaEh>:
 800cb3e:	b538      	push	{r3, r4, r5, lr}
 800cb40:	4604      	mov	r4, r0
 800cb42:	460d      	mov	r5, r1
 800cb44:	f7fd fc5d 	bl	800a402 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 800cb48:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 800cb4c:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 800cb50:	bd38      	pop	{r3, r4, r5, pc}

0800cb52 <_ZN8touchgfx5GaugeD0Ev>:
 800cb52:	b510      	push	{r4, lr}
 800cb54:	4604      	mov	r4, r0
 800cb56:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 800cb5a:	f00f fc54 	bl	801c406 <_ZdlPvj>
 800cb5e:	4620      	mov	r0, r4
 800cb60:	bd10      	pop	{r4, pc}

0800cb62 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 800cb62:	b510      	push	{r4, lr}
 800cb64:	6803      	ldr	r3, [r0, #0]
 800cb66:	4604      	mov	r4, r0
 800cb68:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800cb6c:	4798      	blx	r3
 800cb6e:	b170      	cbz	r0, 800cb8e <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 800cb70:	6823      	ldr	r3, [r4, #0]
 800cb72:	4620      	mov	r0, r4
 800cb74:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800cb78:	4798      	blx	r3
 800cb7a:	b140      	cbz	r0, 800cb8e <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 800cb7c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800cb80:	b12b      	cbz	r3, 800cb8e <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 800cb82:	6823      	ldr	r3, [r4, #0]
 800cb84:	4620      	mov	r0, r4
 800cb86:	695b      	ldr	r3, [r3, #20]
 800cb88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cb8c:	4718      	bx	r3
 800cb8e:	bd10      	pop	{r4, pc}

0800cb90 <_ZN8touchgfx5GaugeC1Ev>:
 800cb90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cb92:	4604      	mov	r4, r0
 800cb94:	f7fd fd56 	bl	800a644 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 800cb98:	4b18      	ldr	r3, [pc, #96]	; (800cbfc <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 800cb9a:	a902      	add	r1, sp, #8
 800cb9c:	4626      	mov	r6, r4
 800cb9e:	2500      	movs	r5, #0
 800cba0:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 800cba4:	f846 3bb4 	str.w	r3, [r6], #180
 800cba8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cbac:	4630      	mov	r0, r6
 800cbae:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800cbb2:	f00e fe29 	bl	801b808 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 800cbb6:	2301      	movs	r3, #1
 800cbb8:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 800cbbc:	4638      	mov	r0, r7
 800cbbe:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 800cbc2:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 800cbc6:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 800cbca:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 800cbce:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 800cbd2:	f7ff f887 	bl	800bce4 <_ZN8touchgfx6CircleC1Ev>
 800cbd6:	f104 0158 	add.w	r1, r4, #88	; 0x58
 800cbda:	4620      	mov	r0, r4
 800cbdc:	f7fd fdd3 	bl	800a786 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 800cbe0:	4639      	mov	r1, r7
 800cbe2:	4620      	mov	r0, r4
 800cbe4:	f7fd fd8e 	bl	800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cbe8:	4620      	mov	r0, r4
 800cbea:	4631      	mov	r1, r6
 800cbec:	f7fd fd8a 	bl	800a704 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cbf0:	4620      	mov	r0, r4
 800cbf2:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 800cbf6:	b003      	add	sp, #12
 800cbf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cbfa:	bf00      	nop
 800cbfc:	0801f184 	.word	0x0801f184

0800cc00 <_ZN8touchgfx5Gauge14setArcPositionEssss>:
 800cc00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc04:	f500 75ac 	add.w	r5, r0, #344	; 0x158
 800cc08:	4604      	mov	r4, r0
 800cc0a:	460e      	mov	r6, r1
 800cc0c:	4617      	mov	r7, r2
 800cc0e:	4628      	mov	r0, r5
 800cc10:	4698      	mov	r8, r3
 800cc12:	f7f5 ff14 	bl	8002a3e <_ZN8touchgfx8Drawable5setXYEss>
 800cc16:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
 800cc1a:	4641      	mov	r1, r8
 800cc1c:	4628      	mov	r0, r5
 800cc1e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800cc20:	4790      	blx	r2
 800cc22:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
 800cc26:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 800cc2a:	4628      	mov	r0, r5
 800cc2c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cc2e:	4798      	blx	r3
 800cc30:	f9b4 2152 	ldrsh.w	r2, [r4, #338]	; 0x152
 800cc34:	f9b4 1150 	ldrsh.w	r1, [r4, #336]	; 0x150
 800cc38:	1bd2      	subs	r2, r2, r7
 800cc3a:	1b89      	subs	r1, r1, r6
 800cc3c:	0152      	lsls	r2, r2, #5
 800cc3e:	0149      	lsls	r1, r1, #5
 800cc40:	3210      	adds	r2, #16
 800cc42:	3110      	adds	r1, #16
 800cc44:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
 800cc48:	f8c4 1184 	str.w	r1, [r4, #388]	; 0x184
 800cc4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cc50 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 800cc50:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 800cc54:	4770      	bx	lr

0800cc56 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 800cc56:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 800cc5a:	4770      	bx	lr

0800cc5c <_ZN8touchgfx5Gauge13setArcVisibleEb>:
 800cc5c:	f880 117d 	strb.w	r1, [r0, #381]	; 0x17d
 800cc60:	4770      	bx	lr

0800cc62 <_ZN8touchgfx5Gauge6getArcEv>:
 800cc62:	f500 70ac 	add.w	r0, r0, #344	; 0x158
 800cc66:	4770      	bx	lr

0800cc68 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 800cc68:	b538      	push	{r3, r4, r5, lr}
 800cc6a:	8902      	ldrh	r2, [r0, #8]
 800cc6c:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 800cc70:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800cc74:	4604      	mov	r4, r0
 800cc76:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 800cc7a:	2200      	movs	r2, #0
 800cc7c:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 800cc80:	4628      	mov	r0, r5
 800cc82:	4611      	mov	r1, r2
 800cc84:	f7f5 fedb 	bl	8002a3e <_ZN8touchgfx8Drawable5setXYEss>
 800cc88:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 800cc8c:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 800cc90:	4628      	mov	r0, r5
 800cc92:	1a9b      	subs	r3, r3, r2
 800cc94:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 800cc98:	ee07 3a90 	vmov	s15, r3
 800cc9c:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 800cca0:	1a9b      	subs	r3, r3, r2
 800cca2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800cca6:	ee07 3a10 	vmov	s14, r3
 800ccaa:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 800ccae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ccb2:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 800ccb6:	f00e fdf3 	bl	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800ccba:	4b16      	ldr	r3, [pc, #88]	; (800cd14 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 800ccbc:	4628      	mov	r0, r5
 800ccbe:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 800ccc2:	f00e fded 	bl	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800ccc6:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 800ccca:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 800ccce:	4628      	mov	r0, r5
 800ccd0:	ee07 3a90 	vmov	s15, r3
 800ccd4:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800ccd8:	ee07 2a10 	vmov	s14, r2
 800ccdc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800cce0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800cce4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800cce8:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 800ccec:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 800ccf0:	f00e fdd6 	bl	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800ccf4:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 800ccf8:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 800ccfc:	4628      	mov	r0, r5
 800ccfe:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 800cd02:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 800cd06:	f00e fdcb 	bl	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800cd0a:	2301      	movs	r3, #1
 800cd0c:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 800cd10:	bd38      	pop	{r3, r4, r5, pc}
 800cd12:	bf00      	nop
 800cd14:	43960000 	.word	0x43960000

0800cd18 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 800cd18:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cd1a:	4604      	mov	r4, r0
 800cd1c:	a802      	add	r0, sp, #8
 800cd1e:	4616      	mov	r6, r2
 800cd20:	461d      	mov	r5, r3
 800cd22:	f820 1d04 	strh.w	r1, [r0, #-4]!
 800cd26:	4601      	mov	r1, r0
 800cd28:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 800cd2c:	f00e ff0e 	bl	801bb4c <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 800cd30:	4620      	mov	r0, r4
 800cd32:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 800cd36:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 800cd3a:	f7ff ff95 	bl	800cc68 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 800cd3e:	b002      	add	sp, #8
 800cd40:	bd70      	pop	{r4, r5, r6, pc}

0800cd42 <_ZN8touchgfx5Gauge9setCenterEii>:
 800cd42:	b570      	push	{r4, r5, r6, lr}
 800cd44:	4606      	mov	r6, r0
 800cd46:	460d      	mov	r5, r1
 800cd48:	4614      	mov	r4, r2
 800cd4a:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 800cd4e:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 800cd52:	f7ff ff89 	bl	800cc68 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 800cd56:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 800cd5a:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 800cd5e:	1aa4      	subs	r4, r4, r2
 800cd60:	1a6d      	subs	r5, r5, r1
 800cd62:	0164      	lsls	r4, r4, #5
 800cd64:	016d      	lsls	r5, r5, #5
 800cd66:	3410      	adds	r4, #16
 800cd68:	3510      	adds	r5, #16
 800cd6a:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 800cd6e:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 800cd72:	bd70      	pop	{r4, r5, r6, pc}

0800cd74 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 800cd74:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cd76:	0149      	lsls	r1, r1, #5
 800cd78:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800cd7a:	4604      	mov	r4, r0
 800cd7c:	4299      	cmp	r1, r3
 800cd7e:	9101      	str	r1, [sp, #4]
 800cd80:	d00b      	beq.n	800cd9a <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 800cd82:	4601      	mov	r1, r0
 800cd84:	aa01      	add	r2, sp, #4
 800cd86:	a802      	add	r0, sp, #8
 800cd88:	f7ff f9b1 	bl	800c0ee <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 800cd8c:	9b01      	ldr	r3, [sp, #4]
 800cd8e:	a902      	add	r1, sp, #8
 800cd90:	4620      	mov	r0, r4
 800cd92:	63e3      	str	r3, [r4, #60]	; 0x3c
 800cd94:	6823      	ldr	r3, [r4, #0]
 800cd96:	691b      	ldr	r3, [r3, #16]
 800cd98:	4798      	blx	r3
 800cd9a:	b004      	add	sp, #16
 800cd9c:	bd10      	pop	{r4, pc}
	...

0800cda0 <_ZN8touchgfx5Gauge8setValueEi>:
 800cda0:	b570      	push	{r4, r5, r6, lr}
 800cda2:	4604      	mov	r4, r0
 800cda4:	f7fd fb80 	bl	800a4a8 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 800cda8:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800cdac:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 800cdb0:	4620      	mov	r0, r4
 800cdb2:	429a      	cmp	r2, r3
 800cdb4:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 800cdb8:	bfac      	ite	ge
 800cdba:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 800cdbe:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 800cdc2:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 800cdc6:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800cdca:	1ac9      	subs	r1, r1, r3
 800cdcc:	2900      	cmp	r1, #0
 800cdce:	bfb8      	it	lt
 800cdd0:	4249      	neglt	r1, r1
 800cdd2:	b289      	uxth	r1, r1
 800cdd4:	f7fd fb8a 	bl	800a4ec <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 800cdd8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800cddc:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800cde0:	4605      	mov	r5, r0
 800cde2:	eddf 6a18 	vldr	s13, [pc, #96]	; 800ce44 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 800cde6:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 800cdea:	429a      	cmp	r2, r3
 800cdec:	ed9f 7a16 	vldr	s14, [pc, #88]	; 800ce48 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 800cdf0:	da15      	bge.n	800ce1e <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 800cdf2:	1b5b      	subs	r3, r3, r5
 800cdf4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 800cdf8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 800cdfc:	ee07 3a90 	vmov	s15, r3
 800ce00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ce04:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 800ce08:	ee21 1a07 	vmul.f32	s2, s2, s14
 800ce0c:	f00e fcb7 	bl	801b77e <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 800ce10:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 800ce14:	1b49      	subs	r1, r1, r5
 800ce16:	4630      	mov	r0, r6
 800ce18:	f7ff ffac 	bl	800cd74 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 800ce1c:	bd70      	pop	{r4, r5, r6, pc}
 800ce1e:	442b      	add	r3, r5
 800ce20:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 800ce24:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 800ce28:	ee07 3a90 	vmov	s15, r3
 800ce2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ce30:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 800ce34:	ee21 1a07 	vmul.f32	s2, s2, s14
 800ce38:	f00e fca1 	bl	801b77e <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 800ce3c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 800ce40:	4429      	add	r1, r5
 800ce42:	e7e8      	b.n	800ce16 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 800ce44:	43340000 	.word	0x43340000
 800ce48:	40490fdb 	.word	0x40490fdb

0800ce4c <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 800ce4c:	b510      	push	{r4, lr}
 800ce4e:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 800ce52:	0149      	lsls	r1, r1, #5
 800ce54:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 800ce58:	0152      	lsls	r2, r2, #5
 800ce5a:	4604      	mov	r4, r0
 800ce5c:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 800ce60:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 800ce64:	f7fd faca 	bl	800a3fc <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 800ce68:	4601      	mov	r1, r0
 800ce6a:	4620      	mov	r0, r4
 800ce6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ce70:	f7ff bf96 	b.w	800cda0 <_ZN8touchgfx5Gauge8setValueEi>

0800ce74 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800ce74:	b570      	push	{r4, r5, r6, lr}
 800ce76:	880b      	ldrh	r3, [r1, #0]
 800ce78:	4605      	mov	r5, r0
 800ce7a:	4604      	mov	r4, r0
 800ce7c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800ce7e:	8813      	ldrh	r3, [r2, #0]
 800ce80:	f825 3f30 	strh.w	r3, [r5, #48]!
 800ce84:	4628      	mov	r0, r5
 800ce86:	f005 ff9f 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ce8a:	4606      	mov	r6, r0
 800ce8c:	4628      	mov	r0, r5
 800ce8e:	f005 ffcf 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ce92:	6823      	ldr	r3, [r4, #0]
 800ce94:	4605      	mov	r5, r0
 800ce96:	4631      	mov	r1, r6
 800ce98:	4620      	mov	r0, r4
 800ce9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ce9c:	4798      	blx	r3
 800ce9e:	6823      	ldr	r3, [r4, #0]
 800cea0:	4629      	mov	r1, r5
 800cea2:	4620      	mov	r0, r4
 800cea4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cea6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ceaa:	4718      	bx	r3

0800ceac <_ZNK8touchgfx6Button12getSolidRectEv>:
 800ceac:	b510      	push	{r4, lr}
 800ceae:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800ceb2:	4604      	mov	r4, r0
 800ceb4:	2bff      	cmp	r3, #255	; 0xff
 800ceb6:	d006      	beq.n	800cec6 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800ceb8:	2300      	movs	r3, #0
 800ceba:	8003      	strh	r3, [r0, #0]
 800cebc:	8043      	strh	r3, [r0, #2]
 800cebe:	8083      	strh	r3, [r0, #4]
 800cec0:	80c3      	strh	r3, [r0, #6]
 800cec2:	4620      	mov	r0, r4
 800cec4:	bd10      	pop	{r4, pc}
 800cec6:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800ceca:	b11b      	cbz	r3, 800ced4 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800cecc:	3130      	adds	r1, #48	; 0x30
 800cece:	f005 ffe3 	bl	8012e98 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ced2:	e7f6      	b.n	800cec2 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800ced4:	312e      	adds	r1, #46	; 0x2e
 800ced6:	e7fa      	b.n	800cece <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800ced8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800ced8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cedc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cee0:	b08a      	sub	sp, #40	; 0x28
 800cee2:	4604      	mov	r4, r0
 800cee4:	4688      	mov	r8, r1
 800cee6:	2b00      	cmp	r3, #0
 800cee8:	d066      	beq.n	800cfb8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800ceea:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800ceec:	a805      	add	r0, sp, #20
 800ceee:	f8ad 3014 	strh.w	r3, [sp, #20]
 800cef2:	f005 ff69 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cef6:	4607      	mov	r7, r0
 800cef8:	a805      	add	r0, sp, #20
 800cefa:	f005 ff99 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cefe:	f9b8 6000 	ldrsh.w	r6, [r8]
 800cf02:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800cf06:	2300      	movs	r3, #0
 800cf08:	4432      	add	r2, r6
 800cf0a:	9306      	str	r3, [sp, #24]
 800cf0c:	b292      	uxth	r2, r2
 800cf0e:	fa0f fc82 	sxth.w	ip, r2
 800cf12:	459c      	cmp	ip, r3
 800cf14:	dd52      	ble.n	800cfbc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800cf16:	42b7      	cmp	r7, r6
 800cf18:	dd50      	ble.n	800cfbc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800cf1a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800cf1e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800cf22:	442b      	add	r3, r5
 800cf24:	b29b      	uxth	r3, r3
 800cf26:	b219      	sxth	r1, r3
 800cf28:	2900      	cmp	r1, #0
 800cf2a:	dd47      	ble.n	800cfbc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800cf2c:	42a8      	cmp	r0, r5
 800cf2e:	dd45      	ble.n	800cfbc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800cf30:	4567      	cmp	r7, ip
 800cf32:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800cf36:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800cf3a:	bfb8      	it	lt
 800cf3c:	b2ba      	uxthlt	r2, r7
 800cf3e:	4288      	cmp	r0, r1
 800cf40:	f8ad 6018 	strh.w	r6, [sp, #24]
 800cf44:	bfb8      	it	lt
 800cf46:	b283      	uxthlt	r3, r0
 800cf48:	1b92      	subs	r2, r2, r6
 800cf4a:	f8ad 501a 	strh.w	r5, [sp, #26]
 800cf4e:	1b5b      	subs	r3, r3, r5
 800cf50:	f8ad 201c 	strh.w	r2, [sp, #28]
 800cf54:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cf58:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800cf5c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cf60:	429a      	cmp	r2, r3
 800cf62:	d026      	beq.n	800cfb2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800cf64:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800cf68:	2b00      	cmp	r3, #0
 800cf6a:	dd22      	ble.n	800cfb2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800cf6c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800cf70:	2b00      	cmp	r3, #0
 800cf72:	dd1e      	ble.n	800cfb2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800cf74:	2300      	movs	r3, #0
 800cf76:	a908      	add	r1, sp, #32
 800cf78:	4620      	mov	r0, r4
 800cf7a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800cf7e:	6823      	ldr	r3, [r4, #0]
 800cf80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cf82:	4798      	blx	r3
 800cf84:	4b0f      	ldr	r3, [pc, #60]	; (800cfc4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800cf86:	681b      	ldr	r3, [r3, #0]
 800cf88:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800cf8c:	b10a      	cbz	r2, 800cf92 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800cf8e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800cf90:	b900      	cbnz	r0, 800cf94 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800cf92:	6898      	ldr	r0, [r3, #8]
 800cf94:	2501      	movs	r5, #1
 800cf96:	6801      	ldr	r1, [r0, #0]
 800cf98:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800cf9c:	9502      	str	r5, [sp, #8]
 800cf9e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800cfa2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800cfa6:	9401      	str	r4, [sp, #4]
 800cfa8:	ac06      	add	r4, sp, #24
 800cfaa:	9400      	str	r4, [sp, #0]
 800cfac:	688c      	ldr	r4, [r1, #8]
 800cfae:	a905      	add	r1, sp, #20
 800cfb0:	47a0      	blx	r4
 800cfb2:	b00a      	add	sp, #40	; 0x28
 800cfb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cfb8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800cfba:	e797      	b.n	800ceec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800cfbc:	2300      	movs	r3, #0
 800cfbe:	9307      	str	r3, [sp, #28]
 800cfc0:	e7ca      	b.n	800cf58 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800cfc2:	bf00      	nop
 800cfc4:	2400894c 	.word	0x2400894c

0800cfc8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800cfc8:	4b30      	ldr	r3, [pc, #192]	; (800d08c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800cfca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cfce:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800cfd0:	b08d      	sub	sp, #52	; 0x34
 800cfd2:	881b      	ldrh	r3, [r3, #0]
 800cfd4:	4604      	mov	r4, r0
 800cfd6:	460f      	mov	r7, r1
 800cfd8:	4293      	cmp	r3, r2
 800cfda:	d954      	bls.n	800d086 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800cfdc:	4b2c      	ldr	r3, [pc, #176]	; (800d090 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800cfde:	6819      	ldr	r1, [r3, #0]
 800cfe0:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800cfe4:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800cfe8:	4a2a      	ldr	r2, [pc, #168]	; (800d094 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800cfea:	6812      	ldr	r2, [r2, #0]
 800cfec:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800cff0:	2900      	cmp	r1, #0
 800cff2:	d048      	beq.n	800d086 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800cff4:	785a      	ldrb	r2, [r3, #1]
 800cff6:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800cffa:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800cffe:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d002:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800d006:	4b24      	ldr	r3, [pc, #144]	; (800d098 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800d008:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800d00c:	681a      	ldr	r2, [r3, #0]
 800d00e:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800d012:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800d016:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800d01a:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800d01c:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800d020:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800d024:	9107      	str	r1, [sp, #28]
 800d026:	f88d 8020 	strb.w	r8, [sp, #32]
 800d02a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800d02e:	9609      	str	r6, [sp, #36]	; 0x24
 800d030:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800d034:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800d038:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800d03c:	b10b      	cbz	r3, 800d042 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800d03e:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800d040:	b905      	cbnz	r5, 800d044 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800d042:	6895      	ldr	r5, [r2, #8]
 800d044:	ae05      	add	r6, sp, #20
 800d046:	4621      	mov	r1, r4
 800d048:	4630      	mov	r0, r6
 800d04a:	f003 fdfd 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d04e:	4b13      	ldr	r3, [pc, #76]	; (800d09c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800d050:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d052:	6818      	ldr	r0, [r3, #0]
 800d054:	f7f6 f8b4 	bl	80031c0 <_ZNK8touchgfx5Texts7getTextEt>
 800d058:	6823      	ldr	r3, [r4, #0]
 800d05a:	4680      	mov	r8, r0
 800d05c:	4620      	mov	r0, r4
 800d05e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d060:	4798      	blx	r3
 800d062:	6823      	ldr	r3, [r4, #0]
 800d064:	4681      	mov	r9, r0
 800d066:	4620      	mov	r0, r4
 800d068:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d06c:	4798      	blx	r3
 800d06e:	ab07      	add	r3, sp, #28
 800d070:	f8cd 8004 	str.w	r8, [sp, #4]
 800d074:	9300      	str	r3, [sp, #0]
 800d076:	463b      	mov	r3, r7
 800d078:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800d07c:	4628      	mov	r0, r5
 800d07e:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d082:	f7f6 f84f 	bl	8003124 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d086:	b00d      	add	sp, #52	; 0x34
 800d088:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d08c:	240089a8 	.word	0x240089a8
 800d090:	240089a4 	.word	0x240089a4
 800d094:	240089ac 	.word	0x240089ac
 800d098:	2400894c 	.word	0x2400894c
 800d09c:	240089b0 	.word	0x240089b0

0800d0a0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 800d0a0:	4770      	bx	lr

0800d0a2 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800d0a2:	4770      	bx	lr

0800d0a4 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800d0a4:	b510      	push	{r4, lr}
 800d0a6:	4604      	mov	r4, r0
 800d0a8:	213c      	movs	r1, #60	; 0x3c
 800d0aa:	f00f f9ac 	bl	801c406 <_ZdlPvj>
 800d0ae:	4620      	mov	r0, r4
 800d0b0:	bd10      	pop	{r4, pc}

0800d0b2 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800d0b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d0b6:	461c      	mov	r4, r3
 800d0b8:	4606      	mov	r6, r0
 800d0ba:	9f06      	ldr	r7, [sp, #24]
 800d0bc:	f7ff feda 	bl	800ce74 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800d0c0:	8823      	ldrh	r3, [r4, #0]
 800d0c2:	f04f 0802 	mov.w	r8, #2
 800d0c6:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800d0ca:	4638      	mov	r0, r7
 800d0cc:	86b3      	strh	r3, [r6, #52]	; 0x34
 800d0ce:	883b      	ldrh	r3, [r7, #0]
 800d0d0:	fb95 f5f8 	sdiv	r5, r5, r8
 800d0d4:	86f3      	strh	r3, [r6, #54]	; 0x36
 800d0d6:	b2ad      	uxth	r5, r5
 800d0d8:	f005 fe76 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d0dc:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800d0e0:	fb90 f0f8 	sdiv	r0, r0, r8
 800d0e4:	1a2d      	subs	r5, r5, r0
 800d0e6:	4638      	mov	r0, r7
 800d0e8:	fb94 f4f8 	sdiv	r4, r4, r8
 800d0ec:	8735      	strh	r5, [r6, #56]	; 0x38
 800d0ee:	b2a4      	uxth	r4, r4
 800d0f0:	f005 fe9e 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d0f4:	fb90 f0f8 	sdiv	r0, r0, r8
 800d0f8:	1a24      	subs	r4, r4, r0
 800d0fa:	8774      	strh	r4, [r6, #58]	; 0x3a
 800d0fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d100 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800d100:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d104:	4604      	mov	r4, r0
 800d106:	b08c      	sub	sp, #48	; 0x30
 800d108:	460d      	mov	r5, r1
 800d10a:	f7ff fee5 	bl	800ced8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800d10e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800d112:	2b00      	cmp	r3, #0
 800d114:	d05d      	beq.n	800d1d2 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 800d116:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d118:	a805      	add	r0, sp, #20
 800d11a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d11e:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 800d122:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 800d126:	f005 fe4f 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d12a:	4606      	mov	r6, r0
 800d12c:	a805      	add	r0, sp, #20
 800d12e:	f005 fe7f 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d132:	6869      	ldr	r1, [r5, #4]
 800d134:	f8ad 001e 	strh.w	r0, [sp, #30]
 800d138:	ab08      	add	r3, sp, #32
 800d13a:	6828      	ldr	r0, [r5, #0]
 800d13c:	ad08      	add	r5, sp, #32
 800d13e:	f8ad 8018 	strh.w	r8, [sp, #24]
 800d142:	f8ad 701a 	strh.w	r7, [sp, #26]
 800d146:	f8ad 601c 	strh.w	r6, [sp, #28]
 800d14a:	c303      	stmia	r3!, {r0, r1}
 800d14c:	a906      	add	r1, sp, #24
 800d14e:	4628      	mov	r0, r5
 800d150:	f7fd fc5c 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 800d154:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d158:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d15c:	429a      	cmp	r2, r3
 800d15e:	d035      	beq.n	800d1cc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800d160:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 800d164:	2b00      	cmp	r3, #0
 800d166:	dd31      	ble.n	800d1cc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800d168:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800d16c:	2b00      	cmp	r3, #0
 800d16e:	dd2d      	ble.n	800d1cc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800d170:	2300      	movs	r3, #0
 800d172:	a90a      	add	r1, sp, #40	; 0x28
 800d174:	4620      	mov	r0, r4
 800d176:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800d17a:	6823      	ldr	r3, [r4, #0]
 800d17c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d17e:	4798      	blx	r3
 800d180:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d184:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800d186:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800d18a:	1a9b      	subs	r3, r3, r2
 800d18c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d190:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 800d192:	1ac9      	subs	r1, r1, r3
 800d194:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800d198:	490f      	ldr	r1, [pc, #60]	; (800d1d8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 800d19a:	6809      	ldr	r1, [r1, #0]
 800d19c:	f891 0076 	ldrb.w	r0, [r1, #118]	; 0x76
 800d1a0:	b108      	cbz	r0, 800d1a6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 800d1a2:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 800d1a4:	b900      	cbnz	r0, 800d1a8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 800d1a6:	6888      	ldr	r0, [r1, #8]
 800d1a8:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 800d1ac:	2601      	movs	r6, #1
 800d1ae:	440b      	add	r3, r1
 800d1b0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 800d1b4:	440a      	add	r2, r1
 800d1b6:	6801      	ldr	r1, [r0, #0]
 800d1b8:	9602      	str	r6, [sp, #8]
 800d1ba:	b21b      	sxth	r3, r3
 800d1bc:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800d1c0:	b212      	sxth	r2, r2
 800d1c2:	e9cd 5400 	strd	r5, r4, [sp]
 800d1c6:	688c      	ldr	r4, [r1, #8]
 800d1c8:	a905      	add	r1, sp, #20
 800d1ca:	47a0      	blx	r4
 800d1cc:	b00c      	add	sp, #48	; 0x30
 800d1ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d1d2:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800d1d4:	e7a0      	b.n	800d118 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 800d1d6:	bf00      	nop
 800d1d8:	2400894c 	.word	0x2400894c

0800d1dc <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800d1dc:	2101      	movs	r1, #1
 800d1de:	2200      	movs	r2, #0
 800d1e0:	b510      	push	{r4, lr}
 800d1e2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d1e6:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800d1ea:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d1ee:	4c0d      	ldr	r4, [pc, #52]	; (800d224 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 800d1f0:	8082      	strh	r2, [r0, #4]
 800d1f2:	80c2      	strh	r2, [r0, #6]
 800d1f4:	8102      	strh	r2, [r0, #8]
 800d1f6:	8142      	strh	r2, [r0, #10]
 800d1f8:	8182      	strh	r2, [r0, #12]
 800d1fa:	81c2      	strh	r2, [r0, #14]
 800d1fc:	8202      	strh	r2, [r0, #16]
 800d1fe:	8242      	strh	r2, [r0, #18]
 800d200:	61c2      	str	r2, [r0, #28]
 800d202:	8402      	strh	r2, [r0, #32]
 800d204:	8442      	strh	r2, [r0, #34]	; 0x22
 800d206:	6282      	str	r2, [r0, #40]	; 0x28
 800d208:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800d20c:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d20e:	8601      	strh	r1, [r0, #48]	; 0x30
 800d210:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800d214:	6004      	str	r4, [r0, #0]
 800d216:	8681      	strh	r1, [r0, #52]	; 0x34
 800d218:	86c1      	strh	r1, [r0, #54]	; 0x36
 800d21a:	8702      	strh	r2, [r0, #56]	; 0x38
 800d21c:	8742      	strh	r2, [r0, #58]	; 0x3a
 800d21e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d222:	bd10      	pop	{r4, pc}
 800d224:	0801f26c 	.word	0x0801f26c

0800d228 <_ZN8touchgfx5ImageD1Ev>:
 800d228:	4770      	bx	lr

0800d22a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800d22a:	b570      	push	{r4, r5, r6, lr}
 800d22c:	880b      	ldrh	r3, [r1, #0]
 800d22e:	460d      	mov	r5, r1
 800d230:	4604      	mov	r4, r0
 800d232:	84c3      	strh	r3, [r0, #38]	; 0x26
 800d234:	4608      	mov	r0, r1
 800d236:	f005 fdc7 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d23a:	4606      	mov	r6, r0
 800d23c:	4628      	mov	r0, r5
 800d23e:	f005 fdf7 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d242:	6823      	ldr	r3, [r4, #0]
 800d244:	4605      	mov	r5, r0
 800d246:	4631      	mov	r1, r6
 800d248:	4620      	mov	r0, r4
 800d24a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d24c:	4798      	blx	r3
 800d24e:	6823      	ldr	r3, [r4, #0]
 800d250:	4629      	mov	r1, r5
 800d252:	4620      	mov	r0, r4
 800d254:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d256:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d25a:	4718      	bx	r3

0800d25c <_ZN8touchgfx5ImageD0Ev>:
 800d25c:	b510      	push	{r4, lr}
 800d25e:	4604      	mov	r4, r0
 800d260:	212c      	movs	r1, #44	; 0x2c
 800d262:	f00f f8d0 	bl	801c406 <_ZdlPvj>
 800d266:	4620      	mov	r0, r4
 800d268:	bd10      	pop	{r4, pc}

0800d26a <_ZNK8touchgfx5Image12getSolidRectEv>:
 800d26a:	b510      	push	{r4, lr}
 800d26c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800d270:	4604      	mov	r4, r0
 800d272:	2bff      	cmp	r3, #255	; 0xff
 800d274:	d006      	beq.n	800d284 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800d276:	2300      	movs	r3, #0
 800d278:	8003      	strh	r3, [r0, #0]
 800d27a:	8043      	strh	r3, [r0, #2]
 800d27c:	8083      	strh	r3, [r0, #4]
 800d27e:	80c3      	strh	r3, [r0, #6]
 800d280:	4620      	mov	r0, r4
 800d282:	bd10      	pop	{r4, pc}
 800d284:	3126      	adds	r1, #38	; 0x26
 800d286:	f005 fe07 	bl	8012e98 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d28a:	e7f9      	b.n	800d280 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800d28c <_ZNK8touchgfx5Image17invalidateContentEv>:
 800d28c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800d290:	b12a      	cbz	r2, 800d29e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800d292:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d296:	b112      	cbz	r2, 800d29e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800d298:	6803      	ldr	r3, [r0, #0]
 800d29a:	695b      	ldr	r3, [r3, #20]
 800d29c:	4718      	bx	r3
 800d29e:	4770      	bx	lr

0800d2a0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800d2a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d2a4:	4604      	mov	r4, r0
 800d2a6:	b088      	sub	sp, #32
 800d2a8:	2500      	movs	r5, #0
 800d2aa:	460f      	mov	r7, r1
 800d2ac:	f854 3b26 	ldr.w	r3, [r4], #38
 800d2b0:	a904      	add	r1, sp, #16
 800d2b2:	4606      	mov	r6, r0
 800d2b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d2b6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800d2ba:	4798      	blx	r3
 800d2bc:	4620      	mov	r0, r4
 800d2be:	f005 fd83 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d2c2:	4680      	mov	r8, r0
 800d2c4:	4620      	mov	r0, r4
 800d2c6:	f005 fdb3 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d2ca:	9506      	str	r5, [sp, #24]
 800d2cc:	ad06      	add	r5, sp, #24
 800d2ce:	f8ad 001e 	strh.w	r0, [sp, #30]
 800d2d2:	4639      	mov	r1, r7
 800d2d4:	f8ad 801c 	strh.w	r8, [sp, #28]
 800d2d8:	4628      	mov	r0, r5
 800d2da:	f7fd fb97 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 800d2de:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d2e2:	2b00      	cmp	r3, #0
 800d2e4:	dd19      	ble.n	800d31a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d2e6:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d2ea:	2b00      	cmp	r3, #0
 800d2ec:	dd15      	ble.n	800d31a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d2ee:	4b0c      	ldr	r3, [pc, #48]	; (800d320 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800d2f0:	681b      	ldr	r3, [r3, #0]
 800d2f2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d2f6:	b10a      	cbz	r2, 800d2fc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800d2f8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d2fa:	b900      	cbnz	r0, 800d2fe <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800d2fc:	6898      	ldr	r0, [r3, #8]
 800d2fe:	2701      	movs	r7, #1
 800d300:	6801      	ldr	r1, [r0, #0]
 800d302:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800d306:	9702      	str	r7, [sp, #8]
 800d308:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800d30c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800d310:	e9cd 5600 	strd	r5, r6, [sp]
 800d314:	688d      	ldr	r5, [r1, #8]
 800d316:	4621      	mov	r1, r4
 800d318:	47a8      	blx	r5
 800d31a:	b008      	add	sp, #32
 800d31c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d320:	2400894c 	.word	0x2400894c

0800d324 <_ZN8touchgfx7OutlineD1Ev>:
 800d324:	4770      	bx	lr

0800d326 <_ZN8touchgfx7OutlineD0Ev>:
 800d326:	b510      	push	{r4, lr}
 800d328:	4604      	mov	r4, r0
 800d32a:	2130      	movs	r1, #48	; 0x30
 800d32c:	f00f f86b 	bl	801c406 <_ZdlPvj>
 800d330:	4620      	mov	r0, r4
 800d332:	bd10      	pop	{r4, pc}

0800d334 <_ZN8touchgfx7Outline5resetEv>:
 800d334:	b510      	push	{r4, lr}
 800d336:	4604      	mov	r4, r0
 800d338:	f000 fe86 	bl	800e048 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800d33c:	60e0      	str	r0, [r4, #12]
 800d33e:	f000 fe89 	bl	800e054 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800d342:	68e3      	ldr	r3, [r4, #12]
 800d344:	08c0      	lsrs	r0, r0, #3
 800d346:	2200      	movs	r2, #0
 800d348:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800d34c:	6123      	str	r3, [r4, #16]
 800d34e:	3801      	subs	r0, #1
 800d350:	60a2      	str	r2, [r4, #8]
 800d352:	6060      	str	r0, [r4, #4]
 800d354:	8019      	strh	r1, [r3, #0]
 800d356:	8059      	strh	r1, [r3, #2]
 800d358:	809a      	strh	r2, [r3, #4]
 800d35a:	80da      	strh	r2, [r3, #6]
 800d35c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d35e:	f023 0301 	bic.w	r3, r3, #1
 800d362:	f043 0302 	orr.w	r3, r3, #2
 800d366:	6263      	str	r3, [r4, #36]	; 0x24
 800d368:	bd10      	pop	{r4, pc}
	...

0800d36c <_ZN8touchgfx7OutlineC1Ev>:
 800d36c:	4b0a      	ldr	r3, [pc, #40]	; (800d398 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800d36e:	b510      	push	{r4, lr}
 800d370:	6003      	str	r3, [r0, #0]
 800d372:	2300      	movs	r3, #0
 800d374:	4604      	mov	r4, r0
 800d376:	6243      	str	r3, [r0, #36]	; 0x24
 800d378:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800d37c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d380:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800d384:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800d388:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800d38c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800d390:	f7ff ffd0 	bl	800d334 <_ZN8touchgfx7Outline5resetEv>
 800d394:	4620      	mov	r0, r4
 800d396:	bd10      	pop	{r4, pc}
 800d398:	0801f350 	.word	0x0801f350

0800d39c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800d39c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3a0:	b093      	sub	sp, #76	; 0x4c
 800d3a2:	1156      	asrs	r6, r2, #5
 800d3a4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800d3a6:	9305      	str	r3, [sp, #20]
 800d3a8:	1153      	asrs	r3, r2, #5
 800d3aa:	f004 051f 	and.w	r5, r4, #31
 800d3ae:	9303      	str	r3, [sp, #12]
 800d3b0:	1163      	asrs	r3, r4, #5
 800d3b2:	9504      	str	r5, [sp, #16]
 800d3b4:	1165      	asrs	r5, r4, #5
 800d3b6:	9306      	str	r3, [sp, #24]
 800d3b8:	f002 031f 	and.w	r3, r2, #31
 800d3bc:	42ae      	cmp	r6, r5
 800d3be:	f040 80f4 	bne.w	800d5aa <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
 800d3c2:	9c04      	ldr	r4, [sp, #16]
 800d3c4:	9a05      	ldr	r2, [sp, #20]
 800d3c6:	42a3      	cmp	r3, r4
 800d3c8:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800d3cc:	6902      	ldr	r2, [r0, #16]
 800d3ce:	d125      	bne.n	800d41c <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
 800d3d0:	f9b2 3000 	ldrsh.w	r3, [r2]
 800d3d4:	459e      	cmp	lr, r3
 800d3d6:	d103      	bne.n	800d3e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
 800d3d8:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d3dc:	429e      	cmp	r6, r3
 800d3de:	d035      	beq.n	800d44c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800d3e0:	88d1      	ldrh	r1, [r2, #6]
 800d3e2:	8893      	ldrh	r3, [r2, #4]
 800d3e4:	430b      	orrs	r3, r1
 800d3e6:	d010      	beq.n	800d40a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800d3e8:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d3ec:	2b00      	cmp	r3, #0
 800d3ee:	db0c      	blt.n	800d40a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800d3f0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800d3f2:	428b      	cmp	r3, r1
 800d3f4:	da09      	bge.n	800d40a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800d3f6:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800d3fa:	428b      	cmp	r3, r1
 800d3fc:	f103 0301 	add.w	r3, r3, #1
 800d400:	bf38      	it	cc
 800d402:	3208      	addcc	r2, #8
 800d404:	6083      	str	r3, [r0, #8]
 800d406:	bf38      	it	cc
 800d408:	6102      	strcc	r2, [r0, #16]
 800d40a:	6903      	ldr	r3, [r0, #16]
 800d40c:	9a03      	ldr	r2, [sp, #12]
 800d40e:	f8a3 e000 	strh.w	lr, [r3]
 800d412:	805a      	strh	r2, [r3, #2]
 800d414:	2200      	movs	r2, #0
 800d416:	809a      	strh	r2, [r3, #4]
 800d418:	80da      	strh	r2, [r3, #6]
 800d41a:	e017      	b.n	800d44c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800d41c:	9c05      	ldr	r4, [sp, #20]
 800d41e:	114e      	asrs	r6, r1, #5
 800d420:	f001 0c1f 	and.w	ip, r1, #31
 800d424:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800d428:	f004 041f 	and.w	r4, r4, #31
 800d42c:	4576      	cmp	r6, lr
 800d42e:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800d432:	9402      	str	r4, [sp, #8]
 800d434:	9c04      	ldr	r4, [sp, #16]
 800d436:	eba4 0403 	sub.w	r4, r4, r3
 800d43a:	d10a      	bne.n	800d452 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
 800d43c:	9b02      	ldr	r3, [sp, #8]
 800d43e:	44a0      	add	r8, r4
 800d440:	449c      	add	ip, r3
 800d442:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d446:	fb04 a40c 	mla	r4, r4, ip, sl
 800d44a:	80d4      	strh	r4, [r2, #6]
 800d44c:	b013      	add	sp, #76	; 0x4c
 800d44e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d452:	9d05      	ldr	r5, [sp, #20]
 800d454:	1a69      	subs	r1, r5, r1
 800d456:	bf51      	iteee	pl
 800d458:	f1cc 0520 	rsbpl	r5, ip, #32
 800d45c:	fb04 f40c 	mulmi.w	r4, r4, ip
 800d460:	4249      	negmi	r1, r1
 800d462:	2500      	movmi	r5, #0
 800d464:	bf5d      	ittte	pl
 800d466:	436c      	mulpl	r4, r5
 800d468:	2520      	movpl	r5, #32
 800d46a:	f04f 0901 	movpl.w	r9, #1
 800d46e:	f04f 39ff 	movmi.w	r9, #4294967295
 800d472:	9501      	str	r5, [sp, #4]
 800d474:	9f01      	ldr	r7, [sp, #4]
 800d476:	444e      	add	r6, r9
 800d478:	fb94 f5f1 	sdiv	r5, r4, r1
 800d47c:	fb01 4415 	mls	r4, r1, r5, r4
 800d480:	44bc      	add	ip, r7
 800d482:	2c00      	cmp	r4, #0
 800d484:	bfbc      	itt	lt
 800d486:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800d48a:	1864      	addlt	r4, r4, r1
 800d48c:	44a8      	add	r8, r5
 800d48e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800d492:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d496:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d49a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d49e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800d4a2:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800d4a6:	ea58 0202 	orrs.w	r2, r8, r2
 800d4aa:	d011      	beq.n	800d4d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800d4ac:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800d4b0:	f1b8 0f00 	cmp.w	r8, #0
 800d4b4:	db0c      	blt.n	800d4d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800d4b6:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800d4b8:	4590      	cmp	r8, r2
 800d4ba:	da09      	bge.n	800d4d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800d4bc:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800d4c0:	4590      	cmp	r8, r2
 800d4c2:	bf3c      	itt	cc
 800d4c4:	f10c 0208 	addcc.w	r2, ip, #8
 800d4c8:	6102      	strcc	r2, [r0, #16]
 800d4ca:	f108 0201 	add.w	r2, r8, #1
 800d4ce:	6082      	str	r2, [r0, #8]
 800d4d0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d4d4:	2700      	movs	r7, #0
 800d4d6:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d4da:	45b6      	cmp	lr, r6
 800d4dc:	f8ac 6000 	strh.w	r6, [ip]
 800d4e0:	442b      	add	r3, r5
 800d4e2:	f8ac 2002 	strh.w	r2, [ip, #2]
 800d4e6:	f8ac 7004 	strh.w	r7, [ip, #4]
 800d4ea:	f8ac 7006 	strh.w	r7, [ip, #6]
 800d4ee:	d04b      	beq.n	800d588 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
 800d4f0:	9f04      	ldr	r7, [sp, #16]
 800d4f2:	1a64      	subs	r4, r4, r1
 800d4f4:	f04f 0a00 	mov.w	sl, #0
 800d4f8:	1aff      	subs	r7, r7, r3
 800d4fa:	443d      	add	r5, r7
 800d4fc:	016d      	lsls	r5, r5, #5
 800d4fe:	fb95 f8f1 	sdiv	r8, r5, r1
 800d502:	fb01 5518 	mls	r5, r1, r8, r5
 800d506:	2d00      	cmp	r5, #0
 800d508:	bfbc      	itt	lt
 800d50a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800d50e:	186d      	addlt	r5, r5, r1
 800d510:	f108 0701 	add.w	r7, r8, #1
 800d514:	9703      	str	r7, [sp, #12]
 800d516:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d51a:	1964      	adds	r4, r4, r5
 800d51c:	444e      	add	r6, r9
 800d51e:	bf54      	ite	pl
 800d520:	9f03      	ldrpl	r7, [sp, #12]
 800d522:	4647      	movmi	r7, r8
 800d524:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800d528:	bf58      	it	pl
 800d52a:	1a64      	subpl	r4, r4, r1
 800d52c:	443b      	add	r3, r7
 800d52e:	44bb      	add	fp, r7
 800d530:	f8ac b004 	strh.w	fp, [ip, #4]
 800d534:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d538:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800d53c:	f8ac b006 	strh.w	fp, [ip, #6]
 800d540:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d544:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d548:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800d54c:	ea5b 0707 	orrs.w	r7, fp, r7
 800d550:	d011      	beq.n	800d576 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800d552:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800d556:	f1bb 0f00 	cmp.w	fp, #0
 800d55a:	db0c      	blt.n	800d576 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800d55c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800d55e:	45bb      	cmp	fp, r7
 800d560:	da09      	bge.n	800d576 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800d562:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800d566:	45bb      	cmp	fp, r7
 800d568:	bf3c      	itt	cc
 800d56a:	f10c 0708 	addcc.w	r7, ip, #8
 800d56e:	6107      	strcc	r7, [r0, #16]
 800d570:	f10b 0701 	add.w	r7, fp, #1
 800d574:	6087      	str	r7, [r0, #8]
 800d576:	6907      	ldr	r7, [r0, #16]
 800d578:	45b6      	cmp	lr, r6
 800d57a:	803e      	strh	r6, [r7, #0]
 800d57c:	807a      	strh	r2, [r7, #2]
 800d57e:	f8a7 a004 	strh.w	sl, [r7, #4]
 800d582:	f8a7 a006 	strh.w	sl, [r7, #6]
 800d586:	d1c6      	bne.n	800d516 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
 800d588:	9a04      	ldr	r2, [sp, #16]
 800d58a:	1ad3      	subs	r3, r2, r3
 800d58c:	6902      	ldr	r2, [r0, #16]
 800d58e:	8891      	ldrh	r1, [r2, #4]
 800d590:	88d6      	ldrh	r6, [r2, #6]
 800d592:	4419      	add	r1, r3
 800d594:	8091      	strh	r1, [r2, #4]
 800d596:	9902      	ldr	r1, [sp, #8]
 800d598:	f101 0c20 	add.w	ip, r1, #32
 800d59c:	9901      	ldr	r1, [sp, #4]
 800d59e:	ebac 0c01 	sub.w	ip, ip, r1
 800d5a2:	fb03 630c 	mla	r3, r3, ip, r6
 800d5a6:	80d3      	strh	r3, [r2, #6]
 800d5a8:	e750      	b.n	800d44c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800d5aa:	9d05      	ldr	r5, [sp, #20]
 800d5ac:	1aa2      	subs	r2, r4, r2
 800d5ae:	eba5 0501 	sub.w	r5, r5, r1
 800d5b2:	9202      	str	r2, [sp, #8]
 800d5b4:	9508      	str	r5, [sp, #32]
 800d5b6:	f140 8128 	bpl.w	800d80a <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
 800d5ba:	9a03      	ldr	r2, [sp, #12]
 800d5bc:	2a00      	cmp	r2, #0
 800d5be:	f6ff af45 	blt.w	800d44c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800d5c2:	9a02      	ldr	r2, [sp, #8]
 800d5c4:	f04f 34ff 	mov.w	r4, #4294967295
 800d5c8:	4252      	negs	r2, r2
 800d5ca:	940b      	str	r4, [sp, #44]	; 0x2c
 800d5cc:	2400      	movs	r4, #0
 800d5ce:	9202      	str	r2, [sp, #8]
 800d5d0:	9a06      	ldr	r2, [sp, #24]
 800d5d2:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800d5d6:	9206      	str	r2, [sp, #24]
 800d5d8:	462a      	mov	r2, r5
 800d5da:	435a      	muls	r2, r3
 800d5dc:	9401      	str	r4, [sp, #4]
 800d5de:	9c02      	ldr	r4, [sp, #8]
 800d5e0:	9d02      	ldr	r5, [sp, #8]
 800d5e2:	fb92 f4f4 	sdiv	r4, r2, r4
 800d5e6:	fb05 2214 	mls	r2, r5, r4, r2
 800d5ea:	2a00      	cmp	r2, #0
 800d5ec:	9207      	str	r2, [sp, #28]
 800d5ee:	bfbc      	itt	lt
 800d5f0:	1952      	addlt	r2, r2, r5
 800d5f2:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800d5f6:	6905      	ldr	r5, [r0, #16]
 800d5f8:	bfb8      	it	lt
 800d5fa:	9207      	strlt	r2, [sp, #28]
 800d5fc:	eb04 0901 	add.w	r9, r4, r1
 800d600:	9a01      	ldr	r2, [sp, #4]
 800d602:	ea4f 1669 	mov.w	r6, r9, asr #5
 800d606:	429a      	cmp	r2, r3
 800d608:	f040 8111 	bne.w	800d82e <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
 800d60c:	f9b5 3000 	ldrsh.w	r3, [r5]
 800d610:	429e      	cmp	r6, r3
 800d612:	d104      	bne.n	800d61e <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
 800d614:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800d618:	9a03      	ldr	r2, [sp, #12]
 800d61a:	429a      	cmp	r2, r3
 800d61c:	d01b      	beq.n	800d656 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800d61e:	88ea      	ldrh	r2, [r5, #6]
 800d620:	88ab      	ldrh	r3, [r5, #4]
 800d622:	4313      	orrs	r3, r2
 800d624:	d010      	beq.n	800d648 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800d626:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d62a:	2a00      	cmp	r2, #0
 800d62c:	db0c      	blt.n	800d648 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800d62e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800d630:	429a      	cmp	r2, r3
 800d632:	da09      	bge.n	800d648 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800d634:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800d638:	429a      	cmp	r2, r3
 800d63a:	f102 0201 	add.w	r2, r2, #1
 800d63e:	bf38      	it	cc
 800d640:	3508      	addcc	r5, #8
 800d642:	6082      	str	r2, [r0, #8]
 800d644:	bf38      	it	cc
 800d646:	6105      	strcc	r5, [r0, #16]
 800d648:	6903      	ldr	r3, [r0, #16]
 800d64a:	9a03      	ldr	r2, [sp, #12]
 800d64c:	801e      	strh	r6, [r3, #0]
 800d64e:	805a      	strh	r2, [r3, #2]
 800d650:	2200      	movs	r2, #0
 800d652:	809a      	strh	r2, [r3, #4]
 800d654:	80da      	strh	r2, [r3, #6]
 800d656:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d658:	9a03      	ldr	r2, [sp, #12]
 800d65a:	6901      	ldr	r1, [r0, #16]
 800d65c:	441a      	add	r2, r3
 800d65e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800d662:	42b3      	cmp	r3, r6
 800d664:	d103      	bne.n	800d66e <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
 800d666:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800d66a:	429a      	cmp	r2, r3
 800d66c:	d01a      	beq.n	800d6a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
 800d66e:	88cc      	ldrh	r4, [r1, #6]
 800d670:	888b      	ldrh	r3, [r1, #4]
 800d672:	4323      	orrs	r3, r4
 800d674:	d010      	beq.n	800d698 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800d676:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800d67a:	2c00      	cmp	r4, #0
 800d67c:	db0c      	blt.n	800d698 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800d67e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800d680:	429c      	cmp	r4, r3
 800d682:	da09      	bge.n	800d698 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800d684:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800d688:	429c      	cmp	r4, r3
 800d68a:	f104 0401 	add.w	r4, r4, #1
 800d68e:	bf38      	it	cc
 800d690:	3108      	addcc	r1, #8
 800d692:	6084      	str	r4, [r0, #8]
 800d694:	bf38      	it	cc
 800d696:	6101      	strcc	r1, [r0, #16]
 800d698:	6903      	ldr	r3, [r0, #16]
 800d69a:	2100      	movs	r1, #0
 800d69c:	801e      	strh	r6, [r3, #0]
 800d69e:	805a      	strh	r2, [r3, #2]
 800d6a0:	8099      	strh	r1, [r3, #4]
 800d6a2:	80d9      	strh	r1, [r3, #6]
 800d6a4:	9b06      	ldr	r3, [sp, #24]
 800d6a6:	4293      	cmp	r3, r2
 800d6a8:	f000 8082 	beq.w	800d7b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
 800d6ac:	9b08      	ldr	r3, [sp, #32]
 800d6ae:	9902      	ldr	r1, [sp, #8]
 800d6b0:	015b      	lsls	r3, r3, #5
 800d6b2:	9c02      	ldr	r4, [sp, #8]
 800d6b4:	fb93 f1f1 	sdiv	r1, r3, r1
 800d6b8:	fb04 3311 	mls	r3, r4, r1, r3
 800d6bc:	9103      	str	r1, [sp, #12]
 800d6be:	2b00      	cmp	r3, #0
 800d6c0:	9308      	str	r3, [sp, #32]
 800d6c2:	da04      	bge.n	800d6ce <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
 800d6c4:	1e4b      	subs	r3, r1, #1
 800d6c6:	9303      	str	r3, [sp, #12]
 800d6c8:	9b08      	ldr	r3, [sp, #32]
 800d6ca:	4423      	add	r3, r4
 800d6cc:	9308      	str	r3, [sp, #32]
 800d6ce:	9b07      	ldr	r3, [sp, #28]
 800d6d0:	464f      	mov	r7, r9
 800d6d2:	9902      	ldr	r1, [sp, #8]
 800d6d4:	2600      	movs	r6, #0
 800d6d6:	1a5b      	subs	r3, r3, r1
 800d6d8:	9307      	str	r3, [sp, #28]
 800d6da:	9b01      	ldr	r3, [sp, #4]
 800d6dc:	f1c3 0320 	rsb	r3, r3, #32
 800d6e0:	930e      	str	r3, [sp, #56]	; 0x38
 800d6e2:	990e      	ldr	r1, [sp, #56]	; 0x38
 800d6e4:	9b01      	ldr	r3, [sp, #4]
 800d6e6:	1a5b      	subs	r3, r3, r1
 800d6e8:	930a      	str	r3, [sp, #40]	; 0x28
 800d6ea:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800d6ee:	185b      	adds	r3, r3, r1
 800d6f0:	bf58      	it	pl
 800d6f2:	9902      	ldrpl	r1, [sp, #8]
 800d6f4:	9307      	str	r3, [sp, #28]
 800d6f6:	bf57      	itett	pl
 800d6f8:	1a5b      	subpl	r3, r3, r1
 800d6fa:	9903      	ldrmi	r1, [sp, #12]
 800d6fc:	9307      	strpl	r3, [sp, #28]
 800d6fe:	9b03      	ldrpl	r3, [sp, #12]
 800d700:	bf58      	it	pl
 800d702:	1c59      	addpl	r1, r3, #1
 800d704:	2a00      	cmp	r2, #0
 800d706:	4489      	add	r9, r1
 800d708:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800d70c:	db2e      	blt.n	800d76c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800d70e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800d710:	4293      	cmp	r3, r2
 800d712:	dd2b      	ble.n	800d76c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800d714:	9c01      	ldr	r4, [sp, #4]
 800d716:	6905      	ldr	r5, [r0, #16]
 800d718:	46a0      	mov	r8, r4
 800d71a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800d71c:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800d720:	45a0      	cmp	r8, r4
 800d722:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800d726:	f040 814c 	bne.w	800d9c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
 800d72a:	f9b5 1000 	ldrsh.w	r1, [r5]
 800d72e:	4551      	cmp	r1, sl
 800d730:	d103      	bne.n	800d73a <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
 800d732:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800d736:	4291      	cmp	r1, r2
 800d738:	d018      	beq.n	800d76c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800d73a:	ea5c 010e 	orrs.w	r1, ip, lr
 800d73e:	d00f      	beq.n	800d760 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800d740:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800d744:	2900      	cmp	r1, #0
 800d746:	db0b      	blt.n	800d760 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800d748:	428b      	cmp	r3, r1
 800d74a:	dd09      	ble.n	800d760 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800d74c:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800d750:	4299      	cmp	r1, r3
 800d752:	f101 0101 	add.w	r1, r1, #1
 800d756:	bf38      	it	cc
 800d758:	3508      	addcc	r5, #8
 800d75a:	6081      	str	r1, [r0, #8]
 800d75c:	bf38      	it	cc
 800d75e:	6105      	strcc	r5, [r0, #16]
 800d760:	6903      	ldr	r3, [r0, #16]
 800d762:	f8a3 a000 	strh.w	sl, [r3]
 800d766:	805a      	strh	r2, [r3, #2]
 800d768:	809e      	strh	r6, [r3, #4]
 800d76a:	80de      	strh	r6, [r3, #6]
 800d76c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d76e:	6901      	ldr	r1, [r0, #16]
 800d770:	441a      	add	r2, r3
 800d772:	88cc      	ldrh	r4, [r1, #6]
 800d774:	888b      	ldrh	r3, [r1, #4]
 800d776:	4323      	orrs	r3, r4
 800d778:	d010      	beq.n	800d79c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800d77a:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800d77e:	2c00      	cmp	r4, #0
 800d780:	db0c      	blt.n	800d79c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800d782:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800d784:	429c      	cmp	r4, r3
 800d786:	da09      	bge.n	800d79c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800d788:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800d78c:	429c      	cmp	r4, r3
 800d78e:	f104 0401 	add.w	r4, r4, #1
 800d792:	bf38      	it	cc
 800d794:	3108      	addcc	r1, #8
 800d796:	6084      	str	r4, [r0, #8]
 800d798:	bf38      	it	cc
 800d79a:	6101      	strcc	r1, [r0, #16]
 800d79c:	6903      	ldr	r3, [r0, #16]
 800d79e:	464f      	mov	r7, r9
 800d7a0:	f8a3 a000 	strh.w	sl, [r3]
 800d7a4:	805a      	strh	r2, [r3, #2]
 800d7a6:	809e      	strh	r6, [r3, #4]
 800d7a8:	80de      	strh	r6, [r3, #6]
 800d7aa:	9b06      	ldr	r3, [sp, #24]
 800d7ac:	4293      	cmp	r3, r2
 800d7ae:	d19c      	bne.n	800d6ea <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
 800d7b0:	9b01      	ldr	r3, [sp, #4]
 800d7b2:	6907      	ldr	r7, [r0, #16]
 800d7b4:	f1c3 0620 	rsb	r6, r3, #32
 800d7b8:	9b05      	ldr	r3, [sp, #20]
 800d7ba:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800d7be:	9b04      	ldr	r3, [sp, #16]
 800d7c0:	429e      	cmp	r6, r3
 800d7c2:	f040 81c7 	bne.w	800db54 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
 800d7c6:	f9b7 3000 	ldrsh.w	r3, [r7]
 800d7ca:	459e      	cmp	lr, r3
 800d7cc:	d104      	bne.n	800d7d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
 800d7ce:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800d7d2:	429a      	cmp	r2, r3
 800d7d4:	f43f ae3a 	beq.w	800d44c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800d7d8:	88f9      	ldrh	r1, [r7, #6]
 800d7da:	88bb      	ldrh	r3, [r7, #4]
 800d7dc:	430b      	orrs	r3, r1
 800d7de:	d010      	beq.n	800d802 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800d7e0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800d7e4:	2b00      	cmp	r3, #0
 800d7e6:	db0c      	blt.n	800d802 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800d7e8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800d7ea:	428b      	cmp	r3, r1
 800d7ec:	da09      	bge.n	800d802 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800d7ee:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800d7f2:	428b      	cmp	r3, r1
 800d7f4:	f103 0301 	add.w	r3, r3, #1
 800d7f8:	bf38      	it	cc
 800d7fa:	3708      	addcc	r7, #8
 800d7fc:	6083      	str	r3, [r0, #8]
 800d7fe:	bf38      	it	cc
 800d800:	6107      	strcc	r7, [r0, #16]
 800d802:	6903      	ldr	r3, [r0, #16]
 800d804:	f8a3 e000 	strh.w	lr, [r3]
 800d808:	e603      	b.n	800d412 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
 800d80a:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800d80c:	9c03      	ldr	r4, [sp, #12]
 800d80e:	42a2      	cmp	r2, r4
 800d810:	f6ff ae1c 	blt.w	800d44c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800d814:	9c06      	ldr	r4, [sp, #24]
 800d816:	42a2      	cmp	r2, r4
 800d818:	9c08      	ldr	r4, [sp, #32]
 800d81a:	bfbc      	itt	lt
 800d81c:	3201      	addlt	r2, #1
 800d81e:	9206      	strlt	r2, [sp, #24]
 800d820:	f1c3 0220 	rsb	r2, r3, #32
 800d824:	4362      	muls	r2, r4
 800d826:	2401      	movs	r4, #1
 800d828:	940b      	str	r4, [sp, #44]	; 0x2c
 800d82a:	2420      	movs	r4, #32
 800d82c:	e6d6      	b.n	800d5dc <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 800d82e:	ea4f 1861 	mov.w	r8, r1, asr #5
 800d832:	f009 021f 	and.w	r2, r9, #31
 800d836:	f001 011f 	and.w	r1, r1, #31
 800d83a:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800d83e:	920c      	str	r2, [sp, #48]	; 0x30
 800d840:	45b0      	cmp	r8, r6
 800d842:	9a01      	ldr	r2, [sp, #4]
 800d844:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800d848:	eba2 0203 	sub.w	r2, r2, r3
 800d84c:	d108      	bne.n	800d860 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
 800d84e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d850:	4496      	add	lr, r2
 800d852:	4419      	add	r1, r3
 800d854:	f8a5 e004 	strh.w	lr, [r5, #4]
 800d858:	fb02 a101 	mla	r1, r2, r1, sl
 800d85c:	80e9      	strh	r1, [r5, #6]
 800d85e:	e6fa      	b.n	800d656 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800d860:	2c00      	cmp	r4, #0
 800d862:	f2c0 80a7 	blt.w	800d9b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
 800d866:	2701      	movs	r7, #1
 800d868:	f1c1 0c20 	rsb	ip, r1, #32
 800d86c:	970a      	str	r7, [sp, #40]	; 0x28
 800d86e:	2720      	movs	r7, #32
 800d870:	fb02 f20c 	mul.w	r2, r2, ip
 800d874:	9709      	str	r7, [sp, #36]	; 0x24
 800d876:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800d878:	fb92 fcf4 	sdiv	ip, r2, r4
 800d87c:	fb04 221c 	mls	r2, r4, ip, r2
 800d880:	4439      	add	r1, r7
 800d882:	2a00      	cmp	r2, #0
 800d884:	bfbc      	itt	lt
 800d886:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800d88a:	1912      	addlt	r2, r2, r4
 800d88c:	fb0c a101 	mla	r1, ip, r1, sl
 800d890:	44e6      	add	lr, ip
 800d892:	80e9      	strh	r1, [r5, #6]
 800d894:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d896:	f8a5 e004 	strh.w	lr, [r5, #4]
 800d89a:	eb08 0501 	add.w	r5, r8, r1
 800d89e:	6901      	ldr	r1, [r0, #16]
 800d8a0:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800d8a4:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800d8a8:	ea58 070e 	orrs.w	r7, r8, lr
 800d8ac:	d010      	beq.n	800d8d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800d8ae:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800d8b2:	f1be 0f00 	cmp.w	lr, #0
 800d8b6:	db0b      	blt.n	800d8d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800d8b8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800d8ba:	45be      	cmp	lr, r7
 800d8bc:	da08      	bge.n	800d8d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800d8be:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800d8c2:	45be      	cmp	lr, r7
 800d8c4:	bf3c      	itt	cc
 800d8c6:	3108      	addcc	r1, #8
 800d8c8:	6101      	strcc	r1, [r0, #16]
 800d8ca:	f10e 0101 	add.w	r1, lr, #1
 800d8ce:	6081      	str	r1, [r0, #8]
 800d8d0:	6901      	ldr	r1, [r0, #16]
 800d8d2:	f04f 0e00 	mov.w	lr, #0
 800d8d6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800d8da:	42ae      	cmp	r6, r5
 800d8dc:	800d      	strh	r5, [r1, #0]
 800d8de:	4463      	add	r3, ip
 800d8e0:	f8a1 8002 	strh.w	r8, [r1, #2]
 800d8e4:	f8a1 e004 	strh.w	lr, [r1, #4]
 800d8e8:	f8a1 e006 	strh.w	lr, [r1, #6]
 800d8ec:	d053      	beq.n	800d996 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
 800d8ee:	9901      	ldr	r1, [sp, #4]
 800d8f0:	1b12      	subs	r2, r2, r4
 800d8f2:	1ac9      	subs	r1, r1, r3
 800d8f4:	4461      	add	r1, ip
 800d8f6:	0149      	lsls	r1, r1, #5
 800d8f8:	fb91 fef4 	sdiv	lr, r1, r4
 800d8fc:	fb04 111e 	mls	r1, r4, lr, r1
 800d900:	2900      	cmp	r1, #0
 800d902:	bfbc      	itt	lt
 800d904:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800d908:	1909      	addlt	r1, r1, r4
 800d90a:	f10e 0701 	add.w	r7, lr, #1
 800d90e:	970d      	str	r7, [sp, #52]	; 0x34
 800d910:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800d914:	1852      	adds	r2, r2, r1
 800d916:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800d918:	bf54      	ite	pl
 800d91a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800d91e:	46f4      	movmi	ip, lr
 800d920:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800d924:	bf58      	it	pl
 800d926:	1b12      	subpl	r2, r2, r4
 800d928:	4463      	add	r3, ip
 800d92a:	443d      	add	r5, r7
 800d92c:	44e3      	add	fp, ip
 800d92e:	f8aa b004 	strh.w	fp, [sl, #4]
 800d932:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800d936:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800d93a:	f8aa b006 	strh.w	fp, [sl, #6]
 800d93e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d942:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d946:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800d94a:	ea5b 070a 	orrs.w	r7, fp, sl
 800d94e:	d014      	beq.n	800d97a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800d950:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800d954:	f1ba 0f00 	cmp.w	sl, #0
 800d958:	db0f      	blt.n	800d97a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800d95a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800d95c:	45ba      	cmp	sl, r7
 800d95e:	da0c      	bge.n	800d97a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800d960:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800d964:	45ba      	cmp	sl, r7
 800d966:	f10a 0a01 	add.w	sl, sl, #1
 800d96a:	bf38      	it	cc
 800d96c:	f10c 0c08 	addcc.w	ip, ip, #8
 800d970:	f8c0 a008 	str.w	sl, [r0, #8]
 800d974:	bf38      	it	cc
 800d976:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800d97a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d97e:	f04f 0700 	mov.w	r7, #0
 800d982:	42ae      	cmp	r6, r5
 800d984:	f8ac 5000 	strh.w	r5, [ip]
 800d988:	f8ac 8002 	strh.w	r8, [ip, #2]
 800d98c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800d990:	f8ac 7006 	strh.w	r7, [ip, #6]
 800d994:	d1bc      	bne.n	800d910 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
 800d996:	6904      	ldr	r4, [r0, #16]
 800d998:	9a01      	ldr	r2, [sp, #4]
 800d99a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d99c:	1ad3      	subs	r3, r2, r3
 800d99e:	88a2      	ldrh	r2, [r4, #4]
 800d9a0:	3120      	adds	r1, #32
 800d9a2:	441a      	add	r2, r3
 800d9a4:	80a2      	strh	r2, [r4, #4]
 800d9a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d9a8:	1a89      	subs	r1, r1, r2
 800d9aa:	88e2      	ldrh	r2, [r4, #6]
 800d9ac:	fb03 2301 	mla	r3, r3, r1, r2
 800d9b0:	80e3      	strh	r3, [r4, #6]
 800d9b2:	e650      	b.n	800d656 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800d9b4:	f04f 37ff 	mov.w	r7, #4294967295
 800d9b8:	434a      	muls	r2, r1
 800d9ba:	4264      	negs	r4, r4
 800d9bc:	970a      	str	r7, [sp, #40]	; 0x28
 800d9be:	2700      	movs	r7, #0
 800d9c0:	e758      	b.n	800d874 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
 800d9c2:	ea4f 1867 	mov.w	r8, r7, asr #5
 800d9c6:	f009 031f 	and.w	r3, r9, #31
 800d9ca:	f007 071f 	and.w	r7, r7, #31
 800d9ce:	fa1f fc8c 	uxth.w	ip, ip
 800d9d2:	45d0      	cmp	r8, sl
 800d9d4:	930f      	str	r3, [sp, #60]	; 0x3c
 800d9d6:	fa1f fe8e 	uxth.w	lr, lr
 800d9da:	d10a      	bne.n	800d9f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
 800d9dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d9de:	449c      	add	ip, r3
 800d9e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d9e2:	441f      	add	r7, r3
 800d9e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d9e6:	f8a5 c004 	strh.w	ip, [r5, #4]
 800d9ea:	fb03 e707 	mla	r7, r3, r7, lr
 800d9ee:	80ef      	strh	r7, [r5, #6]
 800d9f0:	e6bc      	b.n	800d76c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800d9f2:	2900      	cmp	r1, #0
 800d9f4:	f2c0 80a6 	blt.w	800db44 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
 800d9f8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d9fa:	f1c7 0320 	rsb	r3, r7, #32
 800d9fe:	4363      	muls	r3, r4
 800da00:	2401      	movs	r4, #1
 800da02:	940d      	str	r4, [sp, #52]	; 0x34
 800da04:	2420      	movs	r4, #32
 800da06:	940c      	str	r4, [sp, #48]	; 0x30
 800da08:	fb93 f4f1 	sdiv	r4, r3, r1
 800da0c:	fb01 3b14 	mls	fp, r1, r4, r3
 800da10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800da12:	f1bb 0f00 	cmp.w	fp, #0
 800da16:	441f      	add	r7, r3
 800da18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800da1a:	bfbc      	itt	lt
 800da1c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800da20:	448b      	addlt	fp, r1
 800da22:	fb04 e707 	mla	r7, r4, r7, lr
 800da26:	44a4      	add	ip, r4
 800da28:	80ef      	strh	r7, [r5, #6]
 800da2a:	f8a5 c004 	strh.w	ip, [r5, #4]
 800da2e:	eb08 0503 	add.w	r5, r8, r3
 800da32:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800da36:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800da3a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800da3e:	ea5e 0307 	orrs.w	r3, lr, r7
 800da42:	d011      	beq.n	800da68 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800da44:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800da48:	f1be 0f00 	cmp.w	lr, #0
 800da4c:	db0c      	blt.n	800da68 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800da4e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800da50:	45be      	cmp	lr, r7
 800da52:	da09      	bge.n	800da68 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800da54:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800da58:	45be      	cmp	lr, r7
 800da5a:	bf3c      	itt	cc
 800da5c:	f10c 0708 	addcc.w	r7, ip, #8
 800da60:	6107      	strcc	r7, [r0, #16]
 800da62:	f10e 0701 	add.w	r7, lr, #1
 800da66:	6087      	str	r7, [r0, #8]
 800da68:	6907      	ldr	r7, [r0, #16]
 800da6a:	b213      	sxth	r3, r2
 800da6c:	4555      	cmp	r5, sl
 800da6e:	9310      	str	r3, [sp, #64]	; 0x40
 800da70:	807b      	strh	r3, [r7, #2]
 800da72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800da74:	803d      	strh	r5, [r7, #0]
 800da76:	80be      	strh	r6, [r7, #4]
 800da78:	eb04 0c03 	add.w	ip, r4, r3
 800da7c:	80fe      	strh	r6, [r7, #6]
 800da7e:	d050      	beq.n	800db22 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
 800da80:	9b01      	ldr	r3, [sp, #4]
 800da82:	eba3 070c 	sub.w	r7, r3, ip
 800da86:	ebab 0301 	sub.w	r3, fp, r1
 800da8a:	443c      	add	r4, r7
 800da8c:	9309      	str	r3, [sp, #36]	; 0x24
 800da8e:	0164      	lsls	r4, r4, #5
 800da90:	fb94 f8f1 	sdiv	r8, r4, r1
 800da94:	fb01 4418 	mls	r4, r1, r8, r4
 800da98:	2c00      	cmp	r4, #0
 800da9a:	bfbc      	itt	lt
 800da9c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800daa0:	1864      	addlt	r4, r4, r1
 800daa2:	f108 0701 	add.w	r7, r8, #1
 800daa6:	9711      	str	r7, [sp, #68]	; 0x44
 800daa8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800daaa:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800daae:	191b      	adds	r3, r3, r4
 800dab0:	f8be b004 	ldrh.w	fp, [lr, #4]
 800dab4:	bf54      	ite	pl
 800dab6:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800dab8:	4647      	movmi	r7, r8
 800daba:	9309      	str	r3, [sp, #36]	; 0x24
 800dabc:	bf58      	it	pl
 800dabe:	1a5b      	subpl	r3, r3, r1
 800dac0:	44bb      	add	fp, r7
 800dac2:	44bc      	add	ip, r7
 800dac4:	bf58      	it	pl
 800dac6:	9309      	strpl	r3, [sp, #36]	; 0x24
 800dac8:	f8ae b004 	strh.w	fp, [lr, #4]
 800dacc:	f8be b006 	ldrh.w	fp, [lr, #6]
 800dad0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800dad4:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800dad6:	f8ae b006 	strh.w	fp, [lr, #6]
 800dada:	443d      	add	r5, r7
 800dadc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800dae0:	f8be b006 	ldrh.w	fp, [lr, #6]
 800dae4:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800dae8:	ea5b 0307 	orrs.w	r3, fp, r7
 800daec:	d011      	beq.n	800db12 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800daee:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800daf2:	f1bb 0f00 	cmp.w	fp, #0
 800daf6:	db0c      	blt.n	800db12 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800daf8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800dafa:	45bb      	cmp	fp, r7
 800dafc:	da09      	bge.n	800db12 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800dafe:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800db02:	45bb      	cmp	fp, r7
 800db04:	bf3c      	itt	cc
 800db06:	f10e 0708 	addcc.w	r7, lr, #8
 800db0a:	6107      	strcc	r7, [r0, #16]
 800db0c:	f10b 0701 	add.w	r7, fp, #1
 800db10:	6087      	str	r7, [r0, #8]
 800db12:	6907      	ldr	r7, [r0, #16]
 800db14:	4555      	cmp	r5, sl
 800db16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800db18:	803d      	strh	r5, [r7, #0]
 800db1a:	807b      	strh	r3, [r7, #2]
 800db1c:	80be      	strh	r6, [r7, #4]
 800db1e:	80fe      	strh	r6, [r7, #6]
 800db20:	d1c2      	bne.n	800daa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
 800db22:	9b01      	ldr	r3, [sp, #4]
 800db24:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800db26:	eba3 0c0c 	sub.w	ip, r3, ip
 800db2a:	6903      	ldr	r3, [r0, #16]
 800db2c:	3720      	adds	r7, #32
 800db2e:	8899      	ldrh	r1, [r3, #4]
 800db30:	4461      	add	r1, ip
 800db32:	8099      	strh	r1, [r3, #4]
 800db34:	990c      	ldr	r1, [sp, #48]	; 0x30
 800db36:	1a7f      	subs	r7, r7, r1
 800db38:	88d9      	ldrh	r1, [r3, #6]
 800db3a:	fb0c 1c07 	mla	ip, ip, r7, r1
 800db3e:	f8a3 c006 	strh.w	ip, [r3, #6]
 800db42:	e613      	b.n	800d76c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800db44:	f04f 34ff 	mov.w	r4, #4294967295
 800db48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800db4a:	4249      	negs	r1, r1
 800db4c:	940d      	str	r4, [sp, #52]	; 0x34
 800db4e:	2400      	movs	r4, #0
 800db50:	437b      	muls	r3, r7
 800db52:	e758      	b.n	800da06 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
 800db54:	9905      	ldr	r1, [sp, #20]
 800db56:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800db5a:	f009 0c1f 	and.w	ip, r9, #31
 800db5e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800db62:	f001 011f 	and.w	r1, r1, #31
 800db66:	45f3      	cmp	fp, lr
 800db68:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800db6c:	9102      	str	r1, [sp, #8]
 800db6e:	9904      	ldr	r1, [sp, #16]
 800db70:	eba1 0406 	sub.w	r4, r1, r6
 800db74:	d108      	bne.n	800db88 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
 800db76:	9b02      	ldr	r3, [sp, #8]
 800db78:	44a0      	add	r8, r4
 800db7a:	449c      	add	ip, r3
 800db7c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800db80:	fb04 a40c 	mla	r4, r4, ip, sl
 800db84:	80fc      	strh	r4, [r7, #6]
 800db86:	e461      	b.n	800d44c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800db88:	9905      	ldr	r1, [sp, #20]
 800db8a:	ebb1 0109 	subs.w	r1, r1, r9
 800db8e:	bf51      	iteee	pl
 800db90:	f1cc 0520 	rsbpl	r5, ip, #32
 800db94:	fb04 f40c 	mulmi.w	r4, r4, ip
 800db98:	4249      	negmi	r1, r1
 800db9a:	2500      	movmi	r5, #0
 800db9c:	bf5d      	ittte	pl
 800db9e:	436c      	mulpl	r4, r5
 800dba0:	2520      	movpl	r5, #32
 800dba2:	f04f 0901 	movpl.w	r9, #1
 800dba6:	f04f 39ff 	movmi.w	r9, #4294967295
 800dbaa:	9501      	str	r5, [sp, #4]
 800dbac:	9b01      	ldr	r3, [sp, #4]
 800dbae:	fb94 f5f1 	sdiv	r5, r4, r1
 800dbb2:	fb01 4415 	mls	r4, r1, r5, r4
 800dbb6:	449c      	add	ip, r3
 800dbb8:	eb0b 0309 	add.w	r3, fp, r9
 800dbbc:	2c00      	cmp	r4, #0
 800dbbe:	bfbc      	itt	lt
 800dbc0:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800dbc4:	1864      	addlt	r4, r4, r1
 800dbc6:	44a8      	add	r8, r5
 800dbc8:	fb05 ac0c 	mla	ip, r5, ip, sl
 800dbcc:	f8a7 8004 	strh.w	r8, [r7, #4]
 800dbd0:	f8a7 c006 	strh.w	ip, [r7, #6]
 800dbd4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dbd8:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800dbdc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800dbe0:	ea58 0707 	orrs.w	r7, r8, r7
 800dbe4:	d011      	beq.n	800dc0a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800dbe6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800dbea:	f1b8 0f00 	cmp.w	r8, #0
 800dbee:	db0c      	blt.n	800dc0a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800dbf0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800dbf2:	45b8      	cmp	r8, r7
 800dbf4:	da09      	bge.n	800dc0a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800dbf6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800dbfa:	45b8      	cmp	r8, r7
 800dbfc:	bf3c      	itt	cc
 800dbfe:	f10c 0708 	addcc.w	r7, ip, #8
 800dc02:	6107      	strcc	r7, [r0, #16]
 800dc04:	f108 0701 	add.w	r7, r8, #1
 800dc08:	6087      	str	r7, [r0, #8]
 800dc0a:	6907      	ldr	r7, [r0, #16]
 800dc0c:	f04f 0c00 	mov.w	ip, #0
 800dc10:	b212      	sxth	r2, r2
 800dc12:	459e      	cmp	lr, r3
 800dc14:	803b      	strh	r3, [r7, #0]
 800dc16:	442e      	add	r6, r5
 800dc18:	807a      	strh	r2, [r7, #2]
 800dc1a:	f8a7 c004 	strh.w	ip, [r7, #4]
 800dc1e:	f8a7 c006 	strh.w	ip, [r7, #6]
 800dc22:	d04b      	beq.n	800dcbc <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
 800dc24:	9f04      	ldr	r7, [sp, #16]
 800dc26:	1a64      	subs	r4, r4, r1
 800dc28:	f04f 0a00 	mov.w	sl, #0
 800dc2c:	1bbf      	subs	r7, r7, r6
 800dc2e:	443d      	add	r5, r7
 800dc30:	016d      	lsls	r5, r5, #5
 800dc32:	fb95 f8f1 	sdiv	r8, r5, r1
 800dc36:	fb01 5518 	mls	r5, r1, r8, r5
 800dc3a:	4565      	cmp	r5, ip
 800dc3c:	bfbc      	itt	lt
 800dc3e:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800dc42:	186d      	addlt	r5, r5, r1
 800dc44:	f108 0701 	add.w	r7, r8, #1
 800dc48:	9703      	str	r7, [sp, #12]
 800dc4a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dc4e:	1964      	adds	r4, r4, r5
 800dc50:	444b      	add	r3, r9
 800dc52:	bf54      	ite	pl
 800dc54:	9f03      	ldrpl	r7, [sp, #12]
 800dc56:	4647      	movmi	r7, r8
 800dc58:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800dc5c:	bf58      	it	pl
 800dc5e:	1a64      	subpl	r4, r4, r1
 800dc60:	443e      	add	r6, r7
 800dc62:	44bb      	add	fp, r7
 800dc64:	f8ac b004 	strh.w	fp, [ip, #4]
 800dc68:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800dc6c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800dc70:	f8ac b006 	strh.w	fp, [ip, #6]
 800dc74:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dc78:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800dc7c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800dc80:	ea5b 0707 	orrs.w	r7, fp, r7
 800dc84:	d011      	beq.n	800dcaa <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800dc86:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800dc8a:	f1bb 0f00 	cmp.w	fp, #0
 800dc8e:	db0c      	blt.n	800dcaa <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800dc90:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800dc92:	45bb      	cmp	fp, r7
 800dc94:	da09      	bge.n	800dcaa <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800dc96:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800dc9a:	45bb      	cmp	fp, r7
 800dc9c:	bf3c      	itt	cc
 800dc9e:	f10c 0708 	addcc.w	r7, ip, #8
 800dca2:	6107      	strcc	r7, [r0, #16]
 800dca4:	f10b 0701 	add.w	r7, fp, #1
 800dca8:	6087      	str	r7, [r0, #8]
 800dcaa:	6907      	ldr	r7, [r0, #16]
 800dcac:	459e      	cmp	lr, r3
 800dcae:	803b      	strh	r3, [r7, #0]
 800dcb0:	807a      	strh	r2, [r7, #2]
 800dcb2:	f8a7 a004 	strh.w	sl, [r7, #4]
 800dcb6:	f8a7 a006 	strh.w	sl, [r7, #6]
 800dcba:	d1c6      	bne.n	800dc4a <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
 800dcbc:	9b04      	ldr	r3, [sp, #16]
 800dcbe:	1b9e      	subs	r6, r3, r6
 800dcc0:	6903      	ldr	r3, [r0, #16]
 800dcc2:	889a      	ldrh	r2, [r3, #4]
 800dcc4:	4432      	add	r2, r6
 800dcc6:	809a      	strh	r2, [r3, #4]
 800dcc8:	9a02      	ldr	r2, [sp, #8]
 800dcca:	f102 0c20 	add.w	ip, r2, #32
 800dcce:	9a01      	ldr	r2, [sp, #4]
 800dcd0:	ebac 0c02 	sub.w	ip, ip, r2
 800dcd4:	88da      	ldrh	r2, [r3, #6]
 800dcd6:	fb06 260c 	mla	r6, r6, ip, r2
 800dcda:	80de      	strh	r6, [r3, #6]
 800dcdc:	f7ff bbb6 	b.w	800d44c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

0800dce0 <_ZN8touchgfx7Outline6lineToEii>:
 800dce0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800dce2:	079b      	lsls	r3, r3, #30
 800dce4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dce6:	460e      	mov	r6, r1
 800dce8:	4615      	mov	r5, r2
 800dcea:	d511      	bpl.n	800dd10 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800dcec:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800dcf0:	ea86 0701 	eor.w	r7, r6, r1
 800dcf4:	ea85 0302 	eor.w	r3, r5, r2
 800dcf8:	433b      	orrs	r3, r7
 800dcfa:	d009      	beq.n	800dd10 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800dcfc:	4633      	mov	r3, r6
 800dcfe:	9500      	str	r5, [sp, #0]
 800dd00:	f7ff fb4c 	bl	800d39c <_ZN8touchgfx7Outline10renderLineEiiii>
 800dd04:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800dd06:	f043 0301 	orr.w	r3, r3, #1
 800dd0a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800dd0e:	6243      	str	r3, [r0, #36]	; 0x24
 800dd10:	b003      	add	sp, #12
 800dd12:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800dd14 <_ZN8touchgfx7Outline6moveToEii>:
 800dd14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd16:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800dd18:	4615      	mov	r5, r2
 800dd1a:	4604      	mov	r4, r0
 800dd1c:	460e      	mov	r6, r1
 800dd1e:	079a      	lsls	r2, r3, #30
 800dd20:	d401      	bmi.n	800dd26 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800dd22:	f7ff fb07 	bl	800d334 <_ZN8touchgfx7Outline5resetEv>
 800dd26:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dd28:	07db      	lsls	r3, r3, #31
 800dd2a:	d504      	bpl.n	800dd36 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800dd2c:	4620      	mov	r0, r4
 800dd2e:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800dd32:	f7ff ffd5 	bl	800dce0 <_ZN8touchgfx7Outline6lineToEii>
 800dd36:	6923      	ldr	r3, [r4, #16]
 800dd38:	1170      	asrs	r0, r6, #5
 800dd3a:	1169      	asrs	r1, r5, #5
 800dd3c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dd40:	4290      	cmp	r0, r2
 800dd42:	d103      	bne.n	800dd4c <_ZN8touchgfx7Outline6moveToEii+0x38>
 800dd44:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800dd48:	4291      	cmp	r1, r2
 800dd4a:	d01a      	beq.n	800dd82 <_ZN8touchgfx7Outline6moveToEii+0x6e>
 800dd4c:	88df      	ldrh	r7, [r3, #6]
 800dd4e:	889a      	ldrh	r2, [r3, #4]
 800dd50:	433a      	orrs	r2, r7
 800dd52:	d010      	beq.n	800dd76 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800dd54:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800dd58:	2a00      	cmp	r2, #0
 800dd5a:	db0c      	blt.n	800dd76 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800dd5c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800dd5e:	42ba      	cmp	r2, r7
 800dd60:	da09      	bge.n	800dd76 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800dd62:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800dd66:	42ba      	cmp	r2, r7
 800dd68:	f102 0201 	add.w	r2, r2, #1
 800dd6c:	bf38      	it	cc
 800dd6e:	3308      	addcc	r3, #8
 800dd70:	60a2      	str	r2, [r4, #8]
 800dd72:	bf38      	it	cc
 800dd74:	6123      	strcc	r3, [r4, #16]
 800dd76:	6923      	ldr	r3, [r4, #16]
 800dd78:	2200      	movs	r2, #0
 800dd7a:	8018      	strh	r0, [r3, #0]
 800dd7c:	8059      	strh	r1, [r3, #2]
 800dd7e:	809a      	strh	r2, [r3, #4]
 800dd80:	80da      	strh	r2, [r3, #6]
 800dd82:	6166      	str	r6, [r4, #20]
 800dd84:	6225      	str	r5, [r4, #32]
 800dd86:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800dd8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800dd8c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800dd8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dd90:	b0d0      	sub	sp, #320	; 0x140
 800dd92:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800dd96:	466c      	mov	r4, sp
 800dd98:	4627      	mov	r7, r4
 800dd9a:	1a0d      	subs	r5, r1, r0
 800dd9c:	f100 0308 	add.w	r3, r0, #8
 800dda0:	2d48      	cmp	r5, #72	; 0x48
 800dda2:	f340 80d5 	ble.w	800df50 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800dda6:	112d      	asrs	r5, r5, #4
 800dda8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800ddac:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ddb0:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800ddb4:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800ddb8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800ddbc:	6816      	ldr	r6, [r2, #0]
 800ddbe:	6006      	str	r6, [r0, #0]
 800ddc0:	6856      	ldr	r6, [r2, #4]
 800ddc2:	6046      	str	r6, [r0, #4]
 800ddc4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800ddc8:	f8a2 8002 	strh.w	r8, [r2, #2]
 800ddcc:	f8a2 e004 	strh.w	lr, [r2, #4]
 800ddd0:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ddd4:	f1a1 0208 	sub.w	r2, r1, #8
 800ddd8:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800dddc:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800dde0:	4565      	cmp	r5, ip
 800dde2:	db06      	blt.n	800ddf2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800dde4:	d119      	bne.n	800de1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800dde6:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800ddea:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800ddee:	42ae      	cmp	r6, r5
 800ddf0:	dd13      	ble.n	800de1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800ddf2:	460e      	mov	r6, r1
 800ddf4:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800ddf8:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800ddfc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800de00:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800de04:	601d      	str	r5, [r3, #0]
 800de06:	6875      	ldr	r5, [r6, #4]
 800de08:	605d      	str	r5, [r3, #4]
 800de0a:	f821 9c08 	strh.w	r9, [r1, #-8]
 800de0e:	f821 cc06 	strh.w	ip, [r1, #-6]
 800de12:	f821 8c04 	strh.w	r8, [r1, #-4]
 800de16:	f821 ec02 	strh.w	lr, [r1, #-2]
 800de1a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800de1e:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800de22:	42ae      	cmp	r6, r5
 800de24:	db06      	blt.n	800de34 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800de26:	d116      	bne.n	800de56 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800de28:	f9b0 c000 	ldrsh.w	ip, [r0]
 800de2c:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800de30:	45ac      	cmp	ip, r5
 800de32:	da10      	bge.n	800de56 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800de34:	681d      	ldr	r5, [r3, #0]
 800de36:	f9b0 8000 	ldrsh.w	r8, [r0]
 800de3a:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800de3e:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800de42:	6005      	str	r5, [r0, #0]
 800de44:	685d      	ldr	r5, [r3, #4]
 800de46:	f8a0 8008 	strh.w	r8, [r0, #8]
 800de4a:	6045      	str	r5, [r0, #4]
 800de4c:	8146      	strh	r6, [r0, #10]
 800de4e:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800de52:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800de56:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800de5a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800de5e:	4565      	cmp	r5, ip
 800de60:	db06      	blt.n	800de70 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800de62:	d119      	bne.n	800de98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800de64:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800de68:	f9b0 5000 	ldrsh.w	r5, [r0]
 800de6c:	42ae      	cmp	r6, r5
 800de6e:	da13      	bge.n	800de98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800de70:	460e      	mov	r6, r1
 800de72:	f9b0 9000 	ldrsh.w	r9, [r0]
 800de76:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800de7a:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800de7e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800de82:	6005      	str	r5, [r0, #0]
 800de84:	6875      	ldr	r5, [r6, #4]
 800de86:	6045      	str	r5, [r0, #4]
 800de88:	f821 9c08 	strh.w	r9, [r1, #-8]
 800de8c:	f821 cc06 	strh.w	ip, [r1, #-6]
 800de90:	f821 8c04 	strh.w	r8, [r1, #-4]
 800de94:	f821 ec02 	strh.w	lr, [r1, #-2]
 800de98:	3308      	adds	r3, #8
 800de9a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800de9e:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800dea2:	45e6      	cmp	lr, ip
 800dea4:	dbf8      	blt.n	800de98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800dea6:	d105      	bne.n	800deb4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800dea8:	f9b3 6000 	ldrsh.w	r6, [r3]
 800deac:	f9b0 5000 	ldrsh.w	r5, [r0]
 800deb0:	42ae      	cmp	r6, r5
 800deb2:	dbf1      	blt.n	800de98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800deb4:	4615      	mov	r5, r2
 800deb6:	3a08      	subs	r2, #8
 800deb8:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800debc:	45b4      	cmp	ip, r6
 800debe:	dbf9      	blt.n	800deb4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800dec0:	d105      	bne.n	800dece <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800dec2:	f9b0 8000 	ldrsh.w	r8, [r0]
 800dec6:	f9b2 6000 	ldrsh.w	r6, [r2]
 800deca:	45b0      	cmp	r8, r6
 800decc:	dbf2      	blt.n	800deb4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800dece:	4293      	cmp	r3, r2
 800ded0:	f1a5 0608 	sub.w	r6, r5, #8
 800ded4:	d816      	bhi.n	800df04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800ded6:	f8d6 c000 	ldr.w	ip, [r6]
 800deda:	f9b3 a000 	ldrsh.w	sl, [r3]
 800dede:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800dee2:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800dee6:	f8c3 c000 	str.w	ip, [r3]
 800deea:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800deee:	f8c3 c004 	str.w	ip, [r3, #4]
 800def2:	f825 ac08 	strh.w	sl, [r5, #-8]
 800def6:	f825 ec06 	strh.w	lr, [r5, #-6]
 800defa:	f825 9c04 	strh.w	r9, [r5, #-4]
 800defe:	f825 8c02 	strh.w	r8, [r5, #-2]
 800df02:	e7c9      	b.n	800de98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800df04:	f8d6 e000 	ldr.w	lr, [r6]
 800df08:	f9b0 a000 	ldrsh.w	sl, [r0]
 800df0c:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800df10:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800df14:	f8c0 e000 	str.w	lr, [r0]
 800df18:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800df1c:	1a16      	subs	r6, r2, r0
 800df1e:	f8c0 e004 	str.w	lr, [r0, #4]
 800df22:	f825 ac08 	strh.w	sl, [r5, #-8]
 800df26:	f825 cc06 	strh.w	ip, [r5, #-6]
 800df2a:	f825 9c04 	strh.w	r9, [r5, #-4]
 800df2e:	f825 8c02 	strh.w	r8, [r5, #-2]
 800df32:	1acd      	subs	r5, r1, r3
 800df34:	10ed      	asrs	r5, r5, #3
 800df36:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800df3a:	bfb5      	itete	lt
 800df3c:	e9c4 0200 	strdlt	r0, r2, [r4]
 800df40:	e9c4 3100 	strdge	r3, r1, [r4]
 800df44:	460a      	movlt	r2, r1
 800df46:	4603      	movge	r3, r0
 800df48:	3408      	adds	r4, #8
 800df4a:	4618      	mov	r0, r3
 800df4c:	4611      	mov	r1, r2
 800df4e:	e724      	b.n	800dd9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800df50:	4299      	cmp	r1, r3
 800df52:	d927      	bls.n	800dfa4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
 800df54:	f1a3 0210 	sub.w	r2, r3, #16
 800df58:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800df5c:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800df60:	45ac      	cmp	ip, r5
 800df62:	db06      	blt.n	800df72 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800df64:	d11c      	bne.n	800dfa0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800df66:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800df6a:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800df6e:	42ae      	cmp	r6, r5
 800df70:	da16      	bge.n	800dfa0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800df72:	4615      	mov	r5, r2
 800df74:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800df78:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800df7c:	3a08      	subs	r2, #8
 800df7e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800df82:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
 800df86:	6196      	str	r6, [r2, #24]
 800df88:	42a8      	cmp	r0, r5
 800df8a:	686e      	ldr	r6, [r5, #4]
 800df8c:	f8a2 9010 	strh.w	r9, [r2, #16]
 800df90:	61d6      	str	r6, [r2, #28]
 800df92:	f8a2 c012 	strh.w	ip, [r2, #18]
 800df96:	f8a2 8014 	strh.w	r8, [r2, #20]
 800df9a:	f8a2 e016 	strh.w	lr, [r2, #22]
 800df9e:	d1db      	bne.n	800df58 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800dfa0:	3308      	adds	r3, #8
 800dfa2:	e7d5      	b.n	800df50 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800dfa4:	42bc      	cmp	r4, r7
 800dfa6:	d903      	bls.n	800dfb0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
 800dfa8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800dfac:	3c08      	subs	r4, #8
 800dfae:	e6f4      	b.n	800dd9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800dfb0:	b050      	add	sp, #320	; 0x140
 800dfb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800dfb6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800dfb6:	b510      	push	{r4, lr}
 800dfb8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800dfba:	4604      	mov	r4, r0
 800dfbc:	07da      	lsls	r2, r3, #31
 800dfbe:	d507      	bpl.n	800dfd0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800dfc0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800dfc4:	f7ff fe8c 	bl	800dce0 <_ZN8touchgfx7Outline6lineToEii>
 800dfc8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800dfca:	f023 0301 	bic.w	r3, r3, #1
 800dfce:	6243      	str	r3, [r0, #36]	; 0x24
 800dfd0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dfd2:	079b      	lsls	r3, r3, #30
 800dfd4:	d521      	bpl.n	800e01a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800dfd6:	6923      	ldr	r3, [r4, #16]
 800dfd8:	88d9      	ldrh	r1, [r3, #6]
 800dfda:	889a      	ldrh	r2, [r3, #4]
 800dfdc:	430a      	orrs	r2, r1
 800dfde:	d010      	beq.n	800e002 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800dfe0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800dfe4:	2a00      	cmp	r2, #0
 800dfe6:	db0c      	blt.n	800e002 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800dfe8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800dfea:	428a      	cmp	r2, r1
 800dfec:	da09      	bge.n	800e002 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800dfee:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800dff2:	4291      	cmp	r1, r2
 800dff4:	f102 0201 	add.w	r2, r2, #1
 800dff8:	bf88      	it	hi
 800dffa:	3308      	addhi	r3, #8
 800dffc:	60a2      	str	r2, [r4, #8]
 800dffe:	bf88      	it	hi
 800e000:	6123      	strhi	r3, [r4, #16]
 800e002:	68a1      	ldr	r1, [r4, #8]
 800e004:	b129      	cbz	r1, 800e012 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e006:	6863      	ldr	r3, [r4, #4]
 800e008:	4299      	cmp	r1, r3
 800e00a:	d802      	bhi.n	800e012 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e00c:	68e0      	ldr	r0, [r4, #12]
 800e00e:	f7ff febd 	bl	800dd8c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800e012:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e014:	f023 0302 	bic.w	r3, r3, #2
 800e018:	6263      	str	r3, [r4, #36]	; 0x24
 800e01a:	68e0      	ldr	r0, [r4, #12]
 800e01c:	bd10      	pop	{r4, pc}
	...

0800e020 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800e020:	4b02      	ldr	r3, [pc, #8]	; (800e02c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800e022:	6018      	str	r0, [r3, #0]
 800e024:	4b02      	ldr	r3, [pc, #8]	; (800e030 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800e026:	6019      	str	r1, [r3, #0]
 800e028:	4770      	bx	lr
 800e02a:	bf00      	nop
 800e02c:	24008954 	.word	0x24008954
 800e030:	24008958 	.word	0x24008958

0800e034 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 800e034:	2300      	movs	r3, #0
 800e036:	4a02      	ldr	r2, [pc, #8]	; (800e040 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 800e038:	6013      	str	r3, [r2, #0]
 800e03a:	4a02      	ldr	r2, [pc, #8]	; (800e044 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 800e03c:	6013      	str	r3, [r2, #0]
 800e03e:	4770      	bx	lr
 800e040:	24008954 	.word	0x24008954
 800e044:	24008958 	.word	0x24008958

0800e048 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e048:	4b01      	ldr	r3, [pc, #4]	; (800e050 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e04a:	6818      	ldr	r0, [r3, #0]
 800e04c:	4770      	bx	lr
 800e04e:	bf00      	nop
 800e050:	24008954 	.word	0x24008954

0800e054 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e054:	4b01      	ldr	r3, [pc, #4]	; (800e05c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e056:	6818      	ldr	r0, [r3, #0]
 800e058:	4770      	bx	lr
 800e05a:	bf00      	nop
 800e05c:	24008958 	.word	0x24008958

0800e060 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e060:	b510      	push	{r4, lr}
 800e062:	6803      	ldr	r3, [r0, #0]
 800e064:	460c      	mov	r4, r1
 800e066:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e068:	4798      	blx	r3
 800e06a:	1b03      	subs	r3, r0, r4
 800e06c:	4258      	negs	r0, r3
 800e06e:	4158      	adcs	r0, r3
 800e070:	bd10      	pop	{r4, pc}
	...

0800e074 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e074:	4b01      	ldr	r3, [pc, #4]	; (800e07c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e076:	6019      	str	r1, [r3, #0]
 800e078:	4770      	bx	lr
 800e07a:	bf00      	nop
 800e07c:	2400895c 	.word	0x2400895c

0800e080 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e084:	4696      	mov	lr, r2
 800e086:	b097      	sub	sp, #92	; 0x5c
 800e088:	4605      	mov	r5, r0
 800e08a:	4614      	mov	r4, r2
 800e08c:	460e      	mov	r6, r1
 800e08e:	461f      	mov	r7, r3
 800e090:	f10d 0c1c 	add.w	ip, sp, #28
 800e094:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800e098:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800e09c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800e0a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e0a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e0a8:	f8de 3000 	ldr.w	r3, [lr]
 800e0ac:	f104 0e14 	add.w	lr, r4, #20
 800e0b0:	f8cc 3000 	str.w	r3, [ip]
 800e0b4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e0b8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e0bc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e0c0:	f8de 3000 	ldr.w	r3, [lr]
 800e0c4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e0c8:	f8cc 3000 	str.w	r3, [ip]
 800e0cc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800e0d0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e0d4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e0d8:	f8de 3000 	ldr.w	r3, [lr]
 800e0dc:	4631      	mov	r1, r6
 800e0de:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e0e0:	4628      	mov	r0, r5
 800e0e2:	f8cc 3000 	str.w	r3, [ip]
 800e0e6:	682b      	ldr	r3, [r5, #0]
 800e0e8:	9201      	str	r2, [sp, #4]
 800e0ea:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e0ec:	f8cd 8008 	str.w	r8, [sp, #8]
 800e0f0:	9200      	str	r2, [sp, #0]
 800e0f2:	aa07      	add	r2, sp, #28
 800e0f4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e0f8:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800e0fc:	463b      	mov	r3, r7
 800e0fe:	47d8      	blx	fp
 800e100:	46a6      	mov	lr, r4
 800e102:	f10d 0c1c 	add.w	ip, sp, #28
 800e106:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e10a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e10e:	f8de 3000 	ldr.w	r3, [lr]
 800e112:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e116:	343c      	adds	r4, #60	; 0x3c
 800e118:	f8cc 3000 	str.w	r3, [ip]
 800e11c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e120:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e124:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e128:	f8de 3000 	ldr.w	r3, [lr]
 800e12c:	f8cc 3000 	str.w	r3, [ip]
 800e130:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800e134:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e136:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e13a:	6823      	ldr	r3, [r4, #0]
 800e13c:	4631      	mov	r1, r6
 800e13e:	4628      	mov	r0, r5
 800e140:	f8cc 3000 	str.w	r3, [ip]
 800e144:	682b      	ldr	r3, [r5, #0]
 800e146:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e14a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e14c:	f8cd 8008 	str.w	r8, [sp, #8]
 800e150:	9201      	str	r2, [sp, #4]
 800e152:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e154:	9200      	str	r2, [sp, #0]
 800e156:	aa07      	add	r2, sp, #28
 800e158:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800e15a:	463b      	mov	r3, r7
 800e15c:	47a0      	blx	r4
 800e15e:	b017      	add	sp, #92	; 0x5c
 800e160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e164 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e168:	b08d      	sub	sp, #52	; 0x34
 800e16a:	4688      	mov	r8, r1
 800e16c:	f8d3 c000 	ldr.w	ip, [r3]
 800e170:	9916      	ldr	r1, [sp, #88]	; 0x58
 800e172:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800e176:	680f      	ldr	r7, [r1, #0]
 800e178:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800e17c:	eba7 070c 	sub.w	r7, r7, ip
 800e180:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800e184:	edd3 6a07 	vldr	s13, [r3, #28]
 800e188:	42bc      	cmp	r4, r7
 800e18a:	9918      	ldr	r1, [sp, #96]	; 0x60
 800e18c:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800e190:	bfa8      	it	ge
 800e192:	463c      	movge	r4, r7
 800e194:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e198:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e19c:	ee07 4a90 	vmov	s15, r4
 800e1a0:	eb09 0e0c 	add.w	lr, r9, ip
 800e1a4:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800e1a8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e1ac:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800e1b0:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800e1b4:	4571      	cmp	r1, lr
 800e1b6:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e1ba:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e1be:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e1c2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800e1c6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e1ca:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e1ce:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e1d2:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e1d6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e1da:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e1de:	f340 808c 	ble.w	800e2fa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800e1e2:	eba1 060e 	sub.w	r6, r1, lr
 800e1e6:	fb96 f5f4 	sdiv	r5, r6, r4
 800e1ea:	ee07 5a10 	vmov	s14, r5
 800e1ee:	2d00      	cmp	r5, #0
 800e1f0:	fb04 6615 	mls	r6, r4, r5, r6
 800e1f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e1f8:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e1fc:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e200:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e204:	dd12      	ble.n	800e22c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800e206:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e20a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e20e:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e212:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e21a:	bf14      	ite	ne
 800e21c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e220:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e224:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e228:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e22c:	fb05 f204 	mul.w	r2, r5, r4
 800e230:	1abf      	subs	r7, r7, r2
 800e232:	4494      	add	ip, r2
 800e234:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e238:	4411      	add	r1, r2
 800e23a:	eb09 020c 	add.w	r2, r9, ip
 800e23e:	b209      	sxth	r1, r1
 800e240:	443a      	add	r2, r7
 800e242:	428a      	cmp	r2, r1
 800e244:	bfc4      	itt	gt
 800e246:	eba1 0209 	subgt.w	r2, r1, r9
 800e24a:	eba2 070c 	subgt.w	r7, r2, ip
 800e24e:	2f00      	cmp	r7, #0
 800e250:	dd50      	ble.n	800e2f4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800e252:	fb97 f1f4 	sdiv	r1, r7, r4
 800e256:	fb04 7211 	mls	r2, r4, r1, r7
 800e25a:	b90a      	cbnz	r2, 800e260 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800e25c:	3901      	subs	r1, #1
 800e25e:	4622      	mov	r2, r4
 800e260:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e264:	6840      	ldr	r0, [r0, #4]
 800e266:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800e26a:	44b6      	add	lr, r6
 800e26c:	f8d0 a000 	ldr.w	sl, [r0]
 800e270:	2900      	cmp	r1, #0
 800e272:	bfcc      	ite	gt
 800e274:	46a1      	movgt	r9, r4
 800e276:	4691      	movle	r9, r2
 800e278:	900b      	str	r0, [sp, #44]	; 0x2c
 800e27a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800e27c:	fb04 e505 	mla	r5, r4, r5, lr
 800e280:	eef0 6a42 	vmov.f32	s13, s4
 800e284:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800e288:	9008      	str	r0, [sp, #32]
 800e28a:	eeb0 7a61 	vmov.f32	s14, s3
 800e28e:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e290:	695b      	ldr	r3, [r3, #20]
 800e292:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e296:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e29a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e29e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e2a0:	445b      	add	r3, fp
 800e2a2:	9307      	str	r3, [sp, #28]
 800e2a4:	ee16 3a90 	vmov	r3, s13
 800e2a8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800e2ac:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e2b0:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e2b4:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e2b8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e2bc:	ee17 7a90 	vmov	r7, s15
 800e2c0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e2c4:	fb97 f7f4 	sdiv	r7, r7, r4
 800e2c8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e2cc:	ee17 ca90 	vmov	ip, s15
 800e2d0:	fb9c fcf4 	sdiv	ip, ip, r4
 800e2d4:	fb0c 3306 	mla	r3, ip, r6, r3
 800e2d8:	9302      	str	r3, [sp, #8]
 800e2da:	ee17 3a10 	vmov	r3, s14
 800e2de:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800e2e2:	fb07 3706 	mla	r7, r7, r6, r3
 800e2e6:	eba9 0306 	sub.w	r3, r9, r6
 800e2ea:	e9cd 4700 	strd	r4, r7, [sp]
 800e2ee:	f8da 4008 	ldr.w	r4, [sl, #8]
 800e2f2:	47a0      	blx	r4
 800e2f4:	b00d      	add	sp, #52	; 0x34
 800e2f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2fa:	2500      	movs	r5, #0
 800e2fc:	462e      	mov	r6, r5
 800e2fe:	e799      	b.n	800e234 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800e300 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e304:	b0db      	sub	sp, #364	; 0x16c
 800e306:	461d      	mov	r5, r3
 800e308:	4614      	mov	r4, r2
 800e30a:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800e30e:	910f      	str	r1, [sp, #60]	; 0x3c
 800e310:	4629      	mov	r1, r5
 800e312:	930a      	str	r3, [sp, #40]	; 0x28
 800e314:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800e318:	9009      	str	r0, [sp, #36]	; 0x24
 800e31a:	930b      	str	r3, [sp, #44]	; 0x2c
 800e31c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800e320:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800e324:	9310      	str	r3, [sp, #64]	; 0x40
 800e326:	6803      	ldr	r3, [r0, #0]
 800e328:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800e32a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800e32e:	47b8      	blx	r7
 800e330:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e332:	6058      	str	r0, [r3, #4]
 800e334:	2800      	cmp	r0, #0
 800e336:	f000 83a1 	beq.w	800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e33a:	682b      	ldr	r3, [r5, #0]
 800e33c:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800e340:	ed94 7a02 	vldr	s14, [r4, #8]
 800e344:	9314      	str	r3, [sp, #80]	; 0x50
 800e346:	686b      	ldr	r3, [r5, #4]
 800e348:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e34c:	9315      	str	r3, [sp, #84]	; 0x54
 800e34e:	4bc1      	ldr	r3, [pc, #772]	; (800e654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800e350:	7819      	ldrb	r1, [r3, #0]
 800e352:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800e356:	2900      	cmp	r1, #0
 800e358:	bf16      	itet	ne
 800e35a:	4619      	movne	r1, r3
 800e35c:	4611      	moveq	r1, r2
 800e35e:	4613      	movne	r3, r2
 800e360:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e364:	9116      	str	r1, [sp, #88]	; 0x58
 800e366:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800e36a:	f240 8387 	bls.w	800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e36e:	ed94 7a07 	vldr	s14, [r4, #28]
 800e372:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e37a:	f240 837f 	bls.w	800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e37e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800e382:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e386:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e38a:	f240 8377 	bls.w	800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e38e:	6822      	ldr	r2, [r4, #0]
 800e390:	4bb1      	ldr	r3, [pc, #708]	; (800e658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800e392:	429a      	cmp	r2, r3
 800e394:	f2c0 8372 	blt.w	800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e398:	49b0      	ldr	r1, [pc, #704]	; (800e65c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800e39a:	6963      	ldr	r3, [r4, #20]
 800e39c:	428a      	cmp	r2, r1
 800e39e:	f300 836d 	bgt.w	800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e3a2:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800e3a6:	48ae      	ldr	r0, [pc, #696]	; (800e660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800e3a8:	33ff      	adds	r3, #255	; 0xff
 800e3aa:	4283      	cmp	r3, r0
 800e3ac:	f200 8366 	bhi.w	800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e3b0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e3b2:	4dac      	ldr	r5, [pc, #688]	; (800e664 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800e3b4:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800e3b8:	33ff      	adds	r3, #255	; 0xff
 800e3ba:	42ab      	cmp	r3, r5
 800e3bc:	f200 835e 	bhi.w	800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e3c0:	6862      	ldr	r2, [r4, #4]
 800e3c2:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800e3c6:	33ff      	adds	r3, #255	; 0xff
 800e3c8:	4283      	cmp	r3, r0
 800e3ca:	f200 8357 	bhi.w	800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e3ce:	69a1      	ldr	r1, [r4, #24]
 800e3d0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800e3d4:	33ff      	adds	r3, #255	; 0xff
 800e3d6:	4283      	cmp	r3, r0
 800e3d8:	f200 8350 	bhi.w	800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e3dc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e3de:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800e3e2:	30ff      	adds	r0, #255	; 0xff
 800e3e4:	42a8      	cmp	r0, r5
 800e3e6:	f200 8349 	bhi.w	800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e3ea:	428a      	cmp	r2, r1
 800e3ec:	f280 8110 	bge.w	800e610 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800e3f0:	429a      	cmp	r2, r3
 800e3f2:	f300 8119 	bgt.w	800e628 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800e3f6:	4299      	cmp	r1, r3
 800e3f8:	f280 811d 	bge.w	800e636 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800e3fc:	2502      	movs	r5, #2
 800e3fe:	2701      	movs	r7, #1
 800e400:	46a9      	mov	r9, r5
 800e402:	46b8      	mov	r8, r7
 800e404:	f04f 0a00 	mov.w	sl, #0
 800e408:	4621      	mov	r1, r4
 800e40a:	a849      	add	r0, sp, #292	; 0x124
 800e40c:	f003 fde4 	bl	8011fd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800e410:	4622      	mov	r2, r4
 800e412:	4653      	mov	r3, sl
 800e414:	a949      	add	r1, sp, #292	; 0x124
 800e416:	f8cd 9000 	str.w	r9, [sp]
 800e41a:	a819      	add	r0, sp, #100	; 0x64
 800e41c:	f003 ff0c 	bl	8012238 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e420:	4622      	mov	r2, r4
 800e422:	4653      	mov	r3, sl
 800e424:	a949      	add	r1, sp, #292	; 0x124
 800e426:	f8cd 8000 	str.w	r8, [sp]
 800e42a:	a829      	add	r0, sp, #164	; 0xa4
 800e42c:	f003 ff04 	bl	8012238 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e430:	4643      	mov	r3, r8
 800e432:	4622      	mov	r2, r4
 800e434:	a949      	add	r1, sp, #292	; 0x124
 800e436:	f8cd 9000 	str.w	r9, [sp]
 800e43a:	a839      	add	r0, sp, #228	; 0xe4
 800e43c:	f003 fefc 	bl	8012238 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e440:	42af      	cmp	r7, r5
 800e442:	af12      	add	r7, sp, #72	; 0x48
 800e444:	bfb7      	itett	lt
 800e446:	2300      	movlt	r3, #0
 800e448:	2301      	movge	r3, #1
 800e44a:	ad29      	addlt	r5, sp, #164	; 0xa4
 800e44c:	ac19      	addlt	r4, sp, #100	; 0x64
 800e44e:	bfb1      	iteee	lt
 800e450:	930e      	strlt	r3, [sp, #56]	; 0x38
 800e452:	ad19      	addge	r5, sp, #100	; 0x64
 800e454:	930e      	strge	r3, [sp, #56]	; 0x38
 800e456:	ac29      	addge	r4, sp, #164	; 0xa4
 800e458:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e45a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e45e:	e887 0003 	stmia.w	r7, {r0, r1}
 800e462:	b928      	cbnz	r0, 800e470 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800e464:	4b80      	ldr	r3, [pc, #512]	; (800e668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800e466:	6818      	ldr	r0, [r3, #0]
 800e468:	6803      	ldr	r3, [r0, #0]
 800e46a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e46c:	4798      	blx	r3
 800e46e:	6038      	str	r0, [r7, #0]
 800e470:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e472:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e476:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e47a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800e47c:	930c      	str	r3, [sp, #48]	; 0x30
 800e47e:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e480:	6963      	ldr	r3, [r4, #20]
 800e482:	440b      	add	r3, r1
 800e484:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e488:	4408      	add	r0, r1
 800e48a:	b200      	sxth	r0, r0
 800e48c:	4283      	cmp	r3, r0
 800e48e:	900d      	str	r0, [sp, #52]	; 0x34
 800e490:	f280 80dd 	bge.w	800e64e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800e494:	428b      	cmp	r3, r1
 800e496:	da08      	bge.n	800e4aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e498:	2a00      	cmp	r2, #0
 800e49a:	dd06      	ble.n	800e4aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e49c:	1acb      	subs	r3, r1, r3
 800e49e:	429a      	cmp	r2, r3
 800e4a0:	f2c0 80e4 	blt.w	800e66c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800e4a4:	2b00      	cmp	r3, #0
 800e4a6:	f300 80e2 	bgt.w	800e66e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800e4aa:	6967      	ldr	r7, [r4, #20]
 800e4ac:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800e4b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e4b2:	443b      	add	r3, r7
 800e4b4:	461f      	mov	r7, r3
 800e4b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e4b8:	1bdf      	subs	r7, r3, r7
 800e4ba:	4297      	cmp	r7, r2
 800e4bc:	bfa8      	it	ge
 800e4be:	4617      	movge	r7, r2
 800e4c0:	2f00      	cmp	r7, #0
 800e4c2:	f340 8166 	ble.w	800e792 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800e4c6:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e4c8:	6829      	ldr	r1, [r5, #0]
 800e4ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e4ce:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e4d2:	4411      	add	r1, r2
 800e4d4:	6820      	ldr	r0, [r4, #0]
 800e4d6:	4299      	cmp	r1, r3
 800e4d8:	dd1a      	ble.n	800e510 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e4da:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e4de:	4402      	add	r2, r0
 800e4e0:	440b      	add	r3, r1
 800e4e2:	b21b      	sxth	r3, r3
 800e4e4:	429a      	cmp	r2, r3
 800e4e6:	dc13      	bgt.n	800e510 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e4e8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e4ea:	a912      	add	r1, sp, #72	; 0x48
 800e4ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e4ee:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e4f0:	681b      	ldr	r3, [r3, #0]
 800e4f2:	9206      	str	r2, [sp, #24]
 800e4f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e4f6:	9500      	str	r5, [sp, #0]
 800e4f8:	9205      	str	r2, [sp, #20]
 800e4fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e4fc:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e500:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800e502:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e506:	aa49      	add	r2, sp, #292	; 0x124
 800e508:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800e50c:	4623      	mov	r3, r4
 800e50e:	47c8      	blx	r9
 800e510:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800e514:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800e518:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800e51c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e520:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800e524:	68a1      	ldr	r1, [r4, #8]
 800e526:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e52a:	ed94 6a08 	vldr	s12, [r4, #32]
 800e52e:	edd4 6a07 	vldr	s13, [r4, #28]
 800e532:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800e536:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e53a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800e53e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e542:	edc4 6a07 	vstr	s13, [r4, #28]
 800e546:	441a      	add	r2, r3
 800e548:	6963      	ldr	r3, [r4, #20]
 800e54a:	3301      	adds	r3, #1
 800e54c:	6022      	str	r2, [r4, #0]
 800e54e:	6163      	str	r3, [r4, #20]
 800e550:	69a3      	ldr	r3, [r4, #24]
 800e552:	3b01      	subs	r3, #1
 800e554:	61a3      	str	r3, [r4, #24]
 800e556:	6923      	ldr	r3, [r4, #16]
 800e558:	440b      	add	r3, r1
 800e55a:	68e1      	ldr	r1, [r4, #12]
 800e55c:	428b      	cmp	r3, r1
 800e55e:	6123      	str	r3, [r4, #16]
 800e560:	db15      	blt.n	800e58e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800e562:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800e566:	3201      	adds	r2, #1
 800e568:	1a5b      	subs	r3, r3, r1
 800e56a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e56e:	6022      	str	r2, [r4, #0]
 800e570:	6123      	str	r3, [r4, #16]
 800e572:	edc4 6a07 	vstr	s13, [r4, #28]
 800e576:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800e57a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e57e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800e582:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800e586:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e58a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800e58e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800e592:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800e596:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800e59a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e59e:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800e5a2:	68a9      	ldr	r1, [r5, #8]
 800e5a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e5a8:	ed95 6a08 	vldr	s12, [r5, #32]
 800e5ac:	edd5 6a07 	vldr	s13, [r5, #28]
 800e5b0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800e5b4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e5b8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800e5bc:	e9d5 2300 	ldrd	r2, r3, [r5]
 800e5c0:	edc5 6a07 	vstr	s13, [r5, #28]
 800e5c4:	441a      	add	r2, r3
 800e5c6:	696b      	ldr	r3, [r5, #20]
 800e5c8:	3301      	adds	r3, #1
 800e5ca:	602a      	str	r2, [r5, #0]
 800e5cc:	616b      	str	r3, [r5, #20]
 800e5ce:	69ab      	ldr	r3, [r5, #24]
 800e5d0:	3b01      	subs	r3, #1
 800e5d2:	61ab      	str	r3, [r5, #24]
 800e5d4:	692b      	ldr	r3, [r5, #16]
 800e5d6:	440b      	add	r3, r1
 800e5d8:	68e9      	ldr	r1, [r5, #12]
 800e5da:	428b      	cmp	r3, r1
 800e5dc:	612b      	str	r3, [r5, #16]
 800e5de:	db15      	blt.n	800e60c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800e5e0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800e5e4:	3201      	adds	r2, #1
 800e5e6:	1a5b      	subs	r3, r3, r1
 800e5e8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e5ec:	602a      	str	r2, [r5, #0]
 800e5ee:	612b      	str	r3, [r5, #16]
 800e5f0:	edc5 6a07 	vstr	s13, [r5, #28]
 800e5f4:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800e5f8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e5fc:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800e600:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800e604:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e608:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800e60c:	3f01      	subs	r7, #1
 800e60e:	e757      	b.n	800e4c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800e610:	4299      	cmp	r1, r3
 800e612:	dc13      	bgt.n	800e63c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800e614:	429a      	cmp	r2, r3
 800e616:	da14      	bge.n	800e642 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800e618:	2502      	movs	r5, #2
 800e61a:	2703      	movs	r7, #3
 800e61c:	f04f 0800 	mov.w	r8, #0
 800e620:	46a9      	mov	r9, r5
 800e622:	f04f 0a01 	mov.w	sl, #1
 800e626:	e6ef      	b.n	800e408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800e628:	2501      	movs	r5, #1
 800e62a:	2700      	movs	r7, #0
 800e62c:	46a9      	mov	r9, r5
 800e62e:	46b8      	mov	r8, r7
 800e630:	f04f 0a02 	mov.w	sl, #2
 800e634:	e6e8      	b.n	800e408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800e636:	2501      	movs	r5, #1
 800e638:	2702      	movs	r7, #2
 800e63a:	e6e1      	b.n	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800e63c:	2500      	movs	r5, #0
 800e63e:	2701      	movs	r7, #1
 800e640:	e7f4      	b.n	800e62c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800e642:	2702      	movs	r7, #2
 800e644:	2503      	movs	r5, #3
 800e646:	f04f 0900 	mov.w	r9, #0
 800e64a:	46b8      	mov	r8, r7
 800e64c:	e7e9      	b.n	800e622 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800e64e:	4613      	mov	r3, r2
 800e650:	e728      	b.n	800e4a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800e652:	bf00      	nop
 800e654:	24008944 	.word	0x24008944
 800e658:	fffd8f01 	.word	0xfffd8f01
 800e65c:	00027100 	.word	0x00027100
 800e660:	0004e1ff 	.word	0x0004e1ff
 800e664:	0004e1fe 	.word	0x0004e1fe
 800e668:	2400894c 	.word	0x2400894c
 800e66c:	4613      	mov	r3, r2
 800e66e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800e670:	469e      	mov	lr, r3
 800e672:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800e674:	469c      	mov	ip, r3
 800e676:	9111      	str	r1, [sp, #68]	; 0x44
 800e678:	f04f 0900 	mov.w	r9, #0
 800e67c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800e680:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800e684:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800e688:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800e68c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800e690:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800e694:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800e698:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800e69c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800e6a0:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800e6a4:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800e6a8:	f1bc 0f00 	cmp.w	ip, #0
 800e6ac:	d147      	bne.n	800e73e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800e6ae:	eb03 0c07 	add.w	ip, r3, r7
 800e6b2:	1ad7      	subs	r7, r2, r3
 800e6b4:	f1b9 0f00 	cmp.w	r9, #0
 800e6b8:	d009      	beq.n	800e6ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800e6ba:	9029      	str	r0, [sp, #164]	; 0xa4
 800e6bc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800e6c0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800e6c4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800e6c8:	912d      	str	r1, [sp, #180]	; 0xb4
 800e6ca:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800e6ce:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800e6d0:	f04f 0800 	mov.w	r8, #0
 800e6d4:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800e6d8:	9111      	str	r1, [sp, #68]	; 0x44
 800e6da:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800e6de:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800e6e2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800e6e6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800e6ea:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800e6ee:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800e6f2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800e6f6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800e6fa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800e6fe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800e702:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800e706:	f1be 0f00 	cmp.w	lr, #0
 800e70a:	d031      	beq.n	800e770 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800e70c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800e70e:	4450      	add	r0, sl
 800e710:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800e714:	4431      	add	r1, r6
 800e716:	ee37 7a04 	vadd.f32	s14, s14, s8
 800e71a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800e71e:	4549      	cmp	r1, r9
 800e720:	db08      	blt.n	800e734 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800e722:	ee77 7a85 	vadd.f32	s15, s15, s10
 800e726:	3001      	adds	r0, #1
 800e728:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800e72c:	eba1 0109 	sub.w	r1, r1, r9
 800e730:	ee37 7a06 	vadd.f32	s14, s14, s12
 800e734:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e738:	f04f 0801 	mov.w	r8, #1
 800e73c:	e7e3      	b.n	800e706 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800e73e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800e740:	4450      	add	r0, sl
 800e742:	ee37 7a24 	vadd.f32	s14, s14, s9
 800e746:	4431      	add	r1, r6
 800e748:	ee77 7a84 	vadd.f32	s15, s15, s8
 800e74c:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800e750:	4541      	cmp	r1, r8
 800e752:	db08      	blt.n	800e766 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800e754:	ee76 6a85 	vadd.f32	s13, s13, s10
 800e758:	3001      	adds	r0, #1
 800e75a:	ee37 7a25 	vadd.f32	s14, s14, s11
 800e75e:	eba1 0108 	sub.w	r1, r1, r8
 800e762:	ee77 7a86 	vadd.f32	s15, s15, s12
 800e766:	f10c 3cff 	add.w	ip, ip, #4294967295
 800e76a:	f04f 0901 	mov.w	r9, #1
 800e76e:	e79b      	b.n	800e6a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800e770:	449c      	add	ip, r3
 800e772:	1aff      	subs	r7, r7, r3
 800e774:	f1b8 0f00 	cmp.w	r8, #0
 800e778:	d009      	beq.n	800e78e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800e77a:	9019      	str	r0, [sp, #100]	; 0x64
 800e77c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800e780:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800e784:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800e788:	911d      	str	r1, [sp, #116]	; 0x74
 800e78a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800e78e:	1ad2      	subs	r2, r2, r3
 800e790:	e68b      	b.n	800e4aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e792:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e794:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800e796:	2b00      	cmp	r3, #0
 800e798:	f000 80d1 	beq.w	800e93e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800e79c:	ad19      	add	r5, sp, #100	; 0x64
 800e79e:	ac39      	add	r4, sp, #228	; 0xe4
 800e7a0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e7a2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e7a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e7aa:	930c      	str	r3, [sp, #48]	; 0x30
 800e7ac:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e7ae:	6963      	ldr	r3, [r4, #20]
 800e7b0:	440b      	add	r3, r1
 800e7b2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e7b6:	4408      	add	r0, r1
 800e7b8:	b200      	sxth	r0, r0
 800e7ba:	4283      	cmp	r3, r0
 800e7bc:	900d      	str	r0, [sp, #52]	; 0x34
 800e7be:	f280 80c1 	bge.w	800e944 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800e7c2:	428b      	cmp	r3, r1
 800e7c4:	da08      	bge.n	800e7d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e7c6:	2a00      	cmp	r2, #0
 800e7c8:	dd06      	ble.n	800e7d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e7ca:	1acb      	subs	r3, r1, r3
 800e7cc:	429a      	cmp	r2, r3
 800e7ce:	f2c0 80bb 	blt.w	800e948 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800e7d2:	2b00      	cmp	r3, #0
 800e7d4:	f300 80b9 	bgt.w	800e94a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800e7d8:	6967      	ldr	r7, [r4, #20]
 800e7da:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800e7de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e7e0:	443b      	add	r3, r7
 800e7e2:	461f      	mov	r7, r3
 800e7e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e7e6:	1bdf      	subs	r7, r3, r7
 800e7e8:	4297      	cmp	r7, r2
 800e7ea:	bfa8      	it	ge
 800e7ec:	4617      	movge	r7, r2
 800e7ee:	2f00      	cmp	r7, #0
 800e7f0:	f340 813c 	ble.w	800ea6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800e7f4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e7f6:	6829      	ldr	r1, [r5, #0]
 800e7f8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e7fc:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e800:	4411      	add	r1, r2
 800e802:	6820      	ldr	r0, [r4, #0]
 800e804:	4299      	cmp	r1, r3
 800e806:	dd1a      	ble.n	800e83e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800e808:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e80c:	4402      	add	r2, r0
 800e80e:	440b      	add	r3, r1
 800e810:	b21b      	sxth	r3, r3
 800e812:	429a      	cmp	r2, r3
 800e814:	dc13      	bgt.n	800e83e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800e816:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e818:	a912      	add	r1, sp, #72	; 0x48
 800e81a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e81c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e81e:	681b      	ldr	r3, [r3, #0]
 800e820:	9206      	str	r2, [sp, #24]
 800e822:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e824:	9500      	str	r5, [sp, #0]
 800e826:	9205      	str	r2, [sp, #20]
 800e828:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e82a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e82e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800e830:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e834:	aa49      	add	r2, sp, #292	; 0x124
 800e836:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800e83a:	4623      	mov	r3, r4
 800e83c:	47c8      	blx	r9
 800e83e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800e842:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800e846:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800e84a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e84e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800e852:	68a1      	ldr	r1, [r4, #8]
 800e854:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e858:	ed94 6a08 	vldr	s12, [r4, #32]
 800e85c:	edd4 6a07 	vldr	s13, [r4, #28]
 800e860:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800e864:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e868:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800e86c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e870:	edc4 6a07 	vstr	s13, [r4, #28]
 800e874:	441a      	add	r2, r3
 800e876:	6963      	ldr	r3, [r4, #20]
 800e878:	3301      	adds	r3, #1
 800e87a:	6022      	str	r2, [r4, #0]
 800e87c:	6163      	str	r3, [r4, #20]
 800e87e:	69a3      	ldr	r3, [r4, #24]
 800e880:	3b01      	subs	r3, #1
 800e882:	61a3      	str	r3, [r4, #24]
 800e884:	6923      	ldr	r3, [r4, #16]
 800e886:	440b      	add	r3, r1
 800e888:	68e1      	ldr	r1, [r4, #12]
 800e88a:	428b      	cmp	r3, r1
 800e88c:	6123      	str	r3, [r4, #16]
 800e88e:	db15      	blt.n	800e8bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800e890:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800e894:	3201      	adds	r2, #1
 800e896:	1a5b      	subs	r3, r3, r1
 800e898:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e89c:	6022      	str	r2, [r4, #0]
 800e89e:	6123      	str	r3, [r4, #16]
 800e8a0:	edc4 6a07 	vstr	s13, [r4, #28]
 800e8a4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800e8a8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e8ac:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800e8b0:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800e8b4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e8b8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800e8bc:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800e8c0:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800e8c4:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800e8c8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e8cc:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800e8d0:	68a9      	ldr	r1, [r5, #8]
 800e8d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e8d6:	ed95 6a08 	vldr	s12, [r5, #32]
 800e8da:	edd5 6a07 	vldr	s13, [r5, #28]
 800e8de:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800e8e2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e8e6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800e8ea:	e9d5 2300 	ldrd	r2, r3, [r5]
 800e8ee:	edc5 6a07 	vstr	s13, [r5, #28]
 800e8f2:	441a      	add	r2, r3
 800e8f4:	696b      	ldr	r3, [r5, #20]
 800e8f6:	3301      	adds	r3, #1
 800e8f8:	602a      	str	r2, [r5, #0]
 800e8fa:	616b      	str	r3, [r5, #20]
 800e8fc:	69ab      	ldr	r3, [r5, #24]
 800e8fe:	3b01      	subs	r3, #1
 800e900:	61ab      	str	r3, [r5, #24]
 800e902:	692b      	ldr	r3, [r5, #16]
 800e904:	440b      	add	r3, r1
 800e906:	68e9      	ldr	r1, [r5, #12]
 800e908:	428b      	cmp	r3, r1
 800e90a:	612b      	str	r3, [r5, #16]
 800e90c:	db15      	blt.n	800e93a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800e90e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800e912:	3201      	adds	r2, #1
 800e914:	1a5b      	subs	r3, r3, r1
 800e916:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e91a:	602a      	str	r2, [r5, #0]
 800e91c:	612b      	str	r3, [r5, #16]
 800e91e:	edc5 6a07 	vstr	s13, [r5, #28]
 800e922:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800e926:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e92a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800e92e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800e932:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e936:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800e93a:	3f01      	subs	r7, #1
 800e93c:	e757      	b.n	800e7ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800e93e:	ad39      	add	r5, sp, #228	; 0xe4
 800e940:	ac19      	add	r4, sp, #100	; 0x64
 800e942:	e72d      	b.n	800e7a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800e944:	4613      	mov	r3, r2
 800e946:	e744      	b.n	800e7d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800e948:	4613      	mov	r3, r2
 800e94a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800e94c:	469e      	mov	lr, r3
 800e94e:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800e952:	461f      	mov	r7, r3
 800e954:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800e958:	f04f 0900 	mov.w	r9, #0
 800e95c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800e960:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800e964:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800e968:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800e96c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800e970:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800e972:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800e976:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800e97a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800e97e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800e982:	960e      	str	r6, [sp, #56]	; 0x38
 800e984:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800e988:	2f00      	cmp	r7, #0
 800e98a:	d146      	bne.n	800ea1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800e98c:	449c      	add	ip, r3
 800e98e:	1ad7      	subs	r7, r2, r3
 800e990:	f1b9 0f00 	cmp.w	r9, #0
 800e994:	d009      	beq.n	800e9aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800e996:	9039      	str	r0, [sp, #228]	; 0xe4
 800e998:	913d      	str	r1, [sp, #244]	; 0xf4
 800e99a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800e99e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800e9a2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800e9a6:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800e9aa:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800e9ac:	f04f 0800 	mov.w	r8, #0
 800e9b0:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800e9b4:	910e      	str	r1, [sp, #56]	; 0x38
 800e9b6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800e9ba:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800e9be:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800e9c2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800e9c6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800e9ca:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800e9ce:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800e9d2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800e9d6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800e9da:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800e9de:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800e9e2:	f1be 0f00 	cmp.w	lr, #0
 800e9e6:	d030      	beq.n	800ea4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800e9e8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800e9ea:	4450      	add	r0, sl
 800e9ec:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800e9f0:	4431      	add	r1, r6
 800e9f2:	ee37 7a04 	vadd.f32	s14, s14, s8
 800e9f6:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800e9fa:	4549      	cmp	r1, r9
 800e9fc:	db08      	blt.n	800ea10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800e9fe:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ea02:	3001      	adds	r0, #1
 800ea04:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ea08:	eba1 0109 	sub.w	r1, r1, r9
 800ea0c:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ea10:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ea14:	f04f 0801 	mov.w	r8, #1
 800ea18:	e7e3      	b.n	800e9e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800ea1a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ea1c:	4450      	add	r0, sl
 800ea1e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ea22:	4431      	add	r1, r6
 800ea24:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ea28:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ea2c:	4541      	cmp	r1, r8
 800ea2e:	db08      	blt.n	800ea42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800ea30:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ea34:	3001      	adds	r0, #1
 800ea36:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ea3a:	eba1 0108 	sub.w	r1, r1, r8
 800ea3e:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ea42:	3f01      	subs	r7, #1
 800ea44:	f04f 0901 	mov.w	r9, #1
 800ea48:	e79e      	b.n	800e988 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800ea4a:	449c      	add	ip, r3
 800ea4c:	1aff      	subs	r7, r7, r3
 800ea4e:	f1b8 0f00 	cmp.w	r8, #0
 800ea52:	d009      	beq.n	800ea68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800ea54:	9019      	str	r0, [sp, #100]	; 0x64
 800ea56:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ea5a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ea5e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ea62:	911d      	str	r1, [sp, #116]	; 0x74
 800ea64:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ea68:	1ad2      	subs	r2, r2, r3
 800ea6a:	e6b5      	b.n	800e7d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ea6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ea6e:	681b      	ldr	r3, [r3, #0]
 800ea70:	b923      	cbnz	r3, 800ea7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea72:	4b04      	ldr	r3, [pc, #16]	; (800ea84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ea74:	6818      	ldr	r0, [r3, #0]
 800ea76:	6803      	ldr	r3, [r0, #0]
 800ea78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea7a:	4798      	blx	r3
 800ea7c:	b05b      	add	sp, #364	; 0x16c
 800ea7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea82:	bf00      	nop
 800ea84:	2400894c 	.word	0x2400894c

0800ea88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800ea88:	b570      	push	{r4, r5, r6, lr}
 800ea8a:	4604      	mov	r4, r0
 800ea8c:	2500      	movs	r5, #0
 800ea8e:	9805      	ldr	r0, [sp, #20]
 800ea90:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800ea94:	6061      	str	r1, [r4, #4]
 800ea96:	8263      	strh	r3, [r4, #18]
 800ea98:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800ea9c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800eaa0:	8025      	strh	r5, [r4, #0]
 800eaa2:	7221      	strb	r1, [r4, #8]
 800eaa4:	7266      	strb	r6, [r4, #9]
 800eaa6:	60e0      	str	r0, [r4, #12]
 800eaa8:	8222      	strh	r2, [r4, #16]
 800eaaa:	82a3      	strh	r3, [r4, #20]
 800eaac:	82e5      	strh	r5, [r4, #22]
 800eaae:	8325      	strh	r5, [r4, #24]
 800eab0:	8365      	strh	r5, [r4, #26]
 800eab2:	83a5      	strh	r5, [r4, #28]
 800eab4:	83e5      	strh	r5, [r4, #30]
 800eab6:	8425      	strh	r5, [r4, #32]
 800eab8:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 800eabc:	b32e      	cbz	r6, 800eb0a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800eabe:	6803      	ldr	r3, [r0, #0]
 800eac0:	695b      	ldr	r3, [r3, #20]
 800eac2:	4798      	blx	r3
 800eac4:	4606      	mov	r6, r0
 800eac6:	b300      	cbz	r0, 800eb0a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800eac8:	68e0      	ldr	r0, [r4, #12]
 800eaca:	4631      	mov	r1, r6
 800eacc:	6803      	ldr	r3, [r0, #0]
 800eace:	68db      	ldr	r3, [r3, #12]
 800ead0:	4798      	blx	r3
 800ead2:	4605      	mov	r5, r0
 800ead4:	b1c8      	cbz	r0, 800eb0a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800ead6:	7b43      	ldrb	r3, [r0, #13]
 800ead8:	7a82      	ldrb	r2, [r0, #10]
 800eada:	005b      	lsls	r3, r3, #1
 800eadc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800eae0:	4313      	orrs	r3, r2
 800eae2:	8423      	strh	r3, [r4, #32]
 800eae4:	7a63      	ldrb	r3, [r4, #9]
 800eae6:	2b06      	cmp	r3, #6
 800eae8:	d10f      	bne.n	800eb0a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800eaea:	68e0      	ldr	r0, [r4, #12]
 800eaec:	462a      	mov	r2, r5
 800eaee:	4631      	mov	r1, r6
 800eaf0:	6803      	ldr	r3, [r0, #0]
 800eaf2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eaf4:	4798      	blx	r3
 800eaf6:	7b6b      	ldrb	r3, [r5, #13]
 800eaf8:	005b      	lsls	r3, r3, #1
 800eafa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800eafe:	7aab      	ldrb	r3, [r5, #10]
 800eb00:	4313      	orrs	r3, r2
 800eb02:	4418      	add	r0, r3
 800eb04:	8c23      	ldrh	r3, [r4, #32]
 800eb06:	4418      	add	r0, r3
 800eb08:	8420      	strh	r0, [r4, #32]
 800eb0a:	4620      	mov	r0, r4
 800eb0c:	bd70      	pop	{r4, r5, r6, pc}

0800eb0e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800eb0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb12:	2400      	movs	r4, #0
 800eb14:	b085      	sub	sp, #20
 800eb16:	4681      	mov	r9, r0
 800eb18:	4688      	mov	r8, r1
 800eb1a:	4692      	mov	sl, r2
 800eb1c:	469b      	mov	fp, r3
 800eb1e:	4627      	mov	r7, r4
 800eb20:	4625      	mov	r5, r4
 800eb22:	4626      	mov	r6, r4
 800eb24:	4554      	cmp	r4, sl
 800eb26:	da2a      	bge.n	800eb7e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800eb28:	2300      	movs	r3, #0
 800eb2a:	9303      	str	r3, [sp, #12]
 800eb2c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800eb30:	429d      	cmp	r5, r3
 800eb32:	d004      	beq.n	800eb3e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800eb34:	f242 030b 	movw	r3, #8203	; 0x200b
 800eb38:	429d      	cmp	r5, r3
 800eb3a:	bf18      	it	ne
 800eb3c:	462f      	movne	r7, r5
 800eb3e:	ab03      	add	r3, sp, #12
 800eb40:	4642      	mov	r2, r8
 800eb42:	4659      	mov	r1, fp
 800eb44:	4648      	mov	r0, r9
 800eb46:	f003 f85d 	bl	8011c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800eb4a:	4605      	mov	r5, r0
 800eb4c:	b1b8      	cbz	r0, 800eb7e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800eb4e:	280a      	cmp	r0, #10
 800eb50:	d015      	beq.n	800eb7e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800eb52:	9a03      	ldr	r2, [sp, #12]
 800eb54:	b18a      	cbz	r2, 800eb7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800eb56:	7b50      	ldrb	r0, [r2, #13]
 800eb58:	4639      	mov	r1, r7
 800eb5a:	7a93      	ldrb	r3, [r2, #10]
 800eb5c:	0040      	lsls	r0, r0, #1
 800eb5e:	8895      	ldrh	r5, [r2, #4]
 800eb60:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800eb64:	4303      	orrs	r3, r0
 800eb66:	4640      	mov	r0, r8
 800eb68:	9301      	str	r3, [sp, #4]
 800eb6a:	f8d8 3000 	ldr.w	r3, [r8]
 800eb6e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eb70:	4798      	blx	r3
 800eb72:	9b01      	ldr	r3, [sp, #4]
 800eb74:	4418      	add	r0, r3
 800eb76:	4406      	add	r6, r0
 800eb78:	b2b6      	uxth	r6, r6
 800eb7a:	3401      	adds	r4, #1
 800eb7c:	e7d2      	b.n	800eb24 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800eb7e:	4630      	mov	r0, r6
 800eb80:	b005      	add	sp, #20
 800eb82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800eb86 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800eb86:	2a02      	cmp	r2, #2
 800eb88:	b530      	push	{r4, r5, lr}
 800eb8a:	d011      	beq.n	800ebb0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800eb8c:	2a03      	cmp	r2, #3
 800eb8e:	d01c      	beq.n	800ebca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800eb90:	2a01      	cmp	r2, #1
 800eb92:	d10c      	bne.n	800ebae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800eb94:	888b      	ldrh	r3, [r1, #4]
 800eb96:	8801      	ldrh	r1, [r0, #0]
 800eb98:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800eb9c:	1a5b      	subs	r3, r3, r1
 800eb9e:	8844      	ldrh	r4, [r0, #2]
 800eba0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800eba4:	1a9b      	subs	r3, r3, r2
 800eba6:	8004      	strh	r4, [r0, #0]
 800eba8:	8081      	strh	r1, [r0, #4]
 800ebaa:	8043      	strh	r3, [r0, #2]
 800ebac:	80c2      	strh	r2, [r0, #6]
 800ebae:	bd30      	pop	{r4, r5, pc}
 800ebb0:	88cb      	ldrh	r3, [r1, #6]
 800ebb2:	8842      	ldrh	r2, [r0, #2]
 800ebb4:	1a9b      	subs	r3, r3, r2
 800ebb6:	88c2      	ldrh	r2, [r0, #6]
 800ebb8:	1a9b      	subs	r3, r3, r2
 800ebba:	888a      	ldrh	r2, [r1, #4]
 800ebbc:	8801      	ldrh	r1, [r0, #0]
 800ebbe:	8043      	strh	r3, [r0, #2]
 800ebc0:	1a52      	subs	r2, r2, r1
 800ebc2:	8881      	ldrh	r1, [r0, #4]
 800ebc4:	1a52      	subs	r2, r2, r1
 800ebc6:	8002      	strh	r2, [r0, #0]
 800ebc8:	e7f1      	b.n	800ebae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800ebca:	88cb      	ldrh	r3, [r1, #6]
 800ebcc:	8841      	ldrh	r1, [r0, #2]
 800ebce:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800ebd2:	1a5b      	subs	r3, r3, r1
 800ebd4:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ebd8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800ebdc:	1a9b      	subs	r3, r3, r2
 800ebde:	8045      	strh	r5, [r0, #2]
 800ebe0:	8082      	strh	r2, [r0, #4]
 800ebe2:	8003      	strh	r3, [r0, #0]
 800ebe4:	80c4      	strh	r4, [r0, #6]
 800ebe6:	e7e2      	b.n	800ebae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800ebe8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800ebe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebec:	b09f      	sub	sp, #124	; 0x7c
 800ebee:	9116      	str	r1, [sp, #88]	; 0x58
 800ebf0:	9317      	str	r3, [sp, #92]	; 0x5c
 800ebf2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800ebf4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ebf6:	8809      	ldrh	r1, [r1, #0]
 800ebf8:	889b      	ldrh	r3, [r3, #4]
 800ebfa:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800ebfe:	440b      	add	r3, r1
 800ec00:	9212      	str	r2, [sp, #72]	; 0x48
 800ec02:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800ec06:	b21b      	sxth	r3, r3
 800ec08:	9011      	str	r0, [sp, #68]	; 0x44
 800ec0a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800ec0e:	9310      	str	r3, [sp, #64]	; 0x40
 800ec10:	f8d8 3000 	ldr.w	r3, [r8]
 800ec14:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 800ec18:	7b19      	ldrb	r1, [r3, #12]
 800ec1a:	7adb      	ldrb	r3, [r3, #11]
 800ec1c:	9114      	str	r1, [sp, #80]	; 0x50
 800ec1e:	9315      	str	r3, [sp, #84]	; 0x54
 800ec20:	2a00      	cmp	r2, #0
 800ec22:	d06a      	beq.n	800ecfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800ec24:	f898 3010 	ldrb.w	r3, [r8, #16]
 800ec28:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800ec2a:	2b06      	cmp	r3, #6
 800ec2c:	bf14      	ite	ne
 800ec2e:	2301      	movne	r3, #1
 800ec30:	2302      	moveq	r3, #2
 800ec32:	4413      	add	r3, r2
 800ec34:	f04f 0900 	mov.w	r9, #0
 800ec38:	930f      	str	r3, [sp, #60]	; 0x3c
 800ec3a:	464c      	mov	r4, r9
 800ec3c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800ec40:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800ec44:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800ec48:	4293      	cmp	r3, r2
 800ec4a:	f280 808f 	bge.w	800ed6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800ec4e:	2300      	movs	r3, #0
 800ec50:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800ec54:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800ec58:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ec5c:	429c      	cmp	r4, r3
 800ec5e:	d006      	beq.n	800ec6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800ec60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ec62:	f242 020b 	movw	r2, #8203	; 0x200b
 800ec66:	4294      	cmp	r4, r2
 800ec68:	bf18      	it	ne
 800ec6a:	4623      	movne	r3, r4
 800ec6c:	930d      	str	r3, [sp, #52]	; 0x34
 800ec6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ec70:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800ec72:	f8d8 2000 	ldr.w	r2, [r8]
 800ec76:	428b      	cmp	r3, r1
 800ec78:	db41      	blt.n	800ecfe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800ec7a:	6813      	ldr	r3, [r2, #0]
 800ec7c:	4610      	mov	r0, r2
 800ec7e:	695b      	ldr	r3, [r3, #20]
 800ec80:	4798      	blx	r3
 800ec82:	4604      	mov	r4, r0
 800ec84:	f8d8 0000 	ldr.w	r0, [r8]
 800ec88:	aa1d      	add	r2, sp, #116	; 0x74
 800ec8a:	4621      	mov	r1, r4
 800ec8c:	6803      	ldr	r3, [r0, #0]
 800ec8e:	689d      	ldr	r5, [r3, #8]
 800ec90:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800ec94:	47a8      	blx	r5
 800ec96:	901c      	str	r0, [sp, #112]	; 0x70
 800ec98:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ec9c:	429c      	cmp	r4, r3
 800ec9e:	f000 80ec 	beq.w	800ee7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800eca2:	f242 030b 	movw	r3, #8203	; 0x200b
 800eca6:	429c      	cmp	r4, r3
 800eca8:	f000 80e7 	beq.w	800ee7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800ecac:	2c00      	cmp	r4, #0
 800ecae:	f000 80f9 	beq.w	800eea4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800ecb2:	2c0a      	cmp	r4, #10
 800ecb4:	d060      	beq.n	800ed78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800ecb6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ecb8:	b36a      	cbz	r2, 800ed16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800ecba:	8894      	ldrh	r4, [r2, #4]
 800ecbc:	f1bb 0f00 	cmp.w	fp, #0
 800ecc0:	d03b      	beq.n	800ed3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800ecc2:	f892 900d 	ldrb.w	r9, [r2, #13]
 800ecc6:	f1bb 0f01 	cmp.w	fp, #1
 800ecca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800ecce:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800ecd2:	f892 900a 	ldrb.w	r9, [r2, #10]
 800ecd6:	ea49 0903 	orr.w	r9, r9, r3
 800ecda:	d134      	bne.n	800ed46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800ecdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ecde:	eba6 0609 	sub.w	r6, r6, r9
 800ece2:	2b00      	cmp	r3, #0
 800ece4:	d14f      	bne.n	800ed86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800ece6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ece8:	eb09 0306 	add.w	r3, r9, r6
 800ecec:	4413      	add	r3, r2
 800ecee:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800ecf0:	f9b2 2000 	ldrsh.w	r2, [r2]
 800ecf4:	4293      	cmp	r3, r2
 800ecf6:	da51      	bge.n	800ed9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800ecf8:	e038      	b.n	800ed6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800ecfa:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800ecfc:	e79a      	b.n	800ec34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800ecfe:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800ed02:	4659      	mov	r1, fp
 800ed04:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800ed06:	9301      	str	r3, [sp, #4]
 800ed08:	ab1d      	add	r3, sp, #116	; 0x74
 800ed0a:	9300      	str	r3, [sp, #0]
 800ed0c:	ab1c      	add	r3, sp, #112	; 0x70
 800ed0e:	f002 ffc2 	bl	8011c96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800ed12:	4604      	mov	r4, r0
 800ed14:	e7c0      	b.n	800ec98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800ed16:	f8d8 0000 	ldr.w	r0, [r8]
 800ed1a:	6803      	ldr	r3, [r0, #0]
 800ed1c:	691b      	ldr	r3, [r3, #16]
 800ed1e:	4798      	blx	r3
 800ed20:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ed24:	4298      	cmp	r0, r3
 800ed26:	f000 80a8 	beq.w	800ee7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800ed2a:	f242 030b 	movw	r3, #8203	; 0x200b
 800ed2e:	4298      	cmp	r0, r3
 800ed30:	f000 80a3 	beq.w	800ee7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800ed34:	f1bb 0f00 	cmp.w	fp, #0
 800ed38:	d100      	bne.n	800ed3c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800ed3a:	444e      	add	r6, r9
 800ed3c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ed3e:	2a00      	cmp	r2, #0
 800ed40:	d1bf      	bne.n	800ecc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800ed42:	4691      	mov	r9, r2
 800ed44:	e099      	b.n	800ee7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800ed46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ed48:	2b00      	cmp	r3, #0
 800ed4a:	f000 80ad 	beq.w	800eea8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
 800ed4e:	f1bb 0f00 	cmp.w	fp, #0
 800ed52:	d118      	bne.n	800ed86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800ed54:	f8d8 0000 	ldr.w	r0, [r8]
 800ed58:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ed5a:	6803      	ldr	r3, [r0, #0]
 800ed5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ed5e:	4798      	blx	r3
 800ed60:	4406      	add	r6, r0
 800ed62:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ed64:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ed66:	1af3      	subs	r3, r6, r3
 800ed68:	4293      	cmp	r3, r2
 800ed6a:	dd17      	ble.n	800ed9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800ed6c:	2c00      	cmp	r4, #0
 800ed6e:	f000 8099 	beq.w	800eea4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800ed72:	2c0a      	cmp	r4, #10
 800ed74:	f040 8087 	bne.w	800ee86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 800ed78:	240a      	movs	r4, #10
 800ed7a:	fab4 f084 	clz	r0, r4
 800ed7e:	0940      	lsrs	r0, r0, #5
 800ed80:	b01f      	add	sp, #124	; 0x7c
 800ed82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed86:	f8d8 0000 	ldr.w	r0, [r8]
 800ed8a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ed8c:	6803      	ldr	r3, [r0, #0]
 800ed8e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ed90:	4798      	blx	r3
 800ed92:	f1bb 0f01 	cmp.w	fp, #1
 800ed96:	eba6 0600 	sub.w	r6, r6, r0
 800ed9a:	d0a4      	beq.n	800ece6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800ed9c:	981c      	ldr	r0, [sp, #112]	; 0x70
 800ed9e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800eda0:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800eda4:	f9b3 7000 	ldrsh.w	r7, [r3]
 800eda8:	7b43      	ldrb	r3, [r0, #13]
 800edaa:	4431      	add	r1, r6
 800edac:	015b      	lsls	r3, r3, #5
 800edae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800edb2:	7983      	ldrb	r3, [r0, #6]
 800edb4:	4313      	orrs	r3, r2
 800edb6:	440b      	add	r3, r1
 800edb8:	42bb      	cmp	r3, r7
 800edba:	db5e      	blt.n	800ee7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800edbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800edbe:	4299      	cmp	r1, r3
 800edc0:	da5b      	bge.n	800ee7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800edc2:	f8d8 0000 	ldr.w	r0, [r8]
 800edc6:	42b7      	cmp	r7, r6
 800edc8:	6803      	ldr	r3, [r0, #0]
 800edca:	bfcc      	ite	gt
 800edcc:	1bbf      	subgt	r7, r7, r6
 800edce:	2700      	movle	r7, #0
 800edd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800edd2:	bfc8      	it	gt
 800edd4:	b2bf      	uxthgt	r7, r7
 800edd6:	4798      	blx	r3
 800edd8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800edda:	7b5a      	ldrb	r2, [r3, #13]
 800eddc:	00d1      	lsls	r1, r2, #3
 800edde:	f401 7580 	and.w	r5, r1, #256	; 0x100
 800ede2:	7a19      	ldrb	r1, [r3, #8]
 800ede4:	4329      	orrs	r1, r5
 800ede6:	0655      	lsls	r5, r2, #25
 800ede8:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800edea:	bf48      	it	mi
 800edec:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800edf0:	4405      	add	r5, r0
 800edf2:	bf48      	it	mi
 800edf4:	b209      	sxthmi	r1, r1
 800edf6:	1a6d      	subs	r5, r5, r1
 800edf8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800edfa:	b2ad      	uxth	r5, r5
 800edfc:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800ee00:	fa0f fa85 	sxth.w	sl, r5
 800ee04:	4551      	cmp	r1, sl
 800ee06:	dd3c      	ble.n	800ee82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800ee08:	0112      	lsls	r2, r2, #4
 800ee0a:	79d8      	ldrb	r0, [r3, #7]
 800ee0c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800ee10:	4302      	orrs	r2, r0
 800ee12:	4492      	add	sl, r2
 800ee14:	4551      	cmp	r1, sl
 800ee16:	dc30      	bgt.n	800ee7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800ee18:	1b4d      	subs	r5, r1, r5
 800ee1a:	468a      	mov	sl, r1
 800ee1c:	b22d      	sxth	r5, r5
 800ee1e:	9319      	str	r3, [sp, #100]	; 0x64
 800ee20:	b2ad      	uxth	r5, r5
 800ee22:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ee24:	f8d8 0000 	ldr.w	r0, [r8]
 800ee28:	681a      	ldr	r2, [r3, #0]
 800ee2a:	6801      	ldr	r1, [r0, #0]
 800ee2c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800ee2e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800ee30:	9313      	str	r3, [sp, #76]	; 0x4c
 800ee32:	9218      	str	r2, [sp, #96]	; 0x60
 800ee34:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800ee36:	4788      	blx	r1
 800ee38:	f898 1006 	ldrb.w	r1, [r8, #6]
 800ee3c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800ee3e:	910b      	str	r1, [sp, #44]	; 0x2c
 800ee40:	f898 100e 	ldrb.w	r1, [r8, #14]
 800ee44:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800ee46:	910a      	str	r1, [sp, #40]	; 0x28
 800ee48:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800ee4c:	9109      	str	r1, [sp, #36]	; 0x24
 800ee4e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800ee52:	9305      	str	r3, [sp, #20]
 800ee54:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ee56:	9206      	str	r2, [sp, #24]
 800ee58:	9304      	str	r3, [sp, #16]
 800ee5a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ee5c:	f8cd a004 	str.w	sl, [sp, #4]
 800ee60:	e9cd 7502 	strd	r7, r5, [sp, #8]
 800ee64:	4437      	add	r7, r6
 800ee66:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ee68:	b23f      	sxth	r7, r7
 800ee6a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800ee6e:	9700      	str	r7, [sp, #0]
 800ee70:	9916      	ldr	r1, [sp, #88]	; 0x58
 800ee72:	681a      	ldr	r2, [r3, #0]
 800ee74:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ee76:	685b      	ldr	r3, [r3, #4]
 800ee78:	47a8      	blx	r5
 800ee7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ee7c:	3301      	adds	r3, #1
 800ee7e:	930e      	str	r3, [sp, #56]	; 0x38
 800ee80:	e6e0      	b.n	800ec44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800ee82:	2500      	movs	r5, #0
 800ee84:	e7cb      	b.n	800ee1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 800ee86:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800ee88:	3501      	adds	r5, #1
 800ee8a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800ee8c:	429d      	cmp	r5, r3
 800ee8e:	f6bf af74 	bge.w	800ed7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800ee92:	4659      	mov	r1, fp
 800ee94:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800ee96:	f7f4 f901 	bl	800309c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ee9a:	4604      	mov	r4, r0
 800ee9c:	b110      	cbz	r0, 800eea4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800ee9e:	280a      	cmp	r0, #10
 800eea0:	d1f2      	bne.n	800ee88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
 800eea2:	e769      	b.n	800ed78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800eea4:	2400      	movs	r4, #0
 800eea6:	e768      	b.n	800ed7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800eea8:	f1bb 0f00 	cmp.w	fp, #0
 800eeac:	f43f af59 	beq.w	800ed62 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800eeb0:	e774      	b.n	800ed9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800eeb2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800eeb2:	b530      	push	{r4, r5, lr}
 800eeb4:	8ac4      	ldrh	r4, [r0, #22]
 800eeb6:	8b45      	ldrh	r5, [r0, #26]
 800eeb8:	8343      	strh	r3, [r0, #26]
 800eeba:	442c      	add	r4, r5
 800eebc:	1ae4      	subs	r4, r4, r3
 800eebe:	8b83      	ldrh	r3, [r0, #28]
 800eec0:	82c4      	strh	r4, [r0, #22]
 800eec2:	8b04      	ldrh	r4, [r0, #24]
 800eec4:	4422      	add	r2, r4
 800eec6:	440c      	add	r4, r1
 800eec8:	1a59      	subs	r1, r3, r1
 800eeca:	83c2      	strh	r2, [r0, #30]
 800eecc:	8304      	strh	r4, [r0, #24]
 800eece:	8381      	strh	r1, [r0, #28]
 800eed0:	bd30      	pop	{r4, r5, pc}

0800eed2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800eed2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eed6:	4604      	mov	r4, r0
 800eed8:	8a47      	ldrh	r7, [r0, #18]
 800eeda:	68c0      	ldr	r0, [r0, #12]
 800eedc:	b085      	sub	sp, #20
 800eede:	6803      	ldr	r3, [r0, #0]
 800eee0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800eee2:	4798      	blx	r3
 800eee4:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800eee8:	7a63      	ldrb	r3, [r4, #9]
 800eeea:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800eeee:	3b01      	subs	r3, #1
 800eef0:	42b7      	cmp	r7, r6
 800eef2:	bfac      	ite	ge
 800eef4:	f04f 0900 	movge.w	r9, #0
 800eef8:	f04f 0901 	movlt.w	r9, #1
 800eefc:	2b05      	cmp	r3, #5
 800eefe:	d804      	bhi.n	800ef0a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 800ef00:	e8df f003 	tbb	[pc, r3]
 800ef04:	470f0854 	.word	0x470f0854
 800ef08:	4c4c      	.short	0x4c4c
 800ef0a:	2500      	movs	r5, #0
 800ef0c:	46a9      	mov	r9, r5
 800ef0e:	462e      	mov	r6, r5
 800ef10:	462f      	mov	r7, r5
 800ef12:	e00e      	b.n	800ef32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800ef14:	42b7      	cmp	r7, r6
 800ef16:	f04f 0500 	mov.w	r5, #0
 800ef1a:	bfb4      	ite	lt
 800ef1c:	2600      	movlt	r6, #0
 800ef1e:	2601      	movge	r6, #1
 800ef20:	e7f6      	b.n	800ef10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800ef22:	42b7      	cmp	r7, r6
 800ef24:	464d      	mov	r5, r9
 800ef26:	f04f 0900 	mov.w	r9, #0
 800ef2a:	bfb4      	ite	lt
 800ef2c:	2600      	movlt	r6, #0
 800ef2e:	2601      	movge	r6, #1
 800ef30:	464f      	mov	r7, r9
 800ef32:	f04f 0800 	mov.w	r8, #0
 800ef36:	f8a4 8016 	strh.w	r8, [r4, #22]
 800ef3a:	f8a4 8018 	strh.w	r8, [r4, #24]
 800ef3e:	f8cd 8004 	str.w	r8, [sp, #4]
 800ef42:	2300      	movs	r3, #0
 800ef44:	9303      	str	r3, [sp, #12]
 800ef46:	8823      	ldrh	r3, [r4, #0]
 800ef48:	2b20      	cmp	r3, #32
 800ef4a:	d033      	beq.n	800efb4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 800ef4c:	f242 010b 	movw	r1, #8203	; 0x200b
 800ef50:	1a5a      	subs	r2, r3, r1
 800ef52:	f1d2 0a00 	rsbs	sl, r2, #0
 800ef56:	eb4a 0a02 	adc.w	sl, sl, r2
 800ef5a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800ef5e:	4293      	cmp	r3, r2
 800ef60:	d008      	beq.n	800ef74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800ef62:	428b      	cmp	r3, r1
 800ef64:	9a01      	ldr	r2, [sp, #4]
 800ef66:	bf0e      	itee	eq
 800ef68:	f04f 0a01 	moveq.w	sl, #1
 800ef6c:	461a      	movne	r2, r3
 800ef6e:	f04f 0a00 	movne.w	sl, #0
 800ef72:	9201      	str	r2, [sp, #4]
 800ef74:	ab03      	add	r3, sp, #12
 800ef76:	68e2      	ldr	r2, [r4, #12]
 800ef78:	7a21      	ldrb	r1, [r4, #8]
 800ef7a:	6860      	ldr	r0, [r4, #4]
 800ef7c:	f002 fe42 	bl	8011c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ef80:	8020      	strh	r0, [r4, #0]
 800ef82:	b9d8      	cbnz	r0, 800efbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 800ef84:	8ba2      	ldrh	r2, [r4, #28]
 800ef86:	2300      	movs	r3, #0
 800ef88:	4611      	mov	r1, r2
 800ef8a:	4620      	mov	r0, r4
 800ef8c:	f7ff ff91 	bl	800eeb2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800ef90:	e06e      	b.n	800f070 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800ef92:	2500      	movs	r5, #0
 800ef94:	2701      	movs	r7, #1
 800ef96:	46a9      	mov	r9, r5
 800ef98:	462e      	mov	r6, r5
 800ef9a:	e7ca      	b.n	800ef32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800ef9c:	42b7      	cmp	r7, r6
 800ef9e:	f04f 0500 	mov.w	r5, #0
 800efa2:	bfb4      	ite	lt
 800efa4:	2700      	movlt	r7, #0
 800efa6:	2701      	movge	r7, #1
 800efa8:	462e      	mov	r6, r5
 800efaa:	e7c2      	b.n	800ef32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800efac:	2500      	movs	r5, #0
 800efae:	2601      	movs	r6, #1
 800efb0:	46a9      	mov	r9, r5
 800efb2:	e7ad      	b.n	800ef10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800efb4:	9301      	str	r3, [sp, #4]
 800efb6:	f04f 0a01 	mov.w	sl, #1
 800efba:	e7db      	b.n	800ef74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800efbc:	8b63      	ldrh	r3, [r4, #26]
 800efbe:	280a      	cmp	r0, #10
 800efc0:	f103 0301 	add.w	r3, r3, #1
 800efc4:	8363      	strh	r3, [r4, #26]
 800efc6:	d0dd      	beq.n	800ef84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800efc8:	9a03      	ldr	r2, [sp, #12]
 800efca:	bb62      	cbnz	r2, 800f026 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 800efcc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800efd0:	4298      	cmp	r0, r3
 800efd2:	d003      	beq.n	800efdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800efd4:	f242 030b 	movw	r3, #8203	; 0x200b
 800efd8:	4298      	cmp	r0, r3
 800efda:	d1b2      	bne.n	800ef42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800efdc:	8823      	ldrh	r3, [r4, #0]
 800efde:	8ba1      	ldrh	r1, [r4, #28]
 800efe0:	2b20      	cmp	r3, #32
 800efe2:	d003      	beq.n	800efec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 800efe4:	f242 000b 	movw	r0, #8203	; 0x200b
 800efe8:	4283      	cmp	r3, r0
 800efea:	d131      	bne.n	800f050 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 800efec:	f1ba 0f00 	cmp.w	sl, #0
 800eff0:	bf0a      	itet	eq
 800eff2:	4688      	moveq	r8, r1
 800eff4:	4650      	movne	r0, sl
 800eff6:	2001      	moveq	r0, #1
 800eff8:	440a      	add	r2, r1
 800effa:	8b23      	ldrh	r3, [r4, #24]
 800effc:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800f000:	b292      	uxth	r2, r2
 800f002:	83a2      	strh	r2, [r4, #28]
 800f004:	4413      	add	r3, r2
 800f006:	f1b9 0f00 	cmp.w	r9, #0
 800f00a:	d102      	bne.n	800f012 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 800f00c:	2d00      	cmp	r5, #0
 800f00e:	d042      	beq.n	800f096 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 800f010:	b300      	cbz	r0, 800f054 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 800f012:	8c21      	ldrh	r1, [r4, #32]
 800f014:	4419      	add	r1, r3
 800f016:	458c      	cmp	ip, r1
 800f018:	da37      	bge.n	800f08a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800f01a:	8ae1      	ldrh	r1, [r4, #22]
 800f01c:	2900      	cmp	r1, #0
 800f01e:	d034      	beq.n	800f08a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800f020:	4563      	cmp	r3, ip
 800f022:	dd8e      	ble.n	800ef42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f024:	e01d      	b.n	800f062 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 800f026:	8893      	ldrh	r3, [r2, #4]
 800f028:	9901      	ldr	r1, [sp, #4]
 800f02a:	8023      	strh	r3, [r4, #0]
 800f02c:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800f030:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800f034:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 800f038:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800f03c:	ea4b 0b00 	orr.w	fp, fp, r0
 800f040:	68e0      	ldr	r0, [r4, #12]
 800f042:	6803      	ldr	r3, [r0, #0]
 800f044:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f046:	4798      	blx	r3
 800f048:	eb0b 0200 	add.w	r2, fp, r0
 800f04c:	b292      	uxth	r2, r2
 800f04e:	e7c5      	b.n	800efdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800f050:	2000      	movs	r0, #0
 800f052:	e7d1      	b.n	800eff8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 800f054:	4563      	cmp	r3, ip
 800f056:	f77f af74 	ble.w	800ef42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f05a:	8ae3      	ldrh	r3, [r4, #22]
 800f05c:	2b00      	cmp	r3, #0
 800f05e:	f43f af70 	beq.w	800ef42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f062:	2301      	movs	r3, #1
 800f064:	8c22      	ldrh	r2, [r4, #32]
 800f066:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800f06a:	8be3      	ldrh	r3, [r4, #30]
 800f06c:	4413      	add	r3, r2
 800f06e:	83e3      	strh	r3, [r4, #30]
 800f070:	68e0      	ldr	r0, [r4, #12]
 800f072:	6803      	ldr	r3, [r0, #0]
 800f074:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f076:	4798      	blx	r3
 800f078:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800f07c:	4418      	add	r0, r3
 800f07e:	8a63      	ldrh	r3, [r4, #18]
 800f080:	1a18      	subs	r0, r3, r0
 800f082:	8260      	strh	r0, [r4, #18]
 800f084:	b005      	add	sp, #20
 800f086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f08a:	2300      	movs	r3, #0
 800f08c:	4611      	mov	r1, r2
 800f08e:	4620      	mov	r0, r4
 800f090:	f7ff ff0f 	bl	800eeb2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f094:	e755      	b.n	800ef42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f096:	4563      	cmp	r3, ip
 800f098:	dd14      	ble.n	800f0c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 800f09a:	b117      	cbz	r7, 800f0a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 800f09c:	2301      	movs	r3, #1
 800f09e:	460a      	mov	r2, r1
 800f0a0:	e772      	b.n	800ef88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800f0a2:	2e00      	cmp	r6, #0
 800f0a4:	f43f af4d 	beq.w	800ef42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f0a8:	2800      	cmp	r0, #0
 800f0aa:	f47f af4a 	bne.w	800ef42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f0ae:	f1ba 0f00 	cmp.w	sl, #0
 800f0b2:	d002      	beq.n	800f0ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 800f0b4:	2301      	movs	r3, #1
 800f0b6:	4642      	mov	r2, r8
 800f0b8:	e767      	b.n	800ef8a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800f0ba:	8ae3      	ldrh	r3, [r4, #22]
 800f0bc:	2b00      	cmp	r3, #0
 800f0be:	f43f af40 	beq.w	800ef42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f0c2:	e7d5      	b.n	800f070 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800f0c4:	2800      	cmp	r0, #0
 800f0c6:	f47f af3c 	bne.w	800ef42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f0ca:	f1ba 0f00 	cmp.w	sl, #0
 800f0ce:	f43f af38 	beq.w	800ef42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f0d2:	2301      	movs	r3, #1
 800f0d4:	4642      	mov	r2, r8
 800f0d6:	e7da      	b.n	800f08e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

0800f0d8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800f0d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f0da:	4605      	mov	r5, r0
 800f0dc:	b08f      	sub	sp, #60	; 0x3c
 800f0de:	4617      	mov	r7, r2
 800f0e0:	461c      	mov	r4, r3
 800f0e2:	460e      	mov	r6, r1
 800f0e4:	b1d1      	cbz	r1, 800f11c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800f0e6:	681b      	ldr	r3, [r3, #0]
 800f0e8:	4620      	mov	r0, r4
 800f0ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f0ec:	4798      	blx	r3
 800f0ee:	4240      	negs	r0, r0
 800f0f0:	9603      	str	r6, [sp, #12]
 800f0f2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f0f6:	b200      	sxth	r0, r0
 800f0f8:	9700      	str	r7, [sp, #0]
 800f0fa:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f0fe:	4629      	mov	r1, r5
 800f100:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800f104:	2401      	movs	r4, #1
 800f106:	a805      	add	r0, sp, #20
 800f108:	f7ff fcbe 	bl	800ea88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800f10c:	a805      	add	r0, sp, #20
 800f10e:	f7ff fee0 	bl	800eed2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f112:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800f116:	b163      	cbz	r3, 800f132 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800f118:	3401      	adds	r4, #1
 800f11a:	e7f7      	b.n	800f10c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800f11c:	2401      	movs	r4, #1
 800f11e:	f002 fe3d 	bl	8011d9c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f122:	280a      	cmp	r0, #10
 800f124:	4628      	mov	r0, r5
 800f126:	bf08      	it	eq
 800f128:	3401      	addeq	r4, #1
 800f12a:	f002 fe37 	bl	8011d9c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f12e:	2800      	cmp	r0, #0
 800f130:	d1f7      	bne.n	800f122 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800f132:	b2a0      	uxth	r0, r4
 800f134:	b00f      	add	sp, #60	; 0x3c
 800f136:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f138 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800f138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f13c:	b0e3      	sub	sp, #396	; 0x18c
 800f13e:	461c      	mov	r4, r3
 800f140:	4683      	mov	fp, r0
 800f142:	4688      	mov	r8, r1
 800f144:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 800f146:	2b00      	cmp	r3, #0
 800f148:	f000 810f 	beq.w	800f36a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800f14c:	6823      	ldr	r3, [r4, #0]
 800f14e:	2b00      	cmp	r3, #0
 800f150:	f000 810b 	beq.w	800f36a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800f154:	7ba3      	ldrb	r3, [r4, #14]
 800f156:	2b00      	cmp	r3, #0
 800f158:	f000 8107 	beq.w	800f36a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800f15c:	ad0a      	add	r5, sp, #40	; 0x28
 800f15e:	6810      	ldr	r0, [r2, #0]
 800f160:	6851      	ldr	r1, [r2, #4]
 800f162:	462b      	mov	r3, r5
 800f164:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800f168:	c303      	stmia	r3!, {r0, r1}
 800f16a:	2100      	movs	r1, #0
 800f16c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800f170:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800f174:	4628      	mov	r0, r5
 800f176:	910c      	str	r1, [sp, #48]	; 0x30
 800f178:	a90c      	add	r1, sp, #48	; 0x30
 800f17a:	79a2      	ldrb	r2, [r4, #6]
 800f17c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f180:	f7ff fd01 	bl	800eb86 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f184:	a90c      	add	r1, sp, #48	; 0x30
 800f186:	79a2      	ldrb	r2, [r4, #6]
 800f188:	4608      	mov	r0, r1
 800f18a:	f7ff fcfc 	bl	800eb86 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f18e:	a817      	add	r0, sp, #92	; 0x5c
 800f190:	f002 f9f1 	bl	8011576 <_ZN8touchgfx12TextProviderC1Ev>
 800f194:	6820      	ldr	r0, [r4, #0]
 800f196:	6803      	ldr	r3, [r0, #0]
 800f198:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f19a:	4798      	blx	r3
 800f19c:	4606      	mov	r6, r0
 800f19e:	6820      	ldr	r0, [r4, #0]
 800f1a0:	6803      	ldr	r3, [r0, #0]
 800f1a2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f1a4:	4798      	blx	r3
 800f1a6:	4633      	mov	r3, r6
 800f1a8:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800f1aa:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800f1ac:	9000      	str	r0, [sp, #0]
 800f1ae:	a817      	add	r0, sp, #92	; 0x5c
 800f1b0:	f002 fa34 	bl	801161c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f1b4:	6820      	ldr	r0, [r4, #0]
 800f1b6:	f894 a004 	ldrb.w	sl, [r4, #4]
 800f1ba:	6803      	ldr	r3, [r0, #0]
 800f1bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f1be:	4798      	blx	r3
 800f1c0:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800f1c4:	6823      	ldr	r3, [r4, #0]
 800f1c6:	4607      	mov	r7, r0
 800f1c8:	4406      	add	r6, r0
 800f1ca:	a830      	add	r0, sp, #192	; 0xc0
 800f1cc:	f893 9009 	ldrb.w	r9, [r3, #9]
 800f1d0:	f002 f9d1 	bl	8011576 <_ZN8touchgfx12TextProviderC1Ev>
 800f1d4:	7c23      	ldrb	r3, [r4, #16]
 800f1d6:	b17b      	cbz	r3, 800f1f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800f1d8:	6820      	ldr	r0, [r4, #0]
 800f1da:	6803      	ldr	r3, [r0, #0]
 800f1dc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f1de:	4798      	blx	r3
 800f1e0:	9009      	str	r0, [sp, #36]	; 0x24
 800f1e2:	6820      	ldr	r0, [r4, #0]
 800f1e4:	6802      	ldr	r2, [r0, #0]
 800f1e6:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800f1e8:	4790      	blx	r2
 800f1ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f1ec:	9000      	str	r0, [sp, #0]
 800f1ee:	a830      	add	r0, sp, #192	; 0xc0
 800f1f0:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800f1f2:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800f1f4:	f002 fa12 	bl	801161c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f1f8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 800f1fc:	a80e      	add	r0, sp, #56	; 0x38
 800f1fe:	7be2      	ldrb	r2, [r4, #15]
 800f200:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800f204:	1a8a      	subs	r2, r1, r2
 800f206:	7c21      	ldrb	r1, [r4, #16]
 800f208:	9103      	str	r1, [sp, #12]
 800f20a:	b292      	uxth	r2, r2
 800f20c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800f210:	9102      	str	r1, [sp, #8]
 800f212:	6821      	ldr	r1, [r4, #0]
 800f214:	9101      	str	r1, [sp, #4]
 800f216:	7961      	ldrb	r1, [r4, #5]
 800f218:	9100      	str	r1, [sp, #0]
 800f21a:	a930      	add	r1, sp, #192	; 0xc0
 800f21c:	f7ff fc34 	bl	800ea88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800f220:	2e00      	cmp	r6, #0
 800f222:	dc5b      	bgt.n	800f2dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800f224:	af17      	add	r7, sp, #92	; 0x5c
 800f226:	f04f 0900 	mov.w	r9, #0
 800f22a:	7c23      	ldrb	r3, [r4, #16]
 800f22c:	2b00      	cmp	r3, #0
 800f22e:	f000 80ae 	beq.w	800f38e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800f232:	a80e      	add	r0, sp, #56	; 0x38
 800f234:	f7ff fe4d 	bl	800eed2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f238:	f1ba 0f00 	cmp.w	sl, #0
 800f23c:	f000 80a2 	beq.w	800f384 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
 800f240:	7c23      	ldrb	r3, [r4, #16]
 800f242:	2264      	movs	r2, #100	; 0x64
 800f244:	4639      	mov	r1, r7
 800f246:	a849      	add	r0, sp, #292	; 0x124
 800f248:	9309      	str	r3, [sp, #36]	; 0x24
 800f24a:	f00d fc31 	bl	801cab0 <memcpy>
 800f24e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f250:	2b00      	cmp	r3, #0
 800f252:	f000 80a4 	beq.w	800f39e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x266>
 800f256:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800f25a:	7922      	ldrb	r2, [r4, #4]
 800f25c:	2a01      	cmp	r2, #1
 800f25e:	f040 8087 	bne.w	800f370 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f262:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 800f266:	1ac0      	subs	r0, r0, r3
 800f268:	2302      	movs	r3, #2
 800f26a:	fb90 f0f3 	sdiv	r0, r0, r3
 800f26e:	b200      	sxth	r0, r0
 800f270:	7c23      	ldrb	r3, [r4, #16]
 800f272:	2b00      	cmp	r3, #0
 800f274:	f000 8088 	beq.w	800f388 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x250>
 800f278:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 800f27c:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 800f280:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f284:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800f288:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 800f28c:	2100      	movs	r1, #0
 800f28e:	4410      	add	r0, r2
 800f290:	4642      	mov	r2, r8
 800f292:	b200      	sxth	r0, r0
 800f294:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800f298:	9000      	str	r0, [sp, #0]
 800f29a:	4658      	mov	r0, fp
 800f29c:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800f2a0:	f7ff fca2 	bl	800ebe8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800f2a4:	2800      	cmp	r0, #0
 800f2a6:	d160      	bne.n	800f36a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800f2a8:	b2b2      	uxth	r2, r6
 800f2aa:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800f2ae:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800f2b2:	4413      	add	r3, r2
 800f2b4:	1a8a      	subs	r2, r1, r2
 800f2b6:	b21b      	sxth	r3, r3
 800f2b8:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 800f2bc:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 800f2c0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f2c4:	2a00      	cmp	r2, #0
 800f2c6:	d150      	bne.n	800f36a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800f2c8:	6822      	ldr	r2, [r4, #0]
 800f2ca:	8869      	ldrh	r1, [r5, #2]
 800f2cc:	7a12      	ldrb	r2, [r2, #8]
 800f2ce:	1a9b      	subs	r3, r3, r2
 800f2d0:	88ea      	ldrh	r2, [r5, #6]
 800f2d2:	440a      	add	r2, r1
 800f2d4:	b212      	sxth	r2, r2
 800f2d6:	4293      	cmp	r3, r2
 800f2d8:	dda7      	ble.n	800f22a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800f2da:	e046      	b.n	800f36a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800f2dc:	7c23      	ldrb	r3, [r4, #16]
 800f2de:	444f      	add	r7, r9
 800f2e0:	b1c3      	cbz	r3, 800f314 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800f2e2:	f64f 79ff 	movw	r9, #65535	; 0xffff
 800f2e6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f2ea:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f2ee:	443b      	add	r3, r7
 800f2f0:	4293      	cmp	r3, r2
 800f2f2:	da97      	bge.n	800f224 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800f2f4:	a80e      	add	r0, sp, #56	; 0x38
 800f2f6:	f7ff fdec 	bl	800eed2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f2fa:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 800f2fe:	3b01      	subs	r3, #1
 800f300:	b29b      	uxth	r3, r3
 800f302:	454b      	cmp	r3, r9
 800f304:	9309      	str	r3, [sp, #36]	; 0x24
 800f306:	d021      	beq.n	800f34c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800f308:	7961      	ldrb	r1, [r4, #5]
 800f30a:	a817      	add	r0, sp, #92	; 0x5c
 800f30c:	f7f3 fec6 	bl	800309c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f310:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f312:	e7f4      	b.n	800f2fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800f314:	fa1f f986 	uxth.w	r9, r6
 800f318:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f31c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f320:	443b      	add	r3, r7
 800f322:	4293      	cmp	r3, r2
 800f324:	f6bf af7e 	bge.w	800f224 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800f328:	a817      	add	r0, sp, #92	; 0x5c
 800f32a:	f002 fd37 	bl	8011d9c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f32e:	b1e0      	cbz	r0, 800f36a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800f330:	280a      	cmp	r0, #10
 800f332:	d1f1      	bne.n	800f318 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800f334:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800f338:	444b      	add	r3, r9
 800f33a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f33e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800f342:	eba3 0309 	sub.w	r3, r3, r9
 800f346:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f34a:	e7e5      	b.n	800f318 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800f34c:	b2b3      	uxth	r3, r6
 800f34e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 800f352:	441a      	add	r2, r3
 800f354:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800f358:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 800f35c:	1ad3      	subs	r3, r2, r3
 800f35e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f362:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800f366:	2b00      	cmp	r3, #0
 800f368:	d1bd      	bne.n	800f2e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800f36a:	b063      	add	sp, #396	; 0x18c
 800f36c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f370:	2a02      	cmp	r2, #2
 800f372:	d105      	bne.n	800f380 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800f374:	7be2      	ldrb	r2, [r4, #15]
 800f376:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800f37a:	1a80      	subs	r0, r0, r2
 800f37c:	1ac0      	subs	r0, r0, r3
 800f37e:	e776      	b.n	800f26e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800f380:	2000      	movs	r0, #0
 800f382:	e775      	b.n	800f270 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800f384:	7be0      	ldrb	r0, [r4, #15]
 800f386:	e773      	b.n	800f270 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800f388:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f38c:	e776      	b.n	800f27c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800f38e:	f1ba 0f00 	cmp.w	sl, #0
 800f392:	d0f7      	beq.n	800f384 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
 800f394:	2264      	movs	r2, #100	; 0x64
 800f396:	4639      	mov	r1, r7
 800f398:	a849      	add	r0, sp, #292	; 0x124
 800f39a:	f00d fb89 	bl	801cab0 <memcpy>
 800f39e:	2300      	movs	r3, #0
 800f3a0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f3a4:	6821      	ldr	r1, [r4, #0]
 800f3a6:	a849      	add	r0, sp, #292	; 0x124
 800f3a8:	f7ff fbb1 	bl	800eb0e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800f3ac:	b203      	sxth	r3, r0
 800f3ae:	e754      	b.n	800f25a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800f3b0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f3b0:	2b03      	cmp	r3, #3
 800f3b2:	d818      	bhi.n	800f3e6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f3b4:	e8df f003 	tbb	[pc, r3]
 800f3b8:	130d0602 	.word	0x130d0602
 800f3bc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f3c0:	1850      	adds	r0, r2, r1
 800f3c2:	4770      	bx	lr
 800f3c4:	8803      	ldrh	r3, [r0, #0]
 800f3c6:	8880      	ldrh	r0, [r0, #4]
 800f3c8:	4418      	add	r0, r3
 800f3ca:	b200      	sxth	r0, r0
 800f3cc:	1a80      	subs	r0, r0, r2
 800f3ce:	3801      	subs	r0, #1
 800f3d0:	4770      	bx	lr
 800f3d2:	8803      	ldrh	r3, [r0, #0]
 800f3d4:	8880      	ldrh	r0, [r0, #4]
 800f3d6:	4418      	add	r0, r3
 800f3d8:	b200      	sxth	r0, r0
 800f3da:	1a40      	subs	r0, r0, r1
 800f3dc:	e7f7      	b.n	800f3ce <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f3de:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f3e2:	4410      	add	r0, r2
 800f3e4:	4770      	bx	lr
 800f3e6:	2000      	movs	r0, #0
 800f3e8:	4770      	bx	lr

0800f3ea <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f3ea:	2b03      	cmp	r3, #3
 800f3ec:	d817      	bhi.n	800f41e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f3ee:	e8df f003 	tbb	[pc, r3]
 800f3f2:	0602      	.short	0x0602
 800f3f4:	1009      	.short	0x1009
 800f3f6:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f3fa:	1850      	adds	r0, r2, r1
 800f3fc:	4770      	bx	lr
 800f3fe:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f402:	e7fa      	b.n	800f3fa <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f404:	8843      	ldrh	r3, [r0, #2]
 800f406:	88c0      	ldrh	r0, [r0, #6]
 800f408:	4418      	add	r0, r3
 800f40a:	b200      	sxth	r0, r0
 800f40c:	1a80      	subs	r0, r0, r2
 800f40e:	3801      	subs	r0, #1
 800f410:	4770      	bx	lr
 800f412:	8843      	ldrh	r3, [r0, #2]
 800f414:	88c0      	ldrh	r0, [r0, #6]
 800f416:	4418      	add	r0, r3
 800f418:	b200      	sxth	r0, r0
 800f41a:	1a40      	subs	r0, r0, r1
 800f41c:	e7f7      	b.n	800f40e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f41e:	2000      	movs	r0, #0
 800f420:	4770      	bx	lr
	...

0800f424 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f424:	4b01      	ldr	r3, [pc, #4]	; (800f42c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f426:	2200      	movs	r2, #0
 800f428:	601a      	str	r2, [r3, #0]
 800f42a:	4770      	bx	lr
 800f42c:	2400895c 	.word	0x2400895c

0800f430 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f430:	4603      	mov	r3, r0
 800f432:	b1c8      	cbz	r0, 800f468 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f434:	0c02      	lsrs	r2, r0, #16
 800f436:	0412      	lsls	r2, r2, #16
 800f438:	b9a2      	cbnz	r2, 800f464 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f43a:	0403      	lsls	r3, r0, #16
 800f43c:	2010      	movs	r0, #16
 800f43e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800f442:	bf04      	itt	eq
 800f444:	021b      	lsleq	r3, r3, #8
 800f446:	3008      	addeq	r0, #8
 800f448:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800f44c:	bf04      	itt	eq
 800f44e:	011b      	lsleq	r3, r3, #4
 800f450:	3004      	addeq	r0, #4
 800f452:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800f456:	bf04      	itt	eq
 800f458:	009b      	lsleq	r3, r3, #2
 800f45a:	3002      	addeq	r0, #2
 800f45c:	2b00      	cmp	r3, #0
 800f45e:	db04      	blt.n	800f46a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f460:	3001      	adds	r0, #1
 800f462:	4770      	bx	lr
 800f464:	2000      	movs	r0, #0
 800f466:	e7ea      	b.n	800f43e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f468:	2020      	movs	r0, #32
 800f46a:	4770      	bx	lr

0800f46c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f46c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f470:	b087      	sub	sp, #28
 800f472:	4681      	mov	r9, r0
 800f474:	4698      	mov	r8, r3
 800f476:	4610      	mov	r0, r2
 800f478:	460d      	mov	r5, r1
 800f47a:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800f47e:	b981      	cbnz	r1, 800f4a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800f480:	b14b      	cbz	r3, 800f496 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800f482:	460b      	mov	r3, r1
 800f484:	464a      	mov	r2, r9
 800f486:	4641      	mov	r1, r8
 800f488:	e9cd 4700 	strd	r4, r7, [sp]
 800f48c:	f7ff ffee 	bl	800f46c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f490:	b007      	add	sp, #28
 800f492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f496:	f04f 33ff 	mov.w	r3, #4294967295
 800f49a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800f49e:	603b      	str	r3, [r7, #0]
 800f4a0:	e7f6      	b.n	800f490 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800f4a2:	fa32 fa01 	lsrs.w	sl, r2, r1
 800f4a6:	d107      	bne.n	800f4b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800f4a8:	fb09 f602 	mul.w	r6, r9, r2
 800f4ac:	fbb6 f0f4 	udiv	r0, r6, r4
 800f4b0:	fb04 6610 	mls	r6, r4, r0, r6
 800f4b4:	603e      	str	r6, [r7, #0]
 800f4b6:	e7eb      	b.n	800f490 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800f4b8:	2601      	movs	r6, #1
 800f4ba:	fa09 fb01 	lsl.w	fp, r9, r1
 800f4be:	408e      	lsls	r6, r1
 800f4c0:	fbbb f3f4 	udiv	r3, fp, r4
 800f4c4:	3e01      	subs	r6, #1
 800f4c6:	9302      	str	r3, [sp, #8]
 800f4c8:	fb0a f303 	mul.w	r3, sl, r3
 800f4cc:	4016      	ands	r6, r2
 800f4ce:	9303      	str	r3, [sp, #12]
 800f4d0:	4630      	mov	r0, r6
 800f4d2:	f7ff ffad 	bl	800f430 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f4d6:	464a      	mov	r2, r9
 800f4d8:	460b      	mov	r3, r1
 800f4da:	4601      	mov	r1, r0
 800f4dc:	4630      	mov	r0, r6
 800f4de:	e9cd 4700 	strd	r4, r7, [sp]
 800f4e2:	f7ff ffc3 	bl	800f46c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f4e6:	9b02      	ldr	r3, [sp, #8]
 800f4e8:	4606      	mov	r6, r0
 800f4ea:	eb05 0108 	add.w	r1, r5, r8
 800f4ee:	fb04 bb13 	mls	fp, r4, r3, fp
 800f4f2:	4658      	mov	r0, fp
 800f4f4:	f7ff ff9c 	bl	800f430 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f4f8:	ab05      	add	r3, sp, #20
 800f4fa:	465a      	mov	r2, fp
 800f4fc:	e9cd 4300 	strd	r4, r3, [sp]
 800f500:	4603      	mov	r3, r0
 800f502:	4650      	mov	r0, sl
 800f504:	f7ff ffb2 	bl	800f46c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f508:	6839      	ldr	r1, [r7, #0]
 800f50a:	9a05      	ldr	r2, [sp, #20]
 800f50c:	9b03      	ldr	r3, [sp, #12]
 800f50e:	4411      	add	r1, r2
 800f510:	fbb1 f2f4 	udiv	r2, r1, r4
 800f514:	18d3      	adds	r3, r2, r3
 800f516:	fb04 1412 	mls	r4, r4, r2, r1
 800f51a:	441e      	add	r6, r3
 800f51c:	603c      	str	r4, [r7, #0]
 800f51e:	4430      	add	r0, r6
 800f520:	e7b6      	b.n	800f490 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800f522 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f522:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f526:	b085      	sub	sp, #20
 800f528:	f1b0 0900 	subs.w	r9, r0, #0
 800f52c:	461d      	mov	r5, r3
 800f52e:	4617      	mov	r7, r2
 800f530:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f532:	bfbb      	ittet	lt
 800f534:	f1c9 0900 	rsblt	r9, r9, #0
 800f538:	f04f 36ff 	movlt.w	r6, #4294967295
 800f53c:	2601      	movge	r6, #1
 800f53e:	6823      	ldrlt	r3, [r4, #0]
 800f540:	bfbc      	itt	lt
 800f542:	425b      	neglt	r3, r3
 800f544:	6023      	strlt	r3, [r4, #0]
 800f546:	2a00      	cmp	r2, #0
 800f548:	da04      	bge.n	800f554 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f54a:	6823      	ldr	r3, [r4, #0]
 800f54c:	4257      	negs	r7, r2
 800f54e:	4276      	negs	r6, r6
 800f550:	425b      	negs	r3, r3
 800f552:	6023      	str	r3, [r4, #0]
 800f554:	2d00      	cmp	r5, #0
 800f556:	4638      	mov	r0, r7
 800f558:	bfba      	itte	lt
 800f55a:	426d      	neglt	r5, r5
 800f55c:	f04f 38ff 	movlt.w	r8, #4294967295
 800f560:	f04f 0801 	movge.w	r8, #1
 800f564:	f7ff ff64 	bl	800f430 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f568:	ab03      	add	r3, sp, #12
 800f56a:	463a      	mov	r2, r7
 800f56c:	e9cd 5300 	strd	r5, r3, [sp]
 800f570:	4603      	mov	r3, r0
 800f572:	4648      	mov	r0, r9
 800f574:	f7ff ff7a 	bl	800f46c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f578:	6823      	ldr	r3, [r4, #0]
 800f57a:	9a03      	ldr	r2, [sp, #12]
 800f57c:	4546      	cmp	r6, r8
 800f57e:	441a      	add	r2, r3
 800f580:	fb92 f3f5 	sdiv	r3, r2, r5
 800f584:	4418      	add	r0, r3
 800f586:	fb05 2313 	mls	r3, r5, r3, r2
 800f58a:	bf18      	it	ne
 800f58c:	4240      	negne	r0, r0
 800f58e:	1c72      	adds	r2, r6, #1
 800f590:	6023      	str	r3, [r4, #0]
 800f592:	d105      	bne.n	800f5a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800f594:	2b00      	cmp	r3, #0
 800f596:	f1c3 0200 	rsb	r2, r3, #0
 800f59a:	db0b      	blt.n	800f5b4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800f59c:	6022      	str	r2, [r4, #0]
 800f59e:	e006      	b.n	800f5ae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f5a0:	2e01      	cmp	r6, #1
 800f5a2:	d104      	bne.n	800f5ae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f5a4:	2b00      	cmp	r3, #0
 800f5a6:	da02      	bge.n	800f5ae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f5a8:	442b      	add	r3, r5
 800f5aa:	3801      	subs	r0, #1
 800f5ac:	6023      	str	r3, [r4, #0]
 800f5ae:	b005      	add	sp, #20
 800f5b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f5b4:	3801      	subs	r0, #1
 800f5b6:	1b52      	subs	r2, r2, r5
 800f5b8:	e7f0      	b.n	800f59c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800f5bc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800f5bc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f5c0:	4c1c      	ldr	r4, [pc, #112]	; (800f634 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800f5c2:	4605      	mov	r5, r0
 800f5c4:	6807      	ldr	r7, [r0, #0]
 800f5c6:	69a3      	ldr	r3, [r4, #24]
 800f5c8:	b92b      	cbnz	r3, 800f5d6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800f5ca:	6840      	ldr	r0, [r0, #4]
 800f5cc:	e9c5 7000 	strd	r7, r0, [r5]
 800f5d0:	b004      	add	sp, #16
 800f5d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f5d6:	f04f 0802 	mov.w	r8, #2
 800f5da:	68a2      	ldr	r2, [r4, #8]
 800f5dc:	ae04      	add	r6, sp, #16
 800f5de:	6820      	ldr	r0, [r4, #0]
 800f5e0:	fb93 f1f8 	sdiv	r1, r3, r8
 800f5e4:	440a      	add	r2, r1
 800f5e6:	69e1      	ldr	r1, [r4, #28]
 800f5e8:	f846 2d04 	str.w	r2, [r6, #-4]!
 800f5ec:	463a      	mov	r2, r7
 800f5ee:	9600      	str	r6, [sp, #0]
 800f5f0:	f7ff ff97 	bl	800f522 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f5f4:	69a3      	ldr	r3, [r4, #24]
 800f5f6:	4607      	mov	r7, r0
 800f5f8:	686a      	ldr	r2, [r5, #4]
 800f5fa:	6a21      	ldr	r1, [r4, #32]
 800f5fc:	9600      	str	r6, [sp, #0]
 800f5fe:	6860      	ldr	r0, [r4, #4]
 800f600:	f7ff ff8f 	bl	800f522 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f604:	69a3      	ldr	r3, [r4, #24]
 800f606:	6962      	ldr	r2, [r4, #20]
 800f608:	4407      	add	r7, r0
 800f60a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800f60c:	9600      	str	r6, [sp, #0]
 800f60e:	68e0      	ldr	r0, [r4, #12]
 800f610:	fb93 f8f8 	sdiv	r8, r3, r8
 800f614:	4442      	add	r2, r8
 800f616:	9203      	str	r2, [sp, #12]
 800f618:	682a      	ldr	r2, [r5, #0]
 800f61a:	f7ff ff82 	bl	800f522 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f61e:	4680      	mov	r8, r0
 800f620:	9600      	str	r6, [sp, #0]
 800f622:	69a3      	ldr	r3, [r4, #24]
 800f624:	686a      	ldr	r2, [r5, #4]
 800f626:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800f628:	6920      	ldr	r0, [r4, #16]
 800f62a:	f7ff ff7a 	bl	800f522 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f62e:	4440      	add	r0, r8
 800f630:	e7cc      	b.n	800f5cc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800f632:	bf00      	nop
 800f634:	24008960 	.word	0x24008960

0800f638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800f638:	4b07      	ldr	r3, [pc, #28]	; (800f658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800f63a:	781b      	ldrb	r3, [r3, #0]
 800f63c:	2b01      	cmp	r3, #1
 800f63e:	d109      	bne.n	800f654 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800f640:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f644:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f648:	8003      	strh	r3, [r0, #0]
 800f64a:	4b04      	ldr	r3, [pc, #16]	; (800f65c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800f64c:	881b      	ldrh	r3, [r3, #0]
 800f64e:	3b01      	subs	r3, #1
 800f650:	1a9b      	subs	r3, r3, r2
 800f652:	800b      	strh	r3, [r1, #0]
 800f654:	4770      	bx	lr
 800f656:	bf00      	nop
 800f658:	24008944 	.word	0x24008944
 800f65c:	24008940 	.word	0x24008940

0800f660 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800f660:	4b07      	ldr	r3, [pc, #28]	; (800f680 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800f662:	b510      	push	{r4, lr}
 800f664:	781b      	ldrb	r3, [r3, #0]
 800f666:	2b01      	cmp	r3, #1
 800f668:	d108      	bne.n	800f67c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800f66a:	4b06      	ldr	r3, [pc, #24]	; (800f684 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800f66c:	880c      	ldrh	r4, [r1, #0]
 800f66e:	881b      	ldrh	r3, [r3, #0]
 800f670:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f674:	3b01      	subs	r3, #1
 800f676:	1b1b      	subs	r3, r3, r4
 800f678:	8003      	strh	r3, [r0, #0]
 800f67a:	800a      	strh	r2, [r1, #0]
 800f67c:	bd10      	pop	{r4, pc}
 800f67e:	bf00      	nop
 800f680:	24008944 	.word	0x24008944
 800f684:	24008940 	.word	0x24008940

0800f688 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800f688:	4b0a      	ldr	r3, [pc, #40]	; (800f6b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800f68a:	b510      	push	{r4, lr}
 800f68c:	781b      	ldrb	r3, [r3, #0]
 800f68e:	2b01      	cmp	r3, #1
 800f690:	d10e      	bne.n	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800f692:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f696:	8843      	ldrh	r3, [r0, #2]
 800f698:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f69c:	18ca      	adds	r2, r1, r3
 800f69e:	4b06      	ldr	r3, [pc, #24]	; (800f6b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800f6a0:	8044      	strh	r4, [r0, #2]
 800f6a2:	881b      	ldrh	r3, [r3, #0]
 800f6a4:	1a9b      	subs	r3, r3, r2
 800f6a6:	8003      	strh	r3, [r0, #0]
 800f6a8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f6ac:	8081      	strh	r1, [r0, #4]
 800f6ae:	80c3      	strh	r3, [r0, #6]
 800f6b0:	bd10      	pop	{r4, pc}
 800f6b2:	bf00      	nop
 800f6b4:	24008944 	.word	0x24008944
 800f6b8:	24008940 	.word	0x24008940

0800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800f6bc:	4b08      	ldr	r3, [pc, #32]	; (800f6e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800f6be:	781b      	ldrb	r3, [r3, #0]
 800f6c0:	2b01      	cmp	r3, #1
 800f6c2:	d10c      	bne.n	800f6de <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800f6c4:	8803      	ldrh	r3, [r0, #0]
 800f6c6:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800f6ca:	8842      	ldrh	r2, [r0, #2]
 800f6cc:	8002      	strh	r2, [r0, #0]
 800f6ce:	185a      	adds	r2, r3, r1
 800f6d0:	4b04      	ldr	r3, [pc, #16]	; (800f6e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800f6d2:	881b      	ldrh	r3, [r3, #0]
 800f6d4:	1a9b      	subs	r3, r3, r2
 800f6d6:	8043      	strh	r3, [r0, #2]
 800f6d8:	88c3      	ldrh	r3, [r0, #6]
 800f6da:	80c1      	strh	r1, [r0, #6]
 800f6dc:	8083      	strh	r3, [r0, #4]
 800f6de:	4770      	bx	lr
 800f6e0:	24008944 	.word	0x24008944
 800f6e4:	24008940 	.word	0x24008940

0800f6e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800f6e8:	4b07      	ldr	r3, [pc, #28]	; (800f708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800f6ea:	b510      	push	{r4, lr}
 800f6ec:	781b      	ldrb	r3, [r3, #0]
 800f6ee:	2b01      	cmp	r3, #1
 800f6f0:	d108      	bne.n	800f704 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800f6f2:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f6f6:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f6fa:	8003      	strh	r3, [r0, #0]
 800f6fc:	8893      	ldrh	r3, [r2, #4]
 800f6fe:	3b01      	subs	r3, #1
 800f700:	1b1b      	subs	r3, r3, r4
 800f702:	800b      	strh	r3, [r1, #0]
 800f704:	bd10      	pop	{r4, pc}
 800f706:	bf00      	nop
 800f708:	24008944 	.word	0x24008944

0800f70c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800f70c:	4b0b      	ldr	r3, [pc, #44]	; (800f73c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800f70e:	781b      	ldrb	r3, [r3, #0]
 800f710:	2b01      	cmp	r3, #1
 800f712:	d111      	bne.n	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800f714:	680b      	ldr	r3, [r1, #0]
 800f716:	ed90 7a00 	vldr	s14, [r0]
 800f71a:	6003      	str	r3, [r0, #0]
 800f71c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800f720:	eddf 6a07 	vldr	s13, [pc, #28]	; 800f740 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800f724:	ee07 3a90 	vmov	s15, r3
 800f728:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f72c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f730:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800f734:	edc1 7a00 	vstr	s15, [r1]
 800f738:	4770      	bx	lr
 800f73a:	bf00      	nop
 800f73c:	24008944 	.word	0x24008944
 800f740:	38d1b717 	.word	0x38d1b717

0800f744 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800f744:	4b0a      	ldr	r3, [pc, #40]	; (800f770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800f746:	460a      	mov	r2, r1
 800f748:	b510      	push	{r4, lr}
 800f74a:	781b      	ldrb	r3, [r3, #0]
 800f74c:	2b01      	cmp	r3, #1
 800f74e:	d10d      	bne.n	800f76c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800f750:	8881      	ldrh	r1, [r0, #4]
 800f752:	8803      	ldrh	r3, [r0, #0]
 800f754:	440b      	add	r3, r1
 800f756:	4601      	mov	r1, r0
 800f758:	3b01      	subs	r3, #1
 800f75a:	f821 3b02 	strh.w	r3, [r1], #2
 800f75e:	f7ff ffc3 	bl	800f6e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800f762:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f766:	88c2      	ldrh	r2, [r0, #6]
 800f768:	80c3      	strh	r3, [r0, #6]
 800f76a:	8082      	strh	r2, [r0, #4]
 800f76c:	bd10      	pop	{r4, pc}
 800f76e:	bf00      	nop
 800f770:	24008944 	.word	0x24008944

0800f774 <_ZN8touchgfx11Application13requestRedrawEv>:
 800f774:	4b06      	ldr	r3, [pc, #24]	; (800f790 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800f776:	2100      	movs	r1, #0
 800f778:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f77c:	4b05      	ldr	r3, [pc, #20]	; (800f794 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800f77e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 800f782:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f786:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 800f78a:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 800f78e:	4770      	bx	lr
 800f790:	24008940 	.word	0x24008940
 800f794:	24008942 	.word	0x24008942

0800f798 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800f798:	4b03      	ldr	r3, [pc, #12]	; (800f7a8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800f79a:	6818      	ldr	r0, [r3, #0]
 800f79c:	b110      	cbz	r0, 800f7a4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800f79e:	6803      	ldr	r3, [r0, #0]
 800f7a0:	699b      	ldr	r3, [r3, #24]
 800f7a2:	4718      	bx	r3
 800f7a4:	4770      	bx	lr
 800f7a6:	bf00      	nop
 800f7a8:	24008990 	.word	0x24008990

0800f7ac <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800f7ac:	4770      	bx	lr
	...

0800f7b0 <_ZN8touchgfx11Application4drawEv>:
 800f7b0:	4b09      	ldr	r3, [pc, #36]	; (800f7d8 <_ZN8touchgfx11Application4drawEv+0x28>)
 800f7b2:	b507      	push	{r0, r1, r2, lr}
 800f7b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f7b8:	2100      	movs	r1, #0
 800f7ba:	4b08      	ldr	r3, [pc, #32]	; (800f7dc <_ZN8touchgfx11Application4drawEv+0x2c>)
 800f7bc:	9100      	str	r1, [sp, #0]
 800f7be:	4669      	mov	r1, sp
 800f7c0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f7c4:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f7c8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f7cc:	6803      	ldr	r3, [r0, #0]
 800f7ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f7d0:	4798      	blx	r3
 800f7d2:	b003      	add	sp, #12
 800f7d4:	f85d fb04 	ldr.w	pc, [sp], #4
 800f7d8:	24008940 	.word	0x24008940
 800f7dc:	24008942 	.word	0x24008942

0800f7e0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800f7e0:	4b03      	ldr	r3, [pc, #12]	; (800f7f0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800f7e2:	6818      	ldr	r0, [r3, #0]
 800f7e4:	b110      	cbz	r0, 800f7ec <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800f7e6:	6803      	ldr	r3, [r0, #0]
 800f7e8:	69db      	ldr	r3, [r3, #28]
 800f7ea:	4718      	bx	r3
 800f7ec:	4770      	bx	lr
 800f7ee:	bf00      	nop
 800f7f0:	24008990 	.word	0x24008990

0800f7f4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800f7f4:	4b03      	ldr	r3, [pc, #12]	; (800f804 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800f7f6:	6818      	ldr	r0, [r3, #0]
 800f7f8:	b110      	cbz	r0, 800f800 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800f7fa:	6803      	ldr	r3, [r0, #0]
 800f7fc:	6a1b      	ldr	r3, [r3, #32]
 800f7fe:	4718      	bx	r3
 800f800:	4770      	bx	lr
 800f802:	bf00      	nop
 800f804:	24008990 	.word	0x24008990

0800f808 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800f808:	2300      	movs	r3, #0
 800f80a:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 800f80e:	4770      	bx	lr

0800f810 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800f810:	4b03      	ldr	r3, [pc, #12]	; (800f820 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800f812:	6818      	ldr	r0, [r3, #0]
 800f814:	b110      	cbz	r0, 800f81c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800f816:	6803      	ldr	r3, [r0, #0]
 800f818:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f81a:	4718      	bx	r3
 800f81c:	4770      	bx	lr
 800f81e:	bf00      	nop
 800f820:	24008990 	.word	0x24008990

0800f824 <_ZN8touchgfx11ApplicationD1Ev>:
 800f824:	4770      	bx	lr

0800f826 <_ZN8touchgfx11ApplicationD0Ev>:
 800f826:	b510      	push	{r4, lr}
 800f828:	4604      	mov	r4, r0
 800f82a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f82e:	f00c fdea 	bl	801c406 <_ZdlPvj>
 800f832:	4620      	mov	r0, r4
 800f834:	bd10      	pop	{r4, pc}

0800f836 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800f836:	b510      	push	{r4, lr}
 800f838:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f83c:	888a      	ldrh	r2, [r1, #4]
 800f83e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f842:	4422      	add	r2, r4
 800f844:	b212      	sxth	r2, r2
 800f846:	4293      	cmp	r3, r2
 800f848:	da15      	bge.n	800f876 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f84a:	8882      	ldrh	r2, [r0, #4]
 800f84c:	4413      	add	r3, r2
 800f84e:	b21b      	sxth	r3, r3
 800f850:	429c      	cmp	r4, r3
 800f852:	da10      	bge.n	800f876 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f854:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f858:	88c9      	ldrh	r1, [r1, #6]
 800f85a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f85e:	4419      	add	r1, r3
 800f860:	b209      	sxth	r1, r1
 800f862:	428a      	cmp	r2, r1
 800f864:	da07      	bge.n	800f876 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f866:	88c0      	ldrh	r0, [r0, #6]
 800f868:	4410      	add	r0, r2
 800f86a:	b200      	sxth	r0, r0
 800f86c:	4283      	cmp	r3, r0
 800f86e:	bfac      	ite	ge
 800f870:	2000      	movge	r0, #0
 800f872:	2001      	movlt	r0, #1
 800f874:	bd10      	pop	{r4, pc}
 800f876:	2000      	movs	r0, #0
 800f878:	e7fc      	b.n	800f874 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800f87a <_ZN8touchgfx4Rect10restrictToEss>:
 800f87a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f87e:	2b00      	cmp	r3, #0
 800f880:	b510      	push	{r4, lr}
 800f882:	da04      	bge.n	800f88e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800f884:	8884      	ldrh	r4, [r0, #4]
 800f886:	4423      	add	r3, r4
 800f888:	8083      	strh	r3, [r0, #4]
 800f88a:	2300      	movs	r3, #0
 800f88c:	8003      	strh	r3, [r0, #0]
 800f88e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f892:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f896:	1b09      	subs	r1, r1, r4
 800f898:	428b      	cmp	r3, r1
 800f89a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f89e:	bfc8      	it	gt
 800f8a0:	8081      	strhgt	r1, [r0, #4]
 800f8a2:	2b00      	cmp	r3, #0
 800f8a4:	da04      	bge.n	800f8b0 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800f8a6:	88c1      	ldrh	r1, [r0, #6]
 800f8a8:	440b      	add	r3, r1
 800f8aa:	80c3      	strh	r3, [r0, #6]
 800f8ac:	2300      	movs	r3, #0
 800f8ae:	8043      	strh	r3, [r0, #2]
 800f8b0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f8b4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f8b8:	1a52      	subs	r2, r2, r1
 800f8ba:	4293      	cmp	r3, r2
 800f8bc:	bfc8      	it	gt
 800f8be:	80c2      	strhgt	r2, [r0, #6]
 800f8c0:	bd10      	pop	{r4, pc}
	...

0800f8c4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800f8c4:	4b10      	ldr	r3, [pc, #64]	; (800f908 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800f8c6:	b510      	push	{r4, lr}
 800f8c8:	460c      	mov	r4, r1
 800f8ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f8ce:	4b0f      	ldr	r3, [pc, #60]	; (800f90c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800f8d0:	4620      	mov	r0, r4
 800f8d2:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f8d6:	f7ff ffd0 	bl	800f87a <_ZN8touchgfx4Rect10restrictToEss>
 800f8da:	4b0d      	ldr	r3, [pc, #52]	; (800f910 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800f8dc:	6818      	ldr	r0, [r3, #0]
 800f8de:	b190      	cbz	r0, 800f906 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800f8e0:	6803      	ldr	r3, [r0, #0]
 800f8e2:	4621      	mov	r1, r4
 800f8e4:	689b      	ldr	r3, [r3, #8]
 800f8e6:	4798      	blx	r3
 800f8e8:	4b0a      	ldr	r3, [pc, #40]	; (800f914 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800f8ea:	6818      	ldr	r0, [r3, #0]
 800f8ec:	b118      	cbz	r0, 800f8f6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800f8ee:	6803      	ldr	r3, [r0, #0]
 800f8f0:	4621      	mov	r1, r4
 800f8f2:	689b      	ldr	r3, [r3, #8]
 800f8f4:	4798      	blx	r3
 800f8f6:	4b08      	ldr	r3, [pc, #32]	; (800f918 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800f8f8:	4621      	mov	r1, r4
 800f8fa:	6818      	ldr	r0, [r3, #0]
 800f8fc:	6803      	ldr	r3, [r0, #0]
 800f8fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f902:	69db      	ldr	r3, [r3, #28]
 800f904:	4718      	bx	r3
 800f906:	bd10      	pop	{r4, pc}
 800f908:	24008942 	.word	0x24008942
 800f90c:	24008940 	.word	0x24008940
 800f910:	24008990 	.word	0x24008990
 800f914:	2400898c 	.word	0x2400898c
 800f918:	2400894c 	.word	0x2400894c

0800f91c <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f91c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f91e:	4606      	mov	r6, r0
 800f920:	4608      	mov	r0, r1
 800f922:	460f      	mov	r7, r1
 800f924:	f7fb f8b5 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f928:	b9e8      	cbnz	r0, 800f966 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f92a:	f9b7 5000 	ldrsh.w	r5, [r7]
 800f92e:	f9b6 4000 	ldrsh.w	r4, [r6]
 800f932:	42a5      	cmp	r5, r4
 800f934:	db17      	blt.n	800f966 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f936:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f93a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800f93e:	429a      	cmp	r2, r3
 800f940:	db11      	blt.n	800f966 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f942:	88b9      	ldrh	r1, [r7, #4]
 800f944:	440d      	add	r5, r1
 800f946:	88b1      	ldrh	r1, [r6, #4]
 800f948:	440c      	add	r4, r1
 800f94a:	b22d      	sxth	r5, r5
 800f94c:	b224      	sxth	r4, r4
 800f94e:	42a5      	cmp	r5, r4
 800f950:	dc09      	bgt.n	800f966 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f952:	88f8      	ldrh	r0, [r7, #6]
 800f954:	4410      	add	r0, r2
 800f956:	88f2      	ldrh	r2, [r6, #6]
 800f958:	4413      	add	r3, r2
 800f95a:	b200      	sxth	r0, r0
 800f95c:	b21b      	sxth	r3, r3
 800f95e:	4298      	cmp	r0, r3
 800f960:	bfcc      	ite	gt
 800f962:	2000      	movgt	r0, #0
 800f964:	2001      	movle	r0, #1
 800f966:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f968 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800f968:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f96a:	4604      	mov	r4, r0
 800f96c:	4608      	mov	r0, r1
 800f96e:	460d      	mov	r5, r1
 800f970:	f7fb f88f 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f974:	b978      	cbnz	r0, 800f996 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800f976:	4620      	mov	r0, r4
 800f978:	f7fb f88b 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f97c:	f9b5 6000 	ldrsh.w	r6, [r5]
 800f980:	b150      	cbz	r0, 800f998 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800f982:	8026      	strh	r6, [r4, #0]
 800f984:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f988:	8063      	strh	r3, [r4, #2]
 800f98a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800f98e:	80a3      	strh	r3, [r4, #4]
 800f990:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f994:	80e3      	strh	r3, [r4, #6]
 800f996:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f998:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f99c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f9a0:	42b1      	cmp	r1, r6
 800f9a2:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f9a6:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800f9aa:	460f      	mov	r7, r1
 800f9ac:	88ed      	ldrh	r5, [r5, #6]
 800f9ae:	bfa8      	it	ge
 800f9b0:	4637      	movge	r7, r6
 800f9b2:	4293      	cmp	r3, r2
 800f9b4:	4618      	mov	r0, r3
 800f9b6:	4466      	add	r6, ip
 800f9b8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f9bc:	bfa8      	it	ge
 800f9be:	4610      	movge	r0, r2
 800f9c0:	442a      	add	r2, r5
 800f9c2:	88e5      	ldrh	r5, [r4, #6]
 800f9c4:	4461      	add	r1, ip
 800f9c6:	b236      	sxth	r6, r6
 800f9c8:	8027      	strh	r7, [r4, #0]
 800f9ca:	442b      	add	r3, r5
 800f9cc:	b209      	sxth	r1, r1
 800f9ce:	b212      	sxth	r2, r2
 800f9d0:	8060      	strh	r0, [r4, #2]
 800f9d2:	b21b      	sxth	r3, r3
 800f9d4:	428e      	cmp	r6, r1
 800f9d6:	bfac      	ite	ge
 800f9d8:	ebc7 0106 	rsbge	r1, r7, r6
 800f9dc:	ebc7 0101 	rsblt	r1, r7, r1
 800f9e0:	429a      	cmp	r2, r3
 800f9e2:	bfac      	ite	ge
 800f9e4:	ebc0 0202 	rsbge	r2, r0, r2
 800f9e8:	ebc0 0203 	rsblt	r2, r0, r3
 800f9ec:	80a1      	strh	r1, [r4, #4]
 800f9ee:	80e2      	strh	r2, [r4, #6]
 800f9f0:	e7d1      	b.n	800f996 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800f9f4 <_ZN8touchgfx11Application11getInstanceEv>:
 800f9f4:	4b01      	ldr	r3, [pc, #4]	; (800f9fc <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800f9f6:	6818      	ldr	r0, [r3, #0]
 800f9f8:	4770      	bx	lr
 800f9fa:	bf00      	nop
 800f9fc:	240089a0 	.word	0x240089a0

0800fa00 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800fa00:	2300      	movs	r3, #0
 800fa02:	b510      	push	{r4, lr}
 800fa04:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 800fa08:	4604      	mov	r4, r0
 800fa0a:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800fa0e:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800fa12:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800fa16:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 800fa1a:	429a      	cmp	r2, r3
 800fa1c:	d90e      	bls.n	800fa3c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800fa1e:	18e2      	adds	r2, r4, r3
 800fa20:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 800fa24:	b122      	cbz	r2, 800fa30 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800fa26:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800fa2a:	6803      	ldr	r3, [r0, #0]
 800fa2c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800fa2e:	4798      	blx	r3
 800fa30:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800fa34:	3301      	adds	r3, #1
 800fa36:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800fa3a:	e7ea      	b.n	800fa12 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800fa3c:	bd10      	pop	{r4, pc}

0800fa3e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 800fa3e:	b530      	push	{r4, r5, lr}
 800fa40:	2200      	movs	r2, #0
 800fa42:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 800fa46:	b293      	uxth	r3, r2
 800fa48:	429d      	cmp	r5, r3
 800fa4a:	d90e      	bls.n	800fa6a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800fa4c:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 800fa50:	428b      	cmp	r3, r1
 800fa52:	d10b      	bne.n	800fa6c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800fa54:	1884      	adds	r4, r0, r2
 800fa56:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800fa5a:	b13b      	cbz	r3, 800fa6c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800fa5c:	3b01      	subs	r3, #1
 800fa5e:	b2db      	uxtb	r3, r3
 800fa60:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 800fa64:	b90b      	cbnz	r3, 800fa6a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800fa66:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 800fa6a:	bd30      	pop	{r4, r5, pc}
 800fa6c:	3201      	adds	r2, #1
 800fa6e:	e7ea      	b.n	800fa46 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0800fa70 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800fa70:	2300      	movs	r3, #0
 800fa72:	f100 0284 	add.w	r2, r0, #132	; 0x84
 800fa76:	30a4      	adds	r0, #164	; 0xa4
 800fa78:	f820 3c24 	strh.w	r3, [r0, #-36]
 800fa7c:	f802 3b01 	strb.w	r3, [r2], #1
 800fa80:	4282      	cmp	r2, r0
 800fa82:	d1fb      	bne.n	800fa7c <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800fa84:	4770      	bx	lr
	...

0800fa88 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800fa88:	b570      	push	{r4, r5, r6, lr}
 800fa8a:	4c0b      	ldr	r4, [pc, #44]	; (800fab8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800fa8c:	4605      	mov	r5, r0
 800fa8e:	460e      	mov	r6, r1
 800fa90:	6820      	ldr	r0, [r4, #0]
 800fa92:	b110      	cbz	r0, 800fa9a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800fa94:	6803      	ldr	r3, [r0, #0]
 800fa96:	695b      	ldr	r3, [r3, #20]
 800fa98:	4798      	blx	r3
 800fa9a:	1d28      	adds	r0, r5, #4
 800fa9c:	f7ff ffe8 	bl	800fa70 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800faa0:	6026      	str	r6, [r4, #0]
 800faa2:	6833      	ldr	r3, [r6, #0]
 800faa4:	4630      	mov	r0, r6
 800faa6:	68db      	ldr	r3, [r3, #12]
 800faa8:	4798      	blx	r3
 800faaa:	682b      	ldr	r3, [r5, #0]
 800faac:	4628      	mov	r0, r5
 800faae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fab0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fab4:	4718      	bx	r3
 800fab6:	bf00      	nop
 800fab8:	24008990 	.word	0x24008990

0800fabc <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800fabc:	2300      	movs	r3, #0
 800fabe:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 800fac2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 800fac6:	461a      	mov	r2, r3
 800fac8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800faca:	461c      	mov	r4, r3
 800facc:	461d      	mov	r5, r3
 800face:	459c      	cmp	ip, r3
 800fad0:	dd1a      	ble.n	800fb08 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800fad2:	18c6      	adds	r6, r0, r3
 800fad4:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 800fad8:	b16e      	cbz	r6, 800faf6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800fada:	429a      	cmp	r2, r3
 800fadc:	d008      	beq.n	800faf0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800fade:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800fae2:	fa1f fe82 	uxth.w	lr, r2
 800fae6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800faea:	1887      	adds	r7, r0, r2
 800faec:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 800faf0:	3201      	adds	r2, #1
 800faf2:	3301      	adds	r3, #1
 800faf4:	e7eb      	b.n	800face <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800faf6:	4299      	cmp	r1, r3
 800faf8:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 800fafc:	bfa8      	it	ge
 800fafe:	3501      	addge	r5, #1
 800fb00:	429e      	cmp	r6, r3
 800fb02:	bfc8      	it	gt
 800fb04:	3401      	addgt	r4, #1
 800fb06:	e7f4      	b.n	800faf2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800fb08:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 800fb0c:	1b49      	subs	r1, r1, r5
 800fb0e:	1b1b      	subs	r3, r3, r4
 800fb10:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 800fb14:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800fb18:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800fb1c:	4293      	cmp	r3, r2
 800fb1e:	dd03      	ble.n	800fb28 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800fb20:	3b01      	subs	r3, #1
 800fb22:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 800fb26:	e7f7      	b.n	800fb18 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800fb28:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800fb2c <_ZN8touchgfx11Application15handleTickEventEv>:
 800fb2c:	b570      	push	{r4, r5, r6, lr}
 800fb2e:	4d16      	ldr	r5, [pc, #88]	; (800fb88 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800fb30:	4604      	mov	r4, r0
 800fb32:	6828      	ldr	r0, [r5, #0]
 800fb34:	b140      	cbz	r0, 800fb48 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fb36:	7a03      	ldrb	r3, [r0, #8]
 800fb38:	b933      	cbnz	r3, 800fb48 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fb3a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800fb3e:	6803      	ldr	r3, [r0, #0]
 800fb40:	689b      	ldr	r3, [r3, #8]
 800fb42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb46:	4718      	bx	r3
 800fb48:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 800fb4c:	4e0f      	ldr	r6, [pc, #60]	; (800fb8c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800fb4e:	b973      	cbnz	r3, 800fb6e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fb50:	b168      	cbz	r0, 800fb6e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fb52:	7a03      	ldrb	r3, [r0, #8]
 800fb54:	b15b      	cbz	r3, 800fb6e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fb56:	6830      	ldr	r0, [r6, #0]
 800fb58:	b110      	cbz	r0, 800fb60 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800fb5a:	6803      	ldr	r3, [r0, #0]
 800fb5c:	691b      	ldr	r3, [r3, #16]
 800fb5e:	4798      	blx	r3
 800fb60:	6828      	ldr	r0, [r5, #0]
 800fb62:	6803      	ldr	r3, [r0, #0]
 800fb64:	68db      	ldr	r3, [r3, #12]
 800fb66:	4798      	blx	r3
 800fb68:	2301      	movs	r3, #1
 800fb6a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800fb6e:	3404      	adds	r4, #4
 800fb70:	4620      	mov	r0, r4
 800fb72:	f7ff ff45 	bl	800fa00 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800fb76:	4620      	mov	r0, r4
 800fb78:	f7ff ffa0 	bl	800fabc <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800fb7c:	6830      	ldr	r0, [r6, #0]
 800fb7e:	b110      	cbz	r0, 800fb86 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800fb80:	6803      	ldr	r3, [r0, #0]
 800fb82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb84:	e7dd      	b.n	800fb42 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800fb86:	bd70      	pop	{r4, r5, r6, pc}
 800fb88:	24008994 	.word	0x24008994
 800fb8c:	24008990 	.word	0x24008990

0800fb90 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 800fb90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb92:	2300      	movs	r3, #0
 800fb94:	4604      	mov	r4, r0
 800fb96:	460d      	mov	r5, r1
 800fb98:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 800fb9c:	4618      	mov	r0, r3
 800fb9e:	b29a      	uxth	r2, r3
 800fba0:	4291      	cmp	r1, r2
 800fba2:	d912      	bls.n	800fbca <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x3a>
 800fba4:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 800fba8:	18e6      	adds	r6, r4, r3
 800fbaa:	42af      	cmp	r7, r5
 800fbac:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 800fbb0:	d105      	bne.n	800fbbe <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 800fbb2:	2aff      	cmp	r2, #255	; 0xff
 800fbb4:	d002      	beq.n	800fbbc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800fbb6:	3201      	adds	r2, #1
 800fbb8:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 800fbbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fbbe:	2a00      	cmp	r2, #0
 800fbc0:	f103 0301 	add.w	r3, r3, #1
 800fbc4:	bf08      	it	eq
 800fbc6:	2001      	moveq	r0, #1
 800fbc8:	e7e9      	b.n	800fb9e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 800fbca:	b120      	cbz	r0, 800fbd6 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
 800fbcc:	2920      	cmp	r1, #32
 800fbce:	d102      	bne.n	800fbd6 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
 800fbd0:	4620      	mov	r0, r4
 800fbd2:	f7ff ff73 	bl	800fabc <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800fbd6:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 800fbda:	2b1f      	cmp	r3, #31
 800fbdc:	d8ee      	bhi.n	800fbbc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800fbde:	18e2      	adds	r2, r4, r3
 800fbe0:	2101      	movs	r1, #1
 800fbe2:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 800fbe6:	185a      	adds	r2, r3, r1
 800fbe8:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 800fbec:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800fbf0:	e7e4      	b.n	800fbbc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0800fbf2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800fbf2:	4603      	mov	r3, r0
 800fbf4:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800fbf8:	2200      	movs	r2, #0
 800fbfa:	801a      	strh	r2, [r3, #0]
 800fbfc:	3308      	adds	r3, #8
 800fbfe:	f823 2c06 	strh.w	r2, [r3, #-6]
 800fc02:	f823 2c04 	strh.w	r2, [r3, #-4]
 800fc06:	f823 2c02 	strh.w	r2, [r3, #-2]
 800fc0a:	428b      	cmp	r3, r1
 800fc0c:	d1f5      	bne.n	800fbfa <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800fc0e:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800fc12:	4770      	bx	lr

0800fc14 <_ZN8touchgfx11ApplicationC1Ev>:
 800fc14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc16:	4b1d      	ldr	r3, [pc, #116]	; (800fc8c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800fc18:	4606      	mov	r6, r0
 800fc1a:	4604      	mov	r4, r0
 800fc1c:	2500      	movs	r5, #0
 800fc1e:	f846 3b04 	str.w	r3, [r6], #4
 800fc22:	22a8      	movs	r2, #168	; 0xa8
 800fc24:	2100      	movs	r1, #0
 800fc26:	4630      	mov	r0, r6
 800fc28:	f00c ff50 	bl	801cacc <memset>
 800fc2c:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 800fc30:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800fc34:	4f16      	ldr	r7, [pc, #88]	; (800fc90 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800fc36:	f7ff ffdc 	bl	800fbf2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fc3a:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 800fc3e:	f7ff ffd8 	bl	800fbf2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fc42:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800fc46:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800fc4a:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 800fc4e:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 800fc52:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 800fc56:	490f      	ldr	r1, [pc, #60]	; (800fc94 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800fc58:	480f      	ldr	r0, [pc, #60]	; (800fc98 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800fc5a:	f00b f8bf 	bl	801addc <CRC_Lock>
 800fc5e:	4b0f      	ldr	r3, [pc, #60]	; (800fc9c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800fc60:	b158      	cbz	r0, 800fc7a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800fc62:	801d      	strh	r5, [r3, #0]
 800fc64:	2300      	movs	r3, #0
 800fc66:	4a0e      	ldr	r2, [pc, #56]	; (800fca0 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800fc68:	4630      	mov	r0, r6
 800fc6a:	6013      	str	r3, [r2, #0]
 800fc6c:	4a0d      	ldr	r2, [pc, #52]	; (800fca4 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800fc6e:	603b      	str	r3, [r7, #0]
 800fc70:	6013      	str	r3, [r2, #0]
 800fc72:	f7ff fefd 	bl	800fa70 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800fc76:	4620      	mov	r0, r4
 800fc78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fc7a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800fc7e:	2002      	movs	r0, #2
 800fc80:	801a      	strh	r2, [r3, #0]
 800fc82:	6038      	str	r0, [r7, #0]
 800fc84:	f001 face 	bl	8011224 <_ZN8touchgfx6Screen4drawEv>
 800fc88:	e7ec      	b.n	800fc64 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800fc8a:	bf00      	nop
 800fc8c:	0801f360 	.word	0x0801f360
 800fc90:	24008990 	.word	0x24008990
 800fc94:	b5e8b5cd 	.word	0xb5e8b5cd
 800fc98:	f407a5c2 	.word	0xf407a5c2
 800fc9c:	24000054 	.word	0x24000054
 800fca0:	240089a0 	.word	0x240089a0
 800fca4:	24008994 	.word	0x24008994

0800fca8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800fca8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800fcac:	3b01      	subs	r3, #1
 800fcae:	b29b      	uxth	r3, r3
 800fcb0:	428b      	cmp	r3, r1
 800fcb2:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800fcb6:	b510      	push	{r4, lr}
 800fcb8:	d908      	bls.n	800fccc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800fcba:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800fcbe:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800fcc2:	681a      	ldr	r2, [r3, #0]
 800fcc4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800fcc8:	685a      	ldr	r2, [r3, #4]
 800fcca:	6062      	str	r2, [r4, #4]
 800fccc:	bd10      	pop	{r4, pc}
	...

0800fcd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800fcd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcd4:	b08f      	sub	sp, #60	; 0x3c
 800fcd6:	4b8f      	ldr	r3, [pc, #572]	; (800ff14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800fcd8:	4683      	mov	fp, r0
 800fcda:	ac0a      	add	r4, sp, #40	; 0x28
 800fcdc:	e884 0006 	stmia.w	r4, {r1, r2}
 800fce0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fce4:	4620      	mov	r0, r4
 800fce6:	4b8c      	ldr	r3, [pc, #560]	; (800ff18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800fce8:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fcec:	f7ff fdc5 	bl	800f87a <_ZN8touchgfx4Rect10restrictToEss>
 800fcf0:	4620      	mov	r0, r4
 800fcf2:	f7fa fece 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fcf6:	2800      	cmp	r0, #0
 800fcf8:	d16a      	bne.n	800fdd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800fcfa:	9403      	str	r4, [sp, #12]
 800fcfc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 800fd00:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 800fd04:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800fd08:	9301      	str	r3, [sp, #4]
 800fd0a:	35a4      	adds	r5, #164	; 0xa4
 800fd0c:	b15c      	cbz	r4, 800fd26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800fd0e:	4629      	mov	r1, r5
 800fd10:	9803      	ldr	r0, [sp, #12]
 800fd12:	f7ff fe03 	bl	800f91c <_ZNK8touchgfx4Rect8includesERKS0_>
 800fd16:	3c01      	subs	r4, #1
 800fd18:	b118      	cbz	r0, 800fd22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800fd1a:	b2a1      	uxth	r1, r4
 800fd1c:	9801      	ldr	r0, [sp, #4]
 800fd1e:	f7ff ffc3 	bl	800fca8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fd22:	3d08      	subs	r5, #8
 800fd24:	e7f2      	b.n	800fd0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800fd26:	f8bb 80ec 	ldrh.w	r8, [fp, #236]	; 0xec
 800fd2a:	f108 33ff 	add.w	r3, r8, #4294967295
 800fd2e:	f8cd 8010 	str.w	r8, [sp, #16]
 800fd32:	9302      	str	r3, [sp, #8]
 800fd34:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 800fd38:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 800fd3c:	9306      	str	r3, [sp, #24]
 800fd3e:	445c      	add	r4, fp
 800fd40:	2500      	movs	r5, #0
 800fd42:	4626      	mov	r6, r4
 800fd44:	f8cd 8014 	str.w	r8, [sp, #20]
 800fd48:	462f      	mov	r7, r5
 800fd4a:	9b05      	ldr	r3, [sp, #20]
 800fd4c:	2b00      	cmp	r3, #0
 800fd4e:	d073      	beq.n	800fe38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800fd50:	9903      	ldr	r1, [sp, #12]
 800fd52:	4630      	mov	r0, r6
 800fd54:	f7ff fd6f 	bl	800f836 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fd58:	b350      	cbz	r0, 800fdb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800fd5a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 800fd5e:	f9b6 c000 	ldrsh.w	ip, [r6]
 800fd62:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 800fd66:	45e6      	cmp	lr, ip
 800fd68:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800fd6c:	db33      	blt.n	800fdd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800fd6e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800fd72:	88b3      	ldrh	r3, [r6, #4]
 800fd74:	4472      	add	r2, lr
 800fd76:	4463      	add	r3, ip
 800fd78:	b212      	sxth	r2, r2
 800fd7a:	b21b      	sxth	r3, r3
 800fd7c:	429a      	cmp	r2, r3
 800fd7e:	dc2a      	bgt.n	800fdd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800fd80:	fa1f f289 	uxth.w	r2, r9
 800fd84:	88f3      	ldrh	r3, [r6, #6]
 800fd86:	45ca      	cmp	sl, r9
 800fd88:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800fd8c:	4413      	add	r3, r2
 800fd8e:	fa1f fc8a 	uxth.w	ip, sl
 800fd92:	b29b      	uxth	r3, r3
 800fd94:	fa0f fe83 	sxth.w	lr, r3
 800fd98:	db0f      	blt.n	800fdba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800fd9a:	eba3 030c 	sub.w	r3, r3, ip
 800fd9e:	1ac9      	subs	r1, r1, r3
 800fda0:	b209      	sxth	r1, r1
 800fda2:	2900      	cmp	r1, #0
 800fda4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800fda8:	dd12      	ble.n	800fdd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800fdaa:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 800fdae:	4605      	mov	r5, r0
 800fdb0:	9b05      	ldr	r3, [sp, #20]
 800fdb2:	3e08      	subs	r6, #8
 800fdb4:	3b01      	subs	r3, #1
 800fdb6:	9305      	str	r3, [sp, #20]
 800fdb8:	e7c7      	b.n	800fd4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800fdba:	4461      	add	r1, ip
 800fdbc:	b209      	sxth	r1, r1
 800fdbe:	4571      	cmp	r1, lr
 800fdc0:	dc38      	bgt.n	800fe34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800fdc2:	eba2 020c 	sub.w	r2, r2, ip
 800fdc6:	b212      	sxth	r2, r2
 800fdc8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800fdcc:	2a00      	cmp	r2, #0
 800fdce:	dcee      	bgt.n	800fdae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800fdd0:	b00f      	add	sp, #60	; 0x3c
 800fdd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fdd6:	45ca      	cmp	sl, r9
 800fdd8:	db2c      	blt.n	800fe34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800fdda:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800fdde:	449a      	add	sl, r3
 800fde0:	88f3      	ldrh	r3, [r6, #6]
 800fde2:	4499      	add	r9, r3
 800fde4:	fa0f fa8a 	sxth.w	sl, sl
 800fde8:	fa0f f989 	sxth.w	r9, r9
 800fdec:	45ca      	cmp	sl, r9
 800fdee:	dc21      	bgt.n	800fe34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800fdf0:	fa1f f28c 	uxth.w	r2, ip
 800fdf4:	88b3      	ldrh	r3, [r6, #4]
 800fdf6:	45e6      	cmp	lr, ip
 800fdf8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800fdfc:	4413      	add	r3, r2
 800fdfe:	fa1f f98e 	uxth.w	r9, lr
 800fe02:	b29b      	uxth	r3, r3
 800fe04:	fa0f fa83 	sxth.w	sl, r3
 800fe08:	db0a      	blt.n	800fe20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800fe0a:	eba3 0309 	sub.w	r3, r3, r9
 800fe0e:	1ac9      	subs	r1, r1, r3
 800fe10:	b209      	sxth	r1, r1
 800fe12:	2900      	cmp	r1, #0
 800fe14:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800fe18:	ddda      	ble.n	800fdd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800fe1a:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 800fe1e:	e7c6      	b.n	800fdae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800fe20:	4449      	add	r1, r9
 800fe22:	b209      	sxth	r1, r1
 800fe24:	4551      	cmp	r1, sl
 800fe26:	dc05      	bgt.n	800fe34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800fe28:	eba2 0209 	sub.w	r2, r2, r9
 800fe2c:	b212      	sxth	r2, r2
 800fe2e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800fe32:	e7cb      	b.n	800fdcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800fe34:	4607      	mov	r7, r0
 800fe36:	e7bb      	b.n	800fdb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800fe38:	2d00      	cmp	r5, #0
 800fe3a:	d181      	bne.n	800fd40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800fe3c:	2f00      	cmp	r7, #0
 800fe3e:	f000 81dd 	beq.w	80101fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800fe42:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 800fe46:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 800fe4a:	b2b3      	uxth	r3, r6
 800fe4c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800fe50:	b2b9      	uxth	r1, r7
 800fe52:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 800fe56:	441a      	add	r2, r3
 800fe58:	448a      	add	sl, r1
 800fe5a:	9105      	str	r1, [sp, #20]
 800fe5c:	b292      	uxth	r2, r2
 800fe5e:	fa1f fa8a 	uxth.w	sl, sl
 800fe62:	fa0f f882 	sxth.w	r8, r2
 800fe66:	fa0f f98a 	sxth.w	r9, sl
 800fe6a:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800fe6e:	9b04      	ldr	r3, [sp, #16]
 800fe70:	2b00      	cmp	r3, #0
 800fe72:	d053      	beq.n	800ff1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800fe74:	9903      	ldr	r1, [sp, #12]
 800fe76:	4620      	mov	r0, r4
 800fe78:	f7ff fcdd 	bl	800f836 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fe7c:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800fe80:	b1c0      	cbz	r0, 800feb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800fe82:	f9b4 e000 	ldrsh.w	lr, [r4]
 800fe86:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fe8a:	4576      	cmp	r6, lr
 800fe8c:	dc23      	bgt.n	800fed6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800fe8e:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800fe92:	44f4      	add	ip, lr
 800fe94:	fa0f fc8c 	sxth.w	ip, ip
 800fe98:	45e0      	cmp	r8, ip
 800fe9a:	db1c      	blt.n	800fed6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800fe9c:	428f      	cmp	r7, r1
 800fe9e:	fa1f fc81 	uxth.w	ip, r1
 800fea2:	88e1      	ldrh	r1, [r4, #6]
 800fea4:	dc0d      	bgt.n	800fec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fea6:	ebaa 0c0c 	sub.w	ip, sl, ip
 800feaa:	f8a4 9002 	strh.w	r9, [r4, #2]
 800feae:	eba1 010c 	sub.w	r1, r1, ip
 800feb2:	80e1      	strh	r1, [r4, #6]
 800feb4:	4628      	mov	r0, r5
 800feb6:	9904      	ldr	r1, [sp, #16]
 800feb8:	3c08      	subs	r4, #8
 800feba:	4605      	mov	r5, r0
 800febc:	3901      	subs	r1, #1
 800febe:	9104      	str	r1, [sp, #16]
 800fec0:	e7d3      	b.n	800fe6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19a>
 800fec2:	4461      	add	r1, ip
 800fec4:	b209      	sxth	r1, r1
 800fec6:	4549      	cmp	r1, r9
 800fec8:	dcf5      	bgt.n	800feb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800feca:	9905      	ldr	r1, [sp, #20]
 800fecc:	eba1 0c0c 	sub.w	ip, r1, ip
 800fed0:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fed4:	e7ee      	b.n	800feb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800fed6:	428f      	cmp	r7, r1
 800fed8:	dced      	bgt.n	800feb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800feda:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800fede:	4461      	add	r1, ip
 800fee0:	b209      	sxth	r1, r1
 800fee2:	4589      	cmp	r9, r1
 800fee4:	dbe7      	blt.n	800feb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800fee6:	4576      	cmp	r6, lr
 800fee8:	fa1f fc8e 	uxth.w	ip, lr
 800feec:	88a1      	ldrh	r1, [r4, #4]
 800feee:	dc07      	bgt.n	800ff00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800fef0:	eba2 0c0c 	sub.w	ip, r2, ip
 800fef4:	f8a4 8000 	strh.w	r8, [r4]
 800fef8:	eba1 010c 	sub.w	r1, r1, ip
 800fefc:	80a1      	strh	r1, [r4, #4]
 800fefe:	e7d9      	b.n	800feb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800ff00:	4461      	add	r1, ip
 800ff02:	b209      	sxth	r1, r1
 800ff04:	4588      	cmp	r8, r1
 800ff06:	dbd6      	blt.n	800feb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800ff08:	eba3 0c0c 	sub.w	ip, r3, ip
 800ff0c:	f8a4 c004 	strh.w	ip, [r4, #4]
 800ff10:	e7d0      	b.n	800feb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800ff12:	bf00      	nop
 800ff14:	24008942 	.word	0x24008942
 800ff18:	24008940 	.word	0x24008940
 800ff1c:	2d00      	cmp	r5, #0
 800ff1e:	f000 816d 	beq.w	80101fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800ff22:	9b06      	ldr	r3, [sp, #24]
 800ff24:	445b      	add	r3, fp
 800ff26:	461c      	mov	r4, r3
 800ff28:	9b02      	ldr	r3, [sp, #8]
 800ff2a:	3301      	adds	r3, #1
 800ff2c:	f000 8166 	beq.w	80101fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800ff30:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 800ff34:	9803      	ldr	r0, [sp, #12]
 800ff36:	4629      	mov	r1, r5
 800ff38:	f7ff fcf0 	bl	800f91c <_ZNK8touchgfx4Rect8includesERKS0_>
 800ff3c:	b120      	cbz	r0, 800ff48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800ff3e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800ff42:	9801      	ldr	r0, [sp, #4]
 800ff44:	f7ff feb0 	bl	800fca8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ff48:	9903      	ldr	r1, [sp, #12]
 800ff4a:	4628      	mov	r0, r5
 800ff4c:	f7ff fc73 	bl	800f836 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ff50:	2800      	cmp	r0, #0
 800ff52:	f000 809c 	beq.w	801008e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800ff56:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 800ff5a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800ff5e:	fa1f f189 	uxth.w	r1, r9
 800ff62:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800ff66:	9309      	str	r3, [sp, #36]	; 0x24
 800ff68:	eb01 0c03 	add.w	ip, r1, r3
 800ff6c:	b283      	uxth	r3, r0
 800ff6e:	4548      	cmp	r0, r9
 800ff70:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 800ff74:	fa1f fa8c 	uxth.w	sl, ip
 800ff78:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 800ff7c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 800ff80:	eb03 050c 	add.w	r5, r3, ip
 800ff84:	b2ad      	uxth	r5, r5
 800ff86:	9505      	str	r5, [sp, #20]
 800ff88:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800ff8c:	9504      	str	r5, [sp, #16]
 800ff8e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 800ff92:	f340 8099 	ble.w	80100c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800ff96:	1a5b      	subs	r3, r3, r1
 800ff98:	4596      	cmp	lr, r2
 800ff9a:	fa0f f08a 	sxth.w	r0, sl
 800ff9e:	b29b      	uxth	r3, r3
 800ffa0:	b21e      	sxth	r6, r3
 800ffa2:	dd2e      	ble.n	8010002 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800ffa4:	9f02      	ldr	r7, [sp, #8]
 800ffa6:	fa1f fe8e 	uxth.w	lr, lr
 800ffaa:	b292      	uxth	r2, r2
 800ffac:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 800ffb0:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800ffb4:	9f04      	ldr	r7, [sp, #16]
 800ffb6:	ebae 0102 	sub.w	r1, lr, r2
 800ffba:	44a6      	add	lr, r4
 800ffbc:	1a3f      	subs	r7, r7, r0
 800ffbe:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 800ffc2:	b289      	uxth	r1, r1
 800ffc4:	4402      	add	r2, r0
 800ffc6:	fa0f fe8e 	sxth.w	lr, lr
 800ffca:	b20d      	sxth	r5, r1
 800ffcc:	b212      	sxth	r2, r2
 800ffce:	436f      	muls	r7, r5
 800ffd0:	ebae 0202 	sub.w	r2, lr, r2
 800ffd4:	4372      	muls	r2, r6
 800ffd6:	4297      	cmp	r7, r2
 800ffd8:	db09      	blt.n	800ffee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800ffda:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 800ffde:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 800ffe2:	449c      	add	ip, r3
 800ffe4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800ffe8:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800ffec:	e686      	b.n	800fcfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ffee:	4421      	add	r1, r4
 800fff0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800fff4:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 800fff8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800fffc:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010000:	e67c      	b.n	800fcfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010002:	9f04      	ldr	r7, [sp, #16]
 8010004:	42b8      	cmp	r0, r7
 8010006:	da27      	bge.n	8010058 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8010008:	9902      	ldr	r1, [sp, #8]
 801000a:	1a3f      	subs	r7, r7, r0
 801000c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8010010:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8010014:	eb05 010e 	add.w	r1, r5, lr
 8010018:	fa1f f881 	uxth.w	r8, r1
 801001c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8010020:	4411      	add	r1, r2
 8010022:	fa0f f988 	sxth.w	r9, r8
 8010026:	eba2 020e 	sub.w	r2, r2, lr
 801002a:	eba1 0108 	sub.w	r1, r1, r8
 801002e:	4372      	muls	r2, r6
 8010030:	b289      	uxth	r1, r1
 8010032:	fa0f f881 	sxth.w	r8, r1
 8010036:	fb08 f707 	mul.w	r7, r8, r7
 801003a:	42ba      	cmp	r2, r7
 801003c:	dc06      	bgt.n	801004c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 801003e:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8010042:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8010046:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801004a:	e7ca      	b.n	800ffe2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 801004c:	4429      	add	r1, r5
 801004e:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8010052:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010056:	e651      	b.n	800fcfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010058:	9805      	ldr	r0, [sp, #20]
 801005a:	2d06      	cmp	r5, #6
 801005c:	ebaa 0000 	sub.w	r0, sl, r0
 8010060:	b280      	uxth	r0, r0
 8010062:	fa0f fe80 	sxth.w	lr, r0
 8010066:	d817      	bhi.n	8010098 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8010068:	9b04      	ldr	r3, [sp, #16]
 801006a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 801006e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8010072:	1c6b      	adds	r3, r5, #1
 8010074:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8010078:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801007c:	9b01      	ldr	r3, [sp, #4]
 801007e:	9801      	ldr	r0, [sp, #4]
 8010080:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010084:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010088:	805a      	strh	r2, [r3, #2]
 801008a:	809e      	strh	r6, [r3, #4]
 801008c:	80d9      	strh	r1, [r3, #6]
 801008e:	9b02      	ldr	r3, [sp, #8]
 8010090:	3c08      	subs	r4, #8
 8010092:	3b01      	subs	r3, #1
 8010094:	9302      	str	r3, [sp, #8]
 8010096:	e747      	b.n	800ff28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8010098:	9a02      	ldr	r2, [sp, #8]
 801009a:	45b6      	cmp	lr, r6
 801009c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80100a0:	db0d      	blt.n	80100be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80100a2:	449c      	add	ip, r3
 80100a4:	445a      	add	r2, fp
 80100a6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80100aa:	fa1f fc8c 	uxth.w	ip, ip
 80100ae:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80100b2:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80100b6:	448c      	add	ip, r1
 80100b8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80100bc:	e61e      	b.n	800fcfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80100be:	445a      	add	r2, fp
 80100c0:	4484      	add	ip, r0
 80100c2:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80100c6:	e78f      	b.n	800ffe8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80100c8:	fa1f f18e 	uxth.w	r1, lr
 80100cc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80100d0:	b293      	uxth	r3, r2
 80100d2:	4596      	cmp	lr, r2
 80100d4:	eb01 0806 	add.w	r8, r1, r6
 80100d8:	9306      	str	r3, [sp, #24]
 80100da:	fa1f f888 	uxth.w	r8, r8
 80100de:	9f06      	ldr	r7, [sp, #24]
 80100e0:	fa0f f388 	sxth.w	r3, r8
 80100e4:	9307      	str	r3, [sp, #28]
 80100e6:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80100ea:	443b      	add	r3, r7
 80100ec:	b29b      	uxth	r3, r3
 80100ee:	9308      	str	r3, [sp, #32]
 80100f0:	da24      	bge.n	801013c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80100f2:	9905      	ldr	r1, [sp, #20]
 80100f4:	eba3 0308 	sub.w	r3, r3, r8
 80100f8:	eba2 020e 	sub.w	r2, r2, lr
 80100fc:	eba9 0000 	sub.w	r0, r9, r0
 8010100:	ebaa 0401 	sub.w	r4, sl, r1
 8010104:	b29b      	uxth	r3, r3
 8010106:	b2a4      	uxth	r4, r4
 8010108:	b219      	sxth	r1, r3
 801010a:	b225      	sxth	r5, r4
 801010c:	4348      	muls	r0, r1
 801010e:	436a      	muls	r2, r5
 8010110:	4282      	cmp	r2, r0
 8010112:	9a02      	ldr	r2, [sp, #8]
 8010114:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010118:	445a      	add	r2, fp
 801011a:	dc06      	bgt.n	801012a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 801011c:	9b07      	ldr	r3, [sp, #28]
 801011e:	44a4      	add	ip, r4
 8010120:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8010124:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8010128:	e75e      	b.n	800ffe8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801012a:	9904      	ldr	r1, [sp, #16]
 801012c:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8010130:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8010134:	4433      	add	r3, r6
 8010136:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801013a:	e5df      	b.n	800fcfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801013c:	9f06      	ldr	r7, [sp, #24]
 801013e:	9b04      	ldr	r3, [sp, #16]
 8010140:	1bc9      	subs	r1, r1, r7
 8010142:	fa0f f78a 	sxth.w	r7, sl
 8010146:	b289      	uxth	r1, r1
 8010148:	429f      	cmp	r7, r3
 801014a:	fa0f fe81 	sxth.w	lr, r1
 801014e:	dd23      	ble.n	8010198 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8010150:	9a05      	ldr	r2, [sp, #20]
 8010152:	eba9 0000 	sub.w	r0, r9, r0
 8010156:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801015a:	ebaa 0202 	sub.w	r2, sl, r2
 801015e:	9d07      	ldr	r5, [sp, #28]
 8010160:	fb0e f000 	mul.w	r0, lr, r0
 8010164:	b292      	uxth	r2, r2
 8010166:	eba5 0a03 	sub.w	sl, r5, r3
 801016a:	9b02      	ldr	r3, [sp, #8]
 801016c:	b214      	sxth	r4, r2
 801016e:	00db      	lsls	r3, r3, #3
 8010170:	fb04 fa0a 	mul.w	sl, r4, sl
 8010174:	445b      	add	r3, fp
 8010176:	4550      	cmp	r0, sl
 8010178:	db03      	blt.n	8010182 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801017a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 801017e:	4494      	add	ip, r2
 8010180:	e732      	b.n	800ffe8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010182:	9a04      	ldr	r2, [sp, #16]
 8010184:	4431      	add	r1, r6
 8010186:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 801018a:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801018e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8010192:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010196:	e75c      	b.n	8010052 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8010198:	9b08      	ldr	r3, [sp, #32]
 801019a:	2d06      	cmp	r5, #6
 801019c:	eba3 0308 	sub.w	r3, r3, r8
 80101a0:	b29b      	uxth	r3, r3
 80101a2:	b218      	sxth	r0, r3
 80101a4:	d813      	bhi.n	80101ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80101a6:	9b07      	ldr	r3, [sp, #28]
 80101a8:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80101ac:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80101b0:	1c6b      	adds	r3, r5, #1
 80101b2:	9901      	ldr	r1, [sp, #4]
 80101b4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80101b8:	9b01      	ldr	r3, [sp, #4]
 80101ba:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80101be:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80101c2:	805a      	strh	r2, [r3, #2]
 80101c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80101c6:	f8a3 e006 	strh.w	lr, [r3, #6]
 80101ca:	809a      	strh	r2, [r3, #4]
 80101cc:	e75f      	b.n	801008e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80101ce:	9c02      	ldr	r4, [sp, #8]
 80101d0:	4570      	cmp	r0, lr
 80101d2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80101d6:	db0d      	blt.n	80101f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80101d8:	4431      	add	r1, r6
 80101da:	9b06      	ldr	r3, [sp, #24]
 80101dc:	445c      	add	r4, fp
 80101de:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80101e2:	b289      	uxth	r1, r1
 80101e4:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80101e8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80101ec:	4419      	add	r1, r3
 80101ee:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80101f2:	e583      	b.n	800fcfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80101f4:	445c      	add	r4, fp
 80101f6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80101fa:	e79b      	b.n	8010134 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80101fc:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8010200:	2e07      	cmp	r6, #7
 8010202:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010206:	d812      	bhi.n	801022e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x55e>
 8010208:	1c75      	adds	r5, r6, #1
 801020a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801020e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010212:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8010216:	9d01      	ldr	r5, [sp, #4]
 8010218:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801021c:	442c      	add	r4, r5
 801021e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8010222:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010226:	8061      	strh	r1, [r4, #2]
 8010228:	80a2      	strh	r2, [r4, #4]
 801022a:	80e3      	strh	r3, [r4, #6]
 801022c:	e5d0      	b.n	800fdd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801022e:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8010232:	3e01      	subs	r6, #1
 8010234:	445c      	add	r4, fp
 8010236:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801023a:	f04f 37ff 	mov.w	r7, #4294967295
 801023e:	2500      	movs	r5, #0
 8010240:	9305      	str	r3, [sp, #20]
 8010242:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8010246:	1e72      	subs	r2, r6, #1
 8010248:	9302      	str	r3, [sp, #8]
 801024a:	4691      	mov	r9, r2
 801024c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8010250:	9304      	str	r3, [sp, #16]
 8010252:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8010256:	f1b9 3fff 	cmp.w	r9, #4294967295
 801025a:	6818      	ldr	r0, [r3, #0]
 801025c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010260:	9207      	str	r2, [sp, #28]
 8010262:	bf16      	itet	ne
 8010264:	9905      	ldrne	r1, [sp, #20]
 8010266:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801026a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801026e:	9306      	str	r3, [sp, #24]
 8010270:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8010274:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8010278:	fb18 f801 	smulbb	r8, r8, r1
 801027c:	6859      	ldr	r1, [r3, #4]
 801027e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010282:	4671      	mov	r1, lr
 8010284:	a80c      	add	r0, sp, #48	; 0x30
 8010286:	f7ff fb6f 	bl	800f968 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801028a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801028e:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8010292:	f04f 0c08 	mov.w	ip, #8
 8010296:	9b04      	ldr	r3, [sp, #16]
 8010298:	9a02      	ldr	r2, [sp, #8]
 801029a:	fb10 f001 	smulbb	r0, r0, r1
 801029e:	fb02 8803 	mla	r8, r2, r3, r8
 80102a2:	eba0 0108 	sub.w	r1, r0, r8
 80102a6:	fb90 f0fc 	sdiv	r0, r0, ip
 80102aa:	4288      	cmp	r0, r1
 80102ac:	dc20      	bgt.n	80102f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 80102ae:	4551      	cmp	r1, sl
 80102b0:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80102b4:	da03      	bge.n	80102be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ee>
 80102b6:	b1d9      	cbz	r1, 80102f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 80102b8:	468a      	mov	sl, r1
 80102ba:	464f      	mov	r7, r9
 80102bc:	4635      	mov	r5, r6
 80102be:	f109 39ff 	add.w	r9, r9, #4294967295
 80102c2:	f119 0f02 	cmn.w	r9, #2
 80102c6:	d1c6      	bne.n	8010256 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 80102c8:	4616      	mov	r6, r2
 80102ca:	3201      	adds	r2, #1
 80102cc:	f1a4 0408 	sub.w	r4, r4, #8
 80102d0:	d1b7      	bne.n	8010242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x572>
 80102d2:	9b01      	ldr	r3, [sp, #4]
 80102d4:	b2ac      	uxth	r4, r5
 80102d6:	00ed      	lsls	r5, r5, #3
 80102d8:	1958      	adds	r0, r3, r5
 80102da:	1c7b      	adds	r3, r7, #1
 80102dc:	d10b      	bne.n	80102f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>
 80102de:	4601      	mov	r1, r0
 80102e0:	9803      	ldr	r0, [sp, #12]
 80102e2:	f7ff fb41 	bl	800f968 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80102e6:	4621      	mov	r1, r4
 80102e8:	9801      	ldr	r0, [sp, #4]
 80102ea:	f7ff fcdd 	bl	800fca8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80102ee:	e505      	b.n	800fcfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80102f0:	464f      	mov	r7, r9
 80102f2:	4635      	mov	r5, r6
 80102f4:	e7ed      	b.n	80102d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x602>
 80102f6:	9b01      	ldr	r3, [sp, #4]
 80102f8:	00ff      	lsls	r7, r7, #3
 80102fa:	445d      	add	r5, fp
 80102fc:	19d9      	adds	r1, r3, r7
 80102fe:	445f      	add	r7, fp
 8010300:	f7ff fb32 	bl	800f968 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010304:	9b03      	ldr	r3, [sp, #12]
 8010306:	cb03      	ldmia	r3!, {r0, r1}
 8010308:	9b03      	ldr	r3, [sp, #12]
 801030a:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 801030e:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8010312:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8010316:	6869      	ldr	r1, [r5, #4]
 8010318:	c303      	stmia	r3!, {r0, r1}
 801031a:	e7e4      	b.n	80102e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x616>

0801031c <_ZN8touchgfx11Application10invalidateEv>:
 801031c:	4b09      	ldr	r3, [pc, #36]	; (8010344 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801031e:	b082      	sub	sp, #8
 8010320:	2100      	movs	r1, #0
 8010322:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010326:	4b08      	ldr	r3, [pc, #32]	; (8010348 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8010328:	9100      	str	r1, [sp, #0]
 801032a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801032e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010332:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010336:	ab02      	add	r3, sp, #8
 8010338:	e913 0006 	ldmdb	r3, {r1, r2}
 801033c:	b002      	add	sp, #8
 801033e:	f7ff bcc7 	b.w	800fcd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010342:	bf00      	nop
 8010344:	24008940 	.word	0x24008940
 8010348:	24008942 	.word	0x24008942

0801034c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801034c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010350:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8010354:	b09b      	sub	sp, #108	; 0x6c
 8010356:	4604      	mov	r4, r0
 8010358:	4630      	mov	r0, r6
 801035a:	f7fa fb9a 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801035e:	4605      	mov	r5, r0
 8010360:	b940      	cbnz	r0, 8010374 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8010362:	4620      	mov	r0, r4
 8010364:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010368:	f7ff fcb2 	bl	800fcd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801036c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8010370:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8010374:	4bc8      	ldr	r3, [pc, #800]	; (8010698 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8010376:	681b      	ldr	r3, [r3, #0]
 8010378:	2b00      	cmp	r3, #0
 801037a:	d03e      	beq.n	80103fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 801037c:	4dc7      	ldr	r5, [pc, #796]	; (801069c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801037e:	4628      	mov	r0, r5
 8010380:	f7fa fb87 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010384:	4606      	mov	r6, r0
 8010386:	2800      	cmp	r0, #0
 8010388:	d137      	bne.n	80103fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 801038a:	4628      	mov	r0, r5
 801038c:	f7ff f97c 	bl	800f688 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010390:	6829      	ldr	r1, [r5, #0]
 8010392:	686a      	ldr	r2, [r5, #4]
 8010394:	4620      	mov	r0, r4
 8010396:	f7ff fc9b 	bl	800fcd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801039a:	802e      	strh	r6, [r5, #0]
 801039c:	806e      	strh	r6, [r5, #2]
 801039e:	80ae      	strh	r6, [r5, #4]
 80103a0:	80ee      	strh	r6, [r5, #6]
 80103a2:	ae09      	add	r6, sp, #36	; 0x24
 80103a4:	4630      	mov	r0, r6
 80103a6:	f7ff fc24 	bl	800fbf2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80103aa:	4abd      	ldr	r2, [pc, #756]	; (80106a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80103ac:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80103b0:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80103b4:	8815      	ldrh	r5, [r2, #0]
 80103b6:	9202      	str	r2, [sp, #8]
 80103b8:	462b      	mov	r3, r5
 80103ba:	429f      	cmp	r7, r3
 80103bc:	d924      	bls.n	8010408 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 80103be:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80103c2:	2907      	cmp	r1, #7
 80103c4:	d816      	bhi.n	80103f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 80103c6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80103ca:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 80103ce:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 80103d2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80103d6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80103da:	1c4a      	adds	r2, r1, #1
 80103dc:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80103e0:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 80103e4:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 80103e8:	f8a2 9002 	strh.w	r9, [r2, #2]
 80103ec:	f8a2 e004 	strh.w	lr, [r2, #4]
 80103f0:	f8a2 c006 	strh.w	ip, [r2, #6]
 80103f4:	3301      	adds	r3, #1
 80103f6:	b29b      	uxth	r3, r3
 80103f8:	e7df      	b.n	80103ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 80103fa:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80103fe:	2b00      	cmp	r3, #0
 8010400:	d1cf      	bne.n	80103a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 8010402:	b01b      	add	sp, #108	; 0x6c
 8010404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010408:	462f      	mov	r7, r5
 801040a:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 801040e:	42bb      	cmp	r3, r7
 8010410:	d90b      	bls.n	801042a <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 8010412:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8010416:	3701      	adds	r7, #1
 8010418:	4620      	mov	r0, r4
 801041a:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 801041e:	b2bf      	uxth	r7, r7
 8010420:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8010424:	f7ff fc54 	bl	800fcd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010428:	e7ef      	b.n	801040a <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 801042a:	4a9e      	ldr	r2, [pc, #632]	; (80106a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801042c:	6813      	ldr	r3, [r2, #0]
 801042e:	4690      	mov	r8, r2
 8010430:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8010434:	2b01      	cmp	r3, #1
 8010436:	f040 80e4 	bne.w	8010602 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 801043a:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801043e:	4629      	mov	r1, r5
 8010440:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8010444:	2500      	movs	r5, #0
 8010446:	33ae      	adds	r3, #174	; 0xae
 8010448:	428f      	cmp	r7, r1
 801044a:	f103 0308 	add.w	r3, r3, #8
 801044e:	dd0a      	ble.n	8010466 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 8010450:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8010454:	3101      	adds	r1, #1
 8010456:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 801045a:	4402      	add	r2, r0
 801045c:	b212      	sxth	r2, r2
 801045e:	4295      	cmp	r5, r2
 8010460:	bfb8      	it	lt
 8010462:	4615      	movlt	r5, r2
 8010464:	e7f0      	b.n	8010448 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8010466:	4b90      	ldr	r3, [pc, #576]	; (80106a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8010468:	f8df b238 	ldr.w	fp, [pc, #568]	; 80106a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>
 801046c:	881b      	ldrh	r3, [r3, #0]
 801046e:	46d8      	mov	r8, fp
 8010470:	2b0f      	cmp	r3, #15
 8010472:	bf8c      	ite	hi
 8010474:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8010478:	f04f 0a01 	movls.w	sl, #1
 801047c:	2300      	movs	r3, #0
 801047e:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8010482:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8010486:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 801048a:	4438      	add	r0, r7
 801048c:	b207      	sxth	r7, r0
 801048e:	f8db 0000 	ldr.w	r0, [fp]
 8010492:	42bd      	cmp	r5, r7
 8010494:	6803      	ldr	r3, [r0, #0]
 8010496:	f340 8084 	ble.w	80105a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 801049a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801049e:	4798      	blx	r3
 80104a0:	eb07 030a 	add.w	r3, r7, sl
 80104a4:	4298      	cmp	r0, r3
 80104a6:	da07      	bge.n	80104b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 80104a8:	4285      	cmp	r5, r0
 80104aa:	dd05      	ble.n	80104b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 80104ac:	4287      	cmp	r7, r0
 80104ae:	dd6d      	ble.n	801058c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80104b0:	2f00      	cmp	r7, #0
 80104b2:	dd6b      	ble.n	801058c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80104b4:	4628      	mov	r0, r5
 80104b6:	e004      	b.n	80104c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x176>
 80104b8:	4287      	cmp	r7, r0
 80104ba:	dcfb      	bgt.n	80104b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x168>
 80104bc:	42a8      	cmp	r0, r5
 80104be:	bfa8      	it	ge
 80104c0:	4628      	movge	r0, r5
 80104c2:	4b7a      	ldr	r3, [pc, #488]	; (80106ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80104c4:	1bc0      	subs	r0, r0, r7
 80104c6:	2200      	movs	r2, #0
 80104c8:	f8ad 7016 	strh.w	r7, [sp, #22]
 80104cc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80104d0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80104d4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80104d8:	9b02      	ldr	r3, [sp, #8]
 80104da:	f8ad 001a 	strh.w	r0, [sp, #26]
 80104de:	881f      	ldrh	r7, [r3, #0]
 80104e0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80104e4:	42bb      	cmp	r3, r7
 80104e6:	d9cc      	bls.n	8010482 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 80104e8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80104ec:	ab07      	add	r3, sp, #28
 80104ee:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80104f2:	6851      	ldr	r1, [r2, #4]
 80104f4:	c303      	stmia	r3!, {r0, r1}
 80104f6:	a905      	add	r1, sp, #20
 80104f8:	a807      	add	r0, sp, #28
 80104fa:	f7ff f99c 	bl	800f836 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80104fe:	2800      	cmp	r0, #0
 8010500:	d04c      	beq.n	801059c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 8010502:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8010506:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801050a:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 801050e:	4686      	mov	lr, r0
 8010510:	4290      	cmp	r0, r2
 8010512:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8010516:	4448      	add	r0, r9
 8010518:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 801051c:	bfb8      	it	lt
 801051e:	4696      	movlt	lr, r2
 8010520:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010524:	444a      	add	r2, r9
 8010526:	b280      	uxth	r0, r0
 8010528:	4299      	cmp	r1, r3
 801052a:	468c      	mov	ip, r1
 801052c:	b292      	uxth	r2, r2
 801052e:	9303      	str	r3, [sp, #12]
 8010530:	bfb8      	it	lt
 8010532:	469c      	movlt	ip, r3
 8010534:	b203      	sxth	r3, r0
 8010536:	fa0f f982 	sxth.w	r9, r2
 801053a:	f8ad e01c 	strh.w	lr, [sp, #28]
 801053e:	f8ad c01e 	strh.w	ip, [sp, #30]
 8010542:	454b      	cmp	r3, r9
 8010544:	bfb8      	it	lt
 8010546:	4602      	movlt	r2, r0
 8010548:	9b03      	ldr	r3, [sp, #12]
 801054a:	eba2 020e 	sub.w	r2, r2, lr
 801054e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8010552:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8010556:	4411      	add	r1, r2
 8010558:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801055c:	4413      	add	r3, r2
 801055e:	b289      	uxth	r1, r1
 8010560:	b29b      	uxth	r3, r3
 8010562:	b208      	sxth	r0, r1
 8010564:	b21a      	sxth	r2, r3
 8010566:	4290      	cmp	r0, r2
 8010568:	bfb8      	it	lt
 801056a:	460b      	movlt	r3, r1
 801056c:	eba3 030c 	sub.w	r3, r3, ip
 8010570:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010574:	a807      	add	r0, sp, #28
 8010576:	f7fa fa8c 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801057a:	b920      	cbnz	r0, 8010586 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 801057c:	6823      	ldr	r3, [r4, #0]
 801057e:	a907      	add	r1, sp, #28
 8010580:	4620      	mov	r0, r4
 8010582:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010584:	4798      	blx	r3
 8010586:	3701      	adds	r7, #1
 8010588:	b2bf      	uxth	r7, r7
 801058a:	e7a9      	b.n	80104e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 801058c:	f8d8 0000 	ldr.w	r0, [r8]
 8010590:	2101      	movs	r1, #1
 8010592:	6803      	ldr	r3, [r0, #0]
 8010594:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8010598:	4798      	blx	r3
 801059a:	e772      	b.n	8010482 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 801059c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80105a0:	e7e8      	b.n	8010574 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 80105a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80105a4:	4798      	blx	r3
 80105a6:	4b42      	ldr	r3, [pc, #264]	; (80106b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 80105a8:	781b      	ldrb	r3, [r3, #0]
 80105aa:	2b00      	cmp	r3, #0
 80105ac:	f43f af29 	beq.w	8010402 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 80105b0:	2300      	movs	r3, #0
 80105b2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80105b6:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80105ba:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80105be:	9b02      	ldr	r3, [sp, #8]
 80105c0:	881b      	ldrh	r3, [r3, #0]
 80105c2:	429d      	cmp	r5, r3
 80105c4:	f67f af1d 	bls.w	8010402 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 80105c8:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80105cc:	2907      	cmp	r1, #7
 80105ce:	d815      	bhi.n	80105fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80105d0:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 80105d4:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 80105d8:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 80105dc:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 80105e0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 80105e4:	1c4a      	adds	r2, r1, #1
 80105e6:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80105ea:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80105ee:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 80105f2:	f8a2 e002 	strh.w	lr, [r2, #2]
 80105f6:	f8a2 c004 	strh.w	ip, [r2, #4]
 80105fa:	80d7      	strh	r7, [r2, #6]
 80105fc:	3301      	adds	r3, #1
 80105fe:	b29b      	uxth	r3, r3
 8010600:	e7df      	b.n	80105c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x276>
 8010602:	2b02      	cmp	r3, #2
 8010604:	f040 8135 	bne.w	8010872 <_ZN8touchgfx11Application15drawCachedAreasEv+0x526>
 8010608:	4b2a      	ldr	r3, [pc, #168]	; (80106b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 801060a:	f104 09ac 	add.w	r9, r4, #172	; 0xac
 801060e:	781b      	ldrb	r3, [r3, #0]
 8010610:	2b01      	cmp	r3, #1
 8010612:	f000 809c 	beq.w	801074e <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 8010616:	9b02      	ldr	r3, [sp, #8]
 8010618:	f8b4 20ec 	ldrh.w	r2, [r4, #236]	; 0xec
 801061c:	f8b3 b000 	ldrh.w	fp, [r3]
 8010620:	f10b 0b01 	add.w	fp, fp, #1
 8010624:	fa1f fb8b 	uxth.w	fp, fp
 8010628:	2a00      	cmp	r2, #0
 801062a:	d0bc      	beq.n	80105a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801062c:	f8b4 50ae 	ldrh.w	r5, [r4, #174]	; 0xae
 8010630:	4659      	mov	r1, fp
 8010632:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8010636:	f04f 0800 	mov.w	r8, #0
 801063a:	441d      	add	r5, r3
 801063c:	b22d      	sxth	r5, r5
 801063e:	b28b      	uxth	r3, r1
 8010640:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8010644:	429a      	cmp	r2, r3
 8010646:	f240 80c0 	bls.w	80107ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x47e>
 801064a:	4427      	add	r7, r4
 801064c:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8010650:	4608      	mov	r0, r1
 8010652:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8010656:	f9be c0ae 	ldrsh.w	ip, [lr, #174]	; 0xae
 801065a:	4563      	cmp	r3, ip
 801065c:	f340 80a2 	ble.w	80107a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8010660:	f8be 50b2 	ldrh.w	r5, [lr, #178]	; 0xb2
 8010664:	4465      	add	r5, ip
 8010666:	b22d      	sxth	r5, r5
 8010668:	429d      	cmp	r5, r3
 801066a:	bfa8      	it	ge
 801066c:	461d      	movge	r5, r3
 801066e:	3101      	adds	r1, #1
 8010670:	4680      	mov	r8, r0
 8010672:	e7e4      	b.n	801063e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f2>
 8010674:	d10b      	bne.n	801068e <_ZN8touchgfx11Application15drawCachedAreasEv+0x342>
 8010676:	f9b5 c0b2 	ldrsh.w	ip, [r5, #178]	; 0xb2
 801067a:	f9ba 10b2 	ldrsh.w	r1, [sl, #178]	; 0xb2
 801067e:	458c      	cmp	ip, r1
 8010680:	bfb4      	ite	lt
 8010682:	469c      	movlt	ip, r3
 8010684:	46bc      	movge	ip, r7
 8010686:	4572      	cmp	r2, lr
 8010688:	bfb8      	it	lt
 801068a:	4672      	movlt	r2, lr
 801068c:	e087      	b.n	801079e <_ZN8touchgfx11Application15drawCachedAreasEv+0x452>
 801068e:	428a      	cmp	r2, r1
 8010690:	46bc      	mov	ip, r7
 8010692:	bfb8      	it	lt
 8010694:	460a      	movlt	r2, r1
 8010696:	e082      	b.n	801079e <_ZN8touchgfx11Application15drawCachedAreasEv+0x452>
 8010698:	2400898c 	.word	0x2400898c
 801069c:	24008998 	.word	0x24008998
 80106a0:	24000054 	.word	0x24000054
 80106a4:	2400894c 	.word	0x2400894c
 80106a8:	24008942 	.word	0x24008942
 80106ac:	24008940 	.word	0x24008940
 80106b0:	2400894a 	.word	0x2400894a
 80106b4:	24008944 	.word	0x24008944
 80106b8:	1961      	adds	r1, r4, r5
 80106ba:	ab07      	add	r3, sp, #28
 80106bc:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80106c0:	6849      	ldr	r1, [r1, #4]
 80106c2:	c303      	stmia	r3!, {r0, r1}
 80106c4:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80106c8:	a807      	add	r0, sp, #28
 80106ca:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80106ce:	2b13      	cmp	r3, #19
 80106d0:	440b      	add	r3, r1
 80106d2:	bfd8      	it	le
 80106d4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80106d8:	1a9b      	subs	r3, r3, r2
 80106da:	f8ad 201c 	strh.w	r2, [sp, #28]
 80106de:	f8ad 3020 	strh.w	r3, [sp, #32]
 80106e2:	f7fe ffeb 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80106e6:	a807      	add	r0, sp, #28
 80106e8:	f7fa f9d3 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80106ec:	bb78      	cbnz	r0, 801074e <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 80106ee:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80106f2:	4425      	add	r5, r4
 80106f4:	f8d8 0000 	ldr.w	r0, [r8]
 80106f8:	f1bc 0f14 	cmp.w	ip, #20
 80106fc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8010700:	f8d0 e000 	ldr.w	lr, [r0]
 8010704:	bfa8      	it	ge
 8010706:	f04f 0c14 	movge.w	ip, #20
 801070a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801070e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010712:	fa1f fc8c 	uxth.w	ip, ip
 8010716:	f8cd c000 	str.w	ip, [sp]
 801071a:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 801071e:	47d0      	blx	sl
 8010720:	4682      	mov	sl, r0
 8010722:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010726:	a807      	add	r0, sp, #28
 8010728:	f7fe ffae 	bl	800f688 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801072c:	6823      	ldr	r3, [r4, #0]
 801072e:	4620      	mov	r0, r4
 8010730:	a907      	add	r1, sp, #28
 8010732:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010734:	4798      	blx	r3
 8010736:	f8b5 00b0 	ldrh.w	r0, [r5, #176]	; 0xb0
 801073a:	eba0 000a 	sub.w	r0, r0, sl
 801073e:	b200      	sxth	r0, r0
 8010740:	f8a5 00b0 	strh.w	r0, [r5, #176]	; 0xb0
 8010744:	b918      	cbnz	r0, 801074e <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 8010746:	b2b9      	uxth	r1, r7
 8010748:	4648      	mov	r0, r9
 801074a:	f7ff faad 	bl	800fca8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801074e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8010752:	f1bb 0f00 	cmp.w	fp, #0
 8010756:	f43f af26 	beq.w	80105a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801075a:	9b02      	ldr	r3, [sp, #8]
 801075c:	2700      	movs	r7, #0
 801075e:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8010762:	881b      	ldrh	r3, [r3, #0]
 8010764:	3301      	adds	r3, #1
 8010766:	b29b      	uxth	r3, r3
 8010768:	b299      	uxth	r1, r3
 801076a:	00fd      	lsls	r5, r7, #3
 801076c:	458b      	cmp	fp, r1
 801076e:	d9a3      	bls.n	80106b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>
 8010770:	4425      	add	r5, r4
 8010772:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8010776:	469c      	mov	ip, r3
 8010778:	f8b5 10b0 	ldrh.w	r1, [r5, #176]	; 0xb0
 801077c:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8010780:	f9ba e0ac 	ldrsh.w	lr, [sl, #172]	; 0xac
 8010784:	4408      	add	r0, r1
 8010786:	f8ba 10b0 	ldrh.w	r1, [sl, #176]	; 0xb0
 801078a:	4471      	add	r1, lr
 801078c:	b200      	sxth	r0, r0
 801078e:	b209      	sxth	r1, r1
 8010790:	4288      	cmp	r0, r1
 8010792:	f6bf af6f 	bge.w	8010674 <_ZN8touchgfx11Application15drawCachedAreasEv+0x328>
 8010796:	4586      	cmp	lr, r0
 8010798:	4672      	mov	r2, lr
 801079a:	bfb8      	it	lt
 801079c:	4602      	movlt	r2, r0
 801079e:	3301      	adds	r3, #1
 80107a0:	4667      	mov	r7, ip
 80107a2:	e7e1      	b.n	8010768 <_ZN8touchgfx11Application15drawCachedAreasEv+0x41c>
 80107a4:	d10c      	bne.n	80107c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x474>
 80107a6:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80107aa:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80107ae:	4287      	cmp	r7, r0
 80107b0:	bfb4      	ite	lt
 80107b2:	4608      	movlt	r0, r1
 80107b4:	4640      	movge	r0, r8
 80107b6:	f8be 70b2 	ldrh.w	r7, [lr, #178]	; 0xb2
 80107ba:	443b      	add	r3, r7
 80107bc:	b21b      	sxth	r3, r3
 80107be:	e753      	b.n	8010668 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80107c0:	4565      	cmp	r5, ip
 80107c2:	4640      	mov	r0, r8
 80107c4:	bfa8      	it	ge
 80107c6:	4665      	movge	r5, ip
 80107c8:	e751      	b.n	801066e <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80107ca:	eb09 0007 	add.w	r0, r9, r7
 80107ce:	4427      	add	r7, r4
 80107d0:	9203      	str	r2, [sp, #12]
 80107d2:	f9b7 a0b2 	ldrsh.w	sl, [r7, #178]	; 0xb2
 80107d6:	f1ba 0f13 	cmp.w	sl, #19
 80107da:	bfde      	ittt	le
 80107dc:	f8b7 50ae 	ldrhle.w	r5, [r7, #174]	; 0xae
 80107e0:	4455      	addle	r5, sl
 80107e2:	b22d      	sxthle	r5, r5
 80107e4:	f7fa f955 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80107e8:	9a03      	ldr	r2, [sp, #12]
 80107ea:	2800      	cmp	r0, #0
 80107ec:	f47f af1c 	bne.w	8010628 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2dc>
 80107f0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80107f4:	fa1f fa8a 	uxth.w	sl, sl
 80107f8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80107fc:	1aad      	subs	r5, r5, r2
 80107fe:	4829      	ldr	r0, [pc, #164]	; (80108a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x558>)
 8010800:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8010804:	2d14      	cmp	r5, #20
 8010806:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 801080a:	6800      	ldr	r0, [r0, #0]
 801080c:	bfa8      	it	ge
 801080e:	2514      	movge	r5, #20
 8010810:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010814:	f8ad 201e 	strh.w	r2, [sp, #30]
 8010818:	b289      	uxth	r1, r1
 801081a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801081e:	b2ad      	uxth	r5, r5
 8010820:	f8d0 c000 	ldr.w	ip, [r0]
 8010824:	b292      	uxth	r2, r2
 8010826:	4555      	cmp	r5, sl
 8010828:	bf94      	ite	ls
 801082a:	9500      	strls	r5, [sp, #0]
 801082c:	f8cd a000 	strhi.w	sl, [sp]
 8010830:	b29b      	uxth	r3, r3
 8010832:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8010836:	47a8      	blx	r5
 8010838:	6823      	ldr	r3, [r4, #0]
 801083a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801083e:	a907      	add	r1, sp, #28
 8010840:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010842:	4620      	mov	r0, r4
 8010844:	4798      	blx	r3
 8010846:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801084a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801084e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8010852:	1a5b      	subs	r3, r3, r1
 8010854:	440a      	add	r2, r1
 8010856:	b21b      	sxth	r3, r3
 8010858:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801085c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8010860:	2b00      	cmp	r3, #0
 8010862:	f47f aed8 	bne.w	8010616 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8010866:	fa1f f188 	uxth.w	r1, r8
 801086a:	4648      	mov	r0, r9
 801086c:	f7ff fa1c 	bl	800fca8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010870:	e6d1      	b.n	8010616 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8010872:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8010876:	42ab      	cmp	r3, r5
 8010878:	f67f ae95 	bls.w	80105a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801087c:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8010880:	ab07      	add	r3, sp, #28
 8010882:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010886:	6851      	ldr	r1, [r2, #4]
 8010888:	c303      	stmia	r3!, {r0, r1}
 801088a:	a807      	add	r0, sp, #28
 801088c:	f7fa f901 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010890:	b920      	cbnz	r0, 801089c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>
 8010892:	6823      	ldr	r3, [r4, #0]
 8010894:	a907      	add	r1, sp, #28
 8010896:	4620      	mov	r0, r4
 8010898:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801089a:	4798      	blx	r3
 801089c:	3501      	adds	r5, #1
 801089e:	b2ad      	uxth	r5, r5
 80108a0:	e7e7      	b.n	8010872 <_ZN8touchgfx11Application15drawCachedAreasEv+0x526>
 80108a2:	bf00      	nop
 80108a4:	2400894c 	.word	0x2400894c

080108a8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80108a8:	4b03      	ldr	r3, [pc, #12]	; (80108b8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80108aa:	2200      	movs	r2, #0
 80108ac:	801a      	strh	r2, [r3, #0]
 80108ae:	805a      	strh	r2, [r3, #2]
 80108b0:	809a      	strh	r2, [r3, #4]
 80108b2:	80da      	strh	r2, [r3, #6]
 80108b4:	4770      	bx	lr
 80108b6:	bf00      	nop
 80108b8:	24008998 	.word	0x24008998

080108bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80108bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108c0:	b09d      	sub	sp, #116	; 0x74
 80108c2:	4606      	mov	r6, r0
 80108c4:	4614      	mov	r4, r2
 80108c6:	468a      	mov	sl, r1
 80108c8:	a803      	add	r0, sp, #12
 80108ca:	461d      	mov	r5, r3
 80108cc:	f000 fe53 	bl	8011576 <_ZN8touchgfx12TextProviderC1Ev>
 80108d0:	6833      	ldr	r3, [r6, #0]
 80108d2:	4630      	mov	r0, r6
 80108d4:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80108d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80108da:	4798      	blx	r3
 80108dc:	6833      	ldr	r3, [r6, #0]
 80108de:	4607      	mov	r7, r0
 80108e0:	4630      	mov	r0, r6
 80108e2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80108e4:	4798      	blx	r3
 80108e6:	462a      	mov	r2, r5
 80108e8:	2500      	movs	r5, #0
 80108ea:	4621      	mov	r1, r4
 80108ec:	9000      	str	r0, [sp, #0]
 80108ee:	463b      	mov	r3, r7
 80108f0:	462c      	mov	r4, r5
 80108f2:	46a9      	mov	r9, r5
 80108f4:	46a8      	mov	r8, r5
 80108f6:	a803      	add	r0, sp, #12
 80108f8:	f000 fe90 	bl	801161c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80108fc:	2300      	movs	r3, #0
 80108fe:	9302      	str	r3, [sp, #8]
 8010900:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010904:	429c      	cmp	r4, r3
 8010906:	d002      	beq.n	801090e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8010908:	455c      	cmp	r4, fp
 801090a:	bf18      	it	ne
 801090c:	4625      	movne	r5, r4
 801090e:	ab02      	add	r3, sp, #8
 8010910:	4632      	mov	r2, r6
 8010912:	4651      	mov	r1, sl
 8010914:	a803      	add	r0, sp, #12
 8010916:	f001 f975 	bl	8011c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801091a:	4604      	mov	r4, r0
 801091c:	b108      	cbz	r0, 8010922 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801091e:	280a      	cmp	r0, #10
 8010920:	d10a      	bne.n	8010938 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8010922:	45c1      	cmp	r9, r8
 8010924:	bf38      	it	cc
 8010926:	46c1      	movcc	r9, r8
 8010928:	f04f 0800 	mov.w	r8, #0
 801092c:	2c00      	cmp	r4, #0
 801092e:	d1e5      	bne.n	80108fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010930:	4648      	mov	r0, r9
 8010932:	b01d      	add	sp, #116	; 0x74
 8010934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010938:	9a02      	ldr	r2, [sp, #8]
 801093a:	2a00      	cmp	r2, #0
 801093c:	d0de      	beq.n	80108fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801093e:	7b57      	ldrb	r7, [r2, #13]
 8010940:	4629      	mov	r1, r5
 8010942:	6833      	ldr	r3, [r6, #0]
 8010944:	007f      	lsls	r7, r7, #1
 8010946:	8894      	ldrh	r4, [r2, #4]
 8010948:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801094a:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801094e:	7a97      	ldrb	r7, [r2, #10]
 8010950:	4307      	orrs	r7, r0
 8010952:	4630      	mov	r0, r6
 8010954:	4798      	blx	r3
 8010956:	4438      	add	r0, r7
 8010958:	4480      	add	r8, r0
 801095a:	fa1f f888 	uxth.w	r8, r8
 801095e:	e7e5      	b.n	801092c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08010960 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8010960:	b508      	push	{r3, lr}
 8010962:	6803      	ldr	r3, [r0, #0]
 8010964:	68db      	ldr	r3, [r3, #12]
 8010966:	4798      	blx	r3
 8010968:	b128      	cbz	r0, 8010976 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801096a:	7b43      	ldrb	r3, [r0, #13]
 801096c:	7a80      	ldrb	r0, [r0, #10]
 801096e:	005b      	lsls	r3, r3, #1
 8010970:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010974:	4318      	orrs	r0, r3
 8010976:	bd08      	pop	{r3, pc}

08010978 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010978:	b40e      	push	{r1, r2, r3}
 801097a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801097c:	b09e      	sub	sp, #120	; 0x78
 801097e:	4605      	mov	r5, r0
 8010980:	ab23      	add	r3, sp, #140	; 0x8c
 8010982:	a805      	add	r0, sp, #20
 8010984:	f853 4b04 	ldr.w	r4, [r3], #4
 8010988:	9303      	str	r3, [sp, #12]
 801098a:	f000 fdf4 	bl	8011576 <_ZN8touchgfx12TextProviderC1Ev>
 801098e:	682b      	ldr	r3, [r5, #0]
 8010990:	4628      	mov	r0, r5
 8010992:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010994:	4798      	blx	r3
 8010996:	682b      	ldr	r3, [r5, #0]
 8010998:	4606      	mov	r6, r0
 801099a:	4628      	mov	r0, r5
 801099c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801099e:	4798      	blx	r3
 80109a0:	4633      	mov	r3, r6
 80109a2:	4621      	mov	r1, r4
 80109a4:	ae1e      	add	r6, sp, #120	; 0x78
 80109a6:	2400      	movs	r4, #0
 80109a8:	9000      	str	r0, [sp, #0]
 80109aa:	9a03      	ldr	r2, [sp, #12]
 80109ac:	a805      	add	r0, sp, #20
 80109ae:	f000 fe35 	bl	801161c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80109b2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80109b6:	462a      	mov	r2, r5
 80109b8:	4633      	mov	r3, r6
 80109ba:	4621      	mov	r1, r4
 80109bc:	a805      	add	r0, sp, #20
 80109be:	f001 f921 	bl	8011c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80109c2:	b300      	cbz	r0, 8010a06 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 80109c4:	280a      	cmp	r0, #10
 80109c6:	d01a      	beq.n	80109fe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80109c8:	9f04      	ldr	r7, [sp, #16]
 80109ca:	b1c7      	cbz	r7, 80109fe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80109cc:	7b78      	ldrb	r0, [r7, #13]
 80109ce:	7a3b      	ldrb	r3, [r7, #8]
 80109d0:	00c1      	lsls	r1, r0, #3
 80109d2:	88ea      	ldrh	r2, [r5, #6]
 80109d4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80109d8:	4319      	orrs	r1, r3
 80109da:	0643      	lsls	r3, r0, #25
 80109dc:	ea4f 1000 	mov.w	r0, r0, lsl #4
 80109e0:	bf48      	it	mi
 80109e2:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80109e6:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80109ea:	bf48      	it	mi
 80109ec:	b219      	sxthmi	r1, r3
 80109ee:	79fb      	ldrb	r3, [r7, #7]
 80109f0:	4303      	orrs	r3, r0
 80109f2:	4413      	add	r3, r2
 80109f4:	1a5b      	subs	r3, r3, r1
 80109f6:	b21b      	sxth	r3, r3
 80109f8:	429c      	cmp	r4, r3
 80109fa:	bfb8      	it	lt
 80109fc:	461c      	movlt	r4, r3
 80109fe:	4633      	mov	r3, r6
 8010a00:	462a      	mov	r2, r5
 8010a02:	2100      	movs	r1, #0
 8010a04:	e7da      	b.n	80109bc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8010a06:	b2a0      	uxth	r0, r4
 8010a08:	b01e      	add	sp, #120	; 0x78
 8010a0a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010a0e:	b003      	add	sp, #12
 8010a10:	4770      	bx	lr

08010a12 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8010a12:	7a43      	ldrb	r3, [r0, #9]
 8010a14:	8880      	ldrh	r0, [r0, #4]
 8010a16:	4418      	add	r0, r3
 8010a18:	b280      	uxth	r0, r0
 8010a1a:	4770      	bx	lr

08010a1c <_ZNK8touchgfx4Font13getFontHeightEv>:
 8010a1c:	6803      	ldr	r3, [r0, #0]
 8010a1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010a20:	4718      	bx	r3

08010a22 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8010a22:	b40e      	push	{r1, r2, r3}
 8010a24:	b570      	push	{r4, r5, r6, lr}
 8010a26:	b09d      	sub	sp, #116	; 0x74
 8010a28:	4604      	mov	r4, r0
 8010a2a:	ab21      	add	r3, sp, #132	; 0x84
 8010a2c:	a803      	add	r0, sp, #12
 8010a2e:	f853 5b04 	ldr.w	r5, [r3], #4
 8010a32:	9302      	str	r3, [sp, #8]
 8010a34:	f000 fd9f 	bl	8011576 <_ZN8touchgfx12TextProviderC1Ev>
 8010a38:	6823      	ldr	r3, [r4, #0]
 8010a3a:	4620      	mov	r0, r4
 8010a3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010a3e:	4798      	blx	r3
 8010a40:	6823      	ldr	r3, [r4, #0]
 8010a42:	4606      	mov	r6, r0
 8010a44:	4620      	mov	r0, r4
 8010a46:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010a48:	2401      	movs	r4, #1
 8010a4a:	4798      	blx	r3
 8010a4c:	4633      	mov	r3, r6
 8010a4e:	9000      	str	r0, [sp, #0]
 8010a50:	4629      	mov	r1, r5
 8010a52:	9a02      	ldr	r2, [sp, #8]
 8010a54:	a803      	add	r0, sp, #12
 8010a56:	f000 fde1 	bl	801161c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010a5a:	a803      	add	r0, sp, #12
 8010a5c:	f001 f99e 	bl	8011d9c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010a60:	b2a3      	uxth	r3, r4
 8010a62:	b138      	cbz	r0, 8010a74 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 8010a64:	280a      	cmp	r0, #10
 8010a66:	a803      	add	r0, sp, #12
 8010a68:	bf04      	itt	eq
 8010a6a:	3301      	addeq	r3, #1
 8010a6c:	b21c      	sxtheq	r4, r3
 8010a6e:	f001 f995 	bl	8011d9c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010a72:	e7f5      	b.n	8010a60 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8010a74:	4618      	mov	r0, r3
 8010a76:	b01d      	add	sp, #116	; 0x74
 8010a78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a7c:	b003      	add	sp, #12
 8010a7e:	4770      	bx	lr

08010a80 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8010a80:	b40e      	push	{r1, r2, r3}
 8010a82:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010a84:	b09e      	sub	sp, #120	; 0x78
 8010a86:	4604      	mov	r4, r0
 8010a88:	ab23      	add	r3, sp, #140	; 0x8c
 8010a8a:	a805      	add	r0, sp, #20
 8010a8c:	f853 5b04 	ldr.w	r5, [r3], #4
 8010a90:	9303      	str	r3, [sp, #12]
 8010a92:	f000 fd70 	bl	8011576 <_ZN8touchgfx12TextProviderC1Ev>
 8010a96:	6823      	ldr	r3, [r4, #0]
 8010a98:	4620      	mov	r0, r4
 8010a9a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010a9c:	4798      	blx	r3
 8010a9e:	6823      	ldr	r3, [r4, #0]
 8010aa0:	4606      	mov	r6, r0
 8010aa2:	4620      	mov	r0, r4
 8010aa4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010aa6:	4798      	blx	r3
 8010aa8:	4633      	mov	r3, r6
 8010aaa:	4629      	mov	r1, r5
 8010aac:	9000      	str	r0, [sp, #0]
 8010aae:	9a03      	ldr	r2, [sp, #12]
 8010ab0:	a805      	add	r0, sp, #20
 8010ab2:	f000 fdb3 	bl	801161c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010ab6:	ad1e      	add	r5, sp, #120	; 0x78
 8010ab8:	2100      	movs	r1, #0
 8010aba:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8010abe:	4622      	mov	r2, r4
 8010ac0:	a805      	add	r0, sp, #20
 8010ac2:	f845 1d68 	str.w	r1, [r5, #-104]!
 8010ac6:	462b      	mov	r3, r5
 8010ac8:	f001 f89c 	bl	8011c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010acc:	b1d8      	cbz	r0, 8010b06 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8010ace:	280a      	cmp	r0, #10
 8010ad0:	d012      	beq.n	8010af8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010ad2:	9804      	ldr	r0, [sp, #16]
 8010ad4:	b180      	cbz	r0, 8010af8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010ad6:	7b47      	ldrb	r7, [r0, #13]
 8010ad8:	88e2      	ldrh	r2, [r4, #6]
 8010ada:	00fb      	lsls	r3, r7, #3
 8010adc:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8010ae0:	7a03      	ldrb	r3, [r0, #8]
 8010ae2:	430b      	orrs	r3, r1
 8010ae4:	0679      	lsls	r1, r7, #25
 8010ae6:	bf44      	itt	mi
 8010ae8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010aec:	b21b      	sxthmi	r3, r3
 8010aee:	1ad3      	subs	r3, r2, r3
 8010af0:	b21b      	sxth	r3, r3
 8010af2:	429e      	cmp	r6, r3
 8010af4:	bfa8      	it	ge
 8010af6:	461e      	movge	r6, r3
 8010af8:	462b      	mov	r3, r5
 8010afa:	4622      	mov	r2, r4
 8010afc:	2100      	movs	r1, #0
 8010afe:	a805      	add	r0, sp, #20
 8010b00:	f001 f880 	bl	8011c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010b04:	e7e2      	b.n	8010acc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8010b06:	4630      	mov	r0, r6
 8010b08:	b01e      	add	sp, #120	; 0x78
 8010b0a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010b0e:	b003      	add	sp, #12
 8010b10:	4770      	bx	lr

08010b12 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010b12:	b513      	push	{r0, r1, r4, lr}
 8010b14:	6803      	ldr	r3, [r0, #0]
 8010b16:	2400      	movs	r4, #0
 8010b18:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010b1c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010b20:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010b24:	4669      	mov	r1, sp
 8010b26:	691b      	ldr	r3, [r3, #16]
 8010b28:	9400      	str	r4, [sp, #0]
 8010b2a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010b2e:	4798      	blx	r3
 8010b30:	b002      	add	sp, #8
 8010b32:	bd10      	pop	{r4, pc}

08010b34 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8010b34:	b538      	push	{r3, r4, r5, lr}
 8010b36:	680b      	ldr	r3, [r1, #0]
 8010b38:	460c      	mov	r4, r1
 8010b3a:	4605      	mov	r5, r0
 8010b3c:	68db      	ldr	r3, [r3, #12]
 8010b3e:	4798      	blx	r3
 8010b40:	6823      	ldr	r3, [r4, #0]
 8010b42:	4620      	mov	r0, r4
 8010b44:	4629      	mov	r1, r5
 8010b46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b48:	4798      	blx	r3
 8010b4a:	4628      	mov	r0, r5
 8010b4c:	bd38      	pop	{r3, r4, r5, pc}

08010b4e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010b4e:	b410      	push	{r4}
 8010b50:	880a      	ldrh	r2, [r1, #0]
 8010b52:	8884      	ldrh	r4, [r0, #4]
 8010b54:	4422      	add	r2, r4
 8010b56:	800a      	strh	r2, [r1, #0]
 8010b58:	884a      	ldrh	r2, [r1, #2]
 8010b5a:	88c4      	ldrh	r4, [r0, #6]
 8010b5c:	4422      	add	r2, r4
 8010b5e:	804a      	strh	r2, [r1, #2]
 8010b60:	6940      	ldr	r0, [r0, #20]
 8010b62:	b120      	cbz	r0, 8010b6e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8010b64:	6803      	ldr	r3, [r0, #0]
 8010b66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010b6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b6c:	4718      	bx	r3
 8010b6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010b72:	4770      	bx	lr

08010b74 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8010b74:	b570      	push	{r4, r5, r6, lr}
 8010b76:	8882      	ldrh	r2, [r0, #4]
 8010b78:	460c      	mov	r4, r1
 8010b7a:	880b      	ldrh	r3, [r1, #0]
 8010b7c:	4605      	mov	r5, r0
 8010b7e:	4413      	add	r3, r2
 8010b80:	800b      	strh	r3, [r1, #0]
 8010b82:	884b      	ldrh	r3, [r1, #2]
 8010b84:	88c2      	ldrh	r2, [r0, #6]
 8010b86:	4413      	add	r3, r2
 8010b88:	804b      	strh	r3, [r1, #2]
 8010b8a:	1d01      	adds	r1, r0, #4
 8010b8c:	4620      	mov	r0, r4
 8010b8e:	f7f9 ff3d 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 8010b92:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010b96:	2b00      	cmp	r3, #0
 8010b98:	dd0b      	ble.n	8010bb2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010b9a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010b9e:	2b00      	cmp	r3, #0
 8010ba0:	dd07      	ble.n	8010bb2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010ba2:	6968      	ldr	r0, [r5, #20]
 8010ba4:	b128      	cbz	r0, 8010bb2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010ba6:	6803      	ldr	r3, [r0, #0]
 8010ba8:	4621      	mov	r1, r4
 8010baa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010bac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010bb0:	4718      	bx	r3
 8010bb2:	bd70      	pop	{r4, r5, r6, pc}

08010bb4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010bb4:	b570      	push	{r4, r5, r6, lr}
 8010bb6:	8882      	ldrh	r2, [r0, #4]
 8010bb8:	460c      	mov	r4, r1
 8010bba:	880b      	ldrh	r3, [r1, #0]
 8010bbc:	4605      	mov	r5, r0
 8010bbe:	4413      	add	r3, r2
 8010bc0:	800b      	strh	r3, [r1, #0]
 8010bc2:	884b      	ldrh	r3, [r1, #2]
 8010bc4:	88c2      	ldrh	r2, [r0, #6]
 8010bc6:	4413      	add	r3, r2
 8010bc8:	804b      	strh	r3, [r1, #2]
 8010bca:	1d01      	adds	r1, r0, #4
 8010bcc:	4620      	mov	r0, r4
 8010bce:	f7f9 ff1d 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 8010bd2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010bd6:	2b00      	cmp	r3, #0
 8010bd8:	dd18      	ble.n	8010c0c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8010bda:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010bde:	2b00      	cmp	r3, #0
 8010be0:	dd14      	ble.n	8010c0c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8010be2:	6968      	ldr	r0, [r5, #20]
 8010be4:	b128      	cbz	r0, 8010bf2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010be6:	6803      	ldr	r3, [r0, #0]
 8010be8:	4621      	mov	r1, r4
 8010bea:	691b      	ldr	r3, [r3, #16]
 8010bec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010bf0:	4718      	bx	r3
 8010bf2:	4b07      	ldr	r3, [pc, #28]	; (8010c10 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010bf4:	681b      	ldr	r3, [r3, #0]
 8010bf6:	3304      	adds	r3, #4
 8010bf8:	429d      	cmp	r5, r3
 8010bfa:	d107      	bne.n	8010c0c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8010bfc:	f7fe fefa 	bl	800f9f4 <_ZN8touchgfx11Application11getInstanceEv>
 8010c00:	6821      	ldr	r1, [r4, #0]
 8010c02:	6862      	ldr	r2, [r4, #4]
 8010c04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c08:	f7ff b862 	b.w	800fcd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010c0c:	bd70      	pop	{r4, r5, r6, pc}
 8010c0e:	bf00      	nop
 8010c10:	24008990 	.word	0x24008990

08010c14 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010c14:	b570      	push	{r4, r5, r6, lr}
 8010c16:	4604      	mov	r4, r0
 8010c18:	4616      	mov	r6, r2
 8010c1a:	460d      	mov	r5, r1
 8010c1c:	b901      	cbnz	r1, 8010c20 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8010c1e:	b192      	cbz	r2, 8010c46 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8010c20:	6823      	ldr	r3, [r4, #0]
 8010c22:	4620      	mov	r0, r4
 8010c24:	699b      	ldr	r3, [r3, #24]
 8010c26:	4798      	blx	r3
 8010c28:	88e2      	ldrh	r2, [r4, #6]
 8010c2a:	88a1      	ldrh	r1, [r4, #4]
 8010c2c:	4620      	mov	r0, r4
 8010c2e:	4432      	add	r2, r6
 8010c30:	4429      	add	r1, r5
 8010c32:	b212      	sxth	r2, r2
 8010c34:	b209      	sxth	r1, r1
 8010c36:	f7f1 ff02 	bl	8002a3e <_ZN8touchgfx8Drawable5setXYEss>
 8010c3a:	6823      	ldr	r3, [r4, #0]
 8010c3c:	4620      	mov	r0, r4
 8010c3e:	699b      	ldr	r3, [r3, #24]
 8010c40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c44:	4718      	bx	r3
 8010c46:	bd70      	pop	{r4, r5, r6, pc}

08010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8010c48:	b510      	push	{r4, lr}
 8010c4a:	2300      	movs	r3, #0
 8010c4c:	4604      	mov	r4, r0
 8010c4e:	4608      	mov	r0, r1
 8010c50:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8010c54:	8023      	strh	r3, [r4, #0]
 8010c56:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010c5a:	8063      	strh	r3, [r4, #2]
 8010c5c:	6803      	ldr	r3, [r0, #0]
 8010c5e:	80a1      	strh	r1, [r4, #4]
 8010c60:	4621      	mov	r1, r4
 8010c62:	80e2      	strh	r2, [r4, #6]
 8010c64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c66:	4798      	blx	r3
 8010c68:	4620      	mov	r0, r4
 8010c6a:	bd10      	pop	{r4, pc}

08010c6c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8010c6c:	b530      	push	{r4, r5, lr}
 8010c6e:	8083      	strh	r3, [r0, #4]
 8010c70:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8010c74:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8010c78:	80c3      	strh	r3, [r0, #6]
 8010c7a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010c7e:	6141      	str	r1, [r0, #20]
 8010c80:	7203      	strb	r3, [r0, #8]
 8010c82:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010c86:	8302      	strh	r2, [r0, #24]
 8010c88:	7243      	strb	r3, [r0, #9]
 8010c8a:	7a83      	ldrb	r3, [r0, #10]
 8010c8c:	f365 0306 	bfi	r3, r5, #0, #7
 8010c90:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8010c94:	f365 13c7 	bfi	r3, r5, #7, #1
 8010c98:	7283      	strb	r3, [r0, #10]
 8010c9a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8010c9e:	72c3      	strb	r3, [r0, #11]
 8010ca0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8010ca4:	7303      	strb	r3, [r0, #12]
 8010ca6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8010caa:	81c3      	strh	r3, [r0, #14]
 8010cac:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8010cb0:	8203      	strh	r3, [r0, #16]
 8010cb2:	4b01      	ldr	r3, [pc, #4]	; (8010cb8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8010cb4:	6003      	str	r3, [r0, #0]
 8010cb6:	bd30      	pop	{r4, r5, pc}
 8010cb8:	0801f414 	.word	0x0801f414

08010cbc <_ZNK8touchgfx9ConstFont4findEt>:
 8010cbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010cbe:	6944      	ldr	r4, [r0, #20]
 8010cc0:	b3bc      	cbz	r4, 8010d32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010cc2:	88a3      	ldrh	r3, [r4, #4]
 8010cc4:	8b02      	ldrh	r2, [r0, #24]
 8010cc6:	1acb      	subs	r3, r1, r3
 8010cc8:	f102 32ff 	add.w	r2, r2, #4294967295
 8010ccc:	d431      	bmi.n	8010d32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010cce:	4293      	cmp	r3, r2
 8010cd0:	dd0c      	ble.n	8010cec <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8010cd2:	230e      	movs	r3, #14
 8010cd4:	fb03 4302 	mla	r3, r3, r2, r4
 8010cd8:	889b      	ldrh	r3, [r3, #4]
 8010cda:	1a5b      	subs	r3, r3, r1
 8010cdc:	1ad3      	subs	r3, r2, r3
 8010cde:	429a      	cmp	r2, r3
 8010ce0:	db27      	blt.n	8010d32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010ce2:	2b00      	cmp	r3, #0
 8010ce4:	bfbc      	itt	lt
 8010ce6:	2302      	movlt	r3, #2
 8010ce8:	fb92 f3f3 	sdivlt	r3, r2, r3
 8010cec:	2500      	movs	r5, #0
 8010cee:	260e      	movs	r6, #14
 8010cf0:	4295      	cmp	r5, r2
 8010cf2:	dc1e      	bgt.n	8010d32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010cf4:	fb06 4003 	mla	r0, r6, r3, r4
 8010cf8:	8887      	ldrh	r7, [r0, #4]
 8010cfa:	42b9      	cmp	r1, r7
 8010cfc:	d01a      	beq.n	8010d34 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8010cfe:	d20d      	bcs.n	8010d1c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8010d00:	1e5a      	subs	r2, r3, #1
 8010d02:	4295      	cmp	r5, r2
 8010d04:	dc15      	bgt.n	8010d32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010d06:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8010d0a:	1a5b      	subs	r3, r3, r1
 8010d0c:	1ad3      	subs	r3, r2, r3
 8010d0e:	429a      	cmp	r2, r3
 8010d10:	db0f      	blt.n	8010d32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010d12:	429d      	cmp	r5, r3
 8010d14:	ddec      	ble.n	8010cf0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010d16:	1953      	adds	r3, r2, r5
 8010d18:	105b      	asrs	r3, r3, #1
 8010d1a:	e7e9      	b.n	8010cf0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010d1c:	1c5d      	adds	r5, r3, #1
 8010d1e:	42aa      	cmp	r2, r5
 8010d20:	db07      	blt.n	8010d32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010d22:	8a43      	ldrh	r3, [r0, #18]
 8010d24:	1acb      	subs	r3, r1, r3
 8010d26:	442b      	add	r3, r5
 8010d28:	429d      	cmp	r5, r3
 8010d2a:	dc02      	bgt.n	8010d32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010d2c:	429a      	cmp	r2, r3
 8010d2e:	dadf      	bge.n	8010cf0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010d30:	e7f1      	b.n	8010d16 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8010d32:	2000      	movs	r0, #0
 8010d34:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010d36 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8010d36:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010d38:	4604      	mov	r4, r0
 8010d3a:	4617      	mov	r7, r2
 8010d3c:	461e      	mov	r6, r3
 8010d3e:	b911      	cbnz	r1, 8010d46 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8010d40:	2500      	movs	r5, #0
 8010d42:	4628      	mov	r0, r5
 8010d44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010d46:	290a      	cmp	r1, #10
 8010d48:	d0fa      	beq.n	8010d40 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010d4a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010d4e:	4291      	cmp	r1, r2
 8010d50:	d0f6      	beq.n	8010d40 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010d52:	f242 020b 	movw	r2, #8203	; 0x200b
 8010d56:	4291      	cmp	r1, r2
 8010d58:	d0f2      	beq.n	8010d40 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010d5a:	f7ff ffaf 	bl	8010cbc <_ZNK8touchgfx9ConstFont4findEt>
 8010d5e:	4605      	mov	r5, r0
 8010d60:	b950      	cbnz	r0, 8010d78 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8010d62:	6823      	ldr	r3, [r4, #0]
 8010d64:	4620      	mov	r0, r4
 8010d66:	691b      	ldr	r3, [r3, #16]
 8010d68:	4798      	blx	r3
 8010d6a:	4601      	mov	r1, r0
 8010d6c:	4620      	mov	r0, r4
 8010d6e:	f7ff ffa5 	bl	8010cbc <_ZNK8touchgfx9ConstFont4findEt>
 8010d72:	4605      	mov	r5, r0
 8010d74:	2800      	cmp	r0, #0
 8010d76:	d0e3      	beq.n	8010d40 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010d78:	6823      	ldr	r3, [r4, #0]
 8010d7a:	4629      	mov	r1, r5
 8010d7c:	4620      	mov	r0, r4
 8010d7e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010d80:	4798      	blx	r3
 8010d82:	6038      	str	r0, [r7, #0]
 8010d84:	6823      	ldr	r3, [r4, #0]
 8010d86:	4620      	mov	r0, r4
 8010d88:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010d8a:	4798      	blx	r3
 8010d8c:	7030      	strb	r0, [r6, #0]
 8010d8e:	e7d8      	b.n	8010d42 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08010d90 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8010d90:	b538      	push	{r3, r4, r5, lr}
 8010d92:	4605      	mov	r5, r0
 8010d94:	f002 f988 	bl	80130a8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010d98:	4604      	mov	r4, r0
 8010d9a:	4628      	mov	r0, r5
 8010d9c:	f002 f8c8 	bl	8012f30 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8010da0:	2800      	cmp	r0, #0
 8010da2:	bf14      	ite	ne
 8010da4:	2002      	movne	r0, #2
 8010da6:	2000      	moveq	r0, #0
 8010da8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8010dac:	b280      	uxth	r0, r0
 8010dae:	bd38      	pop	{r3, r4, r5, pc}

08010db0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8010db0:	b538      	push	{r3, r4, r5, lr}
 8010db2:	4605      	mov	r5, r0
 8010db4:	f002 f978 	bl	80130a8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010db8:	4604      	mov	r4, r0
 8010dba:	4628      	mov	r0, r5
 8010dbc:	f002 f8b8 	bl	8012f30 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8010dc0:	2800      	cmp	r0, #0
 8010dc2:	bf14      	ite	ne
 8010dc4:	2002      	movne	r0, #2
 8010dc6:	2000      	moveq	r0, #0
 8010dc8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8010dcc:	f040 0001 	orr.w	r0, r0, #1
 8010dd0:	b280      	uxth	r0, r0
 8010dd2:	bd38      	pop	{r3, r4, r5, pc}

08010dd4 <_ZN8touchgfx4clzuEm>:
 8010dd4:	4603      	mov	r3, r0
 8010dd6:	b1c8      	cbz	r0, 8010e0c <_ZN8touchgfx4clzuEm+0x38>
 8010dd8:	0c02      	lsrs	r2, r0, #16
 8010dda:	0412      	lsls	r2, r2, #16
 8010ddc:	b9a2      	cbnz	r2, 8010e08 <_ZN8touchgfx4clzuEm+0x34>
 8010dde:	0403      	lsls	r3, r0, #16
 8010de0:	2010      	movs	r0, #16
 8010de2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010de6:	bf04      	itt	eq
 8010de8:	021b      	lsleq	r3, r3, #8
 8010dea:	3008      	addeq	r0, #8
 8010dec:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010df0:	bf04      	itt	eq
 8010df2:	011b      	lsleq	r3, r3, #4
 8010df4:	3004      	addeq	r0, #4
 8010df6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010dfa:	bf04      	itt	eq
 8010dfc:	009b      	lsleq	r3, r3, #2
 8010dfe:	3002      	addeq	r0, #2
 8010e00:	2b00      	cmp	r3, #0
 8010e02:	db04      	blt.n	8010e0e <_ZN8touchgfx4clzuEm+0x3a>
 8010e04:	3001      	adds	r0, #1
 8010e06:	4770      	bx	lr
 8010e08:	2000      	movs	r0, #0
 8010e0a:	e7ea      	b.n	8010de2 <_ZN8touchgfx4clzuEm+0xe>
 8010e0c:	2020      	movs	r0, #32
 8010e0e:	4770      	bx	lr

08010e10 <_ZN8touchgfx7muldivuEmmmRm>:
 8010e10:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e14:	4680      	mov	r8, r0
 8010e16:	460f      	mov	r7, r1
 8010e18:	4615      	mov	r5, r2
 8010e1a:	461e      	mov	r6, r3
 8010e1c:	f7ff ffda 	bl	8010dd4 <_ZN8touchgfx4clzuEm>
 8010e20:	b998      	cbnz	r0, 8010e4a <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 8010e22:	4608      	mov	r0, r1
 8010e24:	f7ff ffd6 	bl	8010dd4 <_ZN8touchgfx4clzuEm>
 8010e28:	2800      	cmp	r0, #0
 8010e2a:	dd08      	ble.n	8010e3e <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8010e2c:	4633      	mov	r3, r6
 8010e2e:	462a      	mov	r2, r5
 8010e30:	4641      	mov	r1, r8
 8010e32:	4638      	mov	r0, r7
 8010e34:	f7ff ffec 	bl	8010e10 <_ZN8touchgfx7muldivuEmmmRm>
 8010e38:	b003      	add	sp, #12
 8010e3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e3e:	f04f 33ff 	mov.w	r3, #4294967295
 8010e42:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010e46:	6033      	str	r3, [r6, #0]
 8010e48:	e7f6      	b.n	8010e38 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8010e4a:	fa31 f900 	lsrs.w	r9, r1, r0
 8010e4e:	fb01 f308 	mul.w	r3, r1, r8
 8010e52:	d105      	bne.n	8010e60 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 8010e54:	fbb3 f0f5 	udiv	r0, r3, r5
 8010e58:	fb05 3510 	mls	r5, r5, r0, r3
 8010e5c:	6035      	str	r5, [r6, #0]
 8010e5e:	e7eb      	b.n	8010e38 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8010e60:	2301      	movs	r3, #1
 8010e62:	fa08 fb00 	lsl.w	fp, r8, r0
 8010e66:	462a      	mov	r2, r5
 8010e68:	4641      	mov	r1, r8
 8010e6a:	fa03 f000 	lsl.w	r0, r3, r0
 8010e6e:	4633      	mov	r3, r6
 8010e70:	fbbb faf5 	udiv	sl, fp, r5
 8010e74:	3801      	subs	r0, #1
 8010e76:	fb09 f40a 	mul.w	r4, r9, sl
 8010e7a:	4038      	ands	r0, r7
 8010e7c:	f7ff ffc8 	bl	8010e10 <_ZN8touchgfx7muldivuEmmmRm>
 8010e80:	462a      	mov	r2, r5
 8010e82:	4607      	mov	r7, r0
 8010e84:	ab01      	add	r3, sp, #4
 8010e86:	fb05 b11a 	mls	r1, r5, sl, fp
 8010e8a:	4648      	mov	r0, r9
 8010e8c:	f7ff ffc0 	bl	8010e10 <_ZN8touchgfx7muldivuEmmmRm>
 8010e90:	9b01      	ldr	r3, [sp, #4]
 8010e92:	6832      	ldr	r2, [r6, #0]
 8010e94:	441a      	add	r2, r3
 8010e96:	fbb2 f3f5 	udiv	r3, r2, r5
 8010e9a:	441c      	add	r4, r3
 8010e9c:	fb05 2513 	mls	r5, r5, r3, r2
 8010ea0:	443c      	add	r4, r7
 8010ea2:	4420      	add	r0, r4
 8010ea4:	e7da      	b.n	8010e5c <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08010ea6 <_ZN8touchgfx6muldivElllRl>:
 8010ea6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010ea8:	2800      	cmp	r0, #0
 8010eaa:	461e      	mov	r6, r3
 8010eac:	bfba      	itte	lt
 8010eae:	4240      	neglt	r0, r0
 8010eb0:	f04f 34ff 	movlt.w	r4, #4294967295
 8010eb4:	2401      	movge	r4, #1
 8010eb6:	2900      	cmp	r1, #0
 8010eb8:	bfbc      	itt	lt
 8010eba:	4249      	neglt	r1, r1
 8010ebc:	4264      	neglt	r4, r4
 8010ebe:	2a00      	cmp	r2, #0
 8010ec0:	bfb6      	itet	lt
 8010ec2:	4265      	neglt	r5, r4
 8010ec4:	4625      	movge	r5, r4
 8010ec6:	4252      	neglt	r2, r2
 8010ec8:	4288      	cmp	r0, r1
 8010eca:	bfc2      	ittt	gt
 8010ecc:	4603      	movgt	r3, r0
 8010ece:	4608      	movgt	r0, r1
 8010ed0:	4619      	movgt	r1, r3
 8010ed2:	ab01      	add	r3, sp, #4
 8010ed4:	f7ff ff9c 	bl	8010e10 <_ZN8touchgfx7muldivuEmmmRm>
 8010ed8:	9b01      	ldr	r3, [sp, #4]
 8010eda:	4368      	muls	r0, r5
 8010edc:	435c      	muls	r4, r3
 8010ede:	6034      	str	r4, [r6, #0]
 8010ee0:	b002      	add	sp, #8
 8010ee2:	bd70      	pop	{r4, r5, r6, pc}

08010ee4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8010ee4:	2000      	movs	r0, #0
 8010ee6:	4770      	bx	lr

08010ee8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8010ee8:	2001      	movs	r0, #1
 8010eea:	4770      	bx	lr

08010eec <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8010eec:	2002      	movs	r0, #2
 8010eee:	4770      	bx	lr

08010ef0 <_ZN8touchgfx6ScreenD1Ev>:
 8010ef0:	4770      	bx	lr

08010ef2 <_ZN8touchgfx12GestureEventD1Ev>:
 8010ef2:	4770      	bx	lr

08010ef4 <_ZN8touchgfx9DragEventD1Ev>:
 8010ef4:	4770      	bx	lr

08010ef6 <_ZN8touchgfx10ClickEventD1Ev>:
 8010ef6:	4770      	bx	lr

08010ef8 <_ZN8touchgfx10ClickEventD0Ev>:
 8010ef8:	b510      	push	{r4, lr}
 8010efa:	4604      	mov	r4, r0
 8010efc:	210c      	movs	r1, #12
 8010efe:	f00b fa82 	bl	801c406 <_ZdlPvj>
 8010f02:	4620      	mov	r0, r4
 8010f04:	bd10      	pop	{r4, pc}

08010f06 <_ZN8touchgfx9DragEventD0Ev>:
 8010f06:	b510      	push	{r4, lr}
 8010f08:	4604      	mov	r4, r0
 8010f0a:	2110      	movs	r1, #16
 8010f0c:	f00b fa7b 	bl	801c406 <_ZdlPvj>
 8010f10:	4620      	mov	r0, r4
 8010f12:	bd10      	pop	{r4, pc}

08010f14 <_ZN8touchgfx12GestureEventD0Ev>:
 8010f14:	b510      	push	{r4, lr}
 8010f16:	4604      	mov	r4, r0
 8010f18:	210c      	movs	r1, #12
 8010f1a:	f00b fa74 	bl	801c406 <_ZdlPvj>
 8010f1e:	4620      	mov	r0, r4
 8010f20:	bd10      	pop	{r4, pc}

08010f22 <_ZN8touchgfx6ScreenD0Ev>:
 8010f22:	b510      	push	{r4, lr}
 8010f24:	4604      	mov	r4, r0
 8010f26:	213c      	movs	r1, #60	; 0x3c
 8010f28:	f00b fa6d 	bl	801c406 <_ZdlPvj>
 8010f2c:	4620      	mov	r0, r4
 8010f2e:	bd10      	pop	{r4, pc}

08010f30 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8010f30:	b530      	push	{r4, r5, lr}
 8010f32:	460d      	mov	r5, r1
 8010f34:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8010f36:	b087      	sub	sp, #28
 8010f38:	4604      	mov	r4, r0
 8010f3a:	b301      	cbz	r1, 8010f7e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8010f3c:	a801      	add	r0, sp, #4
 8010f3e:	f7ff fe83 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010f42:	892a      	ldrh	r2, [r5, #8]
 8010f44:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010f48:	7928      	ldrb	r0, [r5, #4]
 8010f4a:	1ad2      	subs	r2, r2, r3
 8010f4c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8010f4e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8010f52:	441a      	add	r2, r3
 8010f54:	896b      	ldrh	r3, [r5, #10]
 8010f56:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8010f5a:	f88d 0010 	strb.w	r0, [sp, #16]
 8010f5e:	1b5b      	subs	r3, r3, r5
 8010f60:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8010f62:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8010f64:	442b      	add	r3, r5
 8010f66:	4d07      	ldr	r5, [pc, #28]	; (8010f84 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8010f68:	f8ad 1012 	strh.w	r1, [sp, #18]
 8010f6c:	a903      	add	r1, sp, #12
 8010f6e:	9503      	str	r5, [sp, #12]
 8010f70:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010f74:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010f78:	6803      	ldr	r3, [r0, #0]
 8010f7a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010f7c:	4798      	blx	r3
 8010f7e:	b007      	add	sp, #28
 8010f80:	bd30      	pop	{r4, r5, pc}
 8010f82:	bf00      	nop
 8010f84:	0801f49c 	.word	0x0801f49c

08010f88 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8010f88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010f8c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8010f8e:	b08a      	sub	sp, #40	; 0x28
 8010f90:	4604      	mov	r4, r0
 8010f92:	460d      	mov	r5, r1
 8010f94:	b113      	cbz	r3, 8010f9c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8010f96:	790b      	ldrb	r3, [r1, #4]
 8010f98:	2b00      	cmp	r3, #0
 8010f9a:	d044      	beq.n	8011026 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010f9c:	f104 0804 	add.w	r8, r4, #4
 8010fa0:	a803      	add	r0, sp, #12
 8010fa2:	4641      	mov	r1, r8
 8010fa4:	f7ff fe50 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010fa8:	792b      	ldrb	r3, [r5, #4]
 8010faa:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8010fae:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8010fb2:	b983      	cbnz	r3, 8010fd6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8010fb4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8010fb8:	892a      	ldrh	r2, [r5, #8]
 8010fba:	88e9      	ldrh	r1, [r5, #6]
 8010fbc:	4640      	mov	r0, r8
 8010fbe:	1b92      	subs	r2, r2, r6
 8010fc0:	9301      	str	r3, [sp, #4]
 8010fc2:	1bc9      	subs	r1, r1, r7
 8010fc4:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8010fc8:	b212      	sxth	r2, r2
 8010fca:	9300      	str	r3, [sp, #0]
 8010fcc:	b209      	sxth	r1, r1
 8010fce:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8010fd2:	f7f9 fc39 	bl	800a848 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8010fd6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010fd8:	b329      	cbz	r1, 8011026 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010fda:	a805      	add	r0, sp, #20
 8010fdc:	f7ff fe34 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010fe0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010fe4:	792b      	ldrb	r3, [r5, #4]
 8010fe6:	a907      	add	r1, sp, #28
 8010fe8:	1abf      	subs	r7, r7, r2
 8010fea:	88ea      	ldrh	r2, [r5, #6]
 8010fec:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8010fee:	4417      	add	r7, r2
 8010ff0:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8010ff2:	f88d 3020 	strb.w	r3, [sp, #32]
 8010ff6:	4417      	add	r7, r2
 8010ff8:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8010ffc:	1ab6      	subs	r6, r6, r2
 8010ffe:	892a      	ldrh	r2, [r5, #8]
 8011000:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8011004:	4416      	add	r6, r2
 8011006:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8011008:	4416      	add	r6, r2
 801100a:	4a08      	ldr	r2, [pc, #32]	; (801102c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801100c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8011010:	2600      	movs	r6, #0
 8011012:	9207      	str	r2, [sp, #28]
 8011014:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8011018:	6803      	ldr	r3, [r0, #0]
 801101a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801101c:	4798      	blx	r3
 801101e:	792b      	ldrb	r3, [r5, #4]
 8011020:	b10b      	cbz	r3, 8011026 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011022:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8011026:	b00a      	add	sp, #40	; 0x28
 8011028:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801102c:	0801f474 	.word	0x0801f474

08011030 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011030:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011034:	460c      	mov	r4, r1
 8011036:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8011038:	b088      	sub	sp, #32
 801103a:	4605      	mov	r5, r0
 801103c:	2900      	cmp	r1, #0
 801103e:	d06d      	beq.n	801111c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011040:	4668      	mov	r0, sp
 8011042:	f7ff fe01 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011046:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8011048:	88e3      	ldrh	r3, [r4, #6]
 801104a:	f9bd 8000 	ldrsh.w	r8, [sp]
 801104e:	440b      	add	r3, r1
 8011050:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8011054:	b21b      	sxth	r3, r3
 8011056:	4543      	cmp	r3, r8
 8011058:	db31      	blt.n	80110be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801105a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801105e:	44c4      	add	ip, r8
 8011060:	fa0f fc8c 	sxth.w	ip, ip
 8011064:	4563      	cmp	r3, ip
 8011066:	da2a      	bge.n	80110be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011068:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801106a:	8926      	ldrh	r6, [r4, #8]
 801106c:	4416      	add	r6, r2
 801106e:	b236      	sxth	r6, r6
 8011070:	42be      	cmp	r6, r7
 8011072:	db24      	blt.n	80110be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011074:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011078:	4438      	add	r0, r7
 801107a:	b200      	sxth	r0, r0
 801107c:	4286      	cmp	r6, r0
 801107e:	da1e      	bge.n	80110be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011080:	8963      	ldrh	r3, [r4, #10]
 8011082:	4419      	add	r1, r3
 8011084:	b209      	sxth	r1, r1
 8011086:	4541      	cmp	r1, r8
 8011088:	db08      	blt.n	801109c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801108a:	4561      	cmp	r1, ip
 801108c:	da06      	bge.n	801109c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801108e:	89a3      	ldrh	r3, [r4, #12]
 8011090:	441a      	add	r2, r3
 8011092:	b212      	sxth	r2, r2
 8011094:	42ba      	cmp	r2, r7
 8011096:	db01      	blt.n	801109c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011098:	4282      	cmp	r2, r0
 801109a:	db10      	blt.n	80110be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801109c:	4b21      	ldr	r3, [pc, #132]	; (8011124 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801109e:	a904      	add	r1, sp, #16
 80110a0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80110a2:	9304      	str	r3, [sp, #16]
 80110a4:	2302      	movs	r3, #2
 80110a6:	f88d 3014 	strb.w	r3, [sp, #20]
 80110aa:	2300      	movs	r3, #0
 80110ac:	f8ad 3016 	strh.w	r3, [sp, #22]
 80110b0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80110b4:	f8ad 301a 	strh.w	r3, [sp, #26]
 80110b8:	6803      	ldr	r3, [r0, #0]
 80110ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80110bc:	4798      	blx	r3
 80110be:	1d29      	adds	r1, r5, #4
 80110c0:	a802      	add	r0, sp, #8
 80110c2:	f7ff fdc1 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80110c6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80110ca:	88e0      	ldrh	r0, [r4, #6]
 80110cc:	eba3 0808 	sub.w	r8, r3, r8
 80110d0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80110d4:	7921      	ldrb	r1, [r4, #4]
 80110d6:	fa1f f888 	uxth.w	r8, r8
 80110da:	1bdf      	subs	r7, r3, r7
 80110dc:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80110e0:	b2bb      	uxth	r3, r7
 80110e2:	4440      	add	r0, r8
 80110e4:	8922      	ldrh	r2, [r4, #8]
 80110e6:	8967      	ldrh	r7, [r4, #10]
 80110e8:	4460      	add	r0, ip
 80110ea:	89a4      	ldrh	r4, [r4, #12]
 80110ec:	441a      	add	r2, r3
 80110ee:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80110f0:	44b8      	add	r8, r7
 80110f2:	4423      	add	r3, r4
 80110f4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80110f8:	4432      	add	r2, r6
 80110fa:	44e0      	add	r8, ip
 80110fc:	4433      	add	r3, r6
 80110fe:	4c0a      	ldr	r4, [pc, #40]	; (8011128 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011100:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011102:	f88d 1014 	strb.w	r1, [sp, #20]
 8011106:	a904      	add	r1, sp, #16
 8011108:	9404      	str	r4, [sp, #16]
 801110a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801110e:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011112:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011116:	6803      	ldr	r3, [r0, #0]
 8011118:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801111a:	4798      	blx	r3
 801111c:	b008      	add	sp, #32
 801111e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011122:	bf00      	nop
 8011124:	0801f474 	.word	0x0801f474
 8011128:	0801f488 	.word	0x0801f488

0801112c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801112c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801112e:	4604      	mov	r4, r0
 8011130:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011134:	3201      	adds	r2, #1
 8011136:	d112      	bne.n	801115e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011138:	2500      	movs	r5, #0
 801113a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801113e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011142:	6803      	ldr	r3, [r0, #0]
 8011144:	9500      	str	r5, [sp, #0]
 8011146:	466d      	mov	r5, sp
 8011148:	f8ad 1004 	strh.w	r1, [sp, #4]
 801114c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011150:	4629      	mov	r1, r5
 8011152:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011154:	4798      	blx	r3
 8011156:	e895 0003 	ldmia.w	r5, {r0, r1}
 801115a:	e884 0003 	stmia.w	r4, {r0, r1}
 801115e:	4620      	mov	r0, r4
 8011160:	b003      	add	sp, #12
 8011162:	bd30      	pop	{r4, r5, pc}

08011164 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011164:	b513      	push	{r0, r1, r4, lr}
 8011166:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801116a:	4604      	mov	r4, r0
 801116c:	3301      	adds	r3, #1
 801116e:	d109      	bne.n	8011184 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011170:	4601      	mov	r1, r0
 8011172:	4668      	mov	r0, sp
 8011174:	f7ff fd68 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011178:	f8bd 3000 	ldrh.w	r3, [sp]
 801117c:	8423      	strh	r3, [r4, #32]
 801117e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011182:	8463      	strh	r3, [r4, #34]	; 0x22
 8011184:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011188:	b002      	add	sp, #8
 801118a:	bd10      	pop	{r4, pc}

0801118c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801118c:	b513      	push	{r0, r1, r4, lr}
 801118e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8011192:	4604      	mov	r4, r0
 8011194:	3301      	adds	r3, #1
 8011196:	d109      	bne.n	80111ac <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011198:	4601      	mov	r1, r0
 801119a:	4668      	mov	r0, sp
 801119c:	f7ff fd54 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80111a0:	f8bd 3000 	ldrh.w	r3, [sp]
 80111a4:	8423      	strh	r3, [r4, #32]
 80111a6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80111aa:	8463      	strh	r3, [r4, #34]	; 0x22
 80111ac:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80111b0:	b002      	add	sp, #8
 80111b2:	bd10      	pop	{r4, pc}

080111b4 <_ZN8touchgfx6ScreenC1Ev>:
 80111b4:	b570      	push	{r4, r5, r6, lr}
 80111b6:	4b17      	ldr	r3, [pc, #92]	; (8011214 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80111b8:	4605      	mov	r5, r0
 80111ba:	4a17      	ldr	r2, [pc, #92]	; (8011218 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80111bc:	2101      	movs	r1, #1
 80111be:	f845 3b04 	str.w	r3, [r5], #4
 80111c2:	2300      	movs	r3, #0
 80111c4:	6042      	str	r2, [r0, #4]
 80111c6:	4604      	mov	r4, r0
 80111c8:	8103      	strh	r3, [r0, #8]
 80111ca:	8143      	strh	r3, [r0, #10]
 80111cc:	8183      	strh	r3, [r0, #12]
 80111ce:	81c3      	strh	r3, [r0, #14]
 80111d0:	8203      	strh	r3, [r0, #16]
 80111d2:	8243      	strh	r3, [r0, #18]
 80111d4:	8283      	strh	r3, [r0, #20]
 80111d6:	82c3      	strh	r3, [r0, #22]
 80111d8:	6203      	str	r3, [r0, #32]
 80111da:	8483      	strh	r3, [r0, #36]	; 0x24
 80111dc:	84c3      	strh	r3, [r0, #38]	; 0x26
 80111de:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80111e2:	6343      	str	r3, [r0, #52]	; 0x34
 80111e4:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80111e8:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80111ec:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80111f0:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80111f4:	4b09      	ldr	r3, [pc, #36]	; (801121c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80111f6:	4628      	mov	r0, r5
 80111f8:	f9b3 6000 	ldrsh.w	r6, [r3]
 80111fc:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80111fe:	4a08      	ldr	r2, [pc, #32]	; (8011220 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011200:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011204:	4798      	blx	r3
 8011206:	6863      	ldr	r3, [r4, #4]
 8011208:	4628      	mov	r0, r5
 801120a:	4631      	mov	r1, r6
 801120c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801120e:	4798      	blx	r3
 8011210:	4620      	mov	r0, r4
 8011212:	bd70      	pop	{r4, r5, r6, pc}
 8011214:	0801f4b0 	.word	0x0801f4b0
 8011218:	0801ee00 	.word	0x0801ee00
 801121c:	24008942 	.word	0x24008942
 8011220:	24008940 	.word	0x24008940

08011224 <_ZN8touchgfx6Screen4drawEv>:
 8011224:	4b09      	ldr	r3, [pc, #36]	; (801124c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011226:	b507      	push	{r0, r1, r2, lr}
 8011228:	f9b3 2000 	ldrsh.w	r2, [r3]
 801122c:	2100      	movs	r1, #0
 801122e:	4b08      	ldr	r3, [pc, #32]	; (8011250 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011230:	9100      	str	r1, [sp, #0]
 8011232:	4669      	mov	r1, sp
 8011234:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011238:	f8ad 2004 	strh.w	r2, [sp, #4]
 801123c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011240:	6803      	ldr	r3, [r0, #0]
 8011242:	689b      	ldr	r3, [r3, #8]
 8011244:	4798      	blx	r3
 8011246:	b003      	add	sp, #12
 8011248:	f85d fb04 	ldr.w	pc, [sp], #4
 801124c:	24008940 	.word	0x24008940
 8011250:	24008942 	.word	0x24008942

08011254 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011258:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801125c:	b089      	sub	sp, #36	; 0x24
 801125e:	4680      	mov	r8, r0
 8011260:	460c      	mov	r4, r1
 8011262:	2b00      	cmp	r3, #0
 8011264:	4615      	mov	r5, r2
 8011266:	dd0e      	ble.n	8011286 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011268:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801126c:	2b00      	cmp	r3, #0
 801126e:	dd0a      	ble.n	8011286 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011270:	4628      	mov	r0, r5
 8011272:	f7ff ff5b 	bl	801112c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011276:	4621      	mov	r1, r4
 8011278:	f7fe fadd 	bl	800f836 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801127c:	69eb      	ldr	r3, [r5, #28]
 801127e:	b928      	cbnz	r0, 801128c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011280:	461d      	mov	r5, r3
 8011282:	2b00      	cmp	r3, #0
 8011284:	d1f4      	bne.n	8011270 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8011286:	b009      	add	sp, #36	; 0x24
 8011288:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801128c:	ae04      	add	r6, sp, #16
 801128e:	2b00      	cmp	r3, #0
 8011290:	f000 80b5 	beq.w	80113fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011294:	682b      	ldr	r3, [r5, #0]
 8011296:	4629      	mov	r1, r5
 8011298:	a802      	add	r0, sp, #8
 801129a:	68db      	ldr	r3, [r3, #12]
 801129c:	4798      	blx	r3
 801129e:	4628      	mov	r0, r5
 80112a0:	f7ff ff60 	bl	8011164 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80112a4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80112a8:	4407      	add	r7, r0
 80112aa:	4628      	mov	r0, r5
 80112ac:	f7ff ff6e 	bl	801118c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80112b0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80112b4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80112b8:	b23f      	sxth	r7, r7
 80112ba:	4418      	add	r0, r3
 80112bc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80112c0:	4621      	mov	r1, r4
 80112c2:	f8ad 2014 	strh.w	r2, [sp, #20]
 80112c6:	f8ad 0012 	strh.w	r0, [sp, #18]
 80112ca:	4630      	mov	r0, r6
 80112cc:	f8ad 3016 	strh.w	r3, [sp, #22]
 80112d0:	f8ad 7010 	strh.w	r7, [sp, #16]
 80112d4:	f7f9 fb9a 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 80112d8:	4628      	mov	r0, r5
 80112da:	f7ff ff27 	bl	801112c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80112de:	ab06      	add	r3, sp, #24
 80112e0:	4602      	mov	r2, r0
 80112e2:	e896 0003 	ldmia.w	r6, {r0, r1}
 80112e6:	e883 0003 	stmia.w	r3, {r0, r1}
 80112ea:	4611      	mov	r1, r2
 80112ec:	4618      	mov	r0, r3
 80112ee:	f7f9 fb8d 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 80112f2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80112f6:	f9b4 1000 	ldrsh.w	r1, [r4]
 80112fa:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80112fe:	4299      	cmp	r1, r3
 8011300:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011304:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011308:	d10b      	bne.n	8011322 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801130a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801130e:	4552      	cmp	r2, sl
 8011310:	d107      	bne.n	8011322 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011312:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011316:	455a      	cmp	r2, fp
 8011318:	d103      	bne.n	8011322 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801131a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801131e:	454a      	cmp	r2, r9
 8011320:	d06d      	beq.n	80113fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011322:	f1bb 0f00 	cmp.w	fp, #0
 8011326:	dd65      	ble.n	80113f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011328:	f1b9 0f00 	cmp.w	r9, #0
 801132c:	dd62      	ble.n	80113f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801132e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011332:	fa1f f08a 	uxth.w	r0, sl
 8011336:	4552      	cmp	r2, sl
 8011338:	9000      	str	r0, [sp, #0]
 801133a:	da12      	bge.n	8011362 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801133c:	9301      	str	r3, [sp, #4]
 801133e:	9b00      	ldr	r3, [sp, #0]
 8011340:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011344:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011348:	1a9a      	subs	r2, r3, r2
 801134a:	f8ad 1010 	strh.w	r1, [sp, #16]
 801134e:	4631      	mov	r1, r6
 8011350:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011354:	4640      	mov	r0, r8
 8011356:	f8ad 2016 	strh.w	r2, [sp, #22]
 801135a:	69ea      	ldr	r2, [r5, #28]
 801135c:	f7ff ff7a 	bl	8011254 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011360:	9b01      	ldr	r3, [sp, #4]
 8011362:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011366:	b29f      	uxth	r7, r3
 8011368:	429a      	cmp	r2, r3
 801136a:	da0d      	bge.n	8011388 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801136c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011370:	1aba      	subs	r2, r7, r2
 8011372:	f8ad a012 	strh.w	sl, [sp, #18]
 8011376:	4631      	mov	r1, r6
 8011378:	f8ad 2014 	strh.w	r2, [sp, #20]
 801137c:	4640      	mov	r0, r8
 801137e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011382:	69ea      	ldr	r2, [r5, #28]
 8011384:	f7ff ff66 	bl	8011254 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011388:	8822      	ldrh	r2, [r4, #0]
 801138a:	445f      	add	r7, fp
 801138c:	88a3      	ldrh	r3, [r4, #4]
 801138e:	b2bf      	uxth	r7, r7
 8011390:	4413      	add	r3, r2
 8011392:	b23a      	sxth	r2, r7
 8011394:	b29b      	uxth	r3, r3
 8011396:	b219      	sxth	r1, r3
 8011398:	4291      	cmp	r1, r2
 801139a:	dd0d      	ble.n	80113b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801139c:	1bdb      	subs	r3, r3, r7
 801139e:	f8ad 2010 	strh.w	r2, [sp, #16]
 80113a2:	f8ad a012 	strh.w	sl, [sp, #18]
 80113a6:	4631      	mov	r1, r6
 80113a8:	f8ad 3014 	strh.w	r3, [sp, #20]
 80113ac:	4640      	mov	r0, r8
 80113ae:	f8ad 9016 	strh.w	r9, [sp, #22]
 80113b2:	69ea      	ldr	r2, [r5, #28]
 80113b4:	f7ff ff4e 	bl	8011254 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80113b8:	88e2      	ldrh	r2, [r4, #6]
 80113ba:	8863      	ldrh	r3, [r4, #2]
 80113bc:	4413      	add	r3, r2
 80113be:	9a00      	ldr	r2, [sp, #0]
 80113c0:	444a      	add	r2, r9
 80113c2:	b29b      	uxth	r3, r3
 80113c4:	fa1f f982 	uxth.w	r9, r2
 80113c8:	b219      	sxth	r1, r3
 80113ca:	fa0f f289 	sxth.w	r2, r9
 80113ce:	428a      	cmp	r2, r1
 80113d0:	da15      	bge.n	80113fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80113d2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80113d6:	eba3 0309 	sub.w	r3, r3, r9
 80113da:	f9b4 0000 	ldrsh.w	r0, [r4]
 80113de:	f8ad 1014 	strh.w	r1, [sp, #20]
 80113e2:	4631      	mov	r1, r6
 80113e4:	f8ad 0010 	strh.w	r0, [sp, #16]
 80113e8:	f8ad 2012 	strh.w	r2, [sp, #18]
 80113ec:	f8ad 3016 	strh.w	r3, [sp, #22]
 80113f0:	69ea      	ldr	r2, [r5, #28]
 80113f2:	e001      	b.n	80113f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80113f4:	69ea      	ldr	r2, [r5, #28]
 80113f6:	4621      	mov	r1, r4
 80113f8:	4640      	mov	r0, r8
 80113fa:	f7ff ff2b 	bl	8011254 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80113fe:	4628      	mov	r0, r5
 8011400:	f7ff fe94 	bl	801112c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011404:	6861      	ldr	r1, [r4, #4]
 8011406:	4602      	mov	r2, r0
 8011408:	4633      	mov	r3, r6
 801140a:	6820      	ldr	r0, [r4, #0]
 801140c:	c303      	stmia	r3!, {r0, r1}
 801140e:	4611      	mov	r1, r2
 8011410:	4630      	mov	r0, r6
 8011412:	f7f9 fafb 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 8011416:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801141a:	2b00      	cmp	r3, #0
 801141c:	f77f af33 	ble.w	8011286 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011420:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011424:	2b00      	cmp	r3, #0
 8011426:	f77f af2e 	ble.w	8011286 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801142a:	4628      	mov	r0, r5
 801142c:	f7ff fe9a 	bl	8011164 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011430:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011434:	1a18      	subs	r0, r3, r0
 8011436:	f8ad 0010 	strh.w	r0, [sp, #16]
 801143a:	4628      	mov	r0, r5
 801143c:	f7ff fea6 	bl	801118c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011440:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011444:	4631      	mov	r1, r6
 8011446:	1a18      	subs	r0, r3, r0
 8011448:	f8ad 0012 	strh.w	r0, [sp, #18]
 801144c:	4628      	mov	r0, r5
 801144e:	682b      	ldr	r3, [r5, #0]
 8011450:	689b      	ldr	r3, [r3, #8]
 8011452:	4798      	blx	r3
 8011454:	e717      	b.n	8011286 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08011456 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8011456:	b570      	push	{r4, r5, r6, lr}
 8011458:	1d06      	adds	r6, r0, #4
 801145a:	b086      	sub	sp, #24
 801145c:	460c      	mov	r4, r1
 801145e:	2300      	movs	r3, #0
 8011460:	4631      	mov	r1, r6
 8011462:	4605      	mov	r5, r0
 8011464:	a802      	add	r0, sp, #8
 8011466:	9301      	str	r3, [sp, #4]
 8011468:	f7ff fbee 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801146c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011470:	8822      	ldrh	r2, [r4, #0]
 8011472:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8011476:	1ad2      	subs	r2, r2, r3
 8011478:	8863      	ldrh	r3, [r4, #2]
 801147a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801147e:	1a5b      	subs	r3, r3, r1
 8011480:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011484:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011488:	aa01      	add	r2, sp, #4
 801148a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801148e:	4630      	mov	r0, r6
 8011490:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011494:	a904      	add	r1, sp, #16
 8011496:	f8ad 3012 	strh.w	r3, [sp, #18]
 801149a:	f7f9 fb8f 	bl	800abbc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801149e:	9a01      	ldr	r2, [sp, #4]
 80114a0:	b11a      	cbz	r2, 80114aa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80114a2:	4621      	mov	r1, r4
 80114a4:	4628      	mov	r0, r5
 80114a6:	f7ff fed5 	bl	8011254 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80114aa:	b006      	add	sp, #24
 80114ac:	bd70      	pop	{r4, r5, r6, pc}

080114ae <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80114ae:	4602      	mov	r2, r0
 80114b0:	b530      	push	{r4, r5, lr}
 80114b2:	4604      	mov	r4, r0
 80114b4:	b085      	sub	sp, #20
 80114b6:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80114ba:	460d      	mov	r5, r1
 80114bc:	466b      	mov	r3, sp
 80114be:	6851      	ldr	r1, [r2, #4]
 80114c0:	c303      	stmia	r3!, {r0, r1}
 80114c2:	4629      	mov	r1, r5
 80114c4:	4668      	mov	r0, sp
 80114c6:	f7f9 faa1 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 80114ca:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80114ce:	b12b      	cbz	r3, 80114dc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80114d0:	4669      	mov	r1, sp
 80114d2:	4620      	mov	r0, r4
 80114d4:	f7ff ffbf 	bl	8011456 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80114d8:	b005      	add	sp, #20
 80114da:	bd30      	pop	{r4, r5, pc}
 80114dc:	3404      	adds	r4, #4
 80114de:	a802      	add	r0, sp, #8
 80114e0:	4621      	mov	r1, r4
 80114e2:	f7ff fbb1 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80114e6:	f8bd 3000 	ldrh.w	r3, [sp]
 80114ea:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80114ee:	4669      	mov	r1, sp
 80114f0:	4620      	mov	r0, r4
 80114f2:	1a9b      	subs	r3, r3, r2
 80114f4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80114f8:	f8ad 3000 	strh.w	r3, [sp]
 80114fc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011500:	1a9b      	subs	r3, r3, r2
 8011502:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011506:	f7f9 fb20 	bl	800ab4a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801150a:	e7e5      	b.n	80114d8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801150c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801150c:	460b      	mov	r3, r1
 801150e:	680a      	ldr	r2, [r1, #0]
 8011510:	1d01      	adds	r1, r0, #4
 8011512:	6992      	ldr	r2, [r2, #24]
 8011514:	4618      	mov	r0, r3
 8011516:	4710      	bx	r2

08011518 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8011518:	4298      	cmp	r0, r3
 801151a:	d200      	bcs.n	801151e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801151c:	b913      	cbnz	r3, 8011524 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801151e:	440a      	add	r2, r1
 8011520:	b210      	sxth	r0, r2
 8011522:	4770      	bx	lr
 8011524:	ee07 2a90 	vmov	s15, r2
 8011528:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801152c:	ee07 0a90 	vmov	s15, r0
 8011530:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011534:	ee67 7a27 	vmul.f32	s15, s14, s15
 8011538:	ee07 3a10 	vmov	s14, r3
 801153c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011540:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8011544:	ee07 1a90 	vmov	s15, r1
 8011548:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801154c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011550:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8011554:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801155c:	bfcc      	ite	gt
 801155e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8011562:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8011566:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801156a:	ee17 3a90 	vmov	r3, s15
 801156e:	b218      	sxth	r0, r3
 8011570:	4770      	bx	lr

08011572 <_ZN8touchgfx15EasingEquations12linearEaseInEtsst>:
 8011572:	f7ff bfd1 	b.w	8011518 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>

08011576 <_ZN8touchgfx12TextProviderC1Ev>:
 8011576:	b538      	push	{r3, r4, r5, lr}
 8011578:	2500      	movs	r5, #0
 801157a:	2302      	movs	r3, #2
 801157c:	4604      	mov	r4, r0
 801157e:	220e      	movs	r2, #14
 8011580:	7403      	strb	r3, [r0, #16]
 8011582:	4629      	mov	r1, r5
 8011584:	6145      	str	r5, [r0, #20]
 8011586:	7605      	strb	r5, [r0, #24]
 8011588:	83c5      	strh	r5, [r0, #30]
 801158a:	8405      	strh	r5, [r0, #32]
 801158c:	86c5      	strh	r5, [r0, #54]	; 0x36
 801158e:	8705      	strh	r5, [r0, #56]	; 0x38
 8011590:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8011592:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8011596:	e9c0 5500 	strd	r5, r5, [r0]
 801159a:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801159e:	304c      	adds	r0, #76	; 0x4c
 80115a0:	f00b fa94 	bl	801cacc <memset>
 80115a4:	2301      	movs	r3, #1
 80115a6:	4620      	mov	r0, r4
 80115a8:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80115ac:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80115b0:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80115b4:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80115b8:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80115bc:	f7f1 fdb0 	bl	8003120 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80115c0:	4620      	mov	r0, r4
 80115c2:	bd38      	pop	{r3, r4, r5, pc}

080115c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80115c4:	b530      	push	{r4, r5, lr}
 80115c6:	2500      	movs	r5, #0
 80115c8:	2401      	movs	r4, #1
 80115ca:	6843      	ldr	r3, [r0, #4]
 80115cc:	b913      	cbnz	r3, 80115d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80115ce:	6803      	ldr	r3, [r0, #0]
 80115d0:	b313      	cbz	r3, 8011618 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80115d2:	6043      	str	r3, [r0, #4]
 80115d4:	7e03      	ldrb	r3, [r0, #24]
 80115d6:	b143      	cbz	r3, 80115ea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80115d8:	6943      	ldr	r3, [r0, #20]
 80115da:	b12b      	cbz	r3, 80115e8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80115dc:	881a      	ldrh	r2, [r3, #0]
 80115de:	b11a      	cbz	r2, 80115e8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80115e0:	1c9a      	adds	r2, r3, #2
 80115e2:	6142      	str	r2, [r0, #20]
 80115e4:	8818      	ldrh	r0, [r3, #0]
 80115e6:	bd30      	pop	{r4, r5, pc}
 80115e8:	7605      	strb	r5, [r0, #24]
 80115ea:	6843      	ldr	r3, [r0, #4]
 80115ec:	8819      	ldrh	r1, [r3, #0]
 80115ee:	b199      	cbz	r1, 8011618 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80115f0:	1c9a      	adds	r2, r3, #2
 80115f2:	2902      	cmp	r1, #2
 80115f4:	6042      	str	r2, [r0, #4]
 80115f6:	d1f5      	bne.n	80115e4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80115f8:	7c03      	ldrb	r3, [r0, #16]
 80115fa:	2b01      	cmp	r3, #1
 80115fc:	d8e5      	bhi.n	80115ca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80115fe:	1c5a      	adds	r2, r3, #1
 8011600:	3302      	adds	r3, #2
 8011602:	7402      	strb	r2, [r0, #16]
 8011604:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011608:	6143      	str	r3, [r0, #20]
 801160a:	2b00      	cmp	r3, #0
 801160c:	d0dd      	beq.n	80115ca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801160e:	881b      	ldrh	r3, [r3, #0]
 8011610:	2b00      	cmp	r3, #0
 8011612:	d0da      	beq.n	80115ca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011614:	7604      	strb	r4, [r0, #24]
 8011616:	e7d8      	b.n	80115ca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011618:	2000      	movs	r0, #0
 801161a:	e7e4      	b.n	80115e6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801161c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801161c:	6001      	str	r1, [r0, #0]
 801161e:	2100      	movs	r1, #0
 8011620:	b430      	push	{r4, r5}
 8011622:	6041      	str	r1, [r0, #4]
 8011624:	6815      	ldr	r5, [r2, #0]
 8011626:	6085      	str	r5, [r0, #8]
 8011628:	6852      	ldr	r2, [r2, #4]
 801162a:	6443      	str	r3, [r0, #68]	; 0x44
 801162c:	9b02      	ldr	r3, [sp, #8]
 801162e:	60c2      	str	r2, [r0, #12]
 8011630:	7401      	strb	r1, [r0, #16]
 8011632:	6141      	str	r1, [r0, #20]
 8011634:	7601      	strb	r1, [r0, #24]
 8011636:	8701      	strh	r1, [r0, #56]	; 0x38
 8011638:	8401      	strh	r1, [r0, #32]
 801163a:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801163e:	6483      	str	r3, [r0, #72]	; 0x48
 8011640:	bc30      	pop	{r4, r5}
 8011642:	f7f1 bd6d 	b.w	8003120 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011646 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011646:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011648:	4605      	mov	r5, r0
 801164a:	4608      	mov	r0, r1
 801164c:	b1f1      	cbz	r1, 801168c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 801164e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8011652:	460b      	mov	r3, r1
 8011654:	f101 0708 	add.w	r7, r1, #8
 8011658:	4622      	mov	r2, r4
 801165a:	6818      	ldr	r0, [r3, #0]
 801165c:	3308      	adds	r3, #8
 801165e:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8011662:	4626      	mov	r6, r4
 8011664:	42bb      	cmp	r3, r7
 8011666:	c603      	stmia	r6!, {r0, r1}
 8011668:	4634      	mov	r4, r6
 801166a:	d1f6      	bne.n	801165a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801166c:	6818      	ldr	r0, [r3, #0]
 801166e:	6030      	str	r0, [r6, #0]
 8011670:	4610      	mov	r0, r2
 8011672:	889b      	ldrh	r3, [r3, #4]
 8011674:	80b3      	strh	r3, [r6, #4]
 8011676:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801167a:	015b      	lsls	r3, r3, #5
 801167c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011680:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8011684:	430b      	orrs	r3, r1
 8011686:	425b      	negs	r3, r3
 8011688:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801168c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801168e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801168e:	b538      	push	{r3, r4, r5, lr}
 8011690:	460c      	mov	r4, r1
 8011692:	6811      	ldr	r1, [r2, #0]
 8011694:	4610      	mov	r0, r2
 8011696:	68cd      	ldr	r5, [r1, #12]
 8011698:	4619      	mov	r1, r3
 801169a:	47a8      	blx	r5
 801169c:	2800      	cmp	r0, #0
 801169e:	bf08      	it	eq
 80116a0:	4620      	moveq	r0, r4
 80116a2:	bd38      	pop	{r3, r4, r5, pc}

080116a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80116a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80116a6:	4604      	mov	r4, r0
 80116a8:	4615      	mov	r5, r2
 80116aa:	4608      	mov	r0, r1
 80116ac:	b93a      	cbnz	r2, 80116be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80116ae:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80116b2:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80116b6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80116ba:	4628      	mov	r0, r5
 80116bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80116be:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80116c2:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80116c6:	8893      	ldrh	r3, [r2, #4]
 80116c8:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80116cc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80116d0:	79ee      	ldrb	r6, [r5, #7]
 80116d2:	4316      	orrs	r6, r2
 80116d4:	19da      	adds	r2, r3, r7
 80116d6:	b291      	uxth	r1, r2
 80116d8:	b2b7      	uxth	r7, r6
 80116da:	291d      	cmp	r1, #29
 80116dc:	d87b      	bhi.n	80117d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 80116de:	2201      	movs	r2, #1
 80116e0:	10f6      	asrs	r6, r6, #3
 80116e2:	408a      	lsls	r2, r1
 80116e4:	4974      	ldr	r1, [pc, #464]	; (80118b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80116e6:	420a      	tst	r2, r1
 80116e8:	d12e      	bne.n	8011748 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80116ea:	f412 7f60 	tst.w	r2, #896	; 0x380
 80116ee:	d072      	beq.n	80117d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 80116f0:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80116f4:	462b      	mov	r3, r5
 80116f6:	f105 0e08 	add.w	lr, r5, #8
 80116fa:	4615      	mov	r5, r2
 80116fc:	6818      	ldr	r0, [r3, #0]
 80116fe:	3308      	adds	r3, #8
 8011700:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8011704:	4694      	mov	ip, r2
 8011706:	4573      	cmp	r3, lr
 8011708:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801170c:	4662      	mov	r2, ip
 801170e:	d1f5      	bne.n	80116fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 8011710:	6818      	ldr	r0, [r3, #0]
 8011712:	f8cc 0000 	str.w	r0, [ip]
 8011716:	889b      	ldrh	r3, [r3, #4]
 8011718:	f8ac 3004 	strh.w	r3, [ip, #4]
 801171c:	b2b3      	uxth	r3, r6
 801171e:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8011722:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8011726:	1aca      	subs	r2, r1, r3
 8011728:	1bcf      	subs	r7, r1, r7
 801172a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801172e:	b292      	uxth	r2, r2
 8011730:	1afb      	subs	r3, r7, r3
 8011732:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8011736:	10d2      	asrs	r2, r2, #3
 8011738:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801173c:	4302      	orrs	r2, r0
 801173e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8011742:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8011746:	e7b8      	b.n	80116ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8011748:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801174a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801174e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8011750:	f640 6333 	movw	r3, #3635	; 0xe33
 8011754:	4299      	cmp	r1, r3
 8011756:	d110      	bne.n	801177a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8011758:	6803      	ldr	r3, [r0, #0]
 801175a:	68db      	ldr	r3, [r3, #12]
 801175c:	4798      	blx	r3
 801175e:	7b41      	ldrb	r1, [r0, #13]
 8011760:	00cb      	lsls	r3, r1, #3
 8011762:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011766:	7a03      	ldrb	r3, [r0, #8]
 8011768:	0648      	lsls	r0, r1, #25
 801176a:	ea43 0302 	orr.w	r3, r3, r2
 801176e:	bf44      	itt	mi
 8011770:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011774:	b21b      	sxthmi	r3, r3
 8011776:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801177a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801177e:	462a      	mov	r2, r5
 8011780:	f105 0c08 	add.w	ip, r5, #8
 8011784:	443b      	add	r3, r7
 8011786:	4433      	add	r3, r6
 8011788:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801178c:	b29b      	uxth	r3, r3
 801178e:	4635      	mov	r5, r6
 8011790:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011794:	6810      	ldr	r0, [r2, #0]
 8011796:	3208      	adds	r2, #8
 8011798:	f852 1c04 	ldr.w	r1, [r2, #-4]
 801179c:	4637      	mov	r7, r6
 801179e:	4562      	cmp	r2, ip
 80117a0:	c703      	stmia	r7!, {r0, r1}
 80117a2:	463e      	mov	r6, r7
 80117a4:	d1f6      	bne.n	8011794 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80117a6:	6810      	ldr	r0, [r2, #0]
 80117a8:	6038      	str	r0, [r7, #0]
 80117aa:	8892      	ldrh	r2, [r2, #4]
 80117ac:	80ba      	strh	r2, [r7, #4]
 80117ae:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80117b2:	10db      	asrs	r3, r3, #3
 80117b4:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80117b8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80117bc:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80117c0:	4313      	orrs	r3, r2
 80117c2:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80117c6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80117ca:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80117ce:	1a9b      	subs	r3, r3, r2
 80117d0:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80117d4:	e771      	b.n	80116ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80117d6:	f023 0204 	bic.w	r2, r3, #4
 80117da:	f640 611b 	movw	r1, #3611	; 0xe1b
 80117de:	428a      	cmp	r2, r1
 80117e0:	d003      	beq.n	80117ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 80117e2:	f640 621d 	movw	r2, #3613	; 0xe1d
 80117e6:	4293      	cmp	r3, r2
 80117e8:	d120      	bne.n	801182c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 80117ea:	3b01      	subs	r3, #1
 80117ec:	4602      	mov	r2, r0
 80117ee:	4629      	mov	r1, r5
 80117f0:	4620      	mov	r0, r4
 80117f2:	b29b      	uxth	r3, r3
 80117f4:	f7ff ff4b 	bl	801168e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80117f8:	7b41      	ldrb	r1, [r0, #13]
 80117fa:	00cb      	lsls	r3, r1, #3
 80117fc:	0649      	lsls	r1, r1, #25
 80117fe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011802:	7a03      	ldrb	r3, [r0, #8]
 8011804:	ea43 0302 	orr.w	r3, r3, r2
 8011808:	bf44      	itt	mi
 801180a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801180e:	b21b      	sxthmi	r3, r3
 8011810:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011814:	7b6b      	ldrb	r3, [r5, #13]
 8011816:	7aaa      	ldrb	r2, [r5, #10]
 8011818:	005b      	lsls	r3, r3, #1
 801181a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801181e:	4313      	orrs	r3, r2
 8011820:	115a      	asrs	r2, r3, #5
 8011822:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8011826:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801182a:	e035      	b.n	8011898 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801182c:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8011830:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8011834:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8011838:	7a2a      	ldrb	r2, [r5, #8]
 801183a:	ea42 0201 	orr.w	r2, r2, r1
 801183e:	f640 6109 	movw	r1, #3593	; 0xe09
 8011842:	bf1c      	itt	ne
 8011844:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8011848:	b212      	sxthne	r2, r2
 801184a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801184e:	f023 0210 	bic.w	r2, r3, #16
 8011852:	428a      	cmp	r2, r1
 8011854:	d003      	beq.n	801185e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 8011856:	f640 6213 	movw	r2, #3603	; 0xe13
 801185a:	4293      	cmp	r3, r2
 801185c:	d129      	bne.n	80118b2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801185e:	7b6e      	ldrb	r6, [r5, #13]
 8011860:	4629      	mov	r1, r5
 8011862:	0076      	lsls	r6, r6, #1
 8011864:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8011868:	7aae      	ldrb	r6, [r5, #10]
 801186a:	4316      	orrs	r6, r2
 801186c:	f640 6213 	movw	r2, #3603	; 0xe13
 8011870:	4293      	cmp	r3, r2
 8011872:	4602      	mov	r2, r0
 8011874:	4620      	mov	r0, r4
 8011876:	bf16      	itet	ne
 8011878:	f103 33ff 	addne.w	r3, r3, #4294967295
 801187c:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8011880:	b29b      	uxthne	r3, r3
 8011882:	f7ff ff04 	bl	801168e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011886:	7b43      	ldrb	r3, [r0, #13]
 8011888:	7a82      	ldrb	r2, [r0, #10]
 801188a:	005b      	lsls	r3, r3, #1
 801188c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011890:	4313      	orrs	r3, r2
 8011892:	1af6      	subs	r6, r6, r3
 8011894:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8011898:	7b69      	ldrb	r1, [r5, #13]
 801189a:	00cb      	lsls	r3, r1, #3
 801189c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80118a0:	7a2b      	ldrb	r3, [r5, #8]
 80118a2:	4313      	orrs	r3, r2
 80118a4:	064a      	lsls	r2, r1, #25
 80118a6:	bf44      	itt	mi
 80118a8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80118ac:	b21b      	sxthmi	r3, r3
 80118ae:	1bdb      	subs	r3, r3, r7
 80118b0:	e747      	b.n	8011742 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80118b2:	2300      	movs	r3, #0
 80118b4:	e7b7      	b.n	8011826 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 80118b6:	bf00      	nop
 80118b8:	3fc00079 	.word	0x3fc00079

080118bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80118bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80118c0:	4604      	mov	r4, r0
 80118c2:	b942      	cbnz	r2, 80118d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80118c4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80118c8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80118cc:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80118d0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80118d4:	e047      	b.n	8011966 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80118d6:	7b51      	ldrb	r1, [r2, #13]
 80118d8:	8893      	ldrh	r3, [r2, #4]
 80118da:	010d      	lsls	r5, r1, #4
 80118dc:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80118e0:	79d5      	ldrb	r5, [r2, #7]
 80118e2:	4305      	orrs	r5, r0
 80118e4:	2d04      	cmp	r5, #4
 80118e6:	bfcc      	ite	gt
 80118e8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80118ec:	f04f 0e01 	movle.w	lr, #1
 80118f0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80118f4:	f200 80ab 	bhi.w	8011a4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80118f8:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80118fc:	4283      	cmp	r3, r0
 80118fe:	d216      	bcs.n	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011900:	f240 605b 	movw	r0, #1627	; 0x65b
 8011904:	4283      	cmp	r3, r0
 8011906:	d859      	bhi.n	80119bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8011908:	f240 6057 	movw	r0, #1623	; 0x657
 801190c:	4283      	cmp	r3, r0
 801190e:	d20e      	bcs.n	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011910:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8011914:	d24a      	bcs.n	80119ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8011916:	f240 604e 	movw	r0, #1614	; 0x64e
 801191a:	4283      	cmp	r3, r0
 801191c:	d207      	bcs.n	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801191e:	f240 601a 	movw	r0, #1562	; 0x61a
 8011922:	4283      	cmp	r3, r0
 8011924:	d02a      	beq.n	801197c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011926:	d821      	bhi.n	801196c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8011928:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801192c:	d35b      	bcc.n	80119e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801192e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8011932:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011936:	f040 80d0 	bne.w	8011ada <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801193a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801193e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011942:	f040 80ca 	bne.w	8011ada <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011946:	00cb      	lsls	r3, r1, #3
 8011948:	0649      	lsls	r1, r1, #25
 801194a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801194e:	7a13      	ldrb	r3, [r2, #8]
 8011950:	ea43 0300 	orr.w	r3, r3, r0
 8011954:	bf44      	itt	mi
 8011956:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801195a:	b21b      	sxthmi	r3, r3
 801195c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011960:	1b5d      	subs	r5, r3, r5
 8011962:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011966:	4610      	mov	r0, r2
 8011968:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801196c:	f240 604b 	movw	r0, #1611	; 0x64b
 8011970:	4283      	cmp	r3, r0
 8011972:	d338      	bcc.n	80119e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011974:	f240 604c 	movw	r0, #1612	; 0x64c
 8011978:	4283      	cmp	r3, r0
 801197a:	d9d8      	bls.n	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801197c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8011980:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8011984:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011988:	f040 80f3 	bne.w	8011b72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 801198c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011990:	f040 80ef 	bne.w	8011b72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8011994:	00cb      	lsls	r3, r1, #3
 8011996:	064e      	lsls	r6, r1, #25
 8011998:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801199c:	7a13      	ldrb	r3, [r2, #8]
 801199e:	ea43 0300 	orr.w	r3, r3, r0
 80119a2:	bf44      	itt	mi
 80119a4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80119a8:	b21b      	sxthmi	r3, r3
 80119aa:	e7d9      	b.n	8011960 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80119ac:	f240 6054 	movw	r0, #1620	; 0x654
 80119b0:	4283      	cmp	r3, r0
 80119b2:	d8e3      	bhi.n	801197c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80119b4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80119b8:	d9e0      	bls.n	801197c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80119ba:	e7b8      	b.n	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80119bc:	f240 6074 	movw	r0, #1652	; 0x674
 80119c0:	4283      	cmp	r3, r0
 80119c2:	d0b4      	beq.n	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80119c4:	d82d      	bhi.n	8011a22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80119c6:	f240 605e 	movw	r0, #1630	; 0x65e
 80119ca:	4283      	cmp	r3, r0
 80119cc:	d804      	bhi.n	80119d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80119ce:	f240 605d 	movw	r0, #1629	; 0x65d
 80119d2:	4283      	cmp	r3, r0
 80119d4:	d3d2      	bcc.n	801197c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80119d6:	e7aa      	b.n	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80119d8:	f240 605f 	movw	r0, #1631	; 0x65f
 80119dc:	4283      	cmp	r3, r0
 80119de:	d0cd      	beq.n	801197c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80119e0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80119e4:	d0a3      	beq.n	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80119e6:	00cb      	lsls	r3, r1, #3
 80119e8:	0649      	lsls	r1, r1, #25
 80119ea:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80119ee:	7a13      	ldrb	r3, [r2, #8]
 80119f0:	ea43 0300 	orr.w	r3, r3, r0
 80119f4:	bf44      	itt	mi
 80119f6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80119fa:	b21b      	sxthmi	r3, r3
 80119fc:	1b5d      	subs	r5, r3, r5
 80119fe:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011a02:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011a06:	7b53      	ldrb	r3, [r2, #13]
 8011a08:	015b      	lsls	r3, r3, #5
 8011a0a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011a0e:	7993      	ldrb	r3, [r2, #6]
 8011a10:	430b      	orrs	r3, r1
 8011a12:	2105      	movs	r1, #5
 8011a14:	005b      	lsls	r3, r3, #1
 8011a16:	fb93 f3f1 	sdiv	r3, r3, r1
 8011a1a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011a1e:	440b      	add	r3, r1
 8011a20:	e756      	b.n	80118d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011a22:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8011a26:	4283      	cmp	r3, r0
 8011a28:	d809      	bhi.n	8011a3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8011a2a:	f240 60df 	movw	r0, #1759	; 0x6df
 8011a2e:	4283      	cmp	r3, r0
 8011a30:	f4bf af7d 	bcs.w	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011a34:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8011a38:	2b05      	cmp	r3, #5
 8011a3a:	d8d4      	bhi.n	80119e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011a3c:	e777      	b.n	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011a3e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8011a42:	4283      	cmp	r3, r0
 8011a44:	d09a      	beq.n	801197c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011a46:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8011a4a:	4283      	cmp	r3, r0
 8011a4c:	e7ca      	b.n	80119e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011a4e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8011a52:	d22b      	bcs.n	8011aac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011a54:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8011a58:	4283      	cmp	r3, r0
 8011a5a:	d28f      	bcs.n	801197c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011a5c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8011a60:	4283      	cmp	r3, r0
 8011a62:	d816      	bhi.n	8011a92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011a64:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8011a68:	4283      	cmp	r3, r0
 8011a6a:	f4bf af60 	bcs.w	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011a6e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8011a72:	4283      	cmp	r3, r0
 8011a74:	d80a      	bhi.n	8011a8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8011a76:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8011a7a:	4283      	cmp	r3, r0
 8011a7c:	f4bf af57 	bcs.w	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011a80:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8011a84:	4283      	cmp	r3, r0
 8011a86:	f43f af79 	beq.w	801197c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011a8a:	e7ac      	b.n	80119e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011a8c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8011a90:	e7f8      	b.n	8011a84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8011a92:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8011a96:	4283      	cmp	r3, r0
 8011a98:	d802      	bhi.n	8011aa0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8011a9a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8011a9e:	e798      	b.n	80119d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8011aa0:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8011aa4:	4283      	cmp	r3, r0
 8011aa6:	f47f af42 	bne.w	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011aaa:	e767      	b.n	801197c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011aac:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8011ab0:	4283      	cmp	r3, r0
 8011ab2:	f43f af63 	beq.w	801197c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011ab6:	d802      	bhi.n	8011abe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8011ab8:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8011abc:	e7f2      	b.n	8011aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8011abe:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8011ac2:	4283      	cmp	r3, r0
 8011ac4:	d805      	bhi.n	8011ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8011ac6:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8011aca:	4283      	cmp	r3, r0
 8011acc:	f4ff af2f 	bcc.w	801192e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011ad0:	e754      	b.n	801197c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011ad2:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8011ad6:	4283      	cmp	r3, r0
 8011ad8:	e7af      	b.n	8011a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8011ada:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8011ade:	4617      	mov	r7, r2
 8011ae0:	f102 0808 	add.w	r8, r2, #8
 8011ae4:	4666      	mov	r6, ip
 8011ae6:	6838      	ldr	r0, [r7, #0]
 8011ae8:	3708      	adds	r7, #8
 8011aea:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8011aee:	46e6      	mov	lr, ip
 8011af0:	4547      	cmp	r7, r8
 8011af2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011af6:	46f4      	mov	ip, lr
 8011af8:	d1f5      	bne.n	8011ae6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8011afa:	6838      	ldr	r0, [r7, #0]
 8011afc:	f8ce 0000 	str.w	r0, [lr]
 8011b00:	88b9      	ldrh	r1, [r7, #4]
 8011b02:	f8ae 1004 	strh.w	r1, [lr, #4]
 8011b06:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8011b0a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011b0e:	d009      	beq.n	8011b24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 8011b10:	7b51      	ldrb	r1, [r2, #13]
 8011b12:	7992      	ldrb	r2, [r2, #6]
 8011b14:	0149      	lsls	r1, r1, #5
 8011b16:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011b1a:	4311      	orrs	r1, r2
 8011b1c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011b20:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8011b24:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011b28:	b2ad      	uxth	r5, r5
 8011b2a:	d00d      	beq.n	8011b48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 8011b2c:	442b      	add	r3, r5
 8011b2e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8011b32:	b29b      	uxth	r3, r3
 8011b34:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011b38:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8011b3c:	10db      	asrs	r3, r3, #3
 8011b3e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011b42:	4313      	orrs	r3, r2
 8011b44:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8011b48:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8011b4c:	00cb      	lsls	r3, r1, #3
 8011b4e:	064f      	lsls	r7, r1, #25
 8011b50:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011b54:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8011b58:	ea43 0302 	orr.w	r3, r3, r2
 8011b5c:	bf44      	itt	mi
 8011b5e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011b62:	b21b      	sxthmi	r3, r3
 8011b64:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011b68:	1b5b      	subs	r3, r3, r5
 8011b6a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8011b6e:	4632      	mov	r2, r6
 8011b70:	e6f9      	b.n	8011966 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011b72:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8011b76:	4617      	mov	r7, r2
 8011b78:	f102 0908 	add.w	r9, r2, #8
 8011b7c:	4666      	mov	r6, ip
 8011b7e:	6838      	ldr	r0, [r7, #0]
 8011b80:	3708      	adds	r7, #8
 8011b82:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8011b86:	46e0      	mov	r8, ip
 8011b88:	454f      	cmp	r7, r9
 8011b8a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8011b8e:	46c4      	mov	ip, r8
 8011b90:	d1f5      	bne.n	8011b7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 8011b92:	6838      	ldr	r0, [r7, #0]
 8011b94:	f8c8 0000 	str.w	r0, [r8]
 8011b98:	88b9      	ldrh	r1, [r7, #4]
 8011b9a:	f8a8 1004 	strh.w	r1, [r8, #4]
 8011b9e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8011ba2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011ba6:	d009      	beq.n	8011bbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8011ba8:	7b51      	ldrb	r1, [r2, #13]
 8011baa:	7992      	ldrb	r2, [r2, #6]
 8011bac:	0149      	lsls	r1, r1, #5
 8011bae:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011bb2:	4311      	orrs	r1, r2
 8011bb4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011bb8:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8011bbc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011bc0:	d00e      	beq.n	8011be0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8011bc2:	eba3 030e 	sub.w	r3, r3, lr
 8011bc6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8011bca:	b29b      	uxth	r3, r3
 8011bcc:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011bd0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8011bd4:	10db      	asrs	r3, r3, #3
 8011bd6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011bda:	4313      	orrs	r3, r2
 8011bdc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8011be0:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8011be4:	00cb      	lsls	r3, r1, #3
 8011be6:	0648      	lsls	r0, r1, #25
 8011be8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011bec:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8011bf0:	ea43 0302 	orr.w	r3, r3, r2
 8011bf4:	bf44      	itt	mi
 8011bf6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011bfa:	b21b      	sxthmi	r3, r3
 8011bfc:	1b5d      	subs	r5, r3, r5
 8011bfe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011c02:	e7b4      	b.n	8011b6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

08011c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8011c04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c08:	461e      	mov	r6, r3
 8011c0a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011c0c:	4604      	mov	r4, r0
 8011c0e:	4617      	mov	r7, r2
 8011c10:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011c14:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8011c18:	f7f1 fa40 	bl	800309c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011c1c:	4605      	mov	r5, r0
 8011c1e:	b918      	cbnz	r0, 8011c28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8011c20:	6030      	str	r0, [r6, #0]
 8011c22:	4628      	mov	r0, r5
 8011c24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011c28:	683b      	ldr	r3, [r7, #0]
 8011c2a:	4601      	mov	r1, r0
 8011c2c:	4638      	mov	r0, r7
 8011c2e:	68db      	ldr	r3, [r3, #12]
 8011c30:	4798      	blx	r3
 8011c32:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8011c36:	4602      	mov	r2, r0
 8011c38:	6030      	str	r0, [r6, #0]
 8011c3a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011c3e:	d213      	bcs.n	8011c68 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8011c40:	4643      	mov	r3, r8
 8011c42:	4639      	mov	r1, r7
 8011c44:	4620      	mov	r0, r4
 8011c46:	f7ff fe39 	bl	80118bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8011c4a:	6030      	str	r0, [r6, #0]
 8011c4c:	6833      	ldr	r3, [r6, #0]
 8011c4e:	b143      	cbz	r3, 8011c62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8011c50:	7b5a      	ldrb	r2, [r3, #13]
 8011c52:	7a9b      	ldrb	r3, [r3, #10]
 8011c54:	0052      	lsls	r2, r2, #1
 8011c56:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8011c5a:	4313      	orrs	r3, r2
 8011c5c:	bf0c      	ite	eq
 8011c5e:	2301      	moveq	r3, #1
 8011c60:	2300      	movne	r3, #0
 8011c62:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8011c66:	e7dc      	b.n	8011c22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8011c68:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8011c6c:	b29b      	uxth	r3, r3
 8011c6e:	2b7f      	cmp	r3, #127	; 0x7f
 8011c70:	d804      	bhi.n	8011c7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8011c72:	4639      	mov	r1, r7
 8011c74:	4620      	mov	r0, r4
 8011c76:	f7ff fd15 	bl	80116a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011c7a:	e7e6      	b.n	8011c4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8011c7c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8011c80:	2b00      	cmp	r3, #0
 8011c82:	d0e3      	beq.n	8011c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011c84:	f640 1302 	movw	r3, #2306	; 0x902
 8011c88:	429d      	cmp	r5, r3
 8011c8a:	d1df      	bne.n	8011c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011c8c:	4601      	mov	r1, r0
 8011c8e:	4620      	mov	r0, r4
 8011c90:	f7ff fcd9 	bl	8011646 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011c94:	e7d9      	b.n	8011c4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08011c96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8011c96:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011c9a:	461e      	mov	r6, r3
 8011c9c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011c9e:	4604      	mov	r4, r0
 8011ca0:	4617      	mov	r7, r2
 8011ca2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011ca6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8011caa:	f7f1 f9f7 	bl	800309c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011cae:	4605      	mov	r5, r0
 8011cb0:	b918      	cbnz	r0, 8011cba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8011cb2:	6030      	str	r0, [r6, #0]
 8011cb4:	4628      	mov	r0, r5
 8011cb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011cba:	683b      	ldr	r3, [r7, #0]
 8011cbc:	4601      	mov	r1, r0
 8011cbe:	4638      	mov	r0, r7
 8011cc0:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8011cc4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8011cc8:	47c8      	blx	r9
 8011cca:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8011cce:	4602      	mov	r2, r0
 8011cd0:	6030      	str	r0, [r6, #0]
 8011cd2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011cd6:	d213      	bcs.n	8011d00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8011cd8:	4643      	mov	r3, r8
 8011cda:	4639      	mov	r1, r7
 8011cdc:	4620      	mov	r0, r4
 8011cde:	f7ff fded 	bl	80118bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8011ce2:	6030      	str	r0, [r6, #0]
 8011ce4:	6833      	ldr	r3, [r6, #0]
 8011ce6:	b143      	cbz	r3, 8011cfa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8011ce8:	7b5a      	ldrb	r2, [r3, #13]
 8011cea:	7a9b      	ldrb	r3, [r3, #10]
 8011cec:	0052      	lsls	r2, r2, #1
 8011cee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8011cf2:	4313      	orrs	r3, r2
 8011cf4:	bf0c      	ite	eq
 8011cf6:	2301      	moveq	r3, #1
 8011cf8:	2300      	movne	r3, #0
 8011cfa:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8011cfe:	e7d9      	b.n	8011cb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8011d00:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8011d04:	b29b      	uxth	r3, r3
 8011d06:	2b7f      	cmp	r3, #127	; 0x7f
 8011d08:	d804      	bhi.n	8011d14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8011d0a:	4639      	mov	r1, r7
 8011d0c:	4620      	mov	r0, r4
 8011d0e:	f7ff fcc9 	bl	80116a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011d12:	e7e6      	b.n	8011ce2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8011d14:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8011d18:	2b00      	cmp	r3, #0
 8011d1a:	d0e3      	beq.n	8011ce4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8011d1c:	f640 1302 	movw	r3, #2306	; 0x902
 8011d20:	429d      	cmp	r5, r3
 8011d22:	d1df      	bne.n	8011ce4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8011d24:	4601      	mov	r1, r0
 8011d26:	4620      	mov	r0, r4
 8011d28:	f7ff fc8d 	bl	8011646 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011d2c:	e7d9      	b.n	8011ce2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08011d2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8011d2e:	b510      	push	{r4, lr}
 8011d30:	4604      	mov	r4, r0
 8011d32:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8011d36:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8011d38:	b1e1      	cbz	r1, 8011d74 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8011d3a:	2b0a      	cmp	r3, #10
 8011d3c:	d02d      	beq.n	8011d9a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8011d3e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8011d40:	3901      	subs	r1, #1
 8011d42:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8011d46:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8011d48:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8011d4c:	1c51      	adds	r1, r2, #1
 8011d4e:	b289      	uxth	r1, r1
 8011d50:	2901      	cmp	r1, #1
 8011d52:	bf8a      	itet	hi
 8011d54:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8011d58:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8011d5a:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8011d5c:	1c5a      	adds	r2, r3, #1
 8011d5e:	8722      	strh	r2, [r4, #56]	; 0x38
 8011d60:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8011d62:	4413      	add	r3, r2
 8011d64:	b29b      	uxth	r3, r3
 8011d66:	2b09      	cmp	r3, #9
 8011d68:	bf88      	it	hi
 8011d6a:	3b0a      	subhi	r3, #10
 8011d6c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011d70:	8458      	strh	r0, [r3, #34]	; 0x22
 8011d72:	e7de      	b.n	8011d32 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8011d74:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8011d76:	2b0a      	cmp	r3, #10
 8011d78:	d00f      	beq.n	8011d9a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8011d7a:	4620      	mov	r0, r4
 8011d7c:	f7ff fc22 	bl	80115c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8011d80:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8011d82:	1c5a      	adds	r2, r3, #1
 8011d84:	8722      	strh	r2, [r4, #56]	; 0x38
 8011d86:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8011d88:	4413      	add	r3, r2
 8011d8a:	b29b      	uxth	r3, r3
 8011d8c:	2b09      	cmp	r3, #9
 8011d8e:	bf88      	it	hi
 8011d90:	3b0a      	subhi	r3, #10
 8011d92:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011d96:	8458      	strh	r0, [r3, #34]	; 0x22
 8011d98:	e7ec      	b.n	8011d74 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8011d9a:	bd10      	pop	{r4, pc}

08011d9c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8011d9c:	b538      	push	{r3, r4, r5, lr}
 8011d9e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011da0:	4604      	mov	r4, r0
 8011da2:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8011da6:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8011da8:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8011daa:	3a01      	subs	r2, #1
 8011dac:	8702      	strh	r2, [r0, #56]	; 0x38
 8011dae:	1c5a      	adds	r2, r3, #1
 8011db0:	b292      	uxth	r2, r2
 8011db2:	2a09      	cmp	r2, #9
 8011db4:	bf8a      	itet	hi
 8011db6:	3b09      	subhi	r3, #9
 8011db8:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8011dba:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8011dbc:	f7ff ffb7 	bl	8011d2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8011dc0:	8c23      	ldrh	r3, [r4, #32]
 8011dc2:	2b01      	cmp	r3, #1
 8011dc4:	bf9c      	itt	ls
 8011dc6:	3301      	addls	r3, #1
 8011dc8:	8423      	strhls	r3, [r4, #32]
 8011dca:	8be3      	ldrh	r3, [r4, #30]
 8011dcc:	b90b      	cbnz	r3, 8011dd2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8011dce:	2302      	movs	r3, #2
 8011dd0:	83e3      	strh	r3, [r4, #30]
 8011dd2:	8be3      	ldrh	r3, [r4, #30]
 8011dd4:	4628      	mov	r0, r5
 8011dd6:	3b01      	subs	r3, #1
 8011dd8:	b29b      	uxth	r3, r3
 8011dda:	83e3      	strh	r3, [r4, #30]
 8011ddc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011de0:	8365      	strh	r5, [r4, #26]
 8011de2:	bd38      	pop	{r3, r4, r5, pc}

08011de4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8011de4:	428a      	cmp	r2, r1
 8011de6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011dea:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8011dec:	d932      	bls.n	8011e54 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 8011dee:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8011df0:	1a54      	subs	r4, r2, r1
 8011df2:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8011df6:	19ee      	adds	r6, r5, r7
 8011df8:	fa1f fe84 	uxth.w	lr, r4
 8011dfc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8011e00:	3e01      	subs	r6, #1
 8011e02:	b2b4      	uxth	r4, r6
 8011e04:	eba4 090e 	sub.w	r9, r4, lr
 8011e08:	fa1f f989 	uxth.w	r9, r9
 8011e0c:	2c09      	cmp	r4, #9
 8011e0e:	4626      	mov	r6, r4
 8011e10:	bf88      	it	hi
 8011e12:	f1a4 060a 	subhi.w	r6, r4, #10
 8011e16:	f1bc 0f00 	cmp.w	ip, #0
 8011e1a:	f104 34ff 	add.w	r4, r4, #4294967295
 8011e1e:	bf08      	it	eq
 8011e20:	f04f 0c02 	moveq.w	ip, #2
 8011e24:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8011e28:	b2a4      	uxth	r4, r4
 8011e2a:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011e2e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8011e32:	454c      	cmp	r4, r9
 8011e34:	fa1f fc8c 	uxth.w	ip, ip
 8011e38:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8011e3c:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8011e40:	d1e4      	bne.n	8011e0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8011e42:	eba5 050e 	sub.w	r5, r5, lr
 8011e46:	eb0e 0408 	add.w	r4, lr, r8
 8011e4a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8011e4e:	8705      	strh	r5, [r0, #56]	; 0x38
 8011e50:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8011e54:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8011e56:	250a      	movs	r5, #10
 8011e58:	1a64      	subs	r4, r4, r1
 8011e5a:	4439      	add	r1, r7
 8011e5c:	b289      	uxth	r1, r1
 8011e5e:	8704      	strh	r4, [r0, #56]	; 0x38
 8011e60:	2909      	cmp	r1, #9
 8011e62:	bf88      	it	hi
 8011e64:	390a      	subhi	r1, #10
 8011e66:	86c1      	strh	r1, [r0, #54]	; 0x36
 8011e68:	b18a      	cbz	r2, 8011e8e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 8011e6a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8011e6c:	3a01      	subs	r2, #1
 8011e6e:	3101      	adds	r1, #1
 8011e70:	b292      	uxth	r2, r2
 8011e72:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8011e76:	8701      	strh	r1, [r0, #56]	; 0x38
 8011e78:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8011e7a:	b901      	cbnz	r1, 8011e7e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 8011e7c:	86c5      	strh	r5, [r0, #54]	; 0x36
 8011e7e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8011e80:	3901      	subs	r1, #1
 8011e82:	b289      	uxth	r1, r1
 8011e84:	86c1      	strh	r1, [r0, #54]	; 0x36
 8011e86:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8011e8a:	844c      	strh	r4, [r1, #34]	; 0x22
 8011e8c:	e7ec      	b.n	8011e68 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 8011e8e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011e92:	f7ff bf4c 	b.w	8011d2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08011e96 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8011e96:	b570      	push	{r4, r5, r6, lr}
 8011e98:	2500      	movs	r5, #0
 8011e9a:	4295      	cmp	r5, r2
 8011e9c:	d011      	beq.n	8011ec2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8011e9e:	8bc4      	ldrh	r4, [r0, #30]
 8011ea0:	f831 6b02 	ldrh.w	r6, [r1], #2
 8011ea4:	4414      	add	r4, r2
 8011ea6:	3c01      	subs	r4, #1
 8011ea8:	1b64      	subs	r4, r4, r5
 8011eaa:	b2a4      	uxth	r4, r4
 8011eac:	2c01      	cmp	r4, #1
 8011eae:	bf88      	it	hi
 8011eb0:	3c02      	subhi	r4, #2
 8011eb2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8011eb6:	8b64      	ldrh	r4, [r4, #26]
 8011eb8:	42b4      	cmp	r4, r6
 8011eba:	d117      	bne.n	8011eec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8011ebc:	3501      	adds	r5, #1
 8011ebe:	b2ad      	uxth	r5, r5
 8011ec0:	e7eb      	b.n	8011e9a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8011ec2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011ec6:	2400      	movs	r4, #0
 8011ec8:	4413      	add	r3, r2
 8011eca:	b2a2      	uxth	r2, r4
 8011ecc:	429a      	cmp	r2, r3
 8011ece:	da0f      	bge.n	8011ef0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8011ed0:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8011ed2:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8011ed6:	3401      	adds	r4, #1
 8011ed8:	4432      	add	r2, r6
 8011eda:	b292      	uxth	r2, r2
 8011edc:	2a09      	cmp	r2, #9
 8011ede:	bf88      	it	hi
 8011ee0:	3a0a      	subhi	r2, #10
 8011ee2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8011ee6:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8011ee8:	42aa      	cmp	r2, r5
 8011eea:	d0ee      	beq.n	8011eca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8011eec:	2000      	movs	r0, #0
 8011eee:	bd70      	pop	{r4, r5, r6, pc}
 8011ef0:	2001      	movs	r0, #1
 8011ef2:	e7fc      	b.n	8011eee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08011ef4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8011ef4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ef8:	4605      	mov	r5, r0
 8011efa:	4616      	mov	r6, r2
 8011efc:	1c8c      	adds	r4, r1, #2
 8011efe:	8809      	ldrh	r1, [r1, #0]
 8011f00:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8011f04:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8011f08:	42b3      	cmp	r3, r6
 8011f0a:	d124      	bne.n	8011f56 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8011f0c:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8011f10:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8011f14:	f001 070f 	and.w	r7, r1, #15
 8011f18:	4652      	mov	r2, sl
 8011f1a:	f8cd 8000 	str.w	r8, [sp]
 8011f1e:	464b      	mov	r3, r9
 8011f20:	4621      	mov	r1, r4
 8011f22:	4628      	mov	r0, r5
 8011f24:	f7ff ffb7 	bl	8011e96 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8011f28:	4683      	mov	fp, r0
 8011f2a:	b168      	cbz	r0, 8011f48 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8011f2c:	eb0a 0109 	add.w	r1, sl, r9
 8011f30:	463a      	mov	r2, r7
 8011f32:	4628      	mov	r0, r5
 8011f34:	4441      	add	r1, r8
 8011f36:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8011f3a:	4649      	mov	r1, r9
 8011f3c:	f7ff ff52 	bl	8011de4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8011f40:	4658      	mov	r0, fp
 8011f42:	b003      	add	sp, #12
 8011f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f48:	eb07 010a 	add.w	r1, r7, sl
 8011f4c:	4449      	add	r1, r9
 8011f4e:	4441      	add	r1, r8
 8011f50:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8011f54:	e7d2      	b.n	8011efc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8011f56:	f04f 0b00 	mov.w	fp, #0
 8011f5a:	e7f1      	b.n	8011f40 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08011f5c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8011f5c:	b570      	push	{r4, r5, r6, lr}
 8011f5e:	8810      	ldrh	r0, [r2, #0]
 8011f60:	4298      	cmp	r0, r3
 8011f62:	d817      	bhi.n	8011f94 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011f64:	1e48      	subs	r0, r1, #1
 8011f66:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8011f6a:	4298      	cmp	r0, r3
 8011f6c:	d312      	bcc.n	8011f94 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011f6e:	2400      	movs	r4, #0
 8011f70:	428c      	cmp	r4, r1
 8011f72:	d20f      	bcs.n	8011f94 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011f74:	1860      	adds	r0, r4, r1
 8011f76:	1040      	asrs	r0, r0, #1
 8011f78:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8011f7c:	0085      	lsls	r5, r0, #2
 8011f7e:	42b3      	cmp	r3, r6
 8011f80:	d902      	bls.n	8011f88 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8011f82:	3001      	adds	r0, #1
 8011f84:	b284      	uxth	r4, r0
 8011f86:	e7f3      	b.n	8011f70 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011f88:	d201      	bcs.n	8011f8e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8011f8a:	b281      	uxth	r1, r0
 8011f8c:	e7f0      	b.n	8011f70 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011f8e:	442a      	add	r2, r5
 8011f90:	8850      	ldrh	r0, [r2, #2]
 8011f92:	bd70      	pop	{r4, r5, r6, pc}
 8011f94:	2000      	movs	r0, #0
 8011f96:	e7fc      	b.n	8011f92 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08011f98 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8011f98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f9c:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8011f9e:	4604      	mov	r4, r0
 8011fa0:	260b      	movs	r6, #11
 8011fa2:	886f      	ldrh	r7, [r5, #2]
 8011fa4:	087f      	lsrs	r7, r7, #1
 8011fa6:	3e01      	subs	r6, #1
 8011fa8:	d013      	beq.n	8011fd2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011faa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8011fac:	462a      	mov	r2, r5
 8011fae:	4639      	mov	r1, r7
 8011fb0:	4620      	mov	r0, r4
 8011fb2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011fb6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8011fba:	4643      	mov	r3, r8
 8011fbc:	f7ff ffce 	bl	8011f5c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8011fc0:	b138      	cbz	r0, 8011fd2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011fc2:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8011fc6:	4642      	mov	r2, r8
 8011fc8:	4620      	mov	r0, r4
 8011fca:	f7ff ff93 	bl	8011ef4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8011fce:	2800      	cmp	r0, #0
 8011fd0:	d1e9      	bne.n	8011fa6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8011fd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08011fd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8011fd8:	b570      	push	{r4, r5, r6, lr}
 8011fda:	694a      	ldr	r2, [r1, #20]
 8011fdc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8011fde:	684b      	ldr	r3, [r1, #4]
 8011fe0:	1b54      	subs	r4, r2, r5
 8011fe2:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8011fe4:	f000 8106 	beq.w	80121f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8011fe8:	1b9b      	subs	r3, r3, r6
 8011fea:	d003      	beq.n	8011ff4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011fec:	4363      	muls	r3, r4
 8011fee:	2210      	movs	r2, #16
 8011ff0:	fb93 f3f2 	sdiv	r3, r3, r2
 8011ff4:	680c      	ldr	r4, [r1, #0]
 8011ff6:	698a      	ldr	r2, [r1, #24]
 8011ff8:	1b65      	subs	r5, r4, r5
 8011ffa:	f000 80fd 	beq.w	80121f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8011ffe:	1b92      	subs	r2, r2, r6
 8012000:	d003      	beq.n	801200a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012002:	436a      	muls	r2, r5
 8012004:	2410      	movs	r4, #16
 8012006:	fb92 f2f4 	sdiv	r2, r2, r4
 801200a:	1a9b      	subs	r3, r3, r2
 801200c:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8012234 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012010:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012014:	460a      	mov	r2, r1
 8012016:	ee07 3a90 	vmov	s15, r3
 801201a:	f100 040c 	add.w	r4, r0, #12
 801201e:	4603      	mov	r3, r0
 8012020:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012024:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012028:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801202c:	eeb1 6a43 	vneg.f32	s12, s6
 8012030:	edd2 7a02 	vldr	s15, [r2, #8]
 8012034:	3214      	adds	r2, #20
 8012036:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801203a:	ece3 6a01 	vstmia	r3!, {s13}
 801203e:	429c      	cmp	r4, r3
 8012040:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012044:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012048:	edc3 7a02 	vstr	s15, [r3, #8]
 801204c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012050:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012054:	edc3 7a05 	vstr	s15, [r3, #20]
 8012058:	d1ea      	bne.n	8012030 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801205a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801205c:	698b      	ldr	r3, [r1, #24]
 801205e:	edd0 4a02 	vldr	s9, [r0, #8]
 8012062:	1a9b      	subs	r3, r3, r2
 8012064:	edd0 3a00 	vldr	s7, [r0]
 8012068:	edd0 6a01 	vldr	s13, [r0, #4]
 801206c:	ee07 3a90 	vmov	s15, r3
 8012070:	684b      	ldr	r3, [r1, #4]
 8012072:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012076:	ed90 5a05 	vldr	s10, [r0, #20]
 801207a:	1a9b      	subs	r3, r3, r2
 801207c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012080:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012084:	ed90 2a03 	vldr	s4, [r0, #12]
 8012088:	ee07 3a10 	vmov	s14, r3
 801208c:	edd0 5a04 	vldr	s11, [r0, #16]
 8012090:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012094:	ed90 1a07 	vldr	s2, [r0, #28]
 8012098:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801209c:	edd0 2a06 	vldr	s5, [r0, #24]
 80120a0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80120a4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80120a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80120ac:	ee32 5a45 	vsub.f32	s10, s4, s10
 80120b0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80120b4:	ee67 7a83 	vmul.f32	s15, s15, s6
 80120b8:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80120bc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80120be:	694a      	ldr	r2, [r1, #20]
 80120c0:	1b13      	subs	r3, r2, r4
 80120c2:	ee07 3a10 	vmov	s14, r3
 80120c6:	680b      	ldr	r3, [r1, #0]
 80120c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80120cc:	1b1b      	subs	r3, r3, r4
 80120ce:	ee27 7a04 	vmul.f32	s14, s14, s8
 80120d2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80120d6:	ee07 3a10 	vmov	s14, r3
 80120da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80120de:	ee27 7a04 	vmul.f32	s14, s14, s8
 80120e2:	eee6 4a87 	vfma.f32	s9, s13, s14
 80120e6:	ee64 4a86 	vmul.f32	s9, s9, s12
 80120ea:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80120ee:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80120f0:	698b      	ldr	r3, [r1, #24]
 80120f2:	1a9b      	subs	r3, r3, r2
 80120f4:	ee06 3a90 	vmov	s13, r3
 80120f8:	684b      	ldr	r3, [r1, #4]
 80120fa:	1a9b      	subs	r3, r3, r2
 80120fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012100:	ee07 3a10 	vmov	s14, r3
 8012104:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012108:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801210c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012110:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012114:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012118:	ee66 6a83 	vmul.f32	s13, s13, s6
 801211c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8012120:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012122:	694a      	ldr	r2, [r1, #20]
 8012124:	1b13      	subs	r3, r2, r4
 8012126:	ee07 3a10 	vmov	s14, r3
 801212a:	680b      	ldr	r3, [r1, #0]
 801212c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012130:	1b1b      	subs	r3, r3, r4
 8012132:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012136:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801213a:	ee07 3a10 	vmov	s14, r3
 801213e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012142:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012146:	eea5 5a87 	vfma.f32	s10, s11, s14
 801214a:	edd0 5a08 	vldr	s11, [r0, #32]
 801214e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012152:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012156:	ee25 5a06 	vmul.f32	s10, s10, s12
 801215a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801215e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012160:	698b      	ldr	r3, [r1, #24]
 8012162:	1a9b      	subs	r3, r3, r2
 8012164:	ee07 3a10 	vmov	s14, r3
 8012168:	684b      	ldr	r3, [r1, #4]
 801216a:	1a9b      	subs	r3, r3, r2
 801216c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012170:	ee01 3a90 	vmov	s3, r3
 8012174:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012178:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801217c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012180:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012184:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012188:	ee27 7a03 	vmul.f32	s14, s14, s6
 801218c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012190:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012192:	694a      	ldr	r2, [r1, #20]
 8012194:	1b13      	subs	r3, r2, r4
 8012196:	ee03 3a10 	vmov	s6, r3
 801219a:	680b      	ldr	r3, [r1, #0]
 801219c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80121a0:	1b1b      	subs	r3, r3, r4
 80121a2:	ee23 3a04 	vmul.f32	s6, s6, s8
 80121a6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80121aa:	ee03 3a10 	vmov	s6, r3
 80121ae:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80121b2:	ee23 4a04 	vmul.f32	s8, s6, s8
 80121b6:	eee1 5a04 	vfma.f32	s11, s2, s8
 80121ba:	ee25 6a86 	vmul.f32	s12, s11, s12
 80121be:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80121c2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80121c6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80121ca:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80121ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121d2:	dd13      	ble.n	80121fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80121d4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80121d8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80121dc:	63c3      	str	r3, [r0, #60]	; 0x3c
 80121de:	eee3 7a87 	vfma.f32	s15, s7, s14
 80121e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80121e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121ea:	dd15      	ble.n	8012218 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80121ec:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80121f0:	6403      	str	r3, [r0, #64]	; 0x40
 80121f2:	bd70      	pop	{r4, r5, r6, pc}
 80121f4:	4623      	mov	r3, r4
 80121f6:	e6fd      	b.n	8011ff4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80121f8:	462a      	mov	r2, r5
 80121fa:	e706      	b.n	801200a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80121fc:	d502      	bpl.n	8012204 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80121fe:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012202:	e7e9      	b.n	80121d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012204:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012208:	eea3 2a85 	vfma.f32	s4, s7, s10
 801220c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012210:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012214:	dade      	bge.n	80121d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012216:	e7f2      	b.n	80121fe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012218:	d502      	bpl.n	8012220 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801221a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801221e:	e7e7      	b.n	80121f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012220:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012224:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012228:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801222c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012230:	dadc      	bge.n	80121ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012232:	e7f2      	b.n	801221a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012234:	3d800000 	.word	0x3d800000

08012238 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012238:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801223c:	2714      	movs	r7, #20
 801223e:	435f      	muls	r7, r3
 8012240:	eb02 0c07 	add.w	ip, r2, r7
 8012244:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012248:	f115 0e0f 	adds.w	lr, r5, #15
 801224c:	f100 80a2 	bmi.w	8012394 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012250:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012254:	9c08      	ldr	r4, [sp, #32]
 8012256:	2614      	movs	r6, #20
 8012258:	f8c0 e014 	str.w	lr, [r0, #20]
 801225c:	4366      	muls	r6, r4
 801225e:	eb02 0806 	add.w	r8, r2, r6
 8012262:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012266:	f115 040f 	adds.w	r4, r5, #15
 801226a:	f100 809f 	bmi.w	80123ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801226e:	1124      	asrs	r4, r4, #4
 8012270:	eba4 040e 	sub.w	r4, r4, lr
 8012274:	6184      	str	r4, [r0, #24]
 8012276:	2c00      	cmp	r4, #0
 8012278:	f000 808a 	beq.w	8012390 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801227c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012280:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012284:	5995      	ldr	r5, [r2, r6]
 8012286:	eba4 0809 	sub.w	r8, r4, r9
 801228a:	59d4      	ldr	r4, [r2, r7]
 801228c:	eba5 0a04 	sub.w	sl, r5, r4
 8012290:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012294:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012298:	fb0e fe05 	mul.w	lr, lr, r5
 801229c:	fb0a ee19 	mls	lr, sl, r9, lr
 80122a0:	fb08 e404 	mla	r4, r8, r4, lr
 80122a4:	3c01      	subs	r4, #1
 80122a6:	19a4      	adds	r4, r4, r6
 80122a8:	f100 808c 	bmi.w	80123c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80122ac:	fb94 fef6 	sdiv	lr, r4, r6
 80122b0:	fb06 441e 	mls	r4, r6, lr, r4
 80122b4:	f8c0 e000 	str.w	lr, [r0]
 80122b8:	6104      	str	r4, [r0, #16]
 80122ba:	2d00      	cmp	r5, #0
 80122bc:	f2c0 8095 	blt.w	80123ea <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80122c0:	fb95 f4f6 	sdiv	r4, r5, r6
 80122c4:	fb06 5514 	mls	r5, r6, r4, r5
 80122c8:	6044      	str	r4, [r0, #4]
 80122ca:	6085      	str	r5, [r0, #8]
 80122cc:	60c6      	str	r6, [r0, #12]
 80122ce:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80122d2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80122d6:	6945      	ldr	r5, [r0, #20]
 80122d8:	59d2      	ldr	r2, [r2, r7]
 80122da:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80122de:	eddf 6a4b 	vldr	s13, [pc, #300]	; 801240c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80122e2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80122e6:	ee07 4a10 	vmov	s14, r4
 80122ea:	6804      	ldr	r4, [r0, #0]
 80122ec:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80122f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80122f4:	ee07 2a90 	vmov	s15, r2
 80122f8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80122fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012300:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012304:	edd3 6a00 	vldr	s13, [r3]
 8012308:	eee6 6a07 	vfma.f32	s13, s12, s14
 801230c:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8012310:	eee6 6a27 	vfma.f32	s13, s12, s15
 8012314:	edc0 6a07 	vstr	s13, [r0, #28]
 8012318:	edd0 6a01 	vldr	s13, [r0, #4]
 801231c:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8012320:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012324:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8012328:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801232c:	ed80 6a08 	vstr	s12, [r0, #32]
 8012330:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8012332:	6242      	str	r2, [r0, #36]	; 0x24
 8012334:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8012338:	ed93 6a03 	vldr	s12, [r3, #12]
 801233c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012340:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8012344:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012348:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801234c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8012350:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8012354:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012358:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801235c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801235e:	6302      	str	r2, [r0, #48]	; 0x30
 8012360:	ed93 6a06 	vldr	s12, [r3, #24]
 8012364:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8012368:	eea5 6a87 	vfma.f32	s12, s11, s14
 801236c:	eeb0 7a46 	vmov.f32	s14, s12
 8012370:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8012374:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012378:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801237c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8012380:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8012384:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012388:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801238c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801238e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012390:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012394:	2410      	movs	r4, #16
 8012396:	f1c5 0501 	rsb	r5, r5, #1
 801239a:	fb9e fef4 	sdiv	lr, lr, r4
 801239e:	f015 050f 	ands.w	r5, r5, #15
 80123a2:	bf18      	it	ne
 80123a4:	2501      	movne	r5, #1
 80123a6:	ebae 0e05 	sub.w	lr, lr, r5
 80123aa:	e753      	b.n	8012254 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80123ac:	f04f 0910 	mov.w	r9, #16
 80123b0:	f1c5 0501 	rsb	r5, r5, #1
 80123b4:	fb94 f4f9 	sdiv	r4, r4, r9
 80123b8:	f015 050f 	ands.w	r5, r5, #15
 80123bc:	bf18      	it	ne
 80123be:	2501      	movne	r5, #1
 80123c0:	1b64      	subs	r4, r4, r5
 80123c2:	e755      	b.n	8012270 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80123c4:	4264      	negs	r4, r4
 80123c6:	fb94 fef6 	sdiv	lr, r4, r6
 80123ca:	f1ce 0800 	rsb	r8, lr, #0
 80123ce:	fb06 441e 	mls	r4, r6, lr, r4
 80123d2:	f8c0 8000 	str.w	r8, [r0]
 80123d6:	6104      	str	r4, [r0, #16]
 80123d8:	2c00      	cmp	r4, #0
 80123da:	f43f af6e 	beq.w	80122ba <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80123de:	ea6f 0e0e 	mvn.w	lr, lr
 80123e2:	1b34      	subs	r4, r6, r4
 80123e4:	f8c0 e000 	str.w	lr, [r0]
 80123e8:	e766      	b.n	80122b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80123ea:	426d      	negs	r5, r5
 80123ec:	fb95 f4f6 	sdiv	r4, r5, r6
 80123f0:	f1c4 0e00 	rsb	lr, r4, #0
 80123f4:	fb06 5514 	mls	r5, r6, r4, r5
 80123f8:	f8c0 e004 	str.w	lr, [r0, #4]
 80123fc:	6085      	str	r5, [r0, #8]
 80123fe:	2d00      	cmp	r5, #0
 8012400:	f43f af64 	beq.w	80122cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8012404:	43e4      	mvns	r4, r4
 8012406:	1b75      	subs	r5, r6, r5
 8012408:	6044      	str	r4, [r0, #4]
 801240a:	e75e      	b.n	80122ca <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801240c:	3d800000 	.word	0x3d800000

08012410 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8012410:	4602      	mov	r2, r0
 8012412:	b148      	cbz	r0, 8012428 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8012414:	2300      	movs	r3, #0
 8012416:	b298      	uxth	r0, r3
 8012418:	3301      	adds	r3, #1
 801241a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801241e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8012422:	2900      	cmp	r1, #0
 8012424:	d1f7      	bne.n	8012416 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8012426:	4770      	bx	lr
 8012428:	4770      	bx	lr

0801242a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801242a:	b530      	push	{r4, r5, lr}
 801242c:	4604      	mov	r4, r0
 801242e:	b159      	cbz	r1, 8012448 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8012430:	b148      	cbz	r0, 8012446 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012432:	2300      	movs	r3, #0
 8012434:	b298      	uxth	r0, r3
 8012436:	4282      	cmp	r2, r0
 8012438:	d905      	bls.n	8012446 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801243a:	5ccd      	ldrb	r5, [r1, r3]
 801243c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8012440:	3301      	adds	r3, #1
 8012442:	2d00      	cmp	r5, #0
 8012444:	d1f6      	bne.n	8012434 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8012446:	bd30      	pop	{r4, r5, pc}
 8012448:	4608      	mov	r0, r1
 801244a:	e7fc      	b.n	8012446 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801244c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 801244c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801244e:	468c      	mov	ip, r1
 8012450:	b08b      	sub	sp, #44	; 0x2c
 8012452:	2100      	movs	r1, #0
 8012454:	ae01      	add	r6, sp, #4
 8012456:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801245a:	211f      	movs	r1, #31
 801245c:	fbb0 f7f3 	udiv	r7, r0, r3
 8012460:	fb03 0517 	mls	r5, r3, r7, r0
 8012464:	4638      	mov	r0, r7
 8012466:	b2ec      	uxtb	r4, r5
 8012468:	2d09      	cmp	r5, #9
 801246a:	bfd4      	ite	le
 801246c:	3430      	addle	r4, #48	; 0x30
 801246e:	3457      	addgt	r4, #87	; 0x57
 8012470:	b2e4      	uxtb	r4, r4
 8012472:	558c      	strb	r4, [r1, r6]
 8012474:	1e4c      	subs	r4, r1, #1
 8012476:	b92f      	cbnz	r7, 8012484 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8012478:	4431      	add	r1, r6
 801247a:	4660      	mov	r0, ip
 801247c:	f7ff ffd5 	bl	801242a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8012480:	b00b      	add	sp, #44	; 0x2c
 8012482:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012484:	4621      	mov	r1, r4
 8012486:	e7e9      	b.n	801245c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08012488 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8012488:	b5f0      	push	{r4, r5, r6, r7, lr}
 801248a:	4607      	mov	r7, r0
 801248c:	b08b      	sub	sp, #44	; 0x2c
 801248e:	4608      	mov	r0, r1
 8012490:	b341      	cbz	r1, 80124e4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8012492:	1e99      	subs	r1, r3, #2
 8012494:	2922      	cmp	r1, #34	; 0x22
 8012496:	d825      	bhi.n	80124e4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8012498:	2100      	movs	r1, #0
 801249a:	463c      	mov	r4, r7
 801249c:	261f      	movs	r6, #31
 801249e:	f10d 0c04 	add.w	ip, sp, #4
 80124a2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80124a6:	1e71      	subs	r1, r6, #1
 80124a8:	fb94 fef3 	sdiv	lr, r4, r3
 80124ac:	fb03 441e 	mls	r4, r3, lr, r4
 80124b0:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80124b4:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80124b8:	b2ec      	uxtb	r4, r5
 80124ba:	2d09      	cmp	r5, #9
 80124bc:	bfd4      	ite	le
 80124be:	3430      	addle	r4, #48	; 0x30
 80124c0:	3457      	addgt	r4, #87	; 0x57
 80124c2:	b2e4      	uxtb	r4, r4
 80124c4:	f80c 4006 	strb.w	r4, [ip, r6]
 80124c8:	4674      	mov	r4, lr
 80124ca:	b96c      	cbnz	r4, 80124e8 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80124cc:	2f00      	cmp	r7, #0
 80124ce:	da05      	bge.n	80124dc <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80124d0:	ab0a      	add	r3, sp, #40	; 0x28
 80124d2:	4419      	add	r1, r3
 80124d4:	232d      	movs	r3, #45	; 0x2d
 80124d6:	f801 3c24 	strb.w	r3, [r1, #-36]
 80124da:	1eb1      	subs	r1, r6, #2
 80124dc:	3101      	adds	r1, #1
 80124de:	4461      	add	r1, ip
 80124e0:	f7ff ffa3 	bl	801242a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80124e4:	b00b      	add	sp, #44	; 0x2c
 80124e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80124e8:	460e      	mov	r6, r1
 80124ea:	e7dc      	b.n	80124a6 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080124ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80124ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124f0:	b085      	sub	sp, #20
 80124f2:	4691      	mov	r9, r2
 80124f4:	6802      	ldr	r2, [r0, #0]
 80124f6:	4688      	mov	r8, r1
 80124f8:	461c      	mov	r4, r3
 80124fa:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80124fe:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8012502:	4683      	mov	fp, r0
 8012504:	4610      	mov	r0, r2
 8012506:	9103      	str	r1, [sp, #12]
 8012508:	9302      	str	r3, [sp, #8]
 801250a:	9201      	str	r2, [sp, #4]
 801250c:	f7ff ff80 	bl	8012410 <_ZN8touchgfx7Unicode6strlenEPKt>
 8012510:	f1b8 0f00 	cmp.w	r8, #0
 8012514:	bf0c      	ite	eq
 8012516:	4684      	moveq	ip, r0
 8012518:	f100 0c01 	addne.w	ip, r0, #1
 801251c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8012520:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8012524:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012526:	fa1f fc8c 	uxth.w	ip, ip
 801252a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801252c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8012530:	9903      	ldr	r1, [sp, #12]
 8012532:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8012536:	d041      	beq.n	80125bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012538:	d834      	bhi.n	80125a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801253a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801253e:	d059      	beq.n	80125f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8012540:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8012544:	d03a      	beq.n	80125bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012546:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801254a:	d034      	beq.n	80125b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801254c:	2400      	movs	r4, #0
 801254e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8012552:	3a01      	subs	r2, #1
 8012554:	b169      	cbz	r1, 8012572 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012556:	9911      	ldr	r1, [sp, #68]	; 0x44
 8012558:	458c      	cmp	ip, r1
 801255a:	da09      	bge.n	8012570 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801255c:	eba1 010c 	sub.w	r1, r1, ip
 8012560:	b289      	uxth	r1, r1
 8012562:	b933      	cbnz	r3, 8012572 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012564:	2e00      	cmp	r6, #0
 8012566:	d051      	beq.n	801260c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8012568:	2800      	cmp	r0, #0
 801256a:	d04f      	beq.n	801260c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801256c:	440c      	add	r4, r1
 801256e:	b2a4      	uxth	r4, r4
 8012570:	2100      	movs	r1, #0
 8012572:	682b      	ldr	r3, [r5, #0]
 8012574:	4293      	cmp	r3, r2
 8012576:	da07      	bge.n	8012588 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8012578:	f1b8 0f00 	cmp.w	r8, #0
 801257c:	d004      	beq.n	8012588 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801257e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8012582:	682b      	ldr	r3, [r5, #0]
 8012584:	3301      	adds	r3, #1
 8012586:	602b      	str	r3, [r5, #0]
 8012588:	2730      	movs	r7, #48	; 0x30
 801258a:	2c00      	cmp	r4, #0
 801258c:	d04e      	beq.n	801262c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801258e:	682e      	ldr	r6, [r5, #0]
 8012590:	3c01      	subs	r4, #1
 8012592:	42b2      	cmp	r2, r6
 8012594:	b2a4      	uxth	r4, r4
 8012596:	dd49      	ble.n	801262c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012598:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801259c:	682b      	ldr	r3, [r5, #0]
 801259e:	3301      	adds	r3, #1
 80125a0:	602b      	str	r3, [r5, #0]
 80125a2:	e7f2      	b.n	801258a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80125a4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80125a8:	d01d      	beq.n	80125e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80125aa:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80125ae:	d002      	beq.n	80125b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80125b0:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80125b4:	e7c9      	b.n	801254a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80125b6:	4684      	mov	ip, r0
 80125b8:	f04f 0800 	mov.w	r8, #0
 80125bc:	2c00      	cmp	r4, #0
 80125be:	d0c6      	beq.n	801254e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80125c0:	b947      	cbnz	r7, 80125d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80125c2:	2801      	cmp	r0, #1
 80125c4:	d106      	bne.n	80125d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80125c6:	8814      	ldrh	r4, [r2, #0]
 80125c8:	2c30      	cmp	r4, #48	; 0x30
 80125ca:	bf02      	ittt	eq
 80125cc:	3202      	addeq	r2, #2
 80125ce:	4638      	moveq	r0, r7
 80125d0:	f8cb 2000 	streq.w	r2, [fp]
 80125d4:	45bc      	cmp	ip, r7
 80125d6:	da14      	bge.n	8012602 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80125d8:	b2bf      	uxth	r7, r7
 80125da:	eba7 040c 	sub.w	r4, r7, ip
 80125de:	46bc      	mov	ip, r7
 80125e0:	b2a4      	uxth	r4, r4
 80125e2:	2600      	movs	r6, #0
 80125e4:	e7b3      	b.n	801254e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80125e6:	4684      	mov	ip, r0
 80125e8:	b16c      	cbz	r4, 8012606 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80125ea:	42b8      	cmp	r0, r7
 80125ec:	dd00      	ble.n	80125f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80125ee:	b2b8      	uxth	r0, r7
 80125f0:	2400      	movs	r4, #0
 80125f2:	e003      	b.n	80125fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80125f4:	f04f 0c01 	mov.w	ip, #1
 80125f8:	2400      	movs	r4, #0
 80125fa:	4660      	mov	r0, ip
 80125fc:	4626      	mov	r6, r4
 80125fe:	46a0      	mov	r8, r4
 8012600:	e7a5      	b.n	801254e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012602:	2400      	movs	r4, #0
 8012604:	e7ed      	b.n	80125e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8012606:	4626      	mov	r6, r4
 8012608:	46a0      	mov	r8, r4
 801260a:	e7a0      	b.n	801254e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801260c:	2900      	cmp	r1, #0
 801260e:	d0b0      	beq.n	8012572 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012610:	2720      	movs	r7, #32
 8012612:	682e      	ldr	r6, [r5, #0]
 8012614:	2900      	cmp	r1, #0
 8012616:	d0ac      	beq.n	8012572 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012618:	3901      	subs	r1, #1
 801261a:	4296      	cmp	r6, r2
 801261c:	b289      	uxth	r1, r1
 801261e:	daa7      	bge.n	8012570 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8012620:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8012624:	682b      	ldr	r3, [r5, #0]
 8012626:	3301      	adds	r3, #1
 8012628:	602b      	str	r3, [r5, #0]
 801262a:	e7f2      	b.n	8012612 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801262c:	b188      	cbz	r0, 8012652 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801262e:	682b      	ldr	r3, [r5, #0]
 8012630:	3801      	subs	r0, #1
 8012632:	429a      	cmp	r2, r3
 8012634:	b280      	uxth	r0, r0
 8012636:	dd0c      	ble.n	8012652 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8012638:	f8db 3000 	ldr.w	r3, [fp]
 801263c:	1c9c      	adds	r4, r3, #2
 801263e:	f8cb 4000 	str.w	r4, [fp]
 8012642:	881c      	ldrh	r4, [r3, #0]
 8012644:	682b      	ldr	r3, [r5, #0]
 8012646:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801264a:	682b      	ldr	r3, [r5, #0]
 801264c:	3301      	adds	r3, #1
 801264e:	602b      	str	r3, [r5, #0]
 8012650:	e7ec      	b.n	801262c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012652:	2620      	movs	r6, #32
 8012654:	b151      	cbz	r1, 801266c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8012656:	6828      	ldr	r0, [r5, #0]
 8012658:	3901      	subs	r1, #1
 801265a:	4282      	cmp	r2, r0
 801265c:	b289      	uxth	r1, r1
 801265e:	dd05      	ble.n	801266c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8012660:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8012664:	682b      	ldr	r3, [r5, #0]
 8012666:	3301      	adds	r3, #1
 8012668:	602b      	str	r3, [r5, #0]
 801266a:	e7f3      	b.n	8012654 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801266c:	b005      	add	sp, #20
 801266e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012672 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8012672:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012676:	2400      	movs	r4, #0
 8012678:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801267c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8012680:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8012684:	8014      	strh	r4, [r2, #0]
 8012686:	701c      	strb	r4, [r3, #0]
 8012688:	f888 4000 	strb.w	r4, [r8]
 801268c:	f88c 4000 	strb.w	r4, [ip]
 8012690:	f88e 4000 	strb.w	r4, [lr]
 8012694:	703c      	strb	r4, [r7, #0]
 8012696:	6804      	ldr	r4, [r0, #0]
 8012698:	b1a4      	cbz	r4, 80126c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801269a:	8824      	ldrh	r4, [r4, #0]
 801269c:	f04f 0901 	mov.w	r9, #1
 80126a0:	b314      	cbz	r4, 80126e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80126a2:	2c2b      	cmp	r4, #43	; 0x2b
 80126a4:	d001      	beq.n	80126aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80126a6:	2c20      	cmp	r4, #32
 80126a8:	d110      	bne.n	80126cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80126aa:	8014      	strh	r4, [r2, #0]
 80126ac:	6804      	ldr	r4, [r0, #0]
 80126ae:	b10c      	cbz	r4, 80126b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80126b0:	3402      	adds	r4, #2
 80126b2:	6004      	str	r4, [r0, #0]
 80126b4:	680c      	ldr	r4, [r1, #0]
 80126b6:	b10c      	cbz	r4, 80126bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80126b8:	3401      	adds	r4, #1
 80126ba:	600c      	str	r4, [r1, #0]
 80126bc:	6804      	ldr	r4, [r0, #0]
 80126be:	b17c      	cbz	r4, 80126e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80126c0:	8824      	ldrh	r4, [r4, #0]
 80126c2:	e7ed      	b.n	80126a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80126c4:	680c      	ldr	r4, [r1, #0]
 80126c6:	b17c      	cbz	r4, 80126e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80126c8:	7824      	ldrb	r4, [r4, #0]
 80126ca:	e7e7      	b.n	801269c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80126cc:	2c2d      	cmp	r4, #45	; 0x2d
 80126ce:	d102      	bne.n	80126d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80126d0:	f883 9000 	strb.w	r9, [r3]
 80126d4:	e7ea      	b.n	80126ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80126d6:	2c23      	cmp	r4, #35	; 0x23
 80126d8:	d107      	bne.n	80126ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80126da:	f888 9000 	strb.w	r9, [r8]
 80126de:	e7e5      	b.n	80126ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80126e0:	680c      	ldr	r4, [r1, #0]
 80126e2:	b10c      	cbz	r4, 80126e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80126e4:	7824      	ldrb	r4, [r4, #0]
 80126e6:	e7db      	b.n	80126a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80126e8:	2400      	movs	r4, #0
 80126ea:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80126ee:	2b09      	cmp	r3, #9
 80126f0:	d901      	bls.n	80126f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80126f2:	2c2a      	cmp	r4, #42	; 0x2a
 80126f4:	d122      	bne.n	801273c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80126f6:	2301      	movs	r3, #1
 80126f8:	2c30      	cmp	r4, #48	; 0x30
 80126fa:	f88e 3000 	strb.w	r3, [lr]
 80126fe:	d10d      	bne.n	801271c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8012700:	f88c 3000 	strb.w	r3, [ip]
 8012704:	6803      	ldr	r3, [r0, #0]
 8012706:	b10b      	cbz	r3, 801270c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8012708:	3302      	adds	r3, #2
 801270a:	6003      	str	r3, [r0, #0]
 801270c:	680b      	ldr	r3, [r1, #0]
 801270e:	b10b      	cbz	r3, 8012714 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8012710:	3301      	adds	r3, #1
 8012712:	600b      	str	r3, [r1, #0]
 8012714:	6803      	ldr	r3, [r0, #0]
 8012716:	2b00      	cmp	r3, #0
 8012718:	d02f      	beq.n	801277a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801271a:	881c      	ldrh	r4, [r3, #0]
 801271c:	2c2a      	cmp	r4, #42	; 0x2a
 801271e:	d135      	bne.n	801278c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8012720:	f04f 33ff 	mov.w	r3, #4294967295
 8012724:	6033      	str	r3, [r6, #0]
 8012726:	6803      	ldr	r3, [r0, #0]
 8012728:	b10b      	cbz	r3, 801272e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801272a:	3302      	adds	r3, #2
 801272c:	6003      	str	r3, [r0, #0]
 801272e:	680b      	ldr	r3, [r1, #0]
 8012730:	b10b      	cbz	r3, 8012736 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8012732:	3301      	adds	r3, #1
 8012734:	600b      	str	r3, [r1, #0]
 8012736:	6803      	ldr	r3, [r0, #0]
 8012738:	b31b      	cbz	r3, 8012782 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801273a:	881c      	ldrh	r4, [r3, #0]
 801273c:	2c2e      	cmp	r4, #46	; 0x2e
 801273e:	d11a      	bne.n	8012776 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012740:	2301      	movs	r3, #1
 8012742:	703b      	strb	r3, [r7, #0]
 8012744:	6803      	ldr	r3, [r0, #0]
 8012746:	b10b      	cbz	r3, 801274c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8012748:	3302      	adds	r3, #2
 801274a:	6003      	str	r3, [r0, #0]
 801274c:	680b      	ldr	r3, [r1, #0]
 801274e:	b10b      	cbz	r3, 8012754 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8012750:	3301      	adds	r3, #1
 8012752:	600b      	str	r3, [r1, #0]
 8012754:	6803      	ldr	r3, [r0, #0]
 8012756:	2b00      	cmp	r3, #0
 8012758:	d036      	beq.n	80127c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801275a:	881b      	ldrh	r3, [r3, #0]
 801275c:	2b2a      	cmp	r3, #42	; 0x2a
 801275e:	d137      	bne.n	80127d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012760:	f04f 33ff 	mov.w	r3, #4294967295
 8012764:	602b      	str	r3, [r5, #0]
 8012766:	6803      	ldr	r3, [r0, #0]
 8012768:	b10b      	cbz	r3, 801276e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801276a:	3302      	adds	r3, #2
 801276c:	6003      	str	r3, [r0, #0]
 801276e:	680b      	ldr	r3, [r1, #0]
 8012770:	b10b      	cbz	r3, 8012776 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012772:	3301      	adds	r3, #1
 8012774:	600b      	str	r3, [r1, #0]
 8012776:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801277a:	680c      	ldr	r4, [r1, #0]
 801277c:	b134      	cbz	r4, 801278c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801277e:	7824      	ldrb	r4, [r4, #0]
 8012780:	e7cc      	b.n	801271c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8012782:	680b      	ldr	r3, [r1, #0]
 8012784:	2b00      	cmp	r3, #0
 8012786:	d0f6      	beq.n	8012776 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012788:	781c      	ldrb	r4, [r3, #0]
 801278a:	e7d7      	b.n	801273c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801278c:	2300      	movs	r3, #0
 801278e:	220a      	movs	r2, #10
 8012790:	6033      	str	r3, [r6, #0]
 8012792:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8012796:	fa1f f38c 	uxth.w	r3, ip
 801279a:	2b09      	cmp	r3, #9
 801279c:	d8ce      	bhi.n	801273c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801279e:	6833      	ldr	r3, [r6, #0]
 80127a0:	fb02 c303 	mla	r3, r2, r3, ip
 80127a4:	6033      	str	r3, [r6, #0]
 80127a6:	6803      	ldr	r3, [r0, #0]
 80127a8:	b10b      	cbz	r3, 80127ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80127aa:	3302      	adds	r3, #2
 80127ac:	6003      	str	r3, [r0, #0]
 80127ae:	680b      	ldr	r3, [r1, #0]
 80127b0:	b10b      	cbz	r3, 80127b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80127b2:	3301      	adds	r3, #1
 80127b4:	600b      	str	r3, [r1, #0]
 80127b6:	6803      	ldr	r3, [r0, #0]
 80127b8:	b10b      	cbz	r3, 80127be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80127ba:	881c      	ldrh	r4, [r3, #0]
 80127bc:	e7e9      	b.n	8012792 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80127be:	680c      	ldr	r4, [r1, #0]
 80127c0:	2c00      	cmp	r4, #0
 80127c2:	d0e6      	beq.n	8012792 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80127c4:	7824      	ldrb	r4, [r4, #0]
 80127c6:	e7e4      	b.n	8012792 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80127c8:	680b      	ldr	r3, [r1, #0]
 80127ca:	b10b      	cbz	r3, 80127d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80127cc:	781b      	ldrb	r3, [r3, #0]
 80127ce:	e7c5      	b.n	801275c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80127d0:	2200      	movs	r2, #0
 80127d2:	240a      	movs	r4, #10
 80127d4:	602a      	str	r2, [r5, #0]
 80127d6:	3b30      	subs	r3, #48	; 0x30
 80127d8:	682a      	ldr	r2, [r5, #0]
 80127da:	b29e      	uxth	r6, r3
 80127dc:	2e09      	cmp	r6, #9
 80127de:	d813      	bhi.n	8012808 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80127e0:	fb04 3302 	mla	r3, r4, r2, r3
 80127e4:	602b      	str	r3, [r5, #0]
 80127e6:	6803      	ldr	r3, [r0, #0]
 80127e8:	b10b      	cbz	r3, 80127ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80127ea:	3302      	adds	r3, #2
 80127ec:	6003      	str	r3, [r0, #0]
 80127ee:	680b      	ldr	r3, [r1, #0]
 80127f0:	b10b      	cbz	r3, 80127f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80127f2:	3301      	adds	r3, #1
 80127f4:	600b      	str	r3, [r1, #0]
 80127f6:	6803      	ldr	r3, [r0, #0]
 80127f8:	b10b      	cbz	r3, 80127fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80127fa:	881b      	ldrh	r3, [r3, #0]
 80127fc:	e7eb      	b.n	80127d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80127fe:	680b      	ldr	r3, [r1, #0]
 8012800:	2b00      	cmp	r3, #0
 8012802:	d0e8      	beq.n	80127d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012804:	781b      	ldrb	r3, [r3, #0]
 8012806:	e7e6      	b.n	80127d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012808:	2a06      	cmp	r2, #6
 801280a:	bfa8      	it	ge
 801280c:	2206      	movge	r2, #6
 801280e:	602a      	str	r2, [r5, #0]
 8012810:	e7b1      	b.n	8012776 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08012812 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8012812:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012816:	b0a3      	sub	sp, #140	; 0x8c
 8012818:	2600      	movs	r6, #0
 801281a:	4607      	mov	r7, r0
 801281c:	4688      	mov	r8, r1
 801281e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8012822:	4631      	mov	r1, r6
 8012824:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8012826:	4648      	mov	r0, r9
 8012828:	960d      	str	r6, [sp, #52]	; 0x34
 801282a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801282e:	2242      	movs	r2, #66	; 0x42
 8012830:	f00a f94c 	bl	801cacc <memset>
 8012834:	b15f      	cbz	r7, 801284e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8012836:	f108 3aff 	add.w	sl, r8, #4294967295
 801283a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801283c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801283e:	b152      	cbz	r2, 8012856 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8012840:	8812      	ldrh	r2, [r2, #0]
 8012842:	b10a      	cbz	r2, 8012848 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012844:	459a      	cmp	sl, r3
 8012846:	dc2e      	bgt.n	80128a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8012848:	2200      	movs	r2, #0
 801284a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801284e:	4638      	mov	r0, r7
 8012850:	b023      	add	sp, #140	; 0x8c
 8012852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012856:	9a08      	ldr	r2, [sp, #32]
 8012858:	2a00      	cmp	r2, #0
 801285a:	d0f5      	beq.n	8012848 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801285c:	7812      	ldrb	r2, [r2, #0]
 801285e:	e7f0      	b.n	8012842 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8012860:	2d00      	cmp	r5, #0
 8012862:	d0ea      	beq.n	801283a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012864:	782a      	ldrb	r2, [r5, #0]
 8012866:	b142      	cbz	r2, 801287a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8012868:	2a25      	cmp	r2, #37	; 0x25
 801286a:	d001      	beq.n	8012870 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801286c:	459a      	cmp	sl, r3
 801286e:	dc08      	bgt.n	8012882 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8012870:	f1bb 0f00 	cmp.w	fp, #0
 8012874:	d121      	bne.n	80128ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8012876:	2d00      	cmp	r5, #0
 8012878:	d0df      	beq.n	801283a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801287a:	782a      	ldrb	r2, [r5, #0]
 801287c:	f04f 0b00 	mov.w	fp, #0
 8012880:	e01d      	b.n	80128be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8012882:	f1bb 0f00 	cmp.w	fp, #0
 8012886:	d077      	beq.n	8012978 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8012888:	f8bb 2000 	ldrh.w	r2, [fp]
 801288c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012890:	f1bb 0f00 	cmp.w	fp, #0
 8012894:	d002      	beq.n	801289c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8012896:	f10b 0202 	add.w	r2, fp, #2
 801289a:	9209      	str	r2, [sp, #36]	; 0x24
 801289c:	b10d      	cbz	r5, 80128a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801289e:	3501      	adds	r5, #1
 80128a0:	9508      	str	r5, [sp, #32]
 80128a2:	3301      	adds	r3, #1
 80128a4:	930d      	str	r3, [sp, #52]	; 0x34
 80128a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80128a8:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80128ac:	f1bb 0f00 	cmp.w	fp, #0
 80128b0:	d0d6      	beq.n	8012860 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80128b2:	f8bb 2000 	ldrh.w	r2, [fp]
 80128b6:	2a00      	cmp	r2, #0
 80128b8:	d1d6      	bne.n	8012868 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80128ba:	f8bb 2000 	ldrh.w	r2, [fp]
 80128be:	2a00      	cmp	r2, #0
 80128c0:	d0bb      	beq.n	801283a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80128c2:	459a      	cmp	sl, r3
 80128c4:	ddb9      	ble.n	801283a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80128c6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80128ca:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80128ce:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80128d2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80128d6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80128da:	960e      	str	r6, [sp, #56]	; 0x38
 80128dc:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80128e0:	960f      	str	r6, [sp, #60]	; 0x3c
 80128e2:	f1bb 0f00 	cmp.w	fp, #0
 80128e6:	d002      	beq.n	80128ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80128e8:	f10b 0302 	add.w	r3, fp, #2
 80128ec:	9309      	str	r3, [sp, #36]	; 0x24
 80128ee:	b10d      	cbz	r5, 80128f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80128f0:	1c6b      	adds	r3, r5, #1
 80128f2:	9308      	str	r3, [sp, #32]
 80128f4:	ab0f      	add	r3, sp, #60	; 0x3c
 80128f6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80128fa:	a908      	add	r1, sp, #32
 80128fc:	a809      	add	r0, sp, #36	; 0x24
 80128fe:	9305      	str	r3, [sp, #20]
 8012900:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8012904:	9304      	str	r3, [sp, #16]
 8012906:	ab0e      	add	r3, sp, #56	; 0x38
 8012908:	9303      	str	r3, [sp, #12]
 801290a:	ab0c      	add	r3, sp, #48	; 0x30
 801290c:	9302      	str	r3, [sp, #8]
 801290e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8012912:	9301      	str	r3, [sp, #4]
 8012914:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8012918:	9300      	str	r3, [sp, #0]
 801291a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801291e:	f7ff fea8 	bl	8012672 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8012922:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012924:	2b00      	cmp	r3, #0
 8012926:	bfbf      	itttt	lt
 8012928:	6823      	ldrlt	r3, [r4, #0]
 801292a:	3404      	addlt	r4, #4
 801292c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012930:	930e      	strlt	r3, [sp, #56]	; 0x38
 8012932:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012934:	2b00      	cmp	r3, #0
 8012936:	bfbe      	ittt	lt
 8012938:	6823      	ldrlt	r3, [r4, #0]
 801293a:	3404      	addlt	r4, #4
 801293c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012940:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8012944:	bfb8      	it	lt
 8012946:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8012948:	b1d9      	cbz	r1, 8012982 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 801294a:	880b      	ldrh	r3, [r1, #0]
 801294c:	2b69      	cmp	r3, #105	; 0x69
 801294e:	d01f      	beq.n	8012990 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8012950:	d82f      	bhi.n	80129b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 8012952:	2b58      	cmp	r3, #88	; 0x58
 8012954:	d01c      	beq.n	8012990 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8012956:	d818      	bhi.n	801298a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8012958:	2b25      	cmp	r3, #37	; 0x25
 801295a:	d034      	beq.n	80129c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 801295c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801295e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8012962:	f1bb 0f00 	cmp.w	fp, #0
 8012966:	f000 80b7 	beq.w	8012ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 801296a:	f8bb 5000 	ldrh.w	r5, [fp]
 801296e:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8012972:	3301      	adds	r3, #1
 8012974:	930d      	str	r3, [sp, #52]	; 0x34
 8012976:	e029      	b.n	80129cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8012978:	b10d      	cbz	r5, 801297e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 801297a:	782a      	ldrb	r2, [r5, #0]
 801297c:	e786      	b.n	801288c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801297e:	462a      	mov	r2, r5
 8012980:	e784      	b.n	801288c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012982:	2a00      	cmp	r2, #0
 8012984:	d0ea      	beq.n	801295c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8012986:	7813      	ldrb	r3, [r2, #0]
 8012988:	e7e0      	b.n	801294c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 801298a:	3b63      	subs	r3, #99	; 0x63
 801298c:	2b01      	cmp	r3, #1
 801298e:	d8e5      	bhi.n	801295c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8012990:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8012994:	b329      	cbz	r1, 80129e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 8012996:	880b      	ldrh	r3, [r1, #0]
 8012998:	2b69      	cmp	r3, #105	; 0x69
 801299a:	d063      	beq.n	8012a64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 801299c:	d825      	bhi.n	80129ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 801299e:	2b63      	cmp	r3, #99	; 0x63
 80129a0:	d038      	beq.n	8012a14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 80129a2:	2b64      	cmp	r3, #100	; 0x64
 80129a4:	d05e      	beq.n	8012a64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 80129a6:	2b58      	cmp	r3, #88	; 0x58
 80129a8:	d07a      	beq.n	8012aa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 80129aa:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80129ae:	4625      	mov	r5, r4
 80129b0:	e036      	b.n	8012a20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 80129b2:	2b73      	cmp	r3, #115	; 0x73
 80129b4:	d0ec      	beq.n	8012990 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 80129b6:	d802      	bhi.n	80129be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 80129b8:	2b6f      	cmp	r3, #111	; 0x6f
 80129ba:	d1cf      	bne.n	801295c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 80129bc:	e7e8      	b.n	8012990 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 80129be:	2b75      	cmp	r3, #117	; 0x75
 80129c0:	d0e6      	beq.n	8012990 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 80129c2:	2b78      	cmp	r3, #120	; 0x78
 80129c4:	e7f9      	b.n	80129ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 80129c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80129c8:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80129cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80129ce:	b10b      	cbz	r3, 80129d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 80129d0:	3302      	adds	r3, #2
 80129d2:	9309      	str	r3, [sp, #36]	; 0x24
 80129d4:	9b08      	ldr	r3, [sp, #32]
 80129d6:	2b00      	cmp	r3, #0
 80129d8:	f43f af2f 	beq.w	801283a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80129dc:	3301      	adds	r3, #1
 80129de:	9308      	str	r3, [sp, #32]
 80129e0:	e72b      	b.n	801283a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80129e2:	2a00      	cmp	r2, #0
 80129e4:	d0e1      	beq.n	80129aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 80129e6:	7813      	ldrb	r3, [r2, #0]
 80129e8:	e7d6      	b.n	8012998 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 80129ea:	2b73      	cmp	r3, #115	; 0x73
 80129ec:	d036      	beq.n	8012a5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 80129ee:	d807      	bhi.n	8012a00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 80129f0:	2b6f      	cmp	r3, #111	; 0x6f
 80129f2:	d1da      	bne.n	80129aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 80129f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80129f6:	1d25      	adds	r5, r4, #4
 80129f8:	2308      	movs	r3, #8
 80129fa:	eba8 0202 	sub.w	r2, r8, r2
 80129fe:	e049      	b.n	8012a94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8012a00:	2b75      	cmp	r3, #117	; 0x75
 8012a02:	d042      	beq.n	8012a8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 8012a04:	2b78      	cmp	r3, #120	; 0x78
 8012a06:	d1d0      	bne.n	80129aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8012a08:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012a0a:	1d25      	adds	r5, r4, #4
 8012a0c:	2310      	movs	r3, #16
 8012a0e:	eba8 0202 	sub.w	r2, r8, r2
 8012a12:	e03f      	b.n	8012a94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8012a14:	6823      	ldr	r3, [r4, #0]
 8012a16:	1d25      	adds	r5, r4, #4
 8012a18:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8012a1c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8012a20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012a22:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8012a26:	2b00      	cmp	r3, #0
 8012a28:	d051      	beq.n	8012ace <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 8012a2a:	881a      	ldrh	r2, [r3, #0]
 8012a2c:	a80d      	add	r0, sp, #52	; 0x34
 8012a2e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8012a32:	462c      	mov	r4, r5
 8012a34:	9005      	str	r0, [sp, #20]
 8012a36:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8012a3a:	9004      	str	r0, [sp, #16]
 8012a3c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012a3e:	9003      	str	r0, [sp, #12]
 8012a40:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8012a44:	9002      	str	r0, [sp, #8]
 8012a46:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012a48:	9001      	str	r0, [sp, #4]
 8012a4a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8012a4e:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8012a52:	9000      	str	r0, [sp, #0]
 8012a54:	a810      	add	r0, sp, #64	; 0x40
 8012a56:	f7ff fd49 	bl	80124ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8012a5a:	e7b7      	b.n	80129cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8012a5c:	1d25      	adds	r5, r4, #4
 8012a5e:	6823      	ldr	r3, [r4, #0]
 8012a60:	9310      	str	r3, [sp, #64]	; 0x40
 8012a62:	e7dd      	b.n	8012a20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8012a64:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012a66:	230a      	movs	r3, #10
 8012a68:	4649      	mov	r1, r9
 8012a6a:	6820      	ldr	r0, [r4, #0]
 8012a6c:	eba8 0202 	sub.w	r2, r8, r2
 8012a70:	1d25      	adds	r5, r4, #4
 8012a72:	b292      	uxth	r2, r2
 8012a74:	f7ff fd08 	bl	8012488 <_ZN8touchgfx7Unicode4itoaElPtti>
 8012a78:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012a7c:	2b2d      	cmp	r3, #45	; 0x2d
 8012a7e:	d1cf      	bne.n	8012a20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8012a80:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012a84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012a86:	3302      	adds	r3, #2
 8012a88:	e7ea      	b.n	8012a60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 8012a8a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012a8c:	1d25      	adds	r5, r4, #4
 8012a8e:	230a      	movs	r3, #10
 8012a90:	eba8 0202 	sub.w	r2, r8, r2
 8012a94:	b292      	uxth	r2, r2
 8012a96:	4649      	mov	r1, r9
 8012a98:	6820      	ldr	r0, [r4, #0]
 8012a9a:	f7ff fcd7 	bl	801244c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8012a9e:	e7bf      	b.n	8012a20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8012aa0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012aa2:	2310      	movs	r3, #16
 8012aa4:	4649      	mov	r1, r9
 8012aa6:	6820      	ldr	r0, [r4, #0]
 8012aa8:	eba8 0202 	sub.w	r2, r8, r2
 8012aac:	1d25      	adds	r5, r4, #4
 8012aae:	b292      	uxth	r2, r2
 8012ab0:	f7ff fccc 	bl	801244c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8012ab4:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8012ab8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8012abc:	2b00      	cmp	r3, #0
 8012abe:	d0af      	beq.n	8012a20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8012ac0:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8012ac4:	2919      	cmp	r1, #25
 8012ac6:	d8f7      	bhi.n	8012ab8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8012ac8:	3b20      	subs	r3, #32
 8012aca:	8013      	strh	r3, [r2, #0]
 8012acc:	e7f4      	b.n	8012ab8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8012ace:	9a08      	ldr	r2, [sp, #32]
 8012ad0:	2a00      	cmp	r2, #0
 8012ad2:	d0ab      	beq.n	8012a2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8012ad4:	7812      	ldrb	r2, [r2, #0]
 8012ad6:	e7a9      	b.n	8012a2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8012ad8:	2d00      	cmp	r5, #0
 8012ada:	f43f af48 	beq.w	801296e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 8012ade:	782d      	ldrb	r5, [r5, #0]
 8012ae0:	e745      	b.n	801296e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

08012ae2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8012ae2:	b507      	push	{r0, r1, r2, lr}
 8012ae4:	9300      	str	r3, [sp, #0]
 8012ae6:	4613      	mov	r3, r2
 8012ae8:	2200      	movs	r2, #0
 8012aea:	f7ff fe92 	bl	8012812 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8012aee:	b003      	add	sp, #12
 8012af0:	f85d fb04 	ldr.w	pc, [sp], #4

08012af4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8012af4:	b40c      	push	{r2, r3}
 8012af6:	b507      	push	{r0, r1, r2, lr}
 8012af8:	ab04      	add	r3, sp, #16
 8012afa:	f853 2b04 	ldr.w	r2, [r3], #4
 8012afe:	9301      	str	r3, [sp, #4]
 8012b00:	f7ff ffef 	bl	8012ae2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8012b04:	b003      	add	sp, #12
 8012b06:	f85d eb04 	ldr.w	lr, [sp], #4
 8012b0a:	b002      	add	sp, #8
 8012b0c:	4770      	bx	lr
	...

08012b10 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8012b10:	4b01      	ldr	r3, [pc, #4]	; (8012b18 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8012b12:	6018      	str	r0, [r3, #0]
 8012b14:	4770      	bx	lr
 8012b16:	bf00      	nop
 8012b18:	240089b4 	.word	0x240089b4

08012b1c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8012b1c:	4b06      	ldr	r3, [pc, #24]	; (8012b38 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8012b1e:	881a      	ldrh	r2, [r3, #0]
 8012b20:	4282      	cmp	r2, r0
 8012b22:	d807      	bhi.n	8012b34 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8012b24:	4b05      	ldr	r3, [pc, #20]	; (8012b3c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8012b26:	881b      	ldrh	r3, [r3, #0]
 8012b28:	4413      	add	r3, r2
 8012b2a:	4298      	cmp	r0, r3
 8012b2c:	bfac      	ite	ge
 8012b2e:	2000      	movge	r0, #0
 8012b30:	2001      	movlt	r0, #1
 8012b32:	4770      	bx	lr
 8012b34:	2000      	movs	r0, #0
 8012b36:	4770      	bx	lr
 8012b38:	240089d4 	.word	0x240089d4
 8012b3c:	240089d8 	.word	0x240089d8

08012b40 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8012b40:	b508      	push	{r3, lr}
 8012b42:	4601      	mov	r1, r0
 8012b44:	f7ff ffea 	bl	8012b1c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012b48:	b118      	cbz	r0, 8012b52 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8012b4a:	4b02      	ldr	r3, [pc, #8]	; (8012b54 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8012b4c:	681b      	ldr	r3, [r3, #0]
 8012b4e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8012b52:	bd08      	pop	{r3, pc}
 8012b54:	240089b8 	.word	0x240089b8

08012b58 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE>:
 8012b58:	b538      	push	{r3, r4, r5, lr}
 8012b5a:	4604      	mov	r4, r0
 8012b5c:	f7ff ffde 	bl	8012b1c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012b60:	b188      	cbz	r0, 8012b86 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x2e>
 8012b62:	4b09      	ldr	r3, [pc, #36]	; (8012b88 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x30>)
 8012b64:	881a      	ldrh	r2, [r3, #0]
 8012b66:	4b09      	ldr	r3, [pc, #36]	; (8012b8c <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x34>)
 8012b68:	1aa4      	subs	r4, r4, r2
 8012b6a:	220e      	movs	r2, #14
 8012b6c:	681d      	ldr	r5, [r3, #0]
 8012b6e:	4362      	muls	r2, r4
 8012b70:	18ac      	adds	r4, r5, r2
 8012b72:	7b23      	ldrb	r3, [r4, #12]
 8012b74:	f013 0320 	ands.w	r3, r3, #32
 8012b78:	bf17      	itett	ne
 8012b7a:	680b      	ldrne	r3, [r1, #0]
 8012b7c:	4618      	moveq	r0, r3
 8012b7e:	50ab      	strne	r3, [r5, r2]
 8012b80:	684b      	ldrne	r3, [r1, #4]
 8012b82:	bf18      	it	ne
 8012b84:	6063      	strne	r3, [r4, #4]
 8012b86:	bd38      	pop	{r3, r4, r5, pc}
 8012b88:	240089d4 	.word	0x240089d4
 8012b8c:	240089bc 	.word	0x240089bc

08012b90 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE>:
 8012b90:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012b94:	4606      	mov	r6, r0
 8012b96:	460c      	mov	r4, r1
 8012b98:	f7ff ffc0 	bl	8012b1c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012b9c:	b918      	cbnz	r0, 8012ba6 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x16>
 8012b9e:	2000      	movs	r0, #0
 8012ba0:	b002      	add	sp, #8
 8012ba2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012ba6:	4608      	mov	r0, r1
 8012ba8:	f7f7 ff73 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012bac:	2800      	cmp	r0, #0
 8012bae:	d1f6      	bne.n	8012b9e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 8012bb0:	4b3f      	ldr	r3, [pc, #252]	; (8012cb0 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x120>)
 8012bb2:	f8df 9100 	ldr.w	r9, [pc, #256]	; 8012cb4 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x124>
 8012bb6:	881d      	ldrh	r5, [r3, #0]
 8012bb8:	f8d9 a000 	ldr.w	sl, [r9]
 8012bbc:	46c8      	mov	r8, r9
 8012bbe:	1b73      	subs	r3, r6, r5
 8012bc0:	250e      	movs	r5, #14
 8012bc2:	435d      	muls	r5, r3
 8012bc4:	eb0a 0705 	add.w	r7, sl, r5
 8012bc8:	7b3b      	ldrb	r3, [r7, #12]
 8012bca:	f013 0f20 	tst.w	r3, #32
 8012bce:	d0e6      	beq.n	8012b9e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 8012bd0:	4621      	mov	r1, r4
 8012bd2:	4638      	mov	r0, r7
 8012bd4:	f7fc fea2 	bl	800f91c <_ZNK8touchgfx4Rect8includesERKS0_>
 8012bd8:	2800      	cmp	r0, #0
 8012bda:	d1e1      	bne.n	8012ba0 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x10>
 8012bdc:	4639      	mov	r1, r7
 8012bde:	4620      	mov	r0, r4
 8012be0:	f7fc fe9c 	bl	800f91c <_ZNK8touchgfx4Rect8includesERKS0_>
 8012be4:	b108      	cbz	r0, 8012bea <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x5a>
 8012be6:	4621      	mov	r1, r4
 8012be8:	e020      	b.n	8012c2c <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x9c>
 8012bea:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012bee:	f93a 3005 	ldrsh.w	r3, [sl, r5]
 8012bf2:	429a      	cmp	r2, r3
 8012bf4:	d11e      	bne.n	8012c34 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 8012bf6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012bfa:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8012bfe:	429a      	cmp	r2, r3
 8012c00:	d118      	bne.n	8012c34 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 8012c02:	6820      	ldr	r0, [r4, #0]
 8012c04:	466b      	mov	r3, sp
 8012c06:	6861      	ldr	r1, [r4, #4]
 8012c08:	c303      	stmia	r3!, {r0, r1}
 8012c0a:	4639      	mov	r1, r7
 8012c0c:	4668      	mov	r0, sp
 8012c0e:	f7fc feab 	bl	800f968 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012c12:	f8d9 3000 	ldr.w	r3, [r9]
 8012c16:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012c1a:	442b      	add	r3, r5
 8012c1c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8012c20:	4413      	add	r3, r2
 8012c22:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8012c26:	4293      	cmp	r3, r2
 8012c28:	dc04      	bgt.n	8012c34 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 8012c2a:	4669      	mov	r1, sp
 8012c2c:	4630      	mov	r0, r6
 8012c2e:	f7ff ff93 	bl	8012b58 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE>
 8012c32:	e7b5      	b.n	8012ba0 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x10>
 8012c34:	f8d8 3000 	ldr.w	r3, [r8]
 8012c38:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012c3c:	442b      	add	r3, r5
 8012c3e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012c42:	4291      	cmp	r1, r2
 8012c44:	d119      	bne.n	8012c7a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xea>
 8012c46:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012c4a:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8012c4e:	4291      	cmp	r1, r2
 8012c50:	d113      	bne.n	8012c7a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xea>
 8012c52:	6820      	ldr	r0, [r4, #0]
 8012c54:	466a      	mov	r2, sp
 8012c56:	6861      	ldr	r1, [r4, #4]
 8012c58:	c203      	stmia	r2!, {r0, r1}
 8012c5a:	4619      	mov	r1, r3
 8012c5c:	4668      	mov	r0, sp
 8012c5e:	f7fc fe83 	bl	800f968 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012c62:	f8d8 3000 	ldr.w	r3, [r8]
 8012c66:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012c6a:	442b      	add	r3, r5
 8012c6c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8012c70:	4413      	add	r3, r2
 8012c72:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8012c76:	4293      	cmp	r3, r2
 8012c78:	ddd7      	ble.n	8012c2a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x9a>
 8012c7a:	4620      	mov	r0, r4
 8012c7c:	f7f7 ff09 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012c80:	b990      	cbnz	r0, 8012ca8 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x118>
 8012c82:	88a7      	ldrh	r7, [r4, #4]
 8012c84:	88e3      	ldrh	r3, [r4, #6]
 8012c86:	fb17 f703 	smulbb	r7, r7, r3
 8012c8a:	f8d8 3000 	ldr.w	r3, [r8]
 8012c8e:	441d      	add	r5, r3
 8012c90:	4628      	mov	r0, r5
 8012c92:	f7f7 fefe 	bl	800aa92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012c96:	b948      	cbnz	r0, 8012cac <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x11c>
 8012c98:	88ab      	ldrh	r3, [r5, #4]
 8012c9a:	88ea      	ldrh	r2, [r5, #6]
 8012c9c:	fb13 f302 	smulbb	r3, r3, r2
 8012ca0:	42bb      	cmp	r3, r7
 8012ca2:	f6bf af7c 	bge.w	8012b9e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 8012ca6:	e79e      	b.n	8012be6 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x56>
 8012ca8:	2700      	movs	r7, #0
 8012caa:	e7ee      	b.n	8012c8a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xfa>
 8012cac:	2300      	movs	r3, #0
 8012cae:	e7f7      	b.n	8012ca0 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x110>
 8012cb0:	240089d4 	.word	0x240089d4
 8012cb4:	240089bc 	.word	0x240089bc

08012cb8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8012cb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012cba:	4c24      	ldr	r4, [pc, #144]	; (8012d4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8012cbc:	6823      	ldr	r3, [r4, #0]
 8012cbe:	2b00      	cmp	r3, #0
 8012cc0:	d042      	beq.n	8012d48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012cc2:	4a23      	ldr	r2, [pc, #140]	; (8012d50 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012cc4:	4d23      	ldr	r5, [pc, #140]	; (8012d54 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8012cc6:	8811      	ldrh	r1, [r2, #0]
 8012cc8:	f8b5 c000 	ldrh.w	ip, [r5]
 8012ccc:	4822      	ldr	r0, [pc, #136]	; (8012d58 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8012cce:	4461      	add	r1, ip
 8012cd0:	1c4a      	adds	r2, r1, #1
 8012cd2:	008f      	lsls	r7, r1, #2
 8012cd4:	f022 0201 	bic.w	r2, r2, #1
 8012cd8:	19de      	adds	r6, r3, r7
 8012cda:	0412      	lsls	r2, r2, #16
 8012cdc:	6006      	str	r6, [r0, #0]
 8012cde:	4e1f      	ldr	r6, [pc, #124]	; (8012d5c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8012ce0:	0c12      	lsrs	r2, r2, #16
 8012ce2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8012ce6:	19da      	adds	r2, r3, r7
 8012ce8:	6032      	str	r2, [r6, #0]
 8012cea:	220e      	movs	r2, #14
 8012cec:	fb02 f20c 	mul.w	r2, r2, ip
 8012cf0:	3203      	adds	r2, #3
 8012cf2:	f022 0203 	bic.w	r2, r2, #3
 8012cf6:	443a      	add	r2, r7
 8012cf8:	4f19      	ldr	r7, [pc, #100]	; (8012d60 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8012cfa:	4413      	add	r3, r2
 8012cfc:	603b      	str	r3, [r7, #0]
 8012cfe:	2300      	movs	r3, #0
 8012d00:	4f18      	ldr	r7, [pc, #96]	; (8012d64 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8012d02:	469c      	mov	ip, r3
 8012d04:	803b      	strh	r3, [r7, #0]
 8012d06:	4f18      	ldr	r7, [pc, #96]	; (8012d68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8012d08:	683f      	ldr	r7, [r7, #0]
 8012d0a:	1aba      	subs	r2, r7, r2
 8012d0c:	4f17      	ldr	r7, [pc, #92]	; (8012d6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8012d0e:	603a      	str	r2, [r7, #0]
 8012d10:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8012d14:	4a16      	ldr	r2, [pc, #88]	; (8012d70 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8012d16:	8013      	strh	r3, [r2, #0]
 8012d18:	428b      	cmp	r3, r1
 8012d1a:	d10d      	bne.n	8012d38 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8012d1c:	882d      	ldrh	r5, [r5, #0]
 8012d1e:	2300      	movs	r3, #0
 8012d20:	6830      	ldr	r0, [r6, #0]
 8012d22:	240e      	movs	r4, #14
 8012d24:	429d      	cmp	r5, r3
 8012d26:	d90f      	bls.n	8012d48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012d28:	fb04 0203 	mla	r2, r4, r3, r0
 8012d2c:	3301      	adds	r3, #1
 8012d2e:	7b11      	ldrb	r1, [r2, #12]
 8012d30:	f36f 1145 	bfc	r1, #5, #1
 8012d34:	7311      	strb	r1, [r2, #12]
 8012d36:	e7f5      	b.n	8012d24 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8012d38:	6822      	ldr	r2, [r4, #0]
 8012d3a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8012d3e:	6802      	ldr	r2, [r0, #0]
 8012d40:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8012d44:	3301      	adds	r3, #1
 8012d46:	e7e7      	b.n	8012d18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8012d48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012d4a:	bf00      	nop
 8012d4c:	240089b8 	.word	0x240089b8
 8012d50:	240089d4 	.word	0x240089d4
 8012d54:	240089d8 	.word	0x240089d8
 8012d58:	240089cc 	.word	0x240089cc
 8012d5c:	240089bc 	.word	0x240089bc
 8012d60:	240089c4 	.word	0x240089c4
 8012d64:	240089d6 	.word	0x240089d6
 8012d68:	240089c0 	.word	0x240089c0
 8012d6c:	240089d0 	.word	0x240089d0
 8012d70:	240089c8 	.word	0x240089c8

08012d74 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8012d74:	4b06      	ldr	r3, [pc, #24]	; (8012d90 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8012d76:	681b      	ldr	r3, [r3, #0]
 8012d78:	b943      	cbnz	r3, 8012d8c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012d7a:	b139      	cbz	r1, 8012d8c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012d7c:	4b05      	ldr	r3, [pc, #20]	; (8012d94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8012d7e:	801a      	strh	r2, [r3, #0]
 8012d80:	4b05      	ldr	r3, [pc, #20]	; (8012d98 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8012d82:	6019      	str	r1, [r3, #0]
 8012d84:	4b05      	ldr	r3, [pc, #20]	; (8012d9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8012d86:	6018      	str	r0, [r3, #0]
 8012d88:	f7ff bf96 	b.w	8012cb8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8012d8c:	4770      	bx	lr
 8012d8e:	bf00      	nop
 8012d90:	240089c4 	.word	0x240089c4
 8012d94:	240089d8 	.word	0x240089d8
 8012d98:	240089c0 	.word	0x240089c0
 8012d9c:	240089b8 	.word	0x240089b8

08012da0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8012da0:	b470      	push	{r4, r5, r6}
 8012da2:	4c07      	ldr	r4, [pc, #28]	; (8012dc0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8012da4:	4605      	mov	r5, r0
 8012da6:	4610      	mov	r0, r2
 8012da8:	9a03      	ldr	r2, [sp, #12]
 8012daa:	6826      	ldr	r6, [r4, #0]
 8012dac:	b936      	cbnz	r6, 8012dbc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8012dae:	6025      	str	r5, [r4, #0]
 8012db0:	4c04      	ldr	r4, [pc, #16]	; (8012dc4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8012db2:	8021      	strh	r1, [r4, #0]
 8012db4:	4619      	mov	r1, r3
 8012db6:	bc70      	pop	{r4, r5, r6}
 8012db8:	f7ff bfdc 	b.w	8012d74 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8012dbc:	bc70      	pop	{r4, r5, r6}
 8012dbe:	4770      	bx	lr
 8012dc0:	240089dc 	.word	0x240089dc
 8012dc4:	240089d4 	.word	0x240089d4

08012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8012dc8:	4a12      	ldr	r2, [pc, #72]	; (8012e14 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8012dca:	8803      	ldrh	r3, [r0, #0]
 8012dcc:	8812      	ldrh	r2, [r2, #0]
 8012dce:	4293      	cmp	r3, r2
 8012dd0:	d207      	bcs.n	8012de2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8012dd2:	4a11      	ldr	r2, [pc, #68]	; (8012e18 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012dd4:	2114      	movs	r1, #20
 8012dd6:	6812      	ldr	r2, [r2, #0]
 8012dd8:	fb01 2303 	mla	r3, r1, r3, r2
 8012ddc:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8012de0:	4770      	bx	lr
 8012de2:	490e      	ldr	r1, [pc, #56]	; (8012e1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012de4:	8809      	ldrh	r1, [r1, #0]
 8012de6:	4411      	add	r1, r2
 8012de8:	428b      	cmp	r3, r1
 8012dea:	da04      	bge.n	8012df6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8012dec:	1a9b      	subs	r3, r3, r2
 8012dee:	4a0c      	ldr	r2, [pc, #48]	; (8012e20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8012df0:	210e      	movs	r1, #14
 8012df2:	6812      	ldr	r2, [r2, #0]
 8012df4:	e7f0      	b.n	8012dd8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8012df6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012dfa:	4293      	cmp	r3, r2
 8012dfc:	d108      	bne.n	8012e10 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8012dfe:	4b09      	ldr	r3, [pc, #36]	; (8012e24 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8012e00:	781b      	ldrb	r3, [r3, #0]
 8012e02:	b91b      	cbnz	r3, 8012e0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8012e04:	4b08      	ldr	r3, [pc, #32]	; (8012e28 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8012e06:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012e0a:	4770      	bx	lr
 8012e0c:	4b07      	ldr	r3, [pc, #28]	; (8012e2c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8012e0e:	e7fa      	b.n	8012e06 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8012e10:	2000      	movs	r0, #0
 8012e12:	4770      	bx	lr
 8012e14:	240089d4 	.word	0x240089d4
 8012e18:	240089dc 	.word	0x240089dc
 8012e1c:	240089d8 	.word	0x240089d8
 8012e20:	240089bc 	.word	0x240089bc
 8012e24:	24008944 	.word	0x24008944
 8012e28:	24008946 	.word	0x24008946
 8012e2c:	24008948 	.word	0x24008948

08012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8012e30:	4a12      	ldr	r2, [pc, #72]	; (8012e7c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8012e32:	8803      	ldrh	r3, [r0, #0]
 8012e34:	8812      	ldrh	r2, [r2, #0]
 8012e36:	4293      	cmp	r3, r2
 8012e38:	d207      	bcs.n	8012e4a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8012e3a:	4a11      	ldr	r2, [pc, #68]	; (8012e80 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8012e3c:	2114      	movs	r1, #20
 8012e3e:	6812      	ldr	r2, [r2, #0]
 8012e40:	fb01 2303 	mla	r3, r1, r3, r2
 8012e44:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8012e48:	4770      	bx	lr
 8012e4a:	490e      	ldr	r1, [pc, #56]	; (8012e84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8012e4c:	8809      	ldrh	r1, [r1, #0]
 8012e4e:	4411      	add	r1, r2
 8012e50:	428b      	cmp	r3, r1
 8012e52:	da04      	bge.n	8012e5e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8012e54:	1a9b      	subs	r3, r3, r2
 8012e56:	4a0c      	ldr	r2, [pc, #48]	; (8012e88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8012e58:	210e      	movs	r1, #14
 8012e5a:	6812      	ldr	r2, [r2, #0]
 8012e5c:	e7f0      	b.n	8012e40 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8012e5e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012e62:	4293      	cmp	r3, r2
 8012e64:	d108      	bne.n	8012e78 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8012e66:	4b09      	ldr	r3, [pc, #36]	; (8012e8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8012e68:	781b      	ldrb	r3, [r3, #0]
 8012e6a:	b91b      	cbnz	r3, 8012e74 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8012e6c:	4b08      	ldr	r3, [pc, #32]	; (8012e90 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8012e6e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012e72:	4770      	bx	lr
 8012e74:	4b07      	ldr	r3, [pc, #28]	; (8012e94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8012e76:	e7fa      	b.n	8012e6e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8012e78:	2000      	movs	r0, #0
 8012e7a:	4770      	bx	lr
 8012e7c:	240089d4 	.word	0x240089d4
 8012e80:	240089dc 	.word	0x240089dc
 8012e84:	240089d8 	.word	0x240089d8
 8012e88:	240089bc 	.word	0x240089bc
 8012e8c:	24008944 	.word	0x24008944
 8012e90:	24008948 	.word	0x24008948
 8012e94:	24008946 	.word	0x24008946

08012e98 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012e98:	4a1f      	ldr	r2, [pc, #124]	; (8012f18 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8012e9a:	b510      	push	{r4, lr}
 8012e9c:	880b      	ldrh	r3, [r1, #0]
 8012e9e:	8812      	ldrh	r2, [r2, #0]
 8012ea0:	4293      	cmp	r3, r2
 8012ea2:	d213      	bcs.n	8012ecc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8012ea4:	4a1d      	ldr	r2, [pc, #116]	; (8012f1c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8012ea6:	2114      	movs	r1, #20
 8012ea8:	6812      	ldr	r2, [r2, #0]
 8012eaa:	fb01 2303 	mla	r3, r1, r3, r2
 8012eae:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8012eb2:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8012eb6:	8a1a      	ldrh	r2, [r3, #16]
 8012eb8:	8a5b      	ldrh	r3, [r3, #18]
 8012eba:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012ebe:	8004      	strh	r4, [r0, #0]
 8012ec0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8012ec4:	8041      	strh	r1, [r0, #2]
 8012ec6:	8082      	strh	r2, [r0, #4]
 8012ec8:	80c3      	strh	r3, [r0, #6]
 8012eca:	e00e      	b.n	8012eea <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8012ecc:	4914      	ldr	r1, [pc, #80]	; (8012f20 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8012ece:	8809      	ldrh	r1, [r1, #0]
 8012ed0:	4411      	add	r1, r2
 8012ed2:	428b      	cmp	r3, r1
 8012ed4:	da0a      	bge.n	8012eec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8012ed6:	1a9b      	subs	r3, r3, r2
 8012ed8:	4a12      	ldr	r2, [pc, #72]	; (8012f24 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8012eda:	210e      	movs	r1, #14
 8012edc:	6812      	ldr	r2, [r2, #0]
 8012ede:	fb01 2303 	mla	r3, r1, r3, r2
 8012ee2:	681a      	ldr	r2, [r3, #0]
 8012ee4:	6002      	str	r2, [r0, #0]
 8012ee6:	685a      	ldr	r2, [r3, #4]
 8012ee8:	6042      	str	r2, [r0, #4]
 8012eea:	bd10      	pop	{r4, pc}
 8012eec:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012ef0:	4293      	cmp	r3, r2
 8012ef2:	d10b      	bne.n	8012f0c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8012ef4:	4b0c      	ldr	r3, [pc, #48]	; (8012f28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012ef6:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012efa:	4b0c      	ldr	r3, [pc, #48]	; (8012f2c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8012efc:	8081      	strh	r1, [r0, #4]
 8012efe:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012f02:	2300      	movs	r3, #0
 8012f04:	80c2      	strh	r2, [r0, #6]
 8012f06:	8003      	strh	r3, [r0, #0]
 8012f08:	8043      	strh	r3, [r0, #2]
 8012f0a:	e7ee      	b.n	8012eea <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8012f0c:	2300      	movs	r3, #0
 8012f0e:	8003      	strh	r3, [r0, #0]
 8012f10:	8043      	strh	r3, [r0, #2]
 8012f12:	8083      	strh	r3, [r0, #4]
 8012f14:	e7d8      	b.n	8012ec8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012f16:	bf00      	nop
 8012f18:	240089d4 	.word	0x240089d4
 8012f1c:	240089dc 	.word	0x240089dc
 8012f20:	240089d8 	.word	0x240089d8
 8012f24:	240089bc 	.word	0x240089bc
 8012f28:	24008940 	.word	0x24008940
 8012f2c:	24008942 	.word	0x24008942

08012f30 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8012f30:	4a17      	ldr	r2, [pc, #92]	; (8012f90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8012f32:	8803      	ldrh	r3, [r0, #0]
 8012f34:	8812      	ldrh	r2, [r2, #0]
 8012f36:	4293      	cmp	r3, r2
 8012f38:	d213      	bcs.n	8012f62 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8012f3a:	4a16      	ldr	r2, [pc, #88]	; (8012f94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8012f3c:	2114      	movs	r1, #20
 8012f3e:	6812      	ldr	r2, [r2, #0]
 8012f40:	fb01 2303 	mla	r3, r1, r3, r2
 8012f44:	8a1a      	ldrh	r2, [r3, #16]
 8012f46:	8919      	ldrh	r1, [r3, #8]
 8012f48:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012f4c:	428a      	cmp	r2, r1
 8012f4e:	db1d      	blt.n	8012f8c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012f50:	8a58      	ldrh	r0, [r3, #18]
 8012f52:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012f56:	895b      	ldrh	r3, [r3, #10]
 8012f58:	4298      	cmp	r0, r3
 8012f5a:	bfac      	ite	ge
 8012f5c:	2000      	movge	r0, #0
 8012f5e:	2001      	movlt	r0, #1
 8012f60:	4770      	bx	lr
 8012f62:	490d      	ldr	r1, [pc, #52]	; (8012f98 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8012f64:	8809      	ldrh	r1, [r1, #0]
 8012f66:	4411      	add	r1, r2
 8012f68:	428b      	cmp	r3, r1
 8012f6a:	da0d      	bge.n	8012f88 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8012f6c:	1a9b      	subs	r3, r3, r2
 8012f6e:	4a0b      	ldr	r2, [pc, #44]	; (8012f9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8012f70:	210e      	movs	r1, #14
 8012f72:	6812      	ldr	r2, [r2, #0]
 8012f74:	fb01 2303 	mla	r3, r1, r3, r2
 8012f78:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8012f7c:	891a      	ldrh	r2, [r3, #8]
 8012f7e:	4291      	cmp	r1, r2
 8012f80:	db04      	blt.n	8012f8c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012f82:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8012f86:	e7e6      	b.n	8012f56 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8012f88:	2000      	movs	r0, #0
 8012f8a:	4770      	bx	lr
 8012f8c:	2001      	movs	r0, #1
 8012f8e:	4770      	bx	lr
 8012f90:	240089d4 	.word	0x240089d4
 8012f94:	240089dc 	.word	0x240089dc
 8012f98:	240089d8 	.word	0x240089d8
 8012f9c:	240089bc 	.word	0x240089bc

08012fa0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8012fa0:	4a12      	ldr	r2, [pc, #72]	; (8012fec <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8012fa2:	8803      	ldrh	r3, [r0, #0]
 8012fa4:	8811      	ldrh	r1, [r2, #0]
 8012fa6:	428b      	cmp	r3, r1
 8012fa8:	d20b      	bcs.n	8012fc2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8012faa:	4a11      	ldr	r2, [pc, #68]	; (8012ff0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012fac:	6812      	ldr	r2, [r2, #0]
 8012fae:	b112      	cbz	r2, 8012fb6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8012fb0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012fb4:	b9c0      	cbnz	r0, 8012fe8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8012fb6:	4a0f      	ldr	r2, [pc, #60]	; (8012ff4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012fb8:	6811      	ldr	r1, [r2, #0]
 8012fba:	2214      	movs	r2, #20
 8012fbc:	4353      	muls	r3, r2
 8012fbe:	58c8      	ldr	r0, [r1, r3]
 8012fc0:	4770      	bx	lr
 8012fc2:	4a0d      	ldr	r2, [pc, #52]	; (8012ff8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012fc4:	8812      	ldrh	r2, [r2, #0]
 8012fc6:	440a      	add	r2, r1
 8012fc8:	4293      	cmp	r3, r2
 8012fca:	da04      	bge.n	8012fd6 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8012fcc:	4a08      	ldr	r2, [pc, #32]	; (8012ff0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012fce:	6812      	ldr	r2, [r2, #0]
 8012fd0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012fd4:	4770      	bx	lr
 8012fd6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012fda:	4293      	cmp	r3, r2
 8012fdc:	d103      	bne.n	8012fe6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8012fde:	4b07      	ldr	r3, [pc, #28]	; (8012ffc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8012fe0:	681b      	ldr	r3, [r3, #0]
 8012fe2:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8012fe4:	4770      	bx	lr
 8012fe6:	2000      	movs	r0, #0
 8012fe8:	4770      	bx	lr
 8012fea:	bf00      	nop
 8012fec:	240089d4 	.word	0x240089d4
 8012ff0:	240089b8 	.word	0x240089b8
 8012ff4:	240089dc 	.word	0x240089dc
 8012ff8:	240089d8 	.word	0x240089d8
 8012ffc:	2400894c 	.word	0x2400894c

08013000 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8013000:	4b24      	ldr	r3, [pc, #144]	; (8013094 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8013002:	8802      	ldrh	r2, [r0, #0]
 8013004:	8818      	ldrh	r0, [r3, #0]
 8013006:	4282      	cmp	r2, r0
 8013008:	d221      	bcs.n	801304e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801300a:	4b23      	ldr	r3, [pc, #140]	; (8013098 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801300c:	6819      	ldr	r1, [r3, #0]
 801300e:	2314      	movs	r3, #20
 8013010:	fb03 1302 	mla	r3, r3, r2, r1
 8013014:	6858      	ldr	r0, [r3, #4]
 8013016:	2800      	cmp	r0, #0
 8013018:	d03a      	beq.n	8013090 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801301a:	4920      	ldr	r1, [pc, #128]	; (801309c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801301c:	6809      	ldr	r1, [r1, #0]
 801301e:	2900      	cmp	r1, #0
 8013020:	d036      	beq.n	8013090 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013022:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8013026:	2900      	cmp	r1, #0
 8013028:	d032      	beq.n	8013090 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801302a:	891a      	ldrh	r2, [r3, #8]
 801302c:	8958      	ldrh	r0, [r3, #10]
 801302e:	4350      	muls	r0, r2
 8013030:	7c5a      	ldrb	r2, [r3, #17]
 8013032:	7cdb      	ldrb	r3, [r3, #19]
 8013034:	0952      	lsrs	r2, r2, #5
 8013036:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801303a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801303e:	2b0b      	cmp	r3, #11
 8013040:	bf18      	it	ne
 8013042:	0040      	lslne	r0, r0, #1
 8013044:	3003      	adds	r0, #3
 8013046:	f020 0003 	bic.w	r0, r0, #3
 801304a:	4408      	add	r0, r1
 801304c:	4770      	bx	lr
 801304e:	4b14      	ldr	r3, [pc, #80]	; (80130a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013050:	881b      	ldrh	r3, [r3, #0]
 8013052:	4403      	add	r3, r0
 8013054:	429a      	cmp	r2, r3
 8013056:	da1a      	bge.n	801308e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013058:	4b12      	ldr	r3, [pc, #72]	; (80130a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801305a:	1a10      	subs	r0, r2, r0
 801305c:	210e      	movs	r1, #14
 801305e:	681b      	ldr	r3, [r3, #0]
 8013060:	fb01 3000 	mla	r0, r1, r0, r3
 8013064:	7b03      	ldrb	r3, [r0, #12]
 8013066:	f003 031f 	and.w	r3, r3, #31
 801306a:	2b0b      	cmp	r3, #11
 801306c:	d10b      	bne.n	8013086 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801306e:	8903      	ldrh	r3, [r0, #8]
 8013070:	8940      	ldrh	r0, [r0, #10]
 8013072:	4358      	muls	r0, r3
 8013074:	4b09      	ldr	r3, [pc, #36]	; (801309c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013076:	3003      	adds	r0, #3
 8013078:	6819      	ldr	r1, [r3, #0]
 801307a:	f020 0303 	bic.w	r3, r0, #3
 801307e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8013082:	4418      	add	r0, r3
 8013084:	4770      	bx	lr
 8013086:	2b0d      	cmp	r3, #13
 8013088:	d101      	bne.n	801308e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801308a:	300d      	adds	r0, #13
 801308c:	4770      	bx	lr
 801308e:	2000      	movs	r0, #0
 8013090:	4770      	bx	lr
 8013092:	bf00      	nop
 8013094:	240089d4 	.word	0x240089d4
 8013098:	240089dc 	.word	0x240089dc
 801309c:	240089b8 	.word	0x240089b8
 80130a0:	240089d8 	.word	0x240089d8
 80130a4:	240089bc 	.word	0x240089bc

080130a8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80130a8:	4a17      	ldr	r2, [pc, #92]	; (8013108 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80130aa:	b510      	push	{r4, lr}
 80130ac:	8803      	ldrh	r3, [r0, #0]
 80130ae:	8812      	ldrh	r2, [r2, #0]
 80130b0:	4293      	cmp	r3, r2
 80130b2:	d20c      	bcs.n	80130ce <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80130b4:	4a15      	ldr	r2, [pc, #84]	; (801310c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80130b6:	2114      	movs	r1, #20
 80130b8:	6812      	ldr	r2, [r2, #0]
 80130ba:	fb01 2303 	mla	r3, r1, r3, r2
 80130be:	7c58      	ldrb	r0, [r3, #17]
 80130c0:	0942      	lsrs	r2, r0, #5
 80130c2:	7cd8      	ldrb	r0, [r3, #19]
 80130c4:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80130c8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80130cc:	bd10      	pop	{r4, pc}
 80130ce:	4910      	ldr	r1, [pc, #64]	; (8013110 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80130d0:	8809      	ldrh	r1, [r1, #0]
 80130d2:	4411      	add	r1, r2
 80130d4:	428b      	cmp	r3, r1
 80130d6:	da09      	bge.n	80130ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80130d8:	1a9b      	subs	r3, r3, r2
 80130da:	4a0e      	ldr	r2, [pc, #56]	; (8013114 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80130dc:	210e      	movs	r1, #14
 80130de:	6812      	ldr	r2, [r2, #0]
 80130e0:	fb01 2303 	mla	r3, r1, r3, r2
 80130e4:	7b18      	ldrb	r0, [r3, #12]
 80130e6:	f000 001f 	and.w	r0, r0, #31
 80130ea:	e7ef      	b.n	80130cc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80130ec:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80130f0:	4293      	cmp	r3, r2
 80130f2:	d106      	bne.n	8013102 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80130f4:	f7f7 ff5a 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 80130f8:	6803      	ldr	r3, [r0, #0]
 80130fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80130fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013100:	4718      	bx	r3
 8013102:	2000      	movs	r0, #0
 8013104:	e7e2      	b.n	80130cc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8013106:	bf00      	nop
 8013108:	240089d4 	.word	0x240089d4
 801310c:	240089dc 	.word	0x240089dc
 8013110:	240089d8 	.word	0x240089d8
 8013114:	240089bc 	.word	0x240089bc

08013118 <_ZNK8touchgfx8LCD24bpp8bitDepthEv>:
 8013118:	2018      	movs	r0, #24
 801311a:	4770      	bx	lr

0801311c <_ZNK8touchgfx8LCD24bpp17framebufferFormatEv>:
 801311c:	2001      	movs	r0, #1
 801311e:	4770      	bx	lr

08013120 <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv>:
 8013120:	4b02      	ldr	r3, [pc, #8]	; (801312c <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0xc>)
 8013122:	8818      	ldrh	r0, [r3, #0]
 8013124:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013128:	b280      	uxth	r0, r0
 801312a:	4770      	bx	lr
 801312c:	24008946 	.word	0x24008946

08013130 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013130:	2bff      	cmp	r3, #255	; 0xff
 8013132:	d040      	beq.n	80131b6 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8013134:	2a2c      	cmp	r2, #44	; 0x2c
 8013136:	d02a      	beq.n	801318e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5e>
 8013138:	d80f      	bhi.n	801315a <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2a>
 801313a:	2a08      	cmp	r2, #8
 801313c:	d037      	beq.n	80131ae <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801313e:	d805      	bhi.n	801314c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1c>
 8013140:	2a04      	cmp	r2, #4
 8013142:	d032      	beq.n	80131aa <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a>
 8013144:	2a05      	cmp	r2, #5
 8013146:	d02e      	beq.n	80131a6 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8013148:	2000      	movs	r0, #0
 801314a:	4770      	bx	lr
 801314c:	2a0a      	cmp	r2, #10
 801314e:	d02e      	beq.n	80131ae <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013150:	d301      	bcc.n	8013156 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x26>
 8013152:	2a0b      	cmp	r2, #11
 8013154:	d1f8      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 8013156:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8013158:	4770      	bx	lr
 801315a:	2a30      	cmp	r2, #48	; 0x30
 801315c:	d029      	beq.n	80131b2 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801315e:	d808      	bhi.n	8013172 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x42>
 8013160:	2a2e      	cmp	r2, #46	; 0x2e
 8013162:	684b      	ldr	r3, [r1, #4]
 8013164:	d01a      	beq.n	801319c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 8013166:	d90b      	bls.n	8013180 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x50>
 8013168:	781b      	ldrb	r3, [r3, #0]
 801316a:	2b00      	cmp	r3, #0
 801316c:	d1ec      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 801316e:	6a00      	ldr	r0, [r0, #32]
 8013170:	4770      	bx	lr
 8013172:	2a32      	cmp	r2, #50	; 0x32
 8013174:	d01d      	beq.n	80131b2 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8013176:	d301      	bcc.n	801317c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4c>
 8013178:	2a33      	cmp	r2, #51	; 0x33
 801317a:	d1e5      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 801317c:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801317e:	4770      	bx	lr
 8013180:	781b      	ldrb	r3, [r3, #0]
 8013182:	2b00      	cmp	r3, #0
 8013184:	d0f3      	beq.n	801316e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3e>
 8013186:	2b01      	cmp	r3, #1
 8013188:	d1de      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 801318a:	6900      	ldr	r0, [r0, #16]
 801318c:	4770      	bx	lr
 801318e:	684b      	ldr	r3, [r1, #4]
 8013190:	781b      	ldrb	r3, [r3, #0]
 8013192:	b133      	cbz	r3, 80131a2 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8013194:	2b01      	cmp	r3, #1
 8013196:	d1d7      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 8013198:	6880      	ldr	r0, [r0, #8]
 801319a:	4770      	bx	lr
 801319c:	781b      	ldrb	r3, [r3, #0]
 801319e:	2b00      	cmp	r3, #0
 80131a0:	d1d2      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80131a2:	6980      	ldr	r0, [r0, #24]
 80131a4:	4770      	bx	lr
 80131a6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80131a8:	4770      	bx	lr
 80131aa:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80131ac:	4770      	bx	lr
 80131ae:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80131b0:	4770      	bx	lr
 80131b2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80131b4:	4770      	bx	lr
 80131b6:	2a2c      	cmp	r2, #44	; 0x2c
 80131b8:	d02a      	beq.n	8013210 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe0>
 80131ba:	d80f      	bhi.n	80131dc <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xac>
 80131bc:	2a08      	cmp	r2, #8
 80131be:	d035      	beq.n	801322c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfc>
 80131c0:	d805      	bhi.n	80131ce <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80131c2:	2a04      	cmp	r2, #4
 80131c4:	d030      	beq.n	8013228 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf8>
 80131c6:	2a05      	cmp	r2, #5
 80131c8:	d1be      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80131ca:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80131cc:	4770      	bx	lr
 80131ce:	2a0a      	cmp	r2, #10
 80131d0:	d02c      	beq.n	801322c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfc>
 80131d2:	d301      	bcc.n	80131d8 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 80131d4:	2a0b      	cmp	r2, #11
 80131d6:	d1b7      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80131d8:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80131da:	4770      	bx	lr
 80131dc:	2a30      	cmp	r2, #48	; 0x30
 80131de:	d027      	beq.n	8013230 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 80131e0:	d808      	bhi.n	80131f4 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc4>
 80131e2:	2a2e      	cmp	r2, #46	; 0x2e
 80131e4:	684b      	ldr	r3, [r1, #4]
 80131e6:	d01a      	beq.n	801321e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xee>
 80131e8:	d90b      	bls.n	8013202 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd2>
 80131ea:	781b      	ldrb	r3, [r3, #0]
 80131ec:	2b00      	cmp	r3, #0
 80131ee:	d1ab      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80131f0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80131f2:	4770      	bx	lr
 80131f4:	2a32      	cmp	r2, #50	; 0x32
 80131f6:	d01b      	beq.n	8013230 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 80131f8:	d301      	bcc.n	80131fe <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xce>
 80131fa:	2a33      	cmp	r2, #51	; 0x33
 80131fc:	d1a4      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80131fe:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8013200:	4770      	bx	lr
 8013202:	781b      	ldrb	r3, [r3, #0]
 8013204:	2b00      	cmp	r3, #0
 8013206:	d0f3      	beq.n	80131f0 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 8013208:	2b01      	cmp	r3, #1
 801320a:	d19d      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 801320c:	6940      	ldr	r0, [r0, #20]
 801320e:	4770      	bx	lr
 8013210:	684b      	ldr	r3, [r1, #4]
 8013212:	781b      	ldrb	r3, [r3, #0]
 8013214:	b133      	cbz	r3, 8013224 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf4>
 8013216:	2b01      	cmp	r3, #1
 8013218:	d196      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 801321a:	68c0      	ldr	r0, [r0, #12]
 801321c:	4770      	bx	lr
 801321e:	781b      	ldrb	r3, [r3, #0]
 8013220:	2b00      	cmp	r3, #0
 8013222:	d191      	bne.n	8013148 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 8013224:	69c0      	ldr	r0, [r0, #28]
 8013226:	4770      	bx	lr
 8013228:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801322a:	4770      	bx	lr
 801322c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801322e:	4770      	bx	lr
 8013230:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8013232:	4770      	bx	lr

08013234 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013238:	b085      	sub	sp, #20
 801323a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801323c:	9203      	str	r2, [sp, #12]
 801323e:	6870      	ldr	r0, [r6, #4]
 8013240:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8013244:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8013248:	9101      	str	r1, [sp, #4]
 801324a:	fa1f f885 	uxth.w	r8, r5
 801324e:	43ed      	mvns	r5, r5
 8013250:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013254:	b2ed      	uxtb	r5, r5
 8013256:	fb00 2404 	mla	r4, r0, r4, r2
 801325a:	6832      	ldr	r2, [r6, #0]
 801325c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8013260:	4414      	add	r4, r2
 8013262:	f8dc 2000 	ldr.w	r2, [ip]
 8013266:	9202      	str	r2, [sp, #8]
 8013268:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801326c:	f102 0e04 	add.w	lr, r2, #4
 8013270:	9a01      	ldr	r2, [sp, #4]
 8013272:	2a00      	cmp	r2, #0
 8013274:	dc03      	bgt.n	801327e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013276:	9a03      	ldr	r2, [sp, #12]
 8013278:	2a00      	cmp	r2, #0
 801327a:	f340 8116 	ble.w	80134aa <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801327e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013280:	f9bc a008 	ldrsh.w	sl, [ip, #8]
 8013284:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013288:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801328a:	f9bc 900c 	ldrsh.w	r9, [ip, #12]
 801328e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013292:	2b00      	cmp	r3, #0
 8013294:	dd0e      	ble.n	80132b4 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013296:	1406      	asrs	r6, r0, #16
 8013298:	d405      	bmi.n	80132a6 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801329a:	4556      	cmp	r6, sl
 801329c:	da03      	bge.n	80132a6 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801329e:	1416      	asrs	r6, r2, #16
 80132a0:	d401      	bmi.n	80132a6 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80132a2:	454e      	cmp	r6, r9
 80132a4:	db07      	blt.n	80132b6 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80132a6:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80132a8:	3b01      	subs	r3, #1
 80132aa:	3403      	adds	r4, #3
 80132ac:	4430      	add	r0, r6
 80132ae:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80132b0:	4432      	add	r2, r6
 80132b2:	e7ee      	b.n	8013292 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80132b4:	d063      	beq.n	801337e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80132b6:	1e5e      	subs	r6, r3, #1
 80132b8:	9f11      	ldr	r7, [sp, #68]	; 0x44
 80132ba:	fb07 0706 	mla	r7, r7, r6, r0
 80132be:	143f      	asrs	r7, r7, #16
 80132c0:	d454      	bmi.n	801336c <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80132c2:	4557      	cmp	r7, sl
 80132c4:	da52      	bge.n	801336c <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80132c6:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80132c8:	fb07 2606 	mla	r6, r7, r6, r2
 80132cc:	1436      	asrs	r6, r6, #16
 80132ce:	d44d      	bmi.n	801336c <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80132d0:	454e      	cmp	r6, r9
 80132d2:	da4b      	bge.n	801336c <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80132d4:	1ce6      	adds	r6, r4, #3
 80132d6:	4699      	mov	r9, r3
 80132d8:	f1b9 0f00 	cmp.w	r9, #0
 80132dc:	f106 0603 	add.w	r6, r6, #3
 80132e0:	dd48      	ble.n	8013374 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80132e2:	f9bc b008 	ldrsh.w	fp, [ip, #8]
 80132e6:	1417      	asrs	r7, r2, #16
 80132e8:	9902      	ldr	r1, [sp, #8]
 80132ea:	ea4f 4a20 	mov.w	sl, r0, asr #16
 80132ee:	f109 39ff 	add.w	r9, r9, #4294967295
 80132f2:	fb0b 1707 	mla	r7, fp, r7, r1
 80132f6:	f816 bc06 	ldrb.w	fp, [r6, #-6]
 80132fa:	9911      	ldr	r1, [sp, #68]	; 0x44
 80132fc:	f817 700a 	ldrb.w	r7, [r7, sl]
 8013300:	fb1b fb05 	smulbb	fp, fp, r5
 8013304:	4408      	add	r0, r1
 8013306:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013308:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801330c:	440a      	add	r2, r1
 801330e:	eb0e 0a07 	add.w	sl, lr, r7
 8013312:	f81e 7007 	ldrb.w	r7, [lr, r7]
 8013316:	fb07 b708 	mla	r7, r7, r8, fp
 801331a:	b2bf      	uxth	r7, r7
 801331c:	f107 0b01 	add.w	fp, r7, #1
 8013320:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8013324:	f816 bc05 	ldrb.w	fp, [r6, #-5]
 8013328:	fb1b fb05 	smulbb	fp, fp, r5
 801332c:	123f      	asrs	r7, r7, #8
 801332e:	f806 7c06 	strb.w	r7, [r6, #-6]
 8013332:	f89a 7001 	ldrb.w	r7, [sl, #1]
 8013336:	fb07 b708 	mla	r7, r7, r8, fp
 801333a:	b2bf      	uxth	r7, r7
 801333c:	f107 0b01 	add.w	fp, r7, #1
 8013340:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8013344:	123f      	asrs	r7, r7, #8
 8013346:	f806 7c05 	strb.w	r7, [r6, #-5]
 801334a:	f89a 7002 	ldrb.w	r7, [sl, #2]
 801334e:	f816 ac04 	ldrb.w	sl, [r6, #-4]
 8013352:	fb1a fa05 	smulbb	sl, sl, r5
 8013356:	fb07 a708 	mla	r7, r7, r8, sl
 801335a:	b2bf      	uxth	r7, r7
 801335c:	f107 0a01 	add.w	sl, r7, #1
 8013360:	eb0a 2717 	add.w	r7, sl, r7, lsr #8
 8013364:	123f      	asrs	r7, r7, #8
 8013366:	f806 7c04 	strb.w	r7, [r6, #-4]
 801336a:	e7b5      	b.n	80132d8 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801336c:	2700      	movs	r7, #0
 801336e:	1bde      	subs	r6, r3, r7
 8013370:	2e00      	cmp	r6, #0
 8013372:	dc42      	bgt.n	80133fa <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8013374:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013378:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801337c:	441c      	add	r4, r3
 801337e:	9b01      	ldr	r3, [sp, #4]
 8013380:	2b00      	cmp	r3, #0
 8013382:	f340 8092 	ble.w	80134aa <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8013386:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801338a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801338c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013390:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013394:	eef0 6a62 	vmov.f32	s13, s5
 8013398:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801339c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80133a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80133a4:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80133a8:	eef0 6a43 	vmov.f32	s13, s6
 80133ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80133b0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80133b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80133b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80133bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80133c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80133c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80133c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80133cc:	ee12 2a90 	vmov	r2, s5
 80133d0:	eef0 2a47 	vmov.f32	s5, s14
 80133d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80133d8:	ee13 2a10 	vmov	r2, s6
 80133dc:	9311      	str	r3, [sp, #68]	; 0x44
 80133de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80133e0:	eeb0 3a67 	vmov.f32	s6, s15
 80133e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80133e8:	9312      	str	r3, [sp, #72]	; 0x48
 80133ea:	9b01      	ldr	r3, [sp, #4]
 80133ec:	9a03      	ldr	r2, [sp, #12]
 80133ee:	3b01      	subs	r3, #1
 80133f0:	9301      	str	r3, [sp, #4]
 80133f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80133f4:	bf08      	it	eq
 80133f6:	4613      	moveq	r3, r2
 80133f8:	e73a      	b.n	8013270 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80133fa:	ea5f 4a20 	movs.w	sl, r0, asr #16
 80133fe:	d44e      	bmi.n	801349e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8013400:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013404:	4556      	cmp	r6, sl
 8013406:	dd4a      	ble.n	801349e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8013408:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801340c:	d447      	bmi.n	801349e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801340e:	f8dc 100c 	ldr.w	r1, [ip, #12]
 8013412:	4559      	cmp	r1, fp
 8013414:	dd43      	ble.n	801349e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8013416:	fa0f f986 	sxth.w	r9, r6
 801341a:	9902      	ldr	r1, [sp, #8]
 801341c:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8013420:	fb0b 1909 	mla	r9, fp, r9, r1
 8013424:	f814 b006 	ldrb.w	fp, [r4, r6]
 8013428:	f819 900a 	ldrb.w	r9, [r9, sl]
 801342c:	fb1b fb05 	smulbb	fp, fp, r5
 8013430:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8013434:	eb0e 0a09 	add.w	sl, lr, r9
 8013438:	f81e 9009 	ldrb.w	r9, [lr, r9]
 801343c:	fb09 b908 	mla	r9, r9, r8, fp
 8013440:	fa1f f989 	uxth.w	r9, r9
 8013444:	f109 0b01 	add.w	fp, r9, #1
 8013448:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 801344c:	ea4f 2929 	mov.w	r9, r9, asr #8
 8013450:	f804 9006 	strb.w	r9, [r4, r6]
 8013454:	4426      	add	r6, r4
 8013456:	f89a 9001 	ldrb.w	r9, [sl, #1]
 801345a:	f896 b001 	ldrb.w	fp, [r6, #1]
 801345e:	fb1b fb05 	smulbb	fp, fp, r5
 8013462:	fb09 b908 	mla	r9, r9, r8, fp
 8013466:	fa1f f989 	uxth.w	r9, r9
 801346a:	f109 0b01 	add.w	fp, r9, #1
 801346e:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8013472:	ea4f 2929 	mov.w	r9, r9, asr #8
 8013476:	f886 9001 	strb.w	r9, [r6, #1]
 801347a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801347e:	f896 a002 	ldrb.w	sl, [r6, #2]
 8013482:	fb1a fa05 	smulbb	sl, sl, r5
 8013486:	fb09 a908 	mla	r9, r9, r8, sl
 801348a:	fa1f f989 	uxth.w	r9, r9
 801348e:	f109 0a01 	add.w	sl, r9, #1
 8013492:	eb0a 2919 	add.w	r9, sl, r9, lsr #8
 8013496:	ea4f 2929 	mov.w	r9, r9, asr #8
 801349a:	f886 9002 	strb.w	r9, [r6, #2]
 801349e:	9911      	ldr	r1, [sp, #68]	; 0x44
 80134a0:	3701      	adds	r7, #1
 80134a2:	4408      	add	r0, r1
 80134a4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80134a6:	440a      	add	r2, r1
 80134a8:	e761      	b.n	801336e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80134aa:	b005      	add	sp, #20
 80134ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080134b0 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80134b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134b4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80134b6:	4693      	mov	fp, r2
 80134b8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80134ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80134be:	6868      	ldr	r0, [r5, #4]
 80134c0:	6877      	ldr	r7, [r6, #4]
 80134c2:	9100      	str	r1, [sp, #0]
 80134c4:	3704      	adds	r7, #4
 80134c6:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 80134ca:	e9dd 8e0f 	ldrd	r8, lr, [sp, #60]	; 0x3c
 80134ce:	fb00 2404 	mla	r4, r0, r4, r2
 80134d2:	682a      	ldr	r2, [r5, #0]
 80134d4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80134d8:	4414      	add	r4, r2
 80134da:	6832      	ldr	r2, [r6, #0]
 80134dc:	9201      	str	r2, [sp, #4]
 80134de:	9a00      	ldr	r2, [sp, #0]
 80134e0:	2a00      	cmp	r2, #0
 80134e2:	dc03      	bgt.n	80134ec <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80134e4:	f1bb 0f00 	cmp.w	fp, #0
 80134e8:	f340 80bc 	ble.w	8013664 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80134ec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80134ee:	f9b6 a008 	ldrsh.w	sl, [r6, #8]
 80134f2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80134f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80134f8:	f9b6 900c 	ldrsh.w	r9, [r6, #12]
 80134fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013500:	2b00      	cmp	r3, #0
 8013502:	dd0c      	ble.n	801351e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013504:	1405      	asrs	r5, r0, #16
 8013506:	d405      	bmi.n	8013514 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013508:	4555      	cmp	r5, sl
 801350a:	da03      	bge.n	8013514 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801350c:	1415      	asrs	r5, r2, #16
 801350e:	d401      	bmi.n	8013514 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013510:	454d      	cmp	r5, r9
 8013512:	db05      	blt.n	8013520 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013514:	4440      	add	r0, r8
 8013516:	4472      	add	r2, lr
 8013518:	3b01      	subs	r3, #1
 801351a:	3403      	adds	r4, #3
 801351c:	e7f0      	b.n	8013500 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801351e:	d03f      	beq.n	80135a0 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf0>
 8013520:	1e5d      	subs	r5, r3, #1
 8013522:	fb08 0c05 	mla	ip, r8, r5, r0
 8013526:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 801352a:	d42e      	bmi.n	801358a <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 801352c:	45d4      	cmp	ip, sl
 801352e:	da2c      	bge.n	801358a <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 8013530:	fb0e 2505 	mla	r5, lr, r5, r2
 8013534:	142d      	asrs	r5, r5, #16
 8013536:	d428      	bmi.n	801358a <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 8013538:	454d      	cmp	r5, r9
 801353a:	da26      	bge.n	801358a <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 801353c:	1ce5      	adds	r5, r4, #3
 801353e:	469c      	mov	ip, r3
 8013540:	f1bc 0f00 	cmp.w	ip, #0
 8013544:	f105 0503 	add.w	r5, r5, #3
 8013548:	dd25      	ble.n	8013596 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xe6>
 801354a:	f9b6 1008 	ldrsh.w	r1, [r6, #8]
 801354e:	ea4f 4922 	mov.w	r9, r2, asr #16
 8013552:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013556:	4472      	add	r2, lr
 8013558:	468a      	mov	sl, r1
 801355a:	9901      	ldr	r1, [sp, #4]
 801355c:	fb0a 1909 	mla	r9, sl, r9, r1
 8013560:	1401      	asrs	r1, r0, #16
 8013562:	4440      	add	r0, r8
 8013564:	f819 9001 	ldrb.w	r9, [r9, r1]
 8013568:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801356c:	eb07 0a09 	add.w	sl, r7, r9
 8013570:	f817 9009 	ldrb.w	r9, [r7, r9]
 8013574:	f805 9c06 	strb.w	r9, [r5, #-6]
 8013578:	f89a 9001 	ldrb.w	r9, [sl, #1]
 801357c:	f805 9c05 	strb.w	r9, [r5, #-5]
 8013580:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8013584:	f805 9c04 	strb.w	r9, [r5, #-4]
 8013588:	e7da      	b.n	8013540 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801358a:	2500      	movs	r5, #0
 801358c:	eba3 0c05 	sub.w	ip, r3, r5
 8013590:	f1bc 0f00 	cmp.w	ip, #0
 8013594:	dc3b      	bgt.n	801360e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013596:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801359a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801359e:	441c      	add	r4, r3
 80135a0:	9b00      	ldr	r3, [sp, #0]
 80135a2:	2b00      	cmp	r3, #0
 80135a4:	dd5e      	ble.n	8013664 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80135a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80135aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80135ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80135b0:	eeb0 6a62 	vmov.f32	s12, s5
 80135b4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80135b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80135bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80135c0:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 80135c4:	eeb0 6a43 	vmov.f32	s12, s6
 80135c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80135cc:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 80135d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80135d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80135d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80135dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80135e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80135e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80135e8:	ee12 2a90 	vmov	r2, s5
 80135ec:	eef0 2a47 	vmov.f32	s5, s14
 80135f0:	fb92 f8f3 	sdiv	r8, r2, r3
 80135f4:	ee13 2a10 	vmov	r2, s6
 80135f8:	eeb0 3a67 	vmov.f32	s6, s15
 80135fc:	fb92 fef3 	sdiv	lr, r2, r3
 8013600:	9b00      	ldr	r3, [sp, #0]
 8013602:	3b01      	subs	r3, #1
 8013604:	9300      	str	r3, [sp, #0]
 8013606:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013608:	bf08      	it	eq
 801360a:	465b      	moveq	r3, fp
 801360c:	e767      	b.n	80134de <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801360e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013612:	d423      	bmi.n	801365c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8013614:	f8d6 c008 	ldr.w	ip, [r6, #8]
 8013618:	45cc      	cmp	ip, r9
 801361a:	dd1f      	ble.n	801365c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801361c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013620:	d41c      	bmi.n	801365c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8013622:	68f1      	ldr	r1, [r6, #12]
 8013624:	4551      	cmp	r1, sl
 8013626:	dd19      	ble.n	801365c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8013628:	fa0f fc8c 	sxth.w	ip, ip
 801362c:	9901      	ldr	r1, [sp, #4]
 801362e:	fb0a 1c0c 	mla	ip, sl, ip, r1
 8013632:	f81c c009 	ldrb.w	ip, [ip, r9]
 8013636:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801363a:	f817 a00c 	ldrb.w	sl, [r7, ip]
 801363e:	eb07 090c 	add.w	r9, r7, ip
 8013642:	eb05 0c45 	add.w	ip, r5, r5, lsl #1
 8013646:	f804 a00c 	strb.w	sl, [r4, ip]
 801364a:	44a4      	add	ip, r4
 801364c:	f899 a001 	ldrb.w	sl, [r9, #1]
 8013650:	f88c a001 	strb.w	sl, [ip, #1]
 8013654:	f899 9002 	ldrb.w	r9, [r9, #2]
 8013658:	f88c 9002 	strb.w	r9, [ip, #2]
 801365c:	4440      	add	r0, r8
 801365e:	4472      	add	r2, lr
 8013660:	3501      	adds	r5, #1
 8013662:	e793      	b.n	801358c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xdc>
 8013664:	b003      	add	sp, #12
 8013666:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801366a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801366a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801366e:	b085      	sub	sp, #20
 8013670:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013674:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013676:	9202      	str	r2, [sp, #8]
 8013678:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801367c:	6860      	ldr	r0, [r4, #4]
 801367e:	9203      	str	r2, [sp, #12]
 8013680:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8013684:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 8013688:	e9dd 2514 	ldrd	r2, r5, [sp, #80]	; 0x50
 801368c:	fb00 2505 	mla	r5, r0, r5, r2
 8013690:	6822      	ldr	r2, [r4, #0]
 8013692:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013696:	4415      	add	r5, r2
 8013698:	f8dc 2000 	ldr.w	r2, [ip]
 801369c:	9200      	str	r2, [sp, #0]
 801369e:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80136a2:	3204      	adds	r2, #4
 80136a4:	9201      	str	r2, [sp, #4]
 80136a6:	2900      	cmp	r1, #0
 80136a8:	dc03      	bgt.n	80136b2 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80136aa:	9a02      	ldr	r2, [sp, #8]
 80136ac:	2a00      	cmp	r2, #0
 80136ae:	f340 8127 	ble.w	8013900 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80136b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80136b4:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 80136b8:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80136bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80136be:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80136c2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80136c6:	2b00      	cmp	r3, #0
 80136c8:	dd0d      	ble.n	80136e6 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80136ca:	1422      	asrs	r2, r4, #16
 80136cc:	d405      	bmi.n	80136da <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80136ce:	4542      	cmp	r2, r8
 80136d0:	da03      	bge.n	80136da <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80136d2:	1402      	asrs	r2, r0, #16
 80136d4:	d401      	bmi.n	80136da <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80136d6:	42ba      	cmp	r2, r7
 80136d8:	db06      	blt.n	80136e8 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80136da:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80136dc:	4474      	add	r4, lr
 80136de:	3b01      	subs	r3, #1
 80136e0:	3503      	adds	r5, #3
 80136e2:	4410      	add	r0, r2
 80136e4:	e7ef      	b.n	80136c6 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80136e6:	d075      	beq.n	80137d4 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80136e8:	1e5a      	subs	r2, r3, #1
 80136ea:	fb0e 4602 	mla	r6, lr, r2, r4
 80136ee:	1436      	asrs	r6, r6, #16
 80136f0:	d465      	bmi.n	80137be <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80136f2:	4546      	cmp	r6, r8
 80136f4:	da63      	bge.n	80137be <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80136f6:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80136f8:	fb06 0202 	mla	r2, r6, r2, r0
 80136fc:	1412      	asrs	r2, r2, #16
 80136fe:	d45e      	bmi.n	80137be <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013700:	42ba      	cmp	r2, r7
 8013702:	da5c      	bge.n	80137be <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013704:	1cef      	adds	r7, r5, #3
 8013706:	4699      	mov	r9, r3
 8013708:	f1b9 0f00 	cmp.w	r9, #0
 801370c:	dd5d      	ble.n	80137ca <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 801370e:	1402      	asrs	r2, r0, #16
 8013710:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 8013714:	1426      	asrs	r6, r4, #16
 8013716:	4692      	mov	sl, r2
 8013718:	9a00      	ldr	r2, [sp, #0]
 801371a:	fb08 220a 	mla	r2, r8, sl, r2
 801371e:	5d92      	ldrb	r2, [r2, r6]
 8013720:	9e01      	ldr	r6, [sp, #4]
 8013722:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 8013726:	ea5f 6816 	movs.w	r8, r6, lsr #24
 801372a:	d041      	beq.n	80137b0 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801372c:	9a03      	ldr	r2, [sp, #12]
 801372e:	fa5f fb86 	uxtb.w	fp, r6
 8013732:	fb02 f808 	mul.w	r8, r2, r8
 8013736:	f108 0201 	add.w	r2, r8, #1
 801373a:	eb02 2228 	add.w	r2, r2, r8, asr #8
 801373e:	f817 8c03 	ldrb.w	r8, [r7, #-3]
 8013742:	1212      	asrs	r2, r2, #8
 8013744:	fa1f fa82 	uxth.w	sl, r2
 8013748:	43d2      	mvns	r2, r2
 801374a:	fb1b fb0a 	smulbb	fp, fp, sl
 801374e:	b2d2      	uxtb	r2, r2
 8013750:	fb08 b802 	mla	r8, r8, r2, fp
 8013754:	fa1f f888 	uxth.w	r8, r8
 8013758:	f108 0b01 	add.w	fp, r8, #1
 801375c:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8013760:	f3c6 2b07 	ubfx	fp, r6, #8, #8
 8013764:	f3c6 4607 	ubfx	r6, r6, #16, #8
 8013768:	fb1b fb0a 	smulbb	fp, fp, sl
 801376c:	ea4f 2828 	mov.w	r8, r8, asr #8
 8013770:	fb16 fa0a 	smulbb	sl, r6, sl
 8013774:	f817 6c01 	ldrb.w	r6, [r7, #-1]
 8013778:	f807 8c03 	strb.w	r8, [r7, #-3]
 801377c:	f817 8c02 	ldrb.w	r8, [r7, #-2]
 8013780:	fb06 aa02 	mla	sl, r6, r2, sl
 8013784:	fb08 b802 	mla	r8, r8, r2, fp
 8013788:	fa1f fa8a 	uxth.w	sl, sl
 801378c:	fa1f f888 	uxth.w	r8, r8
 8013790:	f10a 0601 	add.w	r6, sl, #1
 8013794:	f108 0b01 	add.w	fp, r8, #1
 8013798:	eb06 2a1a 	add.w	sl, r6, sl, lsr #8
 801379c:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80137a0:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80137a4:	ea4f 2828 	mov.w	r8, r8, asr #8
 80137a8:	f807 ac01 	strb.w	sl, [r7, #-1]
 80137ac:	f807 8c02 	strb.w	r8, [r7, #-2]
 80137b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80137b2:	4474      	add	r4, lr
 80137b4:	3703      	adds	r7, #3
 80137b6:	f109 39ff 	add.w	r9, r9, #4294967295
 80137ba:	4410      	add	r0, r2
 80137bc:	e7a4      	b.n	8013708 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80137be:	f04f 0800 	mov.w	r8, #0
 80137c2:	eba3 0208 	sub.w	r2, r3, r8
 80137c6:	2a00      	cmp	r2, #0
 80137c8:	dc3b      	bgt.n	8013842 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80137ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80137ce:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80137d2:	441d      	add	r5, r3
 80137d4:	2900      	cmp	r1, #0
 80137d6:	f340 8093 	ble.w	8013900 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80137da:	ee30 0a04 	vadd.f32	s0, s0, s8
 80137de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80137e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80137e4:	3901      	subs	r1, #1
 80137e6:	eeb0 6a62 	vmov.f32	s12, s5
 80137ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80137ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80137f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80137f6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80137fa:	eeb0 6a43 	vmov.f32	s12, s6
 80137fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013802:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013806:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801380a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801380e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013812:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013816:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801381a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801381e:	ee12 2a90 	vmov	r2, s5
 8013822:	eef0 2a47 	vmov.f32	s5, s14
 8013826:	fb92 fef3 	sdiv	lr, r2, r3
 801382a:	ee13 2a10 	vmov	r2, s6
 801382e:	eeb0 3a67 	vmov.f32	s6, s15
 8013832:	fb92 f3f3 	sdiv	r3, r2, r3
 8013836:	9a02      	ldr	r2, [sp, #8]
 8013838:	9312      	str	r3, [sp, #72]	; 0x48
 801383a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801383c:	bf08      	it	eq
 801383e:	4613      	moveq	r3, r2
 8013840:	e731      	b.n	80136a6 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013842:	1427      	asrs	r7, r4, #16
 8013844:	d456      	bmi.n	80138f4 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 8013846:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801384a:	42be      	cmp	r6, r7
 801384c:	dd52      	ble.n	80138f4 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801384e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013852:	d44f      	bmi.n	80138f4 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 8013854:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8013858:	454a      	cmp	r2, r9
 801385a:	dd4b      	ble.n	80138f4 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801385c:	9a00      	ldr	r2, [sp, #0]
 801385e:	b236      	sxth	r6, r6
 8013860:	fb09 2606 	mla	r6, r9, r6, r2
 8013864:	5df2      	ldrb	r2, [r6, r7]
 8013866:	9e01      	ldr	r6, [sp, #4]
 8013868:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 801386c:	0e3a      	lsrs	r2, r7, #24
 801386e:	d041      	beq.n	80138f4 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 8013870:	9e03      	ldr	r6, [sp, #12]
 8013872:	fa5f fb87 	uxtb.w	fp, r7
 8013876:	4372      	muls	r2, r6
 8013878:	1c56      	adds	r6, r2, #1
 801387a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801387e:	eb08 0648 	add.w	r6, r8, r8, lsl #1
 8013882:	1212      	asrs	r2, r2, #8
 8013884:	f815 9006 	ldrb.w	r9, [r5, r6]
 8013888:	fa1f fa82 	uxth.w	sl, r2
 801388c:	43d2      	mvns	r2, r2
 801388e:	fb1b fb0a 	smulbb	fp, fp, sl
 8013892:	b2d2      	uxtb	r2, r2
 8013894:	fb09 b902 	mla	r9, r9, r2, fp
 8013898:	fa1f f989 	uxth.w	r9, r9
 801389c:	f109 0b01 	add.w	fp, r9, #1
 80138a0:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80138a4:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 80138a8:	f3c7 4707 	ubfx	r7, r7, #16, #8
 80138ac:	fb1b fb0a 	smulbb	fp, fp, sl
 80138b0:	ea4f 2929 	mov.w	r9, r9, asr #8
 80138b4:	fb17 fa0a 	smulbb	sl, r7, sl
 80138b8:	f805 9006 	strb.w	r9, [r5, r6]
 80138bc:	442e      	add	r6, r5
 80138be:	78b7      	ldrb	r7, [r6, #2]
 80138c0:	f896 9001 	ldrb.w	r9, [r6, #1]
 80138c4:	fb07 aa02 	mla	sl, r7, r2, sl
 80138c8:	fb09 b902 	mla	r9, r9, r2, fp
 80138cc:	fa1f fa8a 	uxth.w	sl, sl
 80138d0:	fa1f f989 	uxth.w	r9, r9
 80138d4:	f10a 0701 	add.w	r7, sl, #1
 80138d8:	f109 0b01 	add.w	fp, r9, #1
 80138dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80138e0:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80138e4:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80138e8:	ea4f 2929 	mov.w	r9, r9, asr #8
 80138ec:	f886 a002 	strb.w	sl, [r6, #2]
 80138f0:	f886 9001 	strb.w	r9, [r6, #1]
 80138f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80138f6:	4474      	add	r4, lr
 80138f8:	f108 0801 	add.w	r8, r8, #1
 80138fc:	4410      	add	r0, r2
 80138fe:	e760      	b.n	80137c2 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x158>
 8013900:	b005      	add	sp, #20
 8013902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013906 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013906:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801390a:	b085      	sub	sp, #20
 801390c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013910:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013912:	9203      	str	r2, [sp, #12]
 8013914:	6868      	ldr	r0, [r5, #4]
 8013916:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 801391a:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 801391e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013922:	fb00 2404 	mla	r4, r0, r4, r2
 8013926:	682a      	ldr	r2, [r5, #0]
 8013928:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801392c:	4414      	add	r4, r2
 801392e:	f8dc 2000 	ldr.w	r2, [ip]
 8013932:	9201      	str	r2, [sp, #4]
 8013934:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013938:	3204      	adds	r2, #4
 801393a:	9202      	str	r2, [sp, #8]
 801393c:	2900      	cmp	r1, #0
 801393e:	dc03      	bgt.n	8013948 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8013940:	9a03      	ldr	r2, [sp, #12]
 8013942:	2a00      	cmp	r2, #0
 8013944:	f340 8137 	ble.w	8013bb6 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8013948:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801394a:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 801394e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013952:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013954:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013958:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801395c:	2b00      	cmp	r3, #0
 801395e:	dd0d      	ble.n	801397c <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013960:	1405      	asrs	r5, r0, #16
 8013962:	d405      	bmi.n	8013970 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8013964:	4545      	cmp	r5, r8
 8013966:	da03      	bge.n	8013970 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8013968:	1415      	asrs	r5, r2, #16
 801396a:	d401      	bmi.n	8013970 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801396c:	42bd      	cmp	r5, r7
 801396e:	db06      	blt.n	801397e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013970:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013972:	4470      	add	r0, lr
 8013974:	3b01      	subs	r3, #1
 8013976:	3403      	adds	r4, #3
 8013978:	442a      	add	r2, r5
 801397a:	e7ef      	b.n	801395c <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801397c:	d070      	beq.n	8013a60 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 801397e:	1e5d      	subs	r5, r3, #1
 8013980:	fb0e 0605 	mla	r6, lr, r5, r0
 8013984:	1436      	asrs	r6, r6, #16
 8013986:	d462      	bmi.n	8013a4e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8013988:	4546      	cmp	r6, r8
 801398a:	da60      	bge.n	8013a4e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801398c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801398e:	fb06 2505 	mla	r5, r6, r5, r2
 8013992:	142d      	asrs	r5, r5, #16
 8013994:	d45b      	bmi.n	8013a4e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8013996:	42bd      	cmp	r5, r7
 8013998:	da59      	bge.n	8013a4e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801399a:	1ce5      	adds	r5, r4, #3
 801399c:	469a      	mov	sl, r3
 801399e:	f1ba 0f00 	cmp.w	sl, #0
 80139a2:	dd58      	ble.n	8013a56 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 80139a4:	1416      	asrs	r6, r2, #16
 80139a6:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 80139aa:	1407      	asrs	r7, r0, #16
 80139ac:	46b1      	mov	r9, r6
 80139ae:	9e01      	ldr	r6, [sp, #4]
 80139b0:	fb08 6609 	mla	r6, r8, r9, r6
 80139b4:	5df6      	ldrb	r6, [r6, r7]
 80139b6:	9f02      	ldr	r7, [sp, #8]
 80139b8:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
 80139bc:	0e37      	lsrs	r7, r6, #24
 80139be:	2fff      	cmp	r7, #255	; 0xff
 80139c0:	f000 80f0 	beq.w	8013ba4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 80139c4:	fa5f f887 	uxtb.w	r8, r7
 80139c8:	b3d7      	cbz	r7, 8013a40 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80139ca:	fa1f f788 	uxth.w	r7, r8
 80139ce:	ea6f 0808 	mvn.w	r8, r8
 80139d2:	fa5f fb86 	uxtb.w	fp, r6
 80139d6:	f815 9c03 	ldrb.w	r9, [r5, #-3]
 80139da:	fa5f f888 	uxtb.w	r8, r8
 80139de:	fb1b fb07 	smulbb	fp, fp, r7
 80139e2:	fb09 b908 	mla	r9, r9, r8, fp
 80139e6:	fa1f f989 	uxth.w	r9, r9
 80139ea:	f109 0b01 	add.w	fp, r9, #1
 80139ee:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80139f2:	f815 bc02 	ldrb.w	fp, [r5, #-2]
 80139f6:	fb1b fb08 	smulbb	fp, fp, r8
 80139fa:	ea4f 2929 	mov.w	r9, r9, asr #8
 80139fe:	f805 9c03 	strb.w	r9, [r5, #-3]
 8013a02:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8013a06:	f3c6 4607 	ubfx	r6, r6, #16, #8
 8013a0a:	fb09 b907 	mla	r9, r9, r7, fp
 8013a0e:	fa1f f989 	uxth.w	r9, r9
 8013a12:	f109 0b01 	add.w	fp, r9, #1
 8013a16:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8013a1a:	ea4f 2929 	mov.w	r9, r9, asr #8
 8013a1e:	f805 9c02 	strb.w	r9, [r5, #-2]
 8013a22:	f815 9c01 	ldrb.w	r9, [r5, #-1]
 8013a26:	fb19 f808 	smulbb	r8, r9, r8
 8013a2a:	fb06 8607 	mla	r6, r6, r7, r8
 8013a2e:	b2b6      	uxth	r6, r6
 8013a30:	f106 0801 	add.w	r8, r6, #1
 8013a34:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8013a38:	ea4f 2828 	mov.w	r8, r8, asr #8
 8013a3c:	f805 8c01 	strb.w	r8, [r5, #-1]
 8013a40:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8013a42:	4470      	add	r0, lr
 8013a44:	3503      	adds	r5, #3
 8013a46:	f10a 3aff 	add.w	sl, sl, #4294967295
 8013a4a:	4432      	add	r2, r6
 8013a4c:	e7a7      	b.n	801399e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013a4e:	2600      	movs	r6, #0
 8013a50:	1b9d      	subs	r5, r3, r6
 8013a52:	2d00      	cmp	r5, #0
 8013a54:	dc3b      	bgt.n	8013ace <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013a56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013a5a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8013a5e:	441c      	add	r4, r3
 8013a60:	2900      	cmp	r1, #0
 8013a62:	f340 80a8 	ble.w	8013bb6 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8013a66:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013a6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013a6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013a70:	3901      	subs	r1, #1
 8013a72:	eeb0 6a62 	vmov.f32	s12, s5
 8013a76:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013a7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013a7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013a82:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013a86:	eeb0 6a43 	vmov.f32	s12, s6
 8013a8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013a8e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013a92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013a96:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013a9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013a9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013aa2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013aa6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013aaa:	ee12 2a90 	vmov	r2, s5
 8013aae:	eef0 2a47 	vmov.f32	s5, s14
 8013ab2:	fb92 fef3 	sdiv	lr, r2, r3
 8013ab6:	ee13 2a10 	vmov	r2, s6
 8013aba:	eeb0 3a67 	vmov.f32	s6, s15
 8013abe:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ac2:	9a03      	ldr	r2, [sp, #12]
 8013ac4:	9312      	str	r3, [sp, #72]	; 0x48
 8013ac6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ac8:	bf08      	it	eq
 8013aca:	4613      	moveq	r3, r2
 8013acc:	e736      	b.n	801393c <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8013ace:	ea5f 4820 	movs.w	r8, r0, asr #16
 8013ad2:	d457      	bmi.n	8013b84 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8013ad4:	f8dc 7008 	ldr.w	r7, [ip, #8]
 8013ad8:	4547      	cmp	r7, r8
 8013ada:	dd53      	ble.n	8013b84 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8013adc:	ea5f 4922 	movs.w	r9, r2, asr #16
 8013ae0:	d450      	bmi.n	8013b84 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8013ae2:	f8dc 500c 	ldr.w	r5, [ip, #12]
 8013ae6:	454d      	cmp	r5, r9
 8013ae8:	dd4c      	ble.n	8013b84 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8013aea:	9d01      	ldr	r5, [sp, #4]
 8013aec:	b23f      	sxth	r7, r7
 8013aee:	fb09 5707 	mla	r7, r9, r7, r5
 8013af2:	f817 5008 	ldrb.w	r5, [r7, r8]
 8013af6:	9f02      	ldr	r7, [sp, #8]
 8013af8:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8013afc:	0e2f      	lsrs	r7, r5, #24
 8013afe:	2fff      	cmp	r7, #255	; 0xff
 8013b00:	d045      	beq.n	8013b8e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8013b02:	fa5f f987 	uxtb.w	r9, r7
 8013b06:	b3ef      	cbz	r7, 8013b84 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8013b08:	fa1f f889 	uxth.w	r8, r9
 8013b0c:	ea6f 0909 	mvn.w	r9, r9
 8013b10:	eb06 0746 	add.w	r7, r6, r6, lsl #1
 8013b14:	fa5f fb85 	uxtb.w	fp, r5
 8013b18:	f814 a007 	ldrb.w	sl, [r4, r7]
 8013b1c:	fa5f f989 	uxtb.w	r9, r9
 8013b20:	fb1b fb08 	smulbb	fp, fp, r8
 8013b24:	fb0a ba09 	mla	sl, sl, r9, fp
 8013b28:	fa1f fa8a 	uxth.w	sl, sl
 8013b2c:	f10a 0b01 	add.w	fp, sl, #1
 8013b30:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 8013b34:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8013b38:	f804 a007 	strb.w	sl, [r4, r7]
 8013b3c:	4427      	add	r7, r4
 8013b3e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013b42:	f3c5 4507 	ubfx	r5, r5, #16, #8
 8013b46:	f897 b001 	ldrb.w	fp, [r7, #1]
 8013b4a:	fb1b fb09 	smulbb	fp, fp, r9
 8013b4e:	fb0a ba08 	mla	sl, sl, r8, fp
 8013b52:	fa1f fa8a 	uxth.w	sl, sl
 8013b56:	f10a 0b01 	add.w	fp, sl, #1
 8013b5a:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 8013b5e:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8013b62:	f887 a001 	strb.w	sl, [r7, #1]
 8013b66:	f897 a002 	ldrb.w	sl, [r7, #2]
 8013b6a:	fb1a f909 	smulbb	r9, sl, r9
 8013b6e:	fb05 9508 	mla	r5, r5, r8, r9
 8013b72:	b2ad      	uxth	r5, r5
 8013b74:	f105 0901 	add.w	r9, r5, #1
 8013b78:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 8013b7c:	ea4f 2929 	mov.w	r9, r9, asr #8
 8013b80:	f887 9002 	strb.w	r9, [r7, #2]
 8013b84:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013b86:	4470      	add	r0, lr
 8013b88:	3601      	adds	r6, #1
 8013b8a:	442a      	add	r2, r5
 8013b8c:	e760      	b.n	8013a50 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8013b8e:	eb06 0746 	add.w	r7, r6, r6, lsl #1
 8013b92:	ea4f 2815 	mov.w	r8, r5, lsr #8
 8013b96:	55e5      	strb	r5, [r4, r7]
 8013b98:	4427      	add	r7, r4
 8013b9a:	0c2d      	lsrs	r5, r5, #16
 8013b9c:	f887 8001 	strb.w	r8, [r7, #1]
 8013ba0:	70bd      	strb	r5, [r7, #2]
 8013ba2:	e7ef      	b.n	8013b84 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8013ba4:	0a37      	lsrs	r7, r6, #8
 8013ba6:	f805 6c03 	strb.w	r6, [r5, #-3]
 8013baa:	0c36      	lsrs	r6, r6, #16
 8013bac:	f805 7c02 	strb.w	r7, [r5, #-2]
 8013bb0:	f805 6c01 	strb.w	r6, [r5, #-1]
 8013bb4:	e744      	b.n	8013a40 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8013bb6:	b005      	add	sp, #20
 8013bb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013bbc <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013bbc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013bc0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013bc2:	9201      	str	r2, [sp, #4]
 8013bc4:	6870      	ldr	r0, [r6, #4]
 8013bc6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8013bca:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 8013bce:	fa1f fe85 	uxth.w	lr, r5
 8013bd2:	43ed      	mvns	r5, r5
 8013bd4:	f8dc 8000 	ldr.w	r8, [ip]
 8013bd8:	b2ed      	uxtb	r5, r5
 8013bda:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 8013bde:	fb00 2404 	mla	r4, r0, r4, r2
 8013be2:	6832      	ldr	r2, [r6, #0]
 8013be4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8013be8:	4414      	add	r4, r2
 8013bea:	2900      	cmp	r1, #0
 8013bec:	dc03      	bgt.n	8013bf6 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013bee:	9a01      	ldr	r2, [sp, #4]
 8013bf0:	2a00      	cmp	r2, #0
 8013bf2:	f340 810d 	ble.w	8013e10 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8013bf6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013bf8:	f9bc a008 	ldrsh.w	sl, [ip, #8]
 8013bfc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013c00:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013c02:	f9bc 900c 	ldrsh.w	r9, [ip, #12]
 8013c06:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013c0a:	2b00      	cmp	r3, #0
 8013c0c:	dd0e      	ble.n	8013c2c <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013c0e:	1406      	asrs	r6, r0, #16
 8013c10:	d405      	bmi.n	8013c1e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8013c12:	4556      	cmp	r6, sl
 8013c14:	da03      	bge.n	8013c1e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8013c16:	1416      	asrs	r6, r2, #16
 8013c18:	d401      	bmi.n	8013c1e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8013c1a:	454e      	cmp	r6, r9
 8013c1c:	db07      	blt.n	8013c2e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013c1e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8013c20:	3b01      	subs	r3, #1
 8013c22:	3403      	adds	r4, #3
 8013c24:	4430      	add	r0, r6
 8013c26:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8013c28:	4432      	add	r2, r6
 8013c2a:	e7ee      	b.n	8013c0a <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8013c2c:	d060      	beq.n	8013cf0 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8013c2e:	1e5e      	subs	r6, r3, #1
 8013c30:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013c32:	fb07 0706 	mla	r7, r7, r6, r0
 8013c36:	143f      	asrs	r7, r7, #16
 8013c38:	d451      	bmi.n	8013cde <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8013c3a:	4557      	cmp	r7, sl
 8013c3c:	da4f      	bge.n	8013cde <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8013c3e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8013c40:	fb07 2606 	mla	r6, r7, r6, r2
 8013c44:	1436      	asrs	r6, r6, #16
 8013c46:	d44a      	bmi.n	8013cde <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8013c48:	454e      	cmp	r6, r9
 8013c4a:	da48      	bge.n	8013cde <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8013c4c:	1ce6      	adds	r6, r4, #3
 8013c4e:	4699      	mov	r9, r3
 8013c50:	f1b9 0f00 	cmp.w	r9, #0
 8013c54:	f106 0603 	add.w	r6, r6, #3
 8013c58:	dd45      	ble.n	8013ce6 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8013c5a:	f9bc b008 	ldrsh.w	fp, [ip, #8]
 8013c5e:	ea4f 4a20 	mov.w	sl, r0, asr #16
 8013c62:	1417      	asrs	r7, r2, #16
 8013c64:	f109 39ff 	add.w	r9, r9, #4294967295
 8013c68:	fb0b a707 	mla	r7, fp, r7, sl
 8013c6c:	f816 bc06 	ldrb.w	fp, [r6, #-6]
 8013c70:	fb1b fb05 	smulbb	fp, fp, r5
 8013c74:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8013c78:	eb08 0a07 	add.w	sl, r8, r7
 8013c7c:	f818 7007 	ldrb.w	r7, [r8, r7]
 8013c80:	fb07 b70e 	mla	r7, r7, lr, fp
 8013c84:	b2bf      	uxth	r7, r7
 8013c86:	f107 0b01 	add.w	fp, r7, #1
 8013c8a:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8013c8e:	f816 bc05 	ldrb.w	fp, [r6, #-5]
 8013c92:	fb1b fb05 	smulbb	fp, fp, r5
 8013c96:	123f      	asrs	r7, r7, #8
 8013c98:	f806 7c06 	strb.w	r7, [r6, #-6]
 8013c9c:	f89a 7001 	ldrb.w	r7, [sl, #1]
 8013ca0:	fb07 b70e 	mla	r7, r7, lr, fp
 8013ca4:	b2bf      	uxth	r7, r7
 8013ca6:	f107 0b01 	add.w	fp, r7, #1
 8013caa:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8013cae:	123f      	asrs	r7, r7, #8
 8013cb0:	f806 7c05 	strb.w	r7, [r6, #-5]
 8013cb4:	f89a 7002 	ldrb.w	r7, [sl, #2]
 8013cb8:	f816 ac04 	ldrb.w	sl, [r6, #-4]
 8013cbc:	fb1a fa05 	smulbb	sl, sl, r5
 8013cc0:	fb07 a70e 	mla	r7, r7, lr, sl
 8013cc4:	b2bf      	uxth	r7, r7
 8013cc6:	f107 0a01 	add.w	sl, r7, #1
 8013cca:	eb0a 2717 	add.w	r7, sl, r7, lsr #8
 8013cce:	123f      	asrs	r7, r7, #8
 8013cd0:	f806 7c04 	strb.w	r7, [r6, #-4]
 8013cd4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013cd6:	4438      	add	r0, r7
 8013cd8:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8013cda:	443a      	add	r2, r7
 8013cdc:	e7b8      	b.n	8013c50 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8013cde:	2700      	movs	r7, #0
 8013ce0:	1bde      	subs	r6, r3, r7
 8013ce2:	2e00      	cmp	r6, #0
 8013ce4:	dc3f      	bgt.n	8013d66 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013ce6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013cea:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8013cee:	441c      	add	r4, r3
 8013cf0:	2900      	cmp	r1, #0
 8013cf2:	f340 808d 	ble.w	8013e10 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8013cf6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013cfa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013cfc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013d00:	3901      	subs	r1, #1
 8013d02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013d06:	eef0 6a62 	vmov.f32	s13, s5
 8013d0a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013d0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013d12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013d16:	edcd 6a0d 	vstr	s13, [sp, #52]	; 0x34
 8013d1a:	eef0 6a43 	vmov.f32	s13, s6
 8013d1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013d22:	edcd 6a0e 	vstr	s13, [sp, #56]	; 0x38
 8013d26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013d2a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013d2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013d32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013d36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013d3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013d3e:	ee12 2a90 	vmov	r2, s5
 8013d42:	eef0 2a47 	vmov.f32	s5, s14
 8013d46:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d4a:	ee13 2a10 	vmov	r2, s6
 8013d4e:	930f      	str	r3, [sp, #60]	; 0x3c
 8013d50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013d52:	eeb0 3a67 	vmov.f32	s6, s15
 8013d56:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d5a:	9a01      	ldr	r2, [sp, #4]
 8013d5c:	9310      	str	r3, [sp, #64]	; 0x40
 8013d5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013d60:	bf08      	it	eq
 8013d62:	4613      	moveq	r3, r2
 8013d64:	e741      	b.n	8013bea <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013d66:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013d6a:	d44b      	bmi.n	8013e04 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8013d6c:	f8dc b008 	ldr.w	fp, [ip, #8]
 8013d70:	45cb      	cmp	fp, r9
 8013d72:	dd47      	ble.n	8013e04 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8013d74:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013d78:	d444      	bmi.n	8013e04 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8013d7a:	f8dc 600c 	ldr.w	r6, [ip, #12]
 8013d7e:	4556      	cmp	r6, sl
 8013d80:	dd40      	ble.n	8013e04 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8013d82:	fa0f f68b 	sxth.w	r6, fp
 8013d86:	fb0a 9906 	mla	r9, sl, r6, r9
 8013d8a:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8013d8e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8013d92:	f814 b006 	ldrb.w	fp, [r4, r6]
 8013d96:	fb1b fb05 	smulbb	fp, fp, r5
 8013d9a:	eb08 0a09 	add.w	sl, r8, r9
 8013d9e:	f818 9009 	ldrb.w	r9, [r8, r9]
 8013da2:	fb09 b90e 	mla	r9, r9, lr, fp
 8013da6:	fa1f f989 	uxth.w	r9, r9
 8013daa:	f109 0b01 	add.w	fp, r9, #1
 8013dae:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8013db2:	ea4f 2929 	mov.w	r9, r9, asr #8
 8013db6:	f804 9006 	strb.w	r9, [r4, r6]
 8013dba:	4426      	add	r6, r4
 8013dbc:	f89a 9001 	ldrb.w	r9, [sl, #1]
 8013dc0:	f896 b001 	ldrb.w	fp, [r6, #1]
 8013dc4:	fb1b fb05 	smulbb	fp, fp, r5
 8013dc8:	fb09 b90e 	mla	r9, r9, lr, fp
 8013dcc:	fa1f f989 	uxth.w	r9, r9
 8013dd0:	f109 0b01 	add.w	fp, r9, #1
 8013dd4:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8013dd8:	ea4f 2929 	mov.w	r9, r9, asr #8
 8013ddc:	f886 9001 	strb.w	r9, [r6, #1]
 8013de0:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8013de4:	f896 a002 	ldrb.w	sl, [r6, #2]
 8013de8:	fb1a fa05 	smulbb	sl, sl, r5
 8013dec:	fb09 a90e 	mla	r9, r9, lr, sl
 8013df0:	fa1f f989 	uxth.w	r9, r9
 8013df4:	f109 0a01 	add.w	sl, r9, #1
 8013df8:	eb0a 2919 	add.w	r9, sl, r9, lsr #8
 8013dfc:	ea4f 2929 	mov.w	r9, r9, asr #8
 8013e00:	f886 9002 	strb.w	r9, [r6, #2]
 8013e04:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8013e06:	3701      	adds	r7, #1
 8013e08:	4430      	add	r0, r6
 8013e0a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8013e0c:	4432      	add	r2, r6
 8013e0e:	e767      	b.n	8013ce0 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8013e10:	b003      	add	sp, #12
 8013e12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013e16 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013e16:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e1a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013e1c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013e20:	9201      	str	r2, [sp, #4]
 8013e22:	6868      	ldr	r0, [r5, #4]
 8013e24:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8013e26:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 8013e2a:	e9dd ec0f 	ldrd	lr, ip, [sp, #60]	; 0x3c
 8013e2e:	fb00 2404 	mla	r4, r0, r4, r2
 8013e32:	682a      	ldr	r2, [r5, #0]
 8013e34:	f8d7 8000 	ldr.w	r8, [r7]
 8013e38:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8013e3c:	4414      	add	r4, r2
 8013e3e:	2900      	cmp	r1, #0
 8013e40:	dc03      	bgt.n	8013e4a <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8013e42:	9a01      	ldr	r2, [sp, #4]
 8013e44:	2a00      	cmp	r2, #0
 8013e46:	f340 80af 	ble.w	8013fa8 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8013e4a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013e4c:	f9b7 a008 	ldrsh.w	sl, [r7, #8]
 8013e50:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013e54:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013e56:	f9b7 900c 	ldrsh.w	r9, [r7, #12]
 8013e5a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013e5e:	2b00      	cmp	r3, #0
 8013e60:	dd0c      	ble.n	8013e7c <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013e62:	1405      	asrs	r5, r0, #16
 8013e64:	d405      	bmi.n	8013e72 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013e66:	4555      	cmp	r5, sl
 8013e68:	da03      	bge.n	8013e72 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013e6a:	1415      	asrs	r5, r2, #16
 8013e6c:	d401      	bmi.n	8013e72 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013e6e:	454d      	cmp	r5, r9
 8013e70:	db05      	blt.n	8013e7e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013e72:	4470      	add	r0, lr
 8013e74:	4462      	add	r2, ip
 8013e76:	3b01      	subs	r3, #1
 8013e78:	3403      	adds	r4, #3
 8013e7a:	e7f0      	b.n	8013e5e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013e7c:	d038      	beq.n	8013ef0 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 8013e7e:	1e5d      	subs	r5, r3, #1
 8013e80:	fb0e 0605 	mla	r6, lr, r5, r0
 8013e84:	1436      	asrs	r6, r6, #16
 8013e86:	d42a      	bmi.n	8013ede <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8013e88:	4556      	cmp	r6, sl
 8013e8a:	da28      	bge.n	8013ede <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8013e8c:	fb0c 2505 	mla	r5, ip, r5, r2
 8013e90:	142d      	asrs	r5, r5, #16
 8013e92:	d424      	bmi.n	8013ede <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8013e94:	454d      	cmp	r5, r9
 8013e96:	da22      	bge.n	8013ede <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8013e98:	1ce6      	adds	r6, r4, #3
 8013e9a:	4699      	mov	r9, r3
 8013e9c:	f1b9 0f00 	cmp.w	r9, #0
 8013ea0:	f106 0603 	add.w	r6, r6, #3
 8013ea4:	dd1f      	ble.n	8013ee6 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 8013ea6:	f9b7 b008 	ldrsh.w	fp, [r7, #8]
 8013eaa:	ea4f 4a20 	mov.w	sl, r0, asr #16
 8013eae:	1415      	asrs	r5, r2, #16
 8013eb0:	4470      	add	r0, lr
 8013eb2:	4462      	add	r2, ip
 8013eb4:	f109 39ff 	add.w	r9, r9, #4294967295
 8013eb8:	fb0b a505 	mla	r5, fp, r5, sl
 8013ebc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013ec0:	eb08 0a05 	add.w	sl, r8, r5
 8013ec4:	f818 5005 	ldrb.w	r5, [r8, r5]
 8013ec8:	f806 5c06 	strb.w	r5, [r6, #-6]
 8013ecc:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8013ed0:	f806 5c05 	strb.w	r5, [r6, #-5]
 8013ed4:	f89a 5002 	ldrb.w	r5, [sl, #2]
 8013ed8:	f806 5c04 	strb.w	r5, [r6, #-4]
 8013edc:	e7de      	b.n	8013e9c <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8013ede:	2600      	movs	r6, #0
 8013ee0:	1b9d      	subs	r5, r3, r6
 8013ee2:	2d00      	cmp	r5, #0
 8013ee4:	dc38      	bgt.n	8013f58 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 8013ee6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013eea:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8013eee:	441c      	add	r4, r3
 8013ef0:	2900      	cmp	r1, #0
 8013ef2:	dd59      	ble.n	8013fa8 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8013ef4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013ef8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013efa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013efe:	3901      	subs	r1, #1
 8013f00:	eeb0 6a62 	vmov.f32	s12, s5
 8013f04:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013f08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013f0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013f10:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8013f14:	eeb0 6a43 	vmov.f32	s12, s6
 8013f18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013f1c:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8013f20:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013f24:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013f28:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013f2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013f30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013f34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013f38:	ee12 2a90 	vmov	r2, s5
 8013f3c:	eef0 2a47 	vmov.f32	s5, s14
 8013f40:	fb92 fef3 	sdiv	lr, r2, r3
 8013f44:	ee13 2a10 	vmov	r2, s6
 8013f48:	eeb0 3a67 	vmov.f32	s6, s15
 8013f4c:	fb92 fcf3 	sdiv	ip, r2, r3
 8013f50:	9a01      	ldr	r2, [sp, #4]
 8013f52:	bf08      	it	eq
 8013f54:	4613      	moveq	r3, r2
 8013f56:	e772      	b.n	8013e3e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28>
 8013f58:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013f5c:	d420      	bmi.n	8013fa0 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8013f5e:	f8d7 b008 	ldr.w	fp, [r7, #8]
 8013f62:	45cb      	cmp	fp, r9
 8013f64:	dd1c      	ble.n	8013fa0 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8013f66:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013f6a:	d419      	bmi.n	8013fa0 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8013f6c:	68fd      	ldr	r5, [r7, #12]
 8013f6e:	4555      	cmp	r5, sl
 8013f70:	dd16      	ble.n	8013fa0 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8013f72:	fa0f f58b 	sxth.w	r5, fp
 8013f76:	fb0a 9505 	mla	r5, sl, r5, r9
 8013f7a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013f7e:	f818 9005 	ldrb.w	r9, [r8, r5]
 8013f82:	eb08 0b05 	add.w	fp, r8, r5
 8013f86:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8013f8a:	f804 9005 	strb.w	r9, [r4, r5]
 8013f8e:	4425      	add	r5, r4
 8013f90:	f89b 9001 	ldrb.w	r9, [fp, #1]
 8013f94:	f885 9001 	strb.w	r9, [r5, #1]
 8013f98:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8013f9c:	f885 9002 	strb.w	r9, [r5, #2]
 8013fa0:	4470      	add	r0, lr
 8013fa2:	4462      	add	r2, ip
 8013fa4:	3601      	adds	r6, #1
 8013fa6:	e79b      	b.n	8013ee0 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8013fa8:	b003      	add	sp, #12
 8013faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013fae <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013fae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fb2:	b085      	sub	sp, #20
 8013fb4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013fb8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013fba:	9202      	str	r2, [sp, #8]
 8013fbc:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8013fc0:	6860      	ldr	r0, [r4, #4]
 8013fc2:	9203      	str	r2, [sp, #12]
 8013fc4:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8013fc8:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 8013fcc:	e9dd 2514 	ldrd	r2, r5, [sp, #80]	; 0x50
 8013fd0:	fb00 2505 	mla	r5, r0, r5, r2
 8013fd4:	6822      	ldr	r2, [r4, #0]
 8013fd6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013fda:	4415      	add	r5, r2
 8013fdc:	f8dc 2000 	ldr.w	r2, [ip]
 8013fe0:	9201      	str	r2, [sp, #4]
 8013fe2:	2900      	cmp	r1, #0
 8013fe4:	dc03      	bgt.n	8013fee <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013fe6:	9a02      	ldr	r2, [sp, #8]
 8013fe8:	2a00      	cmp	r2, #0
 8013fea:	f340 8122 	ble.w	8014232 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8013fee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013ff0:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 8013ff4:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8013ff8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013ffa:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013ffe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014002:	2b00      	cmp	r3, #0
 8014004:	dd0d      	ble.n	8014022 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014006:	1422      	asrs	r2, r4, #16
 8014008:	d405      	bmi.n	8014016 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801400a:	4542      	cmp	r2, r8
 801400c:	da03      	bge.n	8014016 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801400e:	1402      	asrs	r2, r0, #16
 8014010:	d401      	bmi.n	8014016 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014012:	42ba      	cmp	r2, r7
 8014014:	db06      	blt.n	8014024 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014016:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014018:	4474      	add	r4, lr
 801401a:	3b01      	subs	r3, #1
 801401c:	3503      	adds	r5, #3
 801401e:	4410      	add	r0, r2
 8014020:	e7ef      	b.n	8014002 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014022:	d072      	beq.n	801410a <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014024:	1e5a      	subs	r2, r3, #1
 8014026:	fb0e 4602 	mla	r6, lr, r2, r4
 801402a:	1436      	asrs	r6, r6, #16
 801402c:	d462      	bmi.n	80140f4 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801402e:	4546      	cmp	r6, r8
 8014030:	da60      	bge.n	80140f4 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8014032:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8014034:	fb06 0202 	mla	r2, r6, r2, r0
 8014038:	1412      	asrs	r2, r2, #16
 801403a:	d45b      	bmi.n	80140f4 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801403c:	42ba      	cmp	r2, r7
 801403e:	da59      	bge.n	80140f4 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8014040:	1cef      	adds	r7, r5, #3
 8014042:	4699      	mov	r9, r3
 8014044:	f1b9 0f00 	cmp.w	r9, #0
 8014048:	dd5a      	ble.n	8014100 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801404a:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 801404e:	1426      	asrs	r6, r4, #16
 8014050:	1402      	asrs	r2, r0, #16
 8014052:	fb08 6202 	mla	r2, r8, r2, r6
 8014056:	9e01      	ldr	r6, [sp, #4]
 8014058:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 801405c:	ea5f 6816 	movs.w	r8, r6, lsr #24
 8014060:	d041      	beq.n	80140e6 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8014062:	9a03      	ldr	r2, [sp, #12]
 8014064:	fa5f fb86 	uxtb.w	fp, r6
 8014068:	fb02 f808 	mul.w	r8, r2, r8
 801406c:	f108 0201 	add.w	r2, r8, #1
 8014070:	eb02 2228 	add.w	r2, r2, r8, asr #8
 8014074:	f817 8c03 	ldrb.w	r8, [r7, #-3]
 8014078:	1212      	asrs	r2, r2, #8
 801407a:	fa1f fa82 	uxth.w	sl, r2
 801407e:	43d2      	mvns	r2, r2
 8014080:	fb1b fb0a 	smulbb	fp, fp, sl
 8014084:	b2d2      	uxtb	r2, r2
 8014086:	fb08 b802 	mla	r8, r8, r2, fp
 801408a:	fa1f f888 	uxth.w	r8, r8
 801408e:	f108 0b01 	add.w	fp, r8, #1
 8014092:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8014096:	f3c6 2b07 	ubfx	fp, r6, #8, #8
 801409a:	f3c6 4607 	ubfx	r6, r6, #16, #8
 801409e:	fb1b fb0a 	smulbb	fp, fp, sl
 80140a2:	ea4f 2828 	mov.w	r8, r8, asr #8
 80140a6:	fb16 fa0a 	smulbb	sl, r6, sl
 80140aa:	f817 6c01 	ldrb.w	r6, [r7, #-1]
 80140ae:	f807 8c03 	strb.w	r8, [r7, #-3]
 80140b2:	f817 8c02 	ldrb.w	r8, [r7, #-2]
 80140b6:	fb06 aa02 	mla	sl, r6, r2, sl
 80140ba:	fb08 b802 	mla	r8, r8, r2, fp
 80140be:	fa1f fa8a 	uxth.w	sl, sl
 80140c2:	fa1f f888 	uxth.w	r8, r8
 80140c6:	f10a 0601 	add.w	r6, sl, #1
 80140ca:	f108 0b01 	add.w	fp, r8, #1
 80140ce:	eb06 2a1a 	add.w	sl, r6, sl, lsr #8
 80140d2:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80140d6:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80140da:	ea4f 2828 	mov.w	r8, r8, asr #8
 80140de:	f807 ac01 	strb.w	sl, [r7, #-1]
 80140e2:	f807 8c02 	strb.w	r8, [r7, #-2]
 80140e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80140e8:	4474      	add	r4, lr
 80140ea:	3703      	adds	r7, #3
 80140ec:	f109 39ff 	add.w	r9, r9, #4294967295
 80140f0:	4410      	add	r0, r2
 80140f2:	e7a7      	b.n	8014044 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80140f4:	f04f 0800 	mov.w	r8, #0
 80140f8:	eba3 0208 	sub.w	r2, r3, r8
 80140fc:	2a00      	cmp	r2, #0
 80140fe:	dc3b      	bgt.n	8014178 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8014100:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014104:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014108:	441d      	add	r5, r3
 801410a:	2900      	cmp	r1, #0
 801410c:	f340 8091 	ble.w	8014232 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8014110:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014114:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014116:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801411a:	3901      	subs	r1, #1
 801411c:	eeb0 6a62 	vmov.f32	s12, s5
 8014120:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014124:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014128:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801412c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014130:	eeb0 6a43 	vmov.f32	s12, s6
 8014134:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014138:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801413c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014140:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014144:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014148:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801414c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014150:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014154:	ee12 2a90 	vmov	r2, s5
 8014158:	eef0 2a47 	vmov.f32	s5, s14
 801415c:	fb92 fef3 	sdiv	lr, r2, r3
 8014160:	ee13 2a10 	vmov	r2, s6
 8014164:	eeb0 3a67 	vmov.f32	s6, s15
 8014168:	fb92 f3f3 	sdiv	r3, r2, r3
 801416c:	9a02      	ldr	r2, [sp, #8]
 801416e:	9312      	str	r3, [sp, #72]	; 0x48
 8014170:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014172:	bf08      	it	eq
 8014174:	4613      	moveq	r3, r2
 8014176:	e734      	b.n	8013fe2 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8014178:	1427      	asrs	r7, r4, #16
 801417a:	d454      	bmi.n	8014226 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801417c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014180:	42be      	cmp	r6, r7
 8014182:	dd50      	ble.n	8014226 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8014184:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014188:	d44d      	bmi.n	8014226 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801418a:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801418e:	454a      	cmp	r2, r9
 8014190:	dd49      	ble.n	8014226 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8014192:	b236      	sxth	r6, r6
 8014194:	9a01      	ldr	r2, [sp, #4]
 8014196:	fb09 7606 	mla	r6, r9, r6, r7
 801419a:	f852 7026 	ldr.w	r7, [r2, r6, lsl #2]
 801419e:	0e3a      	lsrs	r2, r7, #24
 80141a0:	d041      	beq.n	8014226 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80141a2:	9e03      	ldr	r6, [sp, #12]
 80141a4:	fa5f fb87 	uxtb.w	fp, r7
 80141a8:	4372      	muls	r2, r6
 80141aa:	1c56      	adds	r6, r2, #1
 80141ac:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80141b0:	eb08 0648 	add.w	r6, r8, r8, lsl #1
 80141b4:	1212      	asrs	r2, r2, #8
 80141b6:	f815 9006 	ldrb.w	r9, [r5, r6]
 80141ba:	fa1f fa82 	uxth.w	sl, r2
 80141be:	43d2      	mvns	r2, r2
 80141c0:	fb1b fb0a 	smulbb	fp, fp, sl
 80141c4:	b2d2      	uxtb	r2, r2
 80141c6:	fb09 b902 	mla	r9, r9, r2, fp
 80141ca:	fa1f f989 	uxth.w	r9, r9
 80141ce:	f109 0b01 	add.w	fp, r9, #1
 80141d2:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80141d6:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 80141da:	f3c7 4707 	ubfx	r7, r7, #16, #8
 80141de:	fb1b fb0a 	smulbb	fp, fp, sl
 80141e2:	ea4f 2929 	mov.w	r9, r9, asr #8
 80141e6:	fb17 fa0a 	smulbb	sl, r7, sl
 80141ea:	f805 9006 	strb.w	r9, [r5, r6]
 80141ee:	442e      	add	r6, r5
 80141f0:	78b7      	ldrb	r7, [r6, #2]
 80141f2:	f896 9001 	ldrb.w	r9, [r6, #1]
 80141f6:	fb07 aa02 	mla	sl, r7, r2, sl
 80141fa:	fb09 b902 	mla	r9, r9, r2, fp
 80141fe:	fa1f fa8a 	uxth.w	sl, sl
 8014202:	fa1f f989 	uxth.w	r9, r9
 8014206:	f10a 0701 	add.w	r7, sl, #1
 801420a:	f109 0b01 	add.w	fp, r9, #1
 801420e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014212:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8014216:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801421a:	ea4f 2929 	mov.w	r9, r9, asr #8
 801421e:	f886 a002 	strb.w	sl, [r6, #2]
 8014222:	f886 9001 	strb.w	r9, [r6, #1]
 8014226:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014228:	4474      	add	r4, lr
 801422a:	f108 0801 	add.w	r8, r8, #1
 801422e:	4410      	add	r0, r2
 8014230:	e762      	b.n	80140f8 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8014232:	b005      	add	sp, #20
 8014234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014238 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014238:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801423c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801423e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014242:	9201      	str	r2, [sp, #4]
 8014244:	6860      	ldr	r0, [r4, #4]
 8014246:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 801424a:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 801424e:	fb00 2505 	mla	r5, r0, r5, r2
 8014252:	6822      	ldr	r2, [r4, #0]
 8014254:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014258:	4415      	add	r5, r2
 801425a:	f8dc 2000 	ldr.w	r2, [ip]
 801425e:	9200      	str	r2, [sp, #0]
 8014260:	2900      	cmp	r1, #0
 8014262:	dc03      	bgt.n	801426c <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8014264:	9a01      	ldr	r2, [sp, #4]
 8014266:	2a00      	cmp	r2, #0
 8014268:	f340 812b 	ble.w	80144c2 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801426c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801426e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014272:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8014276:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014278:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801427c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014280:	2b00      	cmp	r3, #0
 8014282:	dd0e      	ble.n	80142a2 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014284:	1422      	asrs	r2, r4, #16
 8014286:	d405      	bmi.n	8014294 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014288:	4572      	cmp	r2, lr
 801428a:	da03      	bge.n	8014294 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801428c:	1402      	asrs	r2, r0, #16
 801428e:	d401      	bmi.n	8014294 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014290:	42ba      	cmp	r2, r7
 8014292:	db07      	blt.n	80142a4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014294:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014296:	3b01      	subs	r3, #1
 8014298:	3503      	adds	r5, #3
 801429a:	4414      	add	r4, r2
 801429c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801429e:	4410      	add	r0, r2
 80142a0:	e7ee      	b.n	8014280 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80142a2:	d06f      	beq.n	8014384 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80142a4:	1e5a      	subs	r2, r3, #1
 80142a6:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80142a8:	fb06 4602 	mla	r6, r6, r2, r4
 80142ac:	1436      	asrs	r6, r6, #16
 80142ae:	d45e      	bmi.n	801436e <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 80142b0:	4576      	cmp	r6, lr
 80142b2:	da5c      	bge.n	801436e <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 80142b4:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80142b6:	fb06 0202 	mla	r2, r6, r2, r0
 80142ba:	1412      	asrs	r2, r2, #16
 80142bc:	d457      	bmi.n	801436e <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 80142be:	42ba      	cmp	r2, r7
 80142c0:	da55      	bge.n	801436e <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 80142c2:	1cee      	adds	r6, r5, #3
 80142c4:	469a      	mov	sl, r3
 80142c6:	f1ba 0f00 	cmp.w	sl, #0
 80142ca:	dd56      	ble.n	801437a <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 80142cc:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80142d0:	1427      	asrs	r7, r4, #16
 80142d2:	1402      	asrs	r2, r0, #16
 80142d4:	fb0e 7202 	mla	r2, lr, r2, r7
 80142d8:	9f00      	ldr	r7, [sp, #0]
 80142da:	f857 7022 	ldr.w	r7, [r7, r2, lsl #2]
 80142de:	ea5f 6e17 	movs.w	lr, r7, lsr #24
 80142e2:	d03c      	beq.n	801435e <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80142e4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80142e8:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 80142ec:	f3c7 2907 	ubfx	r9, r7, #8, #8
 80142f0:	fa5f f28e 	uxtb.w	r2, lr
 80142f4:	b2ff      	uxtb	r7, r7
 80142f6:	f000 80dd 	beq.w	80144b4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80142fa:	fa1f f882 	uxth.w	r8, r2
 80142fe:	43d2      	mvns	r2, r2
 8014300:	f816 ec03 	ldrb.w	lr, [r6, #-3]
 8014304:	fb17 f708 	smulbb	r7, r7, r8
 8014308:	b2d2      	uxtb	r2, r2
 801430a:	fb19 f908 	smulbb	r9, r9, r8
 801430e:	fb0e 7702 	mla	r7, lr, r2, r7
 8014312:	fb1b f808 	smulbb	r8, fp, r8
 8014316:	b2bf      	uxth	r7, r7
 8014318:	f107 0e01 	add.w	lr, r7, #1
 801431c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8014320:	123f      	asrs	r7, r7, #8
 8014322:	f806 7c03 	strb.w	r7, [r6, #-3]
 8014326:	f816 7c02 	ldrb.w	r7, [r6, #-2]
 801432a:	fb07 9902 	mla	r9, r7, r2, r9
 801432e:	fa1f f989 	uxth.w	r9, r9
 8014332:	f109 0701 	add.w	r7, r9, #1
 8014336:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801433a:	f816 7c01 	ldrb.w	r7, [r6, #-1]
 801433e:	fb07 8802 	mla	r8, r7, r2, r8
 8014342:	ea4f 2929 	mov.w	r9, r9, asr #8
 8014346:	fa1f f888 	uxth.w	r8, r8
 801434a:	f806 9c02 	strb.w	r9, [r6, #-2]
 801434e:	f108 0201 	add.w	r2, r8, #1
 8014352:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8014356:	ea4f 2828 	mov.w	r8, r8, asr #8
 801435a:	f806 8c01 	strb.w	r8, [r6, #-1]
 801435e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014360:	3603      	adds	r6, #3
 8014362:	f10a 3aff 	add.w	sl, sl, #4294967295
 8014366:	4414      	add	r4, r2
 8014368:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801436a:	4410      	add	r0, r2
 801436c:	e7ab      	b.n	80142c6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801436e:	f04f 0e00 	mov.w	lr, #0
 8014372:	eba3 020e 	sub.w	r2, r3, lr
 8014376:	2a00      	cmp	r2, #0
 8014378:	dc3d      	bgt.n	80143f6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801437a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801437e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014382:	441d      	add	r5, r3
 8014384:	2900      	cmp	r1, #0
 8014386:	f340 809c 	ble.w	80144c2 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801438a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801438e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014390:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014394:	3901      	subs	r1, #1
 8014396:	eeb0 6a62 	vmov.f32	s12, s5
 801439a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801439e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80143a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80143a6:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 80143aa:	eeb0 6a43 	vmov.f32	s12, s6
 80143ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80143b2:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 80143b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80143ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80143be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80143c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80143c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80143ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80143ce:	ee12 2a90 	vmov	r2, s5
 80143d2:	eef0 2a47 	vmov.f32	s5, s14
 80143d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80143da:	ee13 2a10 	vmov	r2, s6
 80143de:	930f      	str	r3, [sp, #60]	; 0x3c
 80143e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80143e2:	eeb0 3a67 	vmov.f32	s6, s15
 80143e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80143ea:	9a01      	ldr	r2, [sp, #4]
 80143ec:	9310      	str	r3, [sp, #64]	; 0x40
 80143ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80143f0:	bf08      	it	eq
 80143f2:	4613      	moveq	r3, r2
 80143f4:	e734      	b.n	8014260 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28>
 80143f6:	1427      	asrs	r7, r4, #16
 80143f8:	d44d      	bmi.n	8014496 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 80143fa:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80143fe:	42be      	cmp	r6, r7
 8014400:	dd49      	ble.n	8014496 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8014402:	ea5f 4820 	movs.w	r8, r0, asr #16
 8014406:	d446      	bmi.n	8014496 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8014408:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801440c:	4542      	cmp	r2, r8
 801440e:	dd42      	ble.n	8014496 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8014410:	b236      	sxth	r6, r6
 8014412:	9a00      	ldr	r2, [sp, #0]
 8014414:	fb08 7606 	mla	r6, r8, r6, r7
 8014418:	f852 7026 	ldr.w	r7, [r2, r6, lsl #2]
 801441c:	0e3a      	lsrs	r2, r7, #24
 801441e:	d03a      	beq.n	8014496 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8014420:	2aff      	cmp	r2, #255	; 0xff
 8014422:	b2d6      	uxtb	r6, r2
 8014424:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 8014428:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801442c:	ea4f 024e 	mov.w	r2, lr, lsl #1
 8014430:	b2ff      	uxtb	r7, r7
 8014432:	d037      	beq.n	80144a4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8014434:	fa1f f986 	uxth.w	r9, r6
 8014438:	4472      	add	r2, lr
 801443a:	43f6      	mvns	r6, r6
 801443c:	f815 8002 	ldrb.w	r8, [r5, r2]
 8014440:	fb17 f709 	smulbb	r7, r7, r9
 8014444:	fb1a fa09 	smulbb	sl, sl, r9
 8014448:	b2f6      	uxtb	r6, r6
 801444a:	fb1b f909 	smulbb	r9, fp, r9
 801444e:	fb08 7706 	mla	r7, r8, r6, r7
 8014452:	b2bf      	uxth	r7, r7
 8014454:	f107 0801 	add.w	r8, r7, #1
 8014458:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 801445c:	123f      	asrs	r7, r7, #8
 801445e:	54af      	strb	r7, [r5, r2]
 8014460:	442a      	add	r2, r5
 8014462:	7857      	ldrb	r7, [r2, #1]
 8014464:	fb07 aa06 	mla	sl, r7, r6, sl
 8014468:	fa1f fa8a 	uxth.w	sl, sl
 801446c:	f10a 0701 	add.w	r7, sl, #1
 8014470:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014474:	7897      	ldrb	r7, [r2, #2]
 8014476:	fb07 9906 	mla	r9, r7, r6, r9
 801447a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801447e:	fa1f f989 	uxth.w	r9, r9
 8014482:	f882 a001 	strb.w	sl, [r2, #1]
 8014486:	f109 0601 	add.w	r6, r9, #1
 801448a:	eb06 2919 	add.w	r9, r6, r9, lsr #8
 801448e:	ea4f 2929 	mov.w	r9, r9, asr #8
 8014492:	f882 9002 	strb.w	r9, [r2, #2]
 8014496:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014498:	f10e 0e01 	add.w	lr, lr, #1
 801449c:	4414      	add	r4, r2
 801449e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80144a0:	4410      	add	r0, r2
 80144a2:	e766      	b.n	8014372 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80144a4:	4472      	add	r2, lr
 80144a6:	54af      	strb	r7, [r5, r2]
 80144a8:	442a      	add	r2, r5
 80144aa:	f882 a001 	strb.w	sl, [r2, #1]
 80144ae:	f882 b002 	strb.w	fp, [r2, #2]
 80144b2:	e7f0      	b.n	8014496 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 80144b4:	f806 7c03 	strb.w	r7, [r6, #-3]
 80144b8:	f806 9c02 	strb.w	r9, [r6, #-2]
 80144bc:	f806 bc01 	strb.w	fp, [r6, #-1]
 80144c0:	e74d      	b.n	801435e <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80144c2:	b003      	add	sp, #12
 80144c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080144c8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80144c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144cc:	b087      	sub	sp, #28
 80144ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80144d2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80144d4:	9204      	str	r2, [sp, #16]
 80144d6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80144da:	6860      	ldr	r0, [r4, #4]
 80144dc:	9205      	str	r2, [sp, #20]
 80144de:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80144e2:	f8dd e04c 	ldr.w	lr, [sp, #76]	; 0x4c
 80144e6:	9101      	str	r1, [sp, #4]
 80144e8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80144ec:	fb00 2505 	mla	r5, r0, r5, r2
 80144f0:	6822      	ldr	r2, [r4, #0]
 80144f2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80144f6:	4415      	add	r5, r2
 80144f8:	f8dc 2008 	ldr.w	r2, [ip, #8]
 80144fc:	3201      	adds	r2, #1
 80144fe:	f022 0201 	bic.w	r2, r2, #1
 8014502:	9202      	str	r2, [sp, #8]
 8014504:	f8dc 2000 	ldr.w	r2, [ip]
 8014508:	9203      	str	r2, [sp, #12]
 801450a:	9a01      	ldr	r2, [sp, #4]
 801450c:	2a00      	cmp	r2, #0
 801450e:	dc03      	bgt.n	8014518 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8014510:	9a04      	ldr	r2, [sp, #16]
 8014512:	2a00      	cmp	r2, #0
 8014514:	f340 8135 	ble.w	8014782 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8014518:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801451a:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 801451e:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8014522:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014524:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014528:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801452c:	2b00      	cmp	r3, #0
 801452e:	dd0d      	ble.n	801454c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014530:	1422      	asrs	r2, r4, #16
 8014532:	d405      	bmi.n	8014540 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014534:	4542      	cmp	r2, r8
 8014536:	da03      	bge.n	8014540 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014538:	1402      	asrs	r2, r0, #16
 801453a:	d401      	bmi.n	8014540 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801453c:	42ba      	cmp	r2, r7
 801453e:	db06      	blt.n	801454e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014540:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014542:	4474      	add	r4, lr
 8014544:	3b01      	subs	r3, #1
 8014546:	3503      	adds	r5, #3
 8014548:	4410      	add	r0, r2
 801454a:	e7ef      	b.n	801452c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801454c:	d077      	beq.n	801463e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801454e:	1e5a      	subs	r2, r3, #1
 8014550:	fb0e 4602 	mla	r6, lr, r2, r4
 8014554:	1436      	asrs	r6, r6, #16
 8014556:	d469      	bmi.n	801462c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014558:	4546      	cmp	r6, r8
 801455a:	da67      	bge.n	801462c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801455c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801455e:	fb06 0202 	mla	r2, r6, r2, r0
 8014562:	1412      	asrs	r2, r2, #16
 8014564:	d462      	bmi.n	801462c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014566:	42ba      	cmp	r2, r7
 8014568:	da60      	bge.n	801462c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801456a:	1cee      	adds	r6, r5, #3
 801456c:	4699      	mov	r9, r3
 801456e:	f1b9 0f00 	cmp.w	r9, #0
 8014572:	dd5f      	ble.n	8014634 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014574:	1422      	asrs	r2, r4, #16
 8014576:	9902      	ldr	r1, [sp, #8]
 8014578:	1407      	asrs	r7, r0, #16
 801457a:	fb01 2707 	mla	r7, r1, r7, r2
 801457e:	9903      	ldr	r1, [sp, #12]
 8014580:	087a      	lsrs	r2, r7, #1
 8014582:	5c8a      	ldrb	r2, [r1, r2]
 8014584:	07f9      	lsls	r1, r7, #31
 8014586:	bf54      	ite	pl
 8014588:	f002 020f 	andpl.w	r2, r2, #15
 801458c:	1112      	asrmi	r2, r2, #4
 801458e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014592:	b2d2      	uxtb	r2, r2
 8014594:	2a00      	cmp	r2, #0
 8014596:	d042      	beq.n	801461e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014598:	497b      	ldr	r1, [pc, #492]	; (8014788 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 801459a:	680f      	ldr	r7, [r1, #0]
 801459c:	9905      	ldr	r1, [sp, #20]
 801459e:	fa5f fb87 	uxtb.w	fp, r7
 80145a2:	434a      	muls	r2, r1
 80145a4:	f102 0801 	add.w	r8, r2, #1
 80145a8:	eb08 2222 	add.w	r2, r8, r2, asr #8
 80145ac:	f816 8c03 	ldrb.w	r8, [r6, #-3]
 80145b0:	1212      	asrs	r2, r2, #8
 80145b2:	fa1f fa82 	uxth.w	sl, r2
 80145b6:	43d2      	mvns	r2, r2
 80145b8:	fb1b fb0a 	smulbb	fp, fp, sl
 80145bc:	b2d2      	uxtb	r2, r2
 80145be:	fb08 b802 	mla	r8, r8, r2, fp
 80145c2:	fa1f f888 	uxth.w	r8, r8
 80145c6:	f108 0b01 	add.w	fp, r8, #1
 80145ca:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80145ce:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 80145d2:	f3c7 4707 	ubfx	r7, r7, #16, #8
 80145d6:	fb1b fb0a 	smulbb	fp, fp, sl
 80145da:	ea4f 2828 	mov.w	r8, r8, asr #8
 80145de:	fb17 fa0a 	smulbb	sl, r7, sl
 80145e2:	f816 7c01 	ldrb.w	r7, [r6, #-1]
 80145e6:	f806 8c03 	strb.w	r8, [r6, #-3]
 80145ea:	f816 8c02 	ldrb.w	r8, [r6, #-2]
 80145ee:	fb07 aa02 	mla	sl, r7, r2, sl
 80145f2:	fb08 b802 	mla	r8, r8, r2, fp
 80145f6:	fa1f fa8a 	uxth.w	sl, sl
 80145fa:	fa1f f888 	uxth.w	r8, r8
 80145fe:	f10a 0701 	add.w	r7, sl, #1
 8014602:	f108 0b01 	add.w	fp, r8, #1
 8014606:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801460a:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 801460e:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8014612:	ea4f 2828 	mov.w	r8, r8, asr #8
 8014616:	f806 ac01 	strb.w	sl, [r6, #-1]
 801461a:	f806 8c02 	strb.w	r8, [r6, #-2]
 801461e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014620:	4474      	add	r4, lr
 8014622:	3603      	adds	r6, #3
 8014624:	f109 39ff 	add.w	r9, r9, #4294967295
 8014628:	4410      	add	r0, r2
 801462a:	e7a0      	b.n	801456e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801462c:	2700      	movs	r7, #0
 801462e:	1bda      	subs	r2, r3, r7
 8014630:	2a00      	cmp	r2, #0
 8014632:	dc3e      	bgt.n	80146b2 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8014634:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014638:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801463c:	441d      	add	r5, r3
 801463e:	9b01      	ldr	r3, [sp, #4]
 8014640:	2b00      	cmp	r3, #0
 8014642:	f340 809e 	ble.w	8014782 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8014646:	ee30 0a04 	vadd.f32	s0, s0, s8
 801464a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801464c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014650:	eeb0 6a62 	vmov.f32	s12, s5
 8014654:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014658:	ee31 1a05 	vadd.f32	s2, s2, s10
 801465c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014660:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014664:	eeb0 6a43 	vmov.f32	s12, s6
 8014668:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801466c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014670:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014674:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014678:	ee77 2a62 	vsub.f32	s5, s14, s5
 801467c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014680:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014684:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014688:	ee12 2a90 	vmov	r2, s5
 801468c:	eef0 2a47 	vmov.f32	s5, s14
 8014690:	fb92 fef3 	sdiv	lr, r2, r3
 8014694:	ee13 2a10 	vmov	r2, s6
 8014698:	eeb0 3a67 	vmov.f32	s6, s15
 801469c:	fb92 f3f3 	sdiv	r3, r2, r3
 80146a0:	9314      	str	r3, [sp, #80]	; 0x50
 80146a2:	9b01      	ldr	r3, [sp, #4]
 80146a4:	9a04      	ldr	r2, [sp, #16]
 80146a6:	3b01      	subs	r3, #1
 80146a8:	9301      	str	r3, [sp, #4]
 80146aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80146ac:	bf08      	it	eq
 80146ae:	4613      	moveq	r3, r2
 80146b0:	e72b      	b.n	801450a <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80146b2:	1426      	asrs	r6, r4, #16
 80146b4:	d460      	bmi.n	8014778 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80146b6:	f8dc 2008 	ldr.w	r2, [ip, #8]
 80146ba:	42b2      	cmp	r2, r6
 80146bc:	dd5c      	ble.n	8014778 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80146be:	ea5f 4820 	movs.w	r8, r0, asr #16
 80146c2:	d459      	bmi.n	8014778 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80146c4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80146c8:	4542      	cmp	r2, r8
 80146ca:	dd55      	ble.n	8014778 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80146cc:	9a02      	ldr	r2, [sp, #8]
 80146ce:	9903      	ldr	r1, [sp, #12]
 80146d0:	fb08 6602 	mla	r6, r8, r2, r6
 80146d4:	0872      	lsrs	r2, r6, #1
 80146d6:	07f6      	lsls	r6, r6, #31
 80146d8:	5c8a      	ldrb	r2, [r1, r2]
 80146da:	bf54      	ite	pl
 80146dc:	f002 020f 	andpl.w	r2, r2, #15
 80146e0:	1112      	asrmi	r2, r2, #4
 80146e2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80146e6:	b2d2      	uxtb	r2, r2
 80146e8:	2a00      	cmp	r2, #0
 80146ea:	d045      	beq.n	8014778 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80146ec:	4926      	ldr	r1, [pc, #152]	; (8014788 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 80146ee:	f8d1 8000 	ldr.w	r8, [r1]
 80146f2:	9905      	ldr	r1, [sp, #20]
 80146f4:	fa5f fb88 	uxtb.w	fp, r8
 80146f8:	434a      	muls	r2, r1
 80146fa:	1c56      	adds	r6, r2, #1
 80146fc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014700:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8014704:	1212      	asrs	r2, r2, #8
 8014706:	f815 9006 	ldrb.w	r9, [r5, r6]
 801470a:	fa1f fa82 	uxth.w	sl, r2
 801470e:	43d2      	mvns	r2, r2
 8014710:	fb1b fb0a 	smulbb	fp, fp, sl
 8014714:	b2d2      	uxtb	r2, r2
 8014716:	fb09 b902 	mla	r9, r9, r2, fp
 801471a:	fa1f f989 	uxth.w	r9, r9
 801471e:	f109 0b01 	add.w	fp, r9, #1
 8014722:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8014726:	f3c8 2b07 	ubfx	fp, r8, #8, #8
 801472a:	f3c8 4807 	ubfx	r8, r8, #16, #8
 801472e:	fb1b fb0a 	smulbb	fp, fp, sl
 8014732:	ea4f 2929 	mov.w	r9, r9, asr #8
 8014736:	fb18 fa0a 	smulbb	sl, r8, sl
 801473a:	f805 9006 	strb.w	r9, [r5, r6]
 801473e:	442e      	add	r6, r5
 8014740:	f896 8002 	ldrb.w	r8, [r6, #2]
 8014744:	f896 9001 	ldrb.w	r9, [r6, #1]
 8014748:	fb08 aa02 	mla	sl, r8, r2, sl
 801474c:	fb09 b902 	mla	r9, r9, r2, fp
 8014750:	fa1f fa8a 	uxth.w	sl, sl
 8014754:	fa1f f989 	uxth.w	r9, r9
 8014758:	f10a 0801 	add.w	r8, sl, #1
 801475c:	f109 0b01 	add.w	fp, r9, #1
 8014760:	eb08 2a1a 	add.w	sl, r8, sl, lsr #8
 8014764:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8014768:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801476c:	ea4f 2929 	mov.w	r9, r9, asr #8
 8014770:	f886 a002 	strb.w	sl, [r6, #2]
 8014774:	f886 9001 	strb.w	r9, [r6, #1]
 8014778:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801477a:	4474      	add	r4, lr
 801477c:	3701      	adds	r7, #1
 801477e:	4410      	add	r0, r2
 8014780:	e755      	b.n	801462e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 8014782:	b007      	add	sp, #28
 8014784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014788:	2400895c 	.word	0x2400895c

0801478c <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801478c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014790:	b085      	sub	sp, #20
 8014792:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014796:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014798:	9203      	str	r2, [sp, #12]
 801479a:	6860      	ldr	r0, [r4, #4]
 801479c:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 80147a0:	9100      	str	r1, [sp, #0]
 80147a2:	e9dd 2614 	ldrd	r2, r6, [sp, #80]	; 0x50
 80147a6:	fb00 2606 	mla	r6, r0, r6, r2
 80147aa:	6822      	ldr	r2, [r4, #0]
 80147ac:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80147b0:	4416      	add	r6, r2
 80147b2:	f8dc 2008 	ldr.w	r2, [ip, #8]
 80147b6:	3201      	adds	r2, #1
 80147b8:	f022 0201 	bic.w	r2, r2, #1
 80147bc:	9201      	str	r2, [sp, #4]
 80147be:	f8dc 2000 	ldr.w	r2, [ip]
 80147c2:	9202      	str	r2, [sp, #8]
 80147c4:	9a00      	ldr	r2, [sp, #0]
 80147c6:	2a00      	cmp	r2, #0
 80147c8:	dc03      	bgt.n	80147d2 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80147ca:	9a03      	ldr	r2, [sp, #12]
 80147cc:	2a00      	cmp	r2, #0
 80147ce:	f340 8140 	ble.w	8014a52 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 80147d2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80147d4:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80147d8:	f502 4500 	add.w	r5, r2, #32768	; 0x8000
 80147dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80147de:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80147e2:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80147e6:	2b00      	cmp	r3, #0
 80147e8:	dd0e      	ble.n	8014808 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80147ea:	142a      	asrs	r2, r5, #16
 80147ec:	d405      	bmi.n	80147fa <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80147ee:	4572      	cmp	r2, lr
 80147f0:	da03      	bge.n	80147fa <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80147f2:	1422      	asrs	r2, r4, #16
 80147f4:	d401      	bmi.n	80147fa <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80147f6:	42ba      	cmp	r2, r7
 80147f8:	db07      	blt.n	801480a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80147fa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80147fc:	3b01      	subs	r3, #1
 80147fe:	3603      	adds	r6, #3
 8014800:	4415      	add	r5, r2
 8014802:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014804:	4414      	add	r4, r2
 8014806:	e7ee      	b.n	80147e6 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8014808:	d072      	beq.n	80148f0 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801480a:	1e5a      	subs	r2, r3, #1
 801480c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801480e:	fb00 5002 	mla	r0, r0, r2, r5
 8014812:	1400      	asrs	r0, r0, #16
 8014814:	d463      	bmi.n	80148de <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014816:	4570      	cmp	r0, lr
 8014818:	da61      	bge.n	80148de <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801481a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801481c:	fb00 4202 	mla	r2, r0, r2, r4
 8014820:	1412      	asrs	r2, r2, #16
 8014822:	d45c      	bmi.n	80148de <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014824:	42ba      	cmp	r2, r7
 8014826:	da5a      	bge.n	80148de <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014828:	1cf0      	adds	r0, r6, #3
 801482a:	469a      	mov	sl, r3
 801482c:	f1ba 0f00 	cmp.w	sl, #0
 8014830:	dd59      	ble.n	80148e6 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 8014832:	142a      	asrs	r2, r5, #16
 8014834:	9901      	ldr	r1, [sp, #4]
 8014836:	1427      	asrs	r7, r4, #16
 8014838:	fb01 2707 	mla	r7, r1, r7, r2
 801483c:	9902      	ldr	r1, [sp, #8]
 801483e:	087a      	lsrs	r2, r7, #1
 8014840:	5c8a      	ldrb	r2, [r1, r2]
 8014842:	07f9      	lsls	r1, r7, #31
 8014844:	bf54      	ite	pl
 8014846:	f002 020f 	andpl.w	r2, r2, #15
 801484a:	1112      	asrmi	r2, r2, #4
 801484c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014850:	b2d2      	uxtb	r2, r2
 8014852:	2a00      	cmp	r2, #0
 8014854:	d03b      	beq.n	80148ce <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 8014856:	4980      	ldr	r1, [pc, #512]	; (8014a58 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>)
 8014858:	2aff      	cmp	r2, #255	; 0xff
 801485a:	680f      	ldr	r7, [r1, #0]
 801485c:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 8014860:	f3c7 2907 	ubfx	r9, r7, #8, #8
 8014864:	b2ff      	uxtb	r7, r7
 8014866:	f000 80ed 	beq.w	8014a44 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 801486a:	fa1f f882 	uxth.w	r8, r2
 801486e:	43d2      	mvns	r2, r2
 8014870:	f810 ec03 	ldrb.w	lr, [r0, #-3]
 8014874:	fb17 f708 	smulbb	r7, r7, r8
 8014878:	b2d2      	uxtb	r2, r2
 801487a:	fb19 f908 	smulbb	r9, r9, r8
 801487e:	fb0e 7702 	mla	r7, lr, r2, r7
 8014882:	fb1b f808 	smulbb	r8, fp, r8
 8014886:	b2bf      	uxth	r7, r7
 8014888:	f107 0e01 	add.w	lr, r7, #1
 801488c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8014890:	123f      	asrs	r7, r7, #8
 8014892:	f800 7c03 	strb.w	r7, [r0, #-3]
 8014896:	f810 7c02 	ldrb.w	r7, [r0, #-2]
 801489a:	fb07 9902 	mla	r9, r7, r2, r9
 801489e:	fa1f f989 	uxth.w	r9, r9
 80148a2:	f109 0701 	add.w	r7, r9, #1
 80148a6:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 80148aa:	f810 7c01 	ldrb.w	r7, [r0, #-1]
 80148ae:	fb07 8802 	mla	r8, r7, r2, r8
 80148b2:	ea4f 2929 	mov.w	r9, r9, asr #8
 80148b6:	fa1f f888 	uxth.w	r8, r8
 80148ba:	f800 9c02 	strb.w	r9, [r0, #-2]
 80148be:	f108 0201 	add.w	r2, r8, #1
 80148c2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80148c6:	ea4f 2828 	mov.w	r8, r8, asr #8
 80148ca:	f800 8c01 	strb.w	r8, [r0, #-1]
 80148ce:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80148d0:	3003      	adds	r0, #3
 80148d2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80148d6:	4415      	add	r5, r2
 80148d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80148da:	4414      	add	r4, r2
 80148dc:	e7a6      	b.n	801482c <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80148de:	2700      	movs	r7, #0
 80148e0:	1bda      	subs	r2, r3, r7
 80148e2:	2a00      	cmp	r2, #0
 80148e4:	dc40      	bgt.n	8014968 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80148e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80148ea:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80148ee:	441e      	add	r6, r3
 80148f0:	9b00      	ldr	r3, [sp, #0]
 80148f2:	2b00      	cmp	r3, #0
 80148f4:	f340 80ad 	ble.w	8014a52 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 80148f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80148fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80148fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014902:	eeb0 6a62 	vmov.f32	s12, s5
 8014906:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801490a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801490e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014912:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014916:	eeb0 6a43 	vmov.f32	s12, s6
 801491a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801491e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014922:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014926:	ee61 7a27 	vmul.f32	s15, s2, s15
 801492a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801492e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014932:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014936:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801493a:	ee12 2a90 	vmov	r2, s5
 801493e:	eef0 2a47 	vmov.f32	s5, s14
 8014942:	fb92 f3f3 	sdiv	r3, r2, r3
 8014946:	ee13 2a10 	vmov	r2, s6
 801494a:	9311      	str	r3, [sp, #68]	; 0x44
 801494c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801494e:	eeb0 3a67 	vmov.f32	s6, s15
 8014952:	fb92 f3f3 	sdiv	r3, r2, r3
 8014956:	9312      	str	r3, [sp, #72]	; 0x48
 8014958:	9b00      	ldr	r3, [sp, #0]
 801495a:	9a03      	ldr	r2, [sp, #12]
 801495c:	3b01      	subs	r3, #1
 801495e:	9300      	str	r3, [sp, #0]
 8014960:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014962:	bf08      	it	eq
 8014964:	4613      	moveq	r3, r2
 8014966:	e72d      	b.n	80147c4 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014968:	1428      	asrs	r0, r5, #16
 801496a:	d45c      	bmi.n	8014a26 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801496c:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8014970:	4282      	cmp	r2, r0
 8014972:	dd58      	ble.n	8014a26 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014974:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8014978:	d455      	bmi.n	8014a26 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801497a:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801497e:	4572      	cmp	r2, lr
 8014980:	dd51      	ble.n	8014a26 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014982:	9a01      	ldr	r2, [sp, #4]
 8014984:	9902      	ldr	r1, [sp, #8]
 8014986:	fb0e 0002 	mla	r0, lr, r2, r0
 801498a:	0842      	lsrs	r2, r0, #1
 801498c:	07c0      	lsls	r0, r0, #31
 801498e:	5c8a      	ldrb	r2, [r1, r2]
 8014990:	bf54      	ite	pl
 8014992:	f002 020f 	andpl.w	r2, r2, #15
 8014996:	1112      	asrmi	r2, r2, #4
 8014998:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801499c:	b2d2      	uxtb	r2, r2
 801499e:	2a00      	cmp	r2, #0
 80149a0:	d041      	beq.n	8014a26 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80149a2:	492d      	ldr	r1, [pc, #180]	; (8014a58 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>)
 80149a4:	2aff      	cmp	r2, #255	; 0xff
 80149a6:	6808      	ldr	r0, [r1, #0]
 80149a8:	f3c0 4b07 	ubfx	fp, r0, #16, #8
 80149ac:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80149b0:	fa5f fe80 	uxtb.w	lr, r0
 80149b4:	ea4f 0047 	mov.w	r0, r7, lsl #1
 80149b8:	d03b      	beq.n	8014a32 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80149ba:	fa1f f982 	uxth.w	r9, r2
 80149be:	4438      	add	r0, r7
 80149c0:	43d2      	mvns	r2, r2
 80149c2:	f816 8000 	ldrb.w	r8, [r6, r0]
 80149c6:	fb1e fe09 	smulbb	lr, lr, r9
 80149ca:	fb1a fa09 	smulbb	sl, sl, r9
 80149ce:	b2d2      	uxtb	r2, r2
 80149d0:	fb1b f909 	smulbb	r9, fp, r9
 80149d4:	fb08 ee02 	mla	lr, r8, r2, lr
 80149d8:	fa1f fe8e 	uxth.w	lr, lr
 80149dc:	f10e 0801 	add.w	r8, lr, #1
 80149e0:	eb08 2e1e 	add.w	lr, r8, lr, lsr #8
 80149e4:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 80149e8:	f806 e000 	strb.w	lr, [r6, r0]
 80149ec:	4430      	add	r0, r6
 80149ee:	f890 e001 	ldrb.w	lr, [r0, #1]
 80149f2:	fb0e aa02 	mla	sl, lr, r2, sl
 80149f6:	fa1f fa8a 	uxth.w	sl, sl
 80149fa:	f10a 0e01 	add.w	lr, sl, #1
 80149fe:	eb0e 2a1a 	add.w	sl, lr, sl, lsr #8
 8014a02:	f890 e002 	ldrb.w	lr, [r0, #2]
 8014a06:	fb0e 9902 	mla	r9, lr, r2, r9
 8014a0a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8014a0e:	fa1f f989 	uxth.w	r9, r9
 8014a12:	f880 a001 	strb.w	sl, [r0, #1]
 8014a16:	f109 0201 	add.w	r2, r9, #1
 8014a1a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8014a1e:	ea4f 2929 	mov.w	r9, r9, asr #8
 8014a22:	f880 9002 	strb.w	r9, [r0, #2]
 8014a26:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014a28:	3701      	adds	r7, #1
 8014a2a:	4415      	add	r5, r2
 8014a2c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014a2e:	4414      	add	r4, r2
 8014a30:	e756      	b.n	80148e0 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014a32:	4438      	add	r0, r7
 8014a34:	f806 e000 	strb.w	lr, [r6, r0]
 8014a38:	4430      	add	r0, r6
 8014a3a:	f880 a001 	strb.w	sl, [r0, #1]
 8014a3e:	f880 b002 	strb.w	fp, [r0, #2]
 8014a42:	e7f0      	b.n	8014a26 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014a44:	f800 7c03 	strb.w	r7, [r0, #-3]
 8014a48:	f800 9c02 	strb.w	r9, [r0, #-2]
 8014a4c:	f800 bc01 	strb.w	fp, [r0, #-1]
 8014a50:	e73d      	b.n	80148ce <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 8014a52:	b005      	add	sp, #20
 8014a54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a58:	2400895c 	.word	0x2400895c

08014a5c <_ZN8touchgfx8LCD24bppD1Ev>:
 8014a5c:	4770      	bx	lr

08014a5e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8014a5e:	4770      	bx	lr

08014a60 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8014a60:	4770      	bx	lr

08014a62 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8014a62:	4770      	bx	lr

08014a64 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8014a64:	4770      	bx	lr

08014a66 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014a66:	4770      	bx	lr

08014a68 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014a68:	4770      	bx	lr

08014a6a <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014a6a:	4770      	bx	lr

08014a6c <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014a6c:	4770      	bx	lr

08014a6e <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014a6e:	4770      	bx	lr

08014a70 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8014a70:	4770      	bx	lr

08014a72 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014a72:	4770      	bx	lr

08014a74 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8014a74:	4770      	bx	lr

08014a76 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014a76:	4770      	bx	lr

08014a78 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014a78:	4770      	bx	lr

08014a7a <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014a7a:	4770      	bx	lr

08014a7c <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014a7c:	4770      	bx	lr

08014a7e <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014a7e:	4770      	bx	lr

08014a80 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8014a80:	4770      	bx	lr

08014a82 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014a82:	4770      	bx	lr

08014a84 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8014a84:	4770      	bx	lr
	...

08014a88 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8014a88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014a8a:	4606      	mov	r6, r0
 8014a8c:	b087      	sub	sp, #28
 8014a8e:	4615      	mov	r5, r2
 8014a90:	461f      	mov	r7, r3
 8014a92:	b353      	cbz	r3, 8014aea <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8014a94:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8014a98:	2b00      	cmp	r3, #0
 8014a9a:	dd26      	ble.n	8014aea <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8014a9c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8014aa0:	2b00      	cmp	r3, #0
 8014aa2:	dd22      	ble.n	8014aea <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8014aa4:	6808      	ldr	r0, [r1, #0]
 8014aa6:	aa04      	add	r2, sp, #16
 8014aa8:	6849      	ldr	r1, [r1, #4]
 8014aaa:	4c1b      	ldr	r4, [pc, #108]	; (8014b18 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8014aac:	c203      	stmia	r2!, {r0, r1}
 8014aae:	a804      	add	r0, sp, #16
 8014ab0:	f7fa fe04 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014ab4:	6820      	ldr	r0, [r4, #0]
 8014ab6:	6803      	ldr	r3, [r0, #0]
 8014ab8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014aba:	4798      	blx	r3
 8014abc:	2fff      	cmp	r7, #255	; 0xff
 8014abe:	d016      	beq.n	8014aee <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8014ac0:	f010 0f08 	tst.w	r0, #8
 8014ac4:	6820      	ldr	r0, [r4, #0]
 8014ac6:	d015      	beq.n	8014af4 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8014ac8:	2400      	movs	r4, #0
 8014aca:	6801      	ldr	r1, [r0, #0]
 8014acc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014ad0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014ad4:	e9cd 7402 	strd	r7, r4, [sp, #8]
 8014ad8:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8014adc:	9401      	str	r4, [sp, #4]
 8014ade:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8014ae2:	9400      	str	r4, [sp, #0]
 8014ae4:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8014ae6:	4629      	mov	r1, r5
 8014ae8:	47a0      	blx	r4
 8014aea:	b007      	add	sp, #28
 8014aec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014aee:	f010 0f02 	tst.w	r0, #2
 8014af2:	e7e7      	b.n	8014ac4 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x3c>
 8014af4:	6803      	ldr	r3, [r0, #0]
 8014af6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014af8:	4798      	blx	r3
 8014afa:	4b08      	ldr	r3, [pc, #32]	; (8014b1c <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x94>)
 8014afc:	4601      	mov	r1, r0
 8014afe:	4630      	mov	r0, r6
 8014b00:	881a      	ldrh	r2, [r3, #0]
 8014b02:	6833      	ldr	r3, [r6, #0]
 8014b04:	e9cd 5700 	strd	r5, r7, [sp]
 8014b08:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8014b0a:	ab04      	add	r3, sp, #16
 8014b0c:	47a8      	blx	r5
 8014b0e:	6820      	ldr	r0, [r4, #0]
 8014b10:	6803      	ldr	r3, [r0, #0]
 8014b12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014b14:	4798      	blx	r3
 8014b16:	e7e8      	b.n	8014aea <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8014b18:	2400894c 	.word	0x2400894c
 8014b1c:	24008946 	.word	0x24008946

08014b20 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8014b20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014b24:	b08b      	sub	sp, #44	; 0x2c
 8014b26:	460d      	mov	r5, r1
 8014b28:	4616      	mov	r6, r2
 8014b2a:	f89d 8048 	ldrb.w	r8, [sp, #72]	; 0x48
 8014b2e:	f1b8 0f00 	cmp.w	r8, #0
 8014b32:	d047      	beq.n	8014bc4 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa4>
 8014b34:	6810      	ldr	r0, [r2, #0]
 8014b36:	ac06      	add	r4, sp, #24
 8014b38:	6851      	ldr	r1, [r2, #4]
 8014b3a:	4f51      	ldr	r7, [pc, #324]	; (8014c80 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x160>)
 8014b3c:	c403      	stmia	r4!, {r0, r1}
 8014b3e:	6818      	ldr	r0, [r3, #0]
 8014b40:	ac08      	add	r4, sp, #32
 8014b42:	6859      	ldr	r1, [r3, #4]
 8014b44:	c403      	stmia	r4!, {r0, r1}
 8014b46:	a806      	add	r0, sp, #24
 8014b48:	f7fa fdb8 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014b4c:	4631      	mov	r1, r6
 8014b4e:	a808      	add	r0, sp, #32
 8014b50:	f7fa fdf8 	bl	800f744 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014b54:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8014b58:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8014b5c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014b60:	6838      	ldr	r0, [r7, #0]
 8014b62:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014b66:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8014b6a:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	; 0x26
 8014b6e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014b72:	440d      	add	r5, r1
 8014b74:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8014b78:	440a      	add	r2, r1
 8014b7a:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014b7e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014b82:	4413      	add	r3, r2
 8014b84:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8014b88:	6803      	ldr	r3, [r0, #0]
 8014b8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014b8c:	4798      	blx	r3
 8014b8e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014b92:	d01a      	beq.n	8014bca <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xaa>
 8014b94:	f010 0f04 	tst.w	r0, #4
 8014b98:	6838      	ldr	r0, [r7, #0]
 8014b9a:	d019      	beq.n	8014bd0 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb0>
 8014b9c:	2100      	movs	r1, #0
 8014b9e:	6807      	ldr	r7, [r0, #0]
 8014ba0:	b2a4      	uxth	r4, r4
 8014ba2:	f8cd 800c 	str.w	r8, [sp, #12]
 8014ba6:	b2b6      	uxth	r6, r6
 8014ba8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8014bac:	9401      	str	r4, [sp, #4]
 8014bae:	9600      	str	r6, [sp, #0]
 8014bb0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8014bb4:	e9cd 1104 	strd	r1, r1, [sp, #16]
 8014bb8:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014bbc:	9102      	str	r1, [sp, #8]
 8014bbe:	4629      	mov	r1, r5
 8014bc0:	6c7c      	ldr	r4, [r7, #68]	; 0x44
 8014bc2:	47a0      	blx	r4
 8014bc4:	b00b      	add	sp, #44	; 0x2c
 8014bc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014bca:	f010 0f01 	tst.w	r0, #1
 8014bce:	e7e3      	b.n	8014b98 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x78>
 8014bd0:	6803      	ldr	r3, [r0, #0]
 8014bd2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014bd4:	4798      	blx	r3
 8014bd6:	4a2b      	ldr	r2, [pc, #172]	; (8014c84 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x164>)
 8014bd8:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8014bdc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014be0:	8813      	ldrh	r3, [r2, #0]
 8014be2:	f9bd c020 	ldrsh.w	ip, [sp, #32]
 8014be6:	fb03 f404 	mul.w	r4, r3, r4
 8014bea:	fb03 c101 	mla	r1, r3, r1, ip
 8014bee:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014bf2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014bf6:	4408      	add	r0, r1
 8014bf8:	eb06 0146 	add.w	r1, r6, r6, lsl #1
 8014bfc:	4404      	add	r4, r0
 8014bfe:	d02e      	beq.n	8014c5e <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x13e>
 8014c00:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8014c04:	1b9b      	subs	r3, r3, r6
 8014c06:	f1c8 0cff 	rsb	ip, r8, #255	; 0xff
 8014c0a:	1b96      	subs	r6, r2, r6
 8014c0c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014c10:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014c14:	42a0      	cmp	r0, r4
 8014c16:	d22d      	bcs.n	8014c74 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x154>
 8014c18:	eb00 0e01 	add.w	lr, r0, r1
 8014c1c:	4570      	cmp	r0, lr
 8014c1e:	d210      	bcs.n	8014c42 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x122>
 8014c20:	f890 9000 	ldrb.w	r9, [r0]
 8014c24:	f815 2b01 	ldrb.w	r2, [r5], #1
 8014c28:	fb19 f90c 	smulbb	r9, r9, ip
 8014c2c:	fb02 9208 	mla	r2, r2, r8, r9
 8014c30:	b292      	uxth	r2, r2
 8014c32:	f102 0901 	add.w	r9, r2, #1
 8014c36:	eb09 2212 	add.w	r2, r9, r2, lsr #8
 8014c3a:	1212      	asrs	r2, r2, #8
 8014c3c:	f800 2b01 	strb.w	r2, [r0], #1
 8014c40:	e7ec      	b.n	8014c1c <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 8014c42:	4418      	add	r0, r3
 8014c44:	4435      	add	r5, r6
 8014c46:	e7e5      	b.n	8014c14 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 8014c48:	8813      	ldrh	r3, [r2, #0]
 8014c4a:	1b9b      	subs	r3, r3, r6
 8014c4c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014c50:	4418      	add	r0, r3
 8014c52:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014c56:	1b9b      	subs	r3, r3, r6
 8014c58:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014c5c:	441d      	add	r5, r3
 8014c5e:	42a0      	cmp	r0, r4
 8014c60:	d208      	bcs.n	8014c74 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x154>
 8014c62:	eb00 0c01 	add.w	ip, r0, r1
 8014c66:	4560      	cmp	r0, ip
 8014c68:	d2ee      	bcs.n	8014c48 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x128>
 8014c6a:	f815 3b01 	ldrb.w	r3, [r5], #1
 8014c6e:	f800 3b01 	strb.w	r3, [r0], #1
 8014c72:	e7f8      	b.n	8014c66 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x146>
 8014c74:	6838      	ldr	r0, [r7, #0]
 8014c76:	6803      	ldr	r3, [r0, #0]
 8014c78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014c7a:	4798      	blx	r3
 8014c7c:	e7a2      	b.n	8014bc4 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa4>
 8014c7e:	bf00      	nop
 8014c80:	2400894c 	.word	0x2400894c
 8014c84:	24008946 	.word	0x24008946

08014c88 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8014c88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014c8a:	2300      	movs	r3, #0
 8014c8c:	b085      	sub	sp, #20
 8014c8e:	9300      	str	r3, [sp, #0]
 8014c90:	4b41      	ldr	r3, [pc, #260]	; (8014d98 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x110>)
 8014c92:	781b      	ldrb	r3, [r3, #0]
 8014c94:	2b00      	cmp	r3, #0
 8014c96:	d136      	bne.n	8014d06 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7e>
 8014c98:	4a40      	ldr	r2, [pc, #256]	; (8014d9c <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8014c9a:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014c9e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014ca2:	2b00      	cmp	r3, #0
 8014ca4:	d131      	bne.n	8014d0a <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x82>
 8014ca6:	4b3e      	ldr	r3, [pc, #248]	; (8014da0 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x118>)
 8014ca8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014cac:	ac02      	add	r4, sp, #8
 8014cae:	6808      	ldr	r0, [r1, #0]
 8014cb0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014cb4:	ab02      	add	r3, sp, #8
 8014cb6:	6849      	ldr	r1, [r1, #4]
 8014cb8:	4d3a      	ldr	r5, [pc, #232]	; (8014da4 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x11c>)
 8014cba:	c303      	stmia	r3!, {r0, r1}
 8014cbc:	4669      	mov	r1, sp
 8014cbe:	4620      	mov	r0, r4
 8014cc0:	f7fa fd40 	bl	800f744 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014cc4:	4668      	mov	r0, sp
 8014cc6:	f7fa fcf9 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014cca:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014cce:	f8bd 2000 	ldrh.w	r2, [sp]
 8014cd2:	462e      	mov	r6, r5
 8014cd4:	6828      	ldr	r0, [r5, #0]
 8014cd6:	4413      	add	r3, r2
 8014cd8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8014cdc:	f8ad 3008 	strh.w	r3, [sp, #8]
 8014ce0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8014ce4:	4413      	add	r3, r2
 8014ce6:	f8ad 300a 	strh.w	r3, [sp, #10]
 8014cea:	6803      	ldr	r3, [r0, #0]
 8014cec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014cee:	4798      	blx	r3
 8014cf0:	f010 0f01 	tst.w	r0, #1
 8014cf4:	d00b      	beq.n	8014d0e <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x86>
 8014cf6:	6828      	ldr	r0, [r5, #0]
 8014cf8:	6803      	ldr	r3, [r0, #0]
 8014cfa:	e894 0006 	ldmia.w	r4, {r1, r2}
 8014cfe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8014d00:	4798      	blx	r3
 8014d02:	b005      	add	sp, #20
 8014d04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014d06:	4a26      	ldr	r2, [pc, #152]	; (8014da0 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x118>)
 8014d08:	e7c7      	b.n	8014c9a <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8014d0a:	4b24      	ldr	r3, [pc, #144]	; (8014d9c <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8014d0c:	e7cc      	b.n	8014ca8 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8014d0e:	6830      	ldr	r0, [r6, #0]
 8014d10:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8014d14:	6803      	ldr	r3, [r0, #0]
 8014d16:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8014d1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014d1c:	4798      	blx	r3
 8014d1e:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8014d22:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014d26:	f8bd 4004 	ldrh.w	r4, [sp, #4]
 8014d2a:	fb14 3402 	smlabb	r4, r4, r2, r3
 8014d2e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014d32:	4404      	add	r4, r0
 8014d34:	6830      	ldr	r0, [r6, #0]
 8014d36:	6803      	ldr	r3, [r0, #0]
 8014d38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014d3a:	4798      	blx	r3
 8014d3c:	4917      	ldr	r1, [pc, #92]	; (8014d9c <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8014d3e:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8014d42:	880b      	ldrh	r3, [r1, #0]
 8014d44:	f9bd c008 	ldrsh.w	ip, [sp, #8]
 8014d48:	fb03 c202 	mla	r2, r3, r2, ip
 8014d4c:	437b      	muls	r3, r7
 8014d4e:	eb05 0745 	add.w	r7, r5, r5, lsl #1
 8014d52:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014d56:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014d5a:	4410      	add	r0, r2
 8014d5c:	18c2      	adds	r2, r0, r3
 8014d5e:	4290      	cmp	r0, r2
 8014d60:	d214      	bcs.n	8014d8c <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>
 8014d62:	eb00 0c07 	add.w	ip, r0, r7
 8014d66:	4560      	cmp	r0, ip
 8014d68:	d204      	bcs.n	8014d74 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xec>
 8014d6a:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014d6e:	f800 3b01 	strb.w	r3, [r0], #1
 8014d72:	e7f8      	b.n	8014d66 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xde>
 8014d74:	880b      	ldrh	r3, [r1, #0]
 8014d76:	1b5b      	subs	r3, r3, r5
 8014d78:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014d7c:	4418      	add	r0, r3
 8014d7e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8014d82:	1b5b      	subs	r3, r3, r5
 8014d84:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014d88:	441c      	add	r4, r3
 8014d8a:	e7e8      	b.n	8014d5e <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd6>
 8014d8c:	6830      	ldr	r0, [r6, #0]
 8014d8e:	6803      	ldr	r3, [r0, #0]
 8014d90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014d92:	4798      	blx	r3
 8014d94:	e7b5      	b.n	8014d02 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8014d96:	bf00      	nop
 8014d98:	24008944 	.word	0x24008944
 8014d9c:	24008946 	.word	0x24008946
 8014da0:	24008948 	.word	0x24008948
 8014da4:	2400894c 	.word	0x2400894c

08014da8 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8014da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dac:	b089      	sub	sp, #36	; 0x24
 8014dae:	4607      	mov	r7, r0
 8014db0:	4689      	mov	r9, r1
 8014db2:	4692      	mov	sl, r2
 8014db4:	ac08      	add	r4, sp, #32
 8014db6:	461e      	mov	r6, r3
 8014db8:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8014dbc:	4620      	mov	r0, r4
 8014dbe:	f7fe f8ef 	bl	8012fa0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8014dc2:	683b      	ldr	r3, [r7, #0]
 8014dc4:	4605      	mov	r5, r0
 8014dc6:	4620      	mov	r0, r4
 8014dc8:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8014dcc:	f7fd fffc 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014dd0:	4683      	mov	fp, r0
 8014dd2:	4620      	mov	r0, r4
 8014dd4:	f7fe f82c 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014dd8:	4653      	mov	r3, sl
 8014dda:	464a      	mov	r2, r9
 8014ddc:	4639      	mov	r1, r7
 8014dde:	9500      	str	r5, [sp, #0]
 8014de0:	e9cd b001 	strd	fp, r0, [sp, #4]
 8014de4:	a806      	add	r0, sp, #24
 8014de6:	47c0      	blx	r8
 8014de8:	a906      	add	r1, sp, #24
 8014dea:	4630      	mov	r0, r6
 8014dec:	f7fd fed0 	bl	8012b90 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE>
 8014df0:	4628      	mov	r0, r5
 8014df2:	b009      	add	sp, #36	; 0x24
 8014df4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014df8 <_ZN8touchgfx8LCD24bppD0Ev>:
 8014df8:	b510      	push	{r4, lr}
 8014dfa:	4604      	mov	r4, r0
 8014dfc:	2158      	movs	r1, #88	; 0x58
 8014dfe:	f007 fb02 	bl	801c406 <_ZdlPvj>
 8014e02:	4620      	mov	r0, r4
 8014e04:	bd10      	pop	{r4, pc}

08014e06 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014e06:	b510      	push	{r4, lr}
 8014e08:	4604      	mov	r4, r0
 8014e0a:	2104      	movs	r1, #4
 8014e0c:	f007 fafb 	bl	801c406 <_ZdlPvj>
 8014e10:	4620      	mov	r0, r4
 8014e12:	bd10      	pop	{r4, pc}

08014e14 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8014e14:	b510      	push	{r4, lr}
 8014e16:	4604      	mov	r4, r0
 8014e18:	2104      	movs	r1, #4
 8014e1a:	f007 faf4 	bl	801c406 <_ZdlPvj>
 8014e1e:	4620      	mov	r0, r4
 8014e20:	bd10      	pop	{r4, pc}

08014e22 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014e22:	b510      	push	{r4, lr}
 8014e24:	4604      	mov	r4, r0
 8014e26:	2104      	movs	r1, #4
 8014e28:	f007 faed 	bl	801c406 <_ZdlPvj>
 8014e2c:	4620      	mov	r0, r4
 8014e2e:	bd10      	pop	{r4, pc}

08014e30 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8014e30:	b510      	push	{r4, lr}
 8014e32:	4604      	mov	r4, r0
 8014e34:	2104      	movs	r1, #4
 8014e36:	f007 fae6 	bl	801c406 <_ZdlPvj>
 8014e3a:	4620      	mov	r0, r4
 8014e3c:	bd10      	pop	{r4, pc}

08014e3e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014e3e:	b510      	push	{r4, lr}
 8014e40:	4604      	mov	r4, r0
 8014e42:	2104      	movs	r1, #4
 8014e44:	f007 fadf 	bl	801c406 <_ZdlPvj>
 8014e48:	4620      	mov	r0, r4
 8014e4a:	bd10      	pop	{r4, pc}

08014e4c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014e4c:	b510      	push	{r4, lr}
 8014e4e:	4604      	mov	r4, r0
 8014e50:	2104      	movs	r1, #4
 8014e52:	f007 fad8 	bl	801c406 <_ZdlPvj>
 8014e56:	4620      	mov	r0, r4
 8014e58:	bd10      	pop	{r4, pc}

08014e5a <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8014e5a:	b510      	push	{r4, lr}
 8014e5c:	4604      	mov	r4, r0
 8014e5e:	2104      	movs	r1, #4
 8014e60:	f007 fad1 	bl	801c406 <_ZdlPvj>
 8014e64:	4620      	mov	r0, r4
 8014e66:	bd10      	pop	{r4, pc}

08014e68 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014e68:	b510      	push	{r4, lr}
 8014e6a:	4604      	mov	r4, r0
 8014e6c:	2104      	movs	r1, #4
 8014e6e:	f007 faca 	bl	801c406 <_ZdlPvj>
 8014e72:	4620      	mov	r0, r4
 8014e74:	bd10      	pop	{r4, pc}

08014e76 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014e76:	b510      	push	{r4, lr}
 8014e78:	4604      	mov	r4, r0
 8014e7a:	2104      	movs	r1, #4
 8014e7c:	f007 fac3 	bl	801c406 <_ZdlPvj>
 8014e80:	4620      	mov	r0, r4
 8014e82:	bd10      	pop	{r4, pc}

08014e84 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8014e84:	b510      	push	{r4, lr}
 8014e86:	4604      	mov	r4, r0
 8014e88:	2104      	movs	r1, #4
 8014e8a:	f007 fabc 	bl	801c406 <_ZdlPvj>
 8014e8e:	4620      	mov	r0, r4
 8014e90:	bd10      	pop	{r4, pc}

08014e92 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014e92:	b510      	push	{r4, lr}
 8014e94:	4604      	mov	r4, r0
 8014e96:	2104      	movs	r1, #4
 8014e98:	f007 fab5 	bl	801c406 <_ZdlPvj>
 8014e9c:	4620      	mov	r0, r4
 8014e9e:	bd10      	pop	{r4, pc}

08014ea0 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8014ea0:	b510      	push	{r4, lr}
 8014ea2:	4604      	mov	r4, r0
 8014ea4:	2104      	movs	r1, #4
 8014ea6:	f007 faae 	bl	801c406 <_ZdlPvj>
 8014eaa:	4620      	mov	r0, r4
 8014eac:	bd10      	pop	{r4, pc}

08014eae <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014eae:	b510      	push	{r4, lr}
 8014eb0:	4604      	mov	r4, r0
 8014eb2:	2104      	movs	r1, #4
 8014eb4:	f007 faa7 	bl	801c406 <_ZdlPvj>
 8014eb8:	4620      	mov	r0, r4
 8014eba:	bd10      	pop	{r4, pc}

08014ebc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014ebc:	b510      	push	{r4, lr}
 8014ebe:	4604      	mov	r4, r0
 8014ec0:	2104      	movs	r1, #4
 8014ec2:	f007 faa0 	bl	801c406 <_ZdlPvj>
 8014ec6:	4620      	mov	r0, r4
 8014ec8:	bd10      	pop	{r4, pc}

08014eca <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8014eca:	b510      	push	{r4, lr}
 8014ecc:	4604      	mov	r4, r0
 8014ece:	2104      	movs	r1, #4
 8014ed0:	f007 fa99 	bl	801c406 <_ZdlPvj>
 8014ed4:	4620      	mov	r0, r4
 8014ed6:	bd10      	pop	{r4, pc}

08014ed8 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014ed8:	b510      	push	{r4, lr}
 8014eda:	4604      	mov	r4, r0
 8014edc:	2104      	movs	r1, #4
 8014ede:	f007 fa92 	bl	801c406 <_ZdlPvj>
 8014ee2:	4620      	mov	r0, r4
 8014ee4:	bd10      	pop	{r4, pc}

08014ee6 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8014ee6:	b510      	push	{r4, lr}
 8014ee8:	4604      	mov	r4, r0
 8014eea:	2104      	movs	r1, #4
 8014eec:	f007 fa8b 	bl	801c406 <_ZdlPvj>
 8014ef0:	4620      	mov	r0, r4
 8014ef2:	bd10      	pop	{r4, pc}

08014ef4 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8014ef4:	b510      	push	{r4, lr}
 8014ef6:	4604      	mov	r4, r0
 8014ef8:	2104      	movs	r1, #4
 8014efa:	f007 fa84 	bl	801c406 <_ZdlPvj>
 8014efe:	4620      	mov	r0, r4
 8014f00:	bd10      	pop	{r4, pc}

08014f02 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8014f02:	b510      	push	{r4, lr}
 8014f04:	4604      	mov	r4, r0
 8014f06:	2104      	movs	r1, #4
 8014f08:	f007 fa7d 	bl	801c406 <_ZdlPvj>
 8014f0c:	4620      	mov	r0, r4
 8014f0e:	bd10      	pop	{r4, pc}

08014f10 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8014f10:	b510      	push	{r4, lr}
 8014f12:	4604      	mov	r4, r0
 8014f14:	2104      	movs	r1, #4
 8014f16:	f007 fa76 	bl	801c406 <_ZdlPvj>
 8014f1a:	4620      	mov	r0, r4
 8014f1c:	bd10      	pop	{r4, pc}

08014f1e <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8014f1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014f22:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8014f26:	9c06      	ldr	r4, [sp, #24]
 8014f28:	2800      	cmp	r0, #0
 8014f2a:	d06e      	beq.n	801500a <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8014f2c:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 8014f30:	2d00      	cmp	r5, #0
 8014f32:	dd6a      	ble.n	801500a <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8014f34:	f9b3 c006 	ldrsh.w	ip, [r3, #6]
 8014f38:	f1bc 0f00 	cmp.w	ip, #0
 8014f3c:	dd65      	ble.n	801500a <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8014f3e:	f9b3 6002 	ldrsh.w	r6, [r3, #2]
 8014f42:	28ff      	cmp	r0, #255	; 0xff
 8014f44:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014f48:	f3c4 2707 	ubfx	r7, r4, #8, #8
 8014f4c:	fb02 3306 	mla	r3, r2, r6, r3
 8014f50:	f3c4 4607 	ubfx	r6, r4, #16, #8
 8014f54:	b2e4      	uxtb	r4, r4
 8014f56:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014f5a:	4419      	add	r1, r3
 8014f5c:	fb02 f30c 	mul.w	r3, r2, ip
 8014f60:	eba2 0205 	sub.w	r2, r2, r5
 8014f64:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014f68:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014f6c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014f70:	440b      	add	r3, r1
 8014f72:	d03e      	beq.n	8014ff2 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd4>
 8014f74:	fa1f fc80 	uxth.w	ip, r0
 8014f78:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8014f7c:	fb06 f60c 	mul.w	r6, r6, ip
 8014f80:	b280      	uxth	r0, r0
 8014f82:	fb07 f70c 	mul.w	r7, r7, ip
 8014f86:	fb04 f40c 	mul.w	r4, r4, ip
 8014f8a:	4299      	cmp	r1, r3
 8014f8c:	d23d      	bcs.n	801500a <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8014f8e:	eb01 0c05 	add.w	ip, r1, r5
 8014f92:	458c      	cmp	ip, r1
 8014f94:	f101 0e03 	add.w	lr, r1, #3
 8014f98:	d928      	bls.n	8014fec <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xce>
 8014f9a:	f81e 1c03 	ldrb.w	r1, [lr, #-3]
 8014f9e:	fb11 f100 	smulbb	r1, r1, r0
 8014fa2:	4421      	add	r1, r4
 8014fa4:	b289      	uxth	r1, r1
 8014fa6:	f101 0801 	add.w	r8, r1, #1
 8014faa:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8014fae:	1209      	asrs	r1, r1, #8
 8014fb0:	f80e 1c03 	strb.w	r1, [lr, #-3]
 8014fb4:	f81e 1c02 	ldrb.w	r1, [lr, #-2]
 8014fb8:	fb11 f100 	smulbb	r1, r1, r0
 8014fbc:	4439      	add	r1, r7
 8014fbe:	b289      	uxth	r1, r1
 8014fc0:	f101 0801 	add.w	r8, r1, #1
 8014fc4:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8014fc8:	1209      	asrs	r1, r1, #8
 8014fca:	f80e 1c02 	strb.w	r1, [lr, #-2]
 8014fce:	f81e 1c01 	ldrb.w	r1, [lr, #-1]
 8014fd2:	fb11 f100 	smulbb	r1, r1, r0
 8014fd6:	4431      	add	r1, r6
 8014fd8:	b289      	uxth	r1, r1
 8014fda:	f101 0801 	add.w	r8, r1, #1
 8014fde:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8014fe2:	1209      	asrs	r1, r1, #8
 8014fe4:	f80e 1c01 	strb.w	r1, [lr, #-1]
 8014fe8:	4671      	mov	r1, lr
 8014fea:	e7d2      	b.n	8014f92 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x74>
 8014fec:	4411      	add	r1, r2
 8014fee:	e7cc      	b.n	8014f8a <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6c>
 8014ff0:	4411      	add	r1, r2
 8014ff2:	4299      	cmp	r1, r3
 8014ff4:	d209      	bcs.n	801500a <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8014ff6:	1948      	adds	r0, r1, r5
 8014ff8:	4281      	cmp	r1, r0
 8014ffa:	d2f9      	bcs.n	8014ff0 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd2>
 8014ffc:	700c      	strb	r4, [r1, #0]
 8014ffe:	3103      	adds	r1, #3
 8015000:	f801 7c02 	strb.w	r7, [r1, #-2]
 8015004:	f801 6c01 	strb.w	r6, [r1, #-1]
 8015008:	e7f6      	b.n	8014ff8 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xda>
 801500a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08015010 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8015010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015014:	b093      	sub	sp, #76	; 0x4c
 8015016:	4699      	mov	r9, r3
 8015018:	4617      	mov	r7, r2
 801501a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801501e:	f9bd 8074 	ldrsh.w	r8, [sp, #116]	; 0x74
 8015022:	4604      	mov	r4, r0
 8015024:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015028:	a80c      	add	r0, sp, #48	; 0x30
 801502a:	f9bd 6078 	ldrsh.w	r6, [sp, #120]	; 0x78
 801502e:	460d      	mov	r5, r1
 8015030:	4649      	mov	r1, r9
 8015032:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8015036:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801503a:	f8ad 8034 	strh.w	r8, [sp, #52]	; 0x34
 801503e:	f8ad 6036 	strh.w	r6, [sp, #54]	; 0x36
 8015042:	f7f5 fce3 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 8015046:	4639      	mov	r1, r7
 8015048:	a80c      	add	r0, sp, #48	; 0x30
 801504a:	f7f5 fcdf 	bl	800aa0c <_ZN8touchgfx4RectaNERKS0_>
 801504e:	4b78      	ldr	r3, [pc, #480]	; (8015230 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8015050:	8818      	ldrh	r0, [r3, #0]
 8015052:	4b78      	ldr	r3, [pc, #480]	; (8015234 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>)
 8015054:	b202      	sxth	r2, r0
 8015056:	8819      	ldrh	r1, [r3, #0]
 8015058:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801505c:	b20f      	sxth	r7, r1
 801505e:	2b00      	cmp	r3, #0
 8015060:	da07      	bge.n	8015072 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x62>
 8015062:	f8bd c034 	ldrh.w	ip, [sp, #52]	; 0x34
 8015066:	4463      	add	r3, ip
 8015068:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801506c:	2300      	movs	r3, #0
 801506e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8015072:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8015076:	f9bd c034 	ldrsh.w	ip, [sp, #52]	; 0x34
 801507a:	1ad2      	subs	r2, r2, r3
 801507c:	4594      	cmp	ip, r2
 801507e:	bfc4      	itt	gt
 8015080:	1ac2      	subgt	r2, r0, r3
 8015082:	f8ad 2034 	strhgt.w	r2, [sp, #52]	; 0x34
 8015086:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801508a:	2a00      	cmp	r2, #0
 801508c:	da07      	bge.n	801509e <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x8e>
 801508e:	f8bd c036 	ldrh.w	ip, [sp, #54]	; 0x36
 8015092:	4462      	add	r2, ip
 8015094:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8015098:	2200      	movs	r2, #0
 801509a:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801509e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80150a2:	f9bd c036 	ldrsh.w	ip, [sp, #54]	; 0x36
 80150a6:	1abf      	subs	r7, r7, r2
 80150a8:	45bc      	cmp	ip, r7
 80150aa:	f8df c190 	ldr.w	ip, [pc, #400]	; 801523c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22c>
 80150ae:	bfc8      	it	gt
 80150b0:	1a8f      	subgt	r7, r1, r2
 80150b2:	f89c c000 	ldrb.w	ip, [ip]
 80150b6:	bfc8      	it	gt
 80150b8:	f8ad 7036 	strhgt.w	r7, [sp, #54]	; 0x36
 80150bc:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80150c0:	f1bc 0f00 	cmp.w	ip, #0
 80150c4:	d176      	bne.n	80151b4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a4>
 80150c6:	4287      	cmp	r7, r0
 80150c8:	bf14      	ite	ne
 80150ca:	2100      	movne	r1, #0
 80150cc:	2101      	moveq	r1, #1
 80150ce:	2f00      	cmp	r7, #0
 80150d0:	9107      	str	r1, [sp, #28]
 80150d2:	dd73      	ble.n	80151bc <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1ac>
 80150d4:	f9bd 1036 	ldrsh.w	r1, [sp, #54]	; 0x36
 80150d8:	2900      	cmp	r1, #0
 80150da:	9104      	str	r1, [sp, #16]
 80150dc:	dd6e      	ble.n	80151bc <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1ac>
 80150de:	f8b9 1000 	ldrh.w	r1, [r9]
 80150e2:	a80e      	add	r0, sp, #56	; 0x38
 80150e4:	f8ad 8044 	strh.w	r8, [sp, #68]	; 0x44
 80150e8:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 80150ec:	1a5b      	subs	r3, r3, r1
 80150ee:	a910      	add	r1, sp, #64	; 0x40
 80150f0:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80150f4:	b21b      	sxth	r3, r3
 80150f6:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
 80150fa:	f8df a144 	ldr.w	sl, [pc, #324]	; 8015240 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x230>
 80150fe:	9305      	str	r3, [sp, #20]
 8015100:	f8b9 3002 	ldrh.w	r3, [r9, #2]
 8015104:	1ad2      	subs	r2, r2, r3
 8015106:	b213      	sxth	r3, r2
 8015108:	9306      	str	r3, [sp, #24]
 801510a:	9b05      	ldr	r3, [sp, #20]
 801510c:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015110:	9b06      	ldr	r3, [sp, #24]
 8015112:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8015116:	9b04      	ldr	r3, [sp, #16]
 8015118:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801511c:	2300      	movs	r3, #0
 801511e:	9310      	str	r3, [sp, #64]	; 0x40
 8015120:	f7fa fb10 	bl	800f744 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015124:	4640      	mov	r0, r8
 8015126:	f7fa fac9 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801512a:	a810      	add	r0, sp, #64	; 0x40
 801512c:	f7fa fac6 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015130:	4b41      	ldr	r3, [pc, #260]	; (8015238 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x228>)
 8015132:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8015136:	4628      	mov	r0, r5
 8015138:	881b      	ldrh	r3, [r3, #0]
 801513a:	9308      	str	r3, [sp, #32]
 801513c:	eb0b 034b 	add.w	r3, fp, fp, lsl #1
 8015140:	b21b      	sxth	r3, r3
 8015142:	9303      	str	r3, [sp, #12]
 8015144:	682b      	ldr	r3, [r5, #0]
 8015146:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015148:	4798      	blx	r3
 801514a:	9a03      	ldr	r2, [sp, #12]
 801514c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8015150:	4681      	mov	r9, r0
 8015152:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8015156:	fb13 f302 	smulbb	r3, r3, r2
 801515a:	2203      	movs	r2, #3
 801515c:	f8da 0000 	ldr.w	r0, [sl]
 8015160:	fb15 3302 	smlabb	r3, r5, r2, r3
 8015164:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8015166:	920b      	str	r2, [sp, #44]	; 0x2c
 8015168:	441d      	add	r5, r3
 801516a:	6803      	ldr	r3, [r0, #0]
 801516c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801516e:	4798      	blx	r3
 8015170:	9009      	str	r0, [sp, #36]	; 0x24
 8015172:	f8da 0000 	ldr.w	r0, [sl]
 8015176:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801517a:	6803      	ldr	r3, [r0, #0]
 801517c:	910a      	str	r1, [sp, #40]	; 0x28
 801517e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015180:	f9bd 6032 	ldrsh.w	r6, [sp, #50]	; 0x32
 8015184:	4798      	blx	r3
 8015186:	f010 0f01 	tst.w	r0, #1
 801518a:	e9dd 120a 	ldrd	r1, r2, [sp, #40]	; 0x28
 801518e:	d01e      	beq.n	80151ce <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1be>
 8015190:	f8da 0000 	ldr.w	r0, [sl]
 8015194:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8015198:	6803      	ldr	r3, [r0, #0]
 801519a:	9200      	str	r2, [sp, #0]
 801519c:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801519e:	462b      	mov	r3, r5
 80151a0:	e898 0006 	ldmia.w	r8, {r1, r2}
 80151a4:	47b0      	blx	r6
 80151a6:	9b05      	ldr	r3, [sp, #20]
 80151a8:	80a7      	strh	r7, [r4, #4]
 80151aa:	8023      	strh	r3, [r4, #0]
 80151ac:	9b06      	ldr	r3, [sp, #24]
 80151ae:	8063      	strh	r3, [r4, #2]
 80151b0:	9b04      	ldr	r3, [sp, #16]
 80151b2:	e007      	b.n	80151c4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b4>
 80151b4:	f9bd 0036 	ldrsh.w	r0, [sp, #54]	; 0x36
 80151b8:	4288      	cmp	r0, r1
 80151ba:	e785      	b.n	80150c8 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb8>
 80151bc:	2300      	movs	r3, #0
 80151be:	8023      	strh	r3, [r4, #0]
 80151c0:	8063      	strh	r3, [r4, #2]
 80151c2:	80a3      	strh	r3, [r4, #4]
 80151c4:	4620      	mov	r0, r4
 80151c6:	80e3      	strh	r3, [r4, #6]
 80151c8:	b013      	add	sp, #76	; 0x4c
 80151ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151ce:	fb09 f606 	mul.w	r6, r9, r6
 80151d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80151d4:	fb11 6602 	smlabb	r6, r1, r2, r6
 80151d8:	9a07      	ldr	r2, [sp, #28]
 80151da:	4433      	add	r3, r6
 80151dc:	461e      	mov	r6, r3
 80151de:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 80151e2:	b16a      	cbz	r2, 8015200 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f0>
 80151e4:	9a08      	ldr	r2, [sp, #32]
 80151e6:	4593      	cmp	fp, r2
 80151e8:	d10a      	bne.n	8015200 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f0>
 80151ea:	f8da 0000 	ldr.w	r0, [sl]
 80151ee:	fb09 f303 	mul.w	r3, r9, r3
 80151f2:	4629      	mov	r1, r5
 80151f4:	6802      	ldr	r2, [r0, #0]
 80151f6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 80151fa:	4632      	mov	r2, r6
 80151fc:	47d0      	blx	sl
 80151fe:	e7d2      	b.n	80151a6 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x196>
 8015200:	9a03      	ldr	r2, [sp, #12]
 8015202:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8015240 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x230>
 8015206:	fb02 5803 	mla	r8, r2, r3, r5
 801520a:	4545      	cmp	r5, r8
 801520c:	d2cb      	bcs.n	80151a6 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x196>
 801520e:	f8db 0000 	ldr.w	r0, [fp]
 8015212:	4629      	mov	r1, r5
 8015214:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8015218:	6802      	ldr	r2, [r0, #0]
 801521a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801521e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8015222:	4632      	mov	r2, r6
 8015224:	47d0      	blx	sl
 8015226:	9b03      	ldr	r3, [sp, #12]
 8015228:	444e      	add	r6, r9
 801522a:	441d      	add	r5, r3
 801522c:	e7ed      	b.n	801520a <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1fa>
 801522e:	bf00      	nop
 8015230:	24008940 	.word	0x24008940
 8015234:	24008942 	.word	0x24008942
 8015238:	24008946 	.word	0x24008946
 801523c:	24008944 	.word	0x24008944
 8015240:	2400894c 	.word	0x2400894c

08015244 <_ZN8touchgfx8LCD24bppC1Ev>:
 8015244:	2200      	movs	r2, #0
 8015246:	490c      	ldr	r1, [pc, #48]	; (8015278 <_ZN8touchgfx8LCD24bppC1Ev+0x34>)
 8015248:	6042      	str	r2, [r0, #4]
 801524a:	6001      	str	r1, [r0, #0]
 801524c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8015250:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8015254:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8015258:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801525c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8015260:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8015264:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8015268:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801526c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8015270:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8015274:	4770      	bx	lr
 8015276:	bf00      	nop
 8015278:	0801f674 	.word	0x0801f674

0801527c <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801527c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015280:	b091      	sub	sp, #68	; 0x44
 8015282:	4607      	mov	r7, r0
 8015284:	4688      	mov	r8, r1
 8015286:	6810      	ldr	r0, [r2, #0]
 8015288:	6851      	ldr	r1, [r2, #4]
 801528a:	ac0c      	add	r4, sp, #48	; 0x30
 801528c:	4616      	mov	r6, r2
 801528e:	f89d 9068 	ldrb.w	r9, [sp, #104]	; 0x68
 8015292:	4d64      	ldr	r5, [pc, #400]	; (8015424 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8015294:	f8df a190 	ldr.w	sl, [pc, #400]	; 8015428 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8015298:	c403      	stmia	r4!, {r0, r1}
 801529a:	6818      	ldr	r0, [r3, #0]
 801529c:	ac0e      	add	r4, sp, #56	; 0x38
 801529e:	6859      	ldr	r1, [r3, #4]
 80152a0:	c403      	stmia	r4!, {r0, r1}
 80152a2:	a80c      	add	r0, sp, #48	; 0x30
 80152a4:	f7fa fa0a 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80152a8:	4631      	mov	r1, r6
 80152aa:	a80e      	add	r0, sp, #56	; 0x38
 80152ac:	f7fa fa4a 	bl	800f744 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80152b0:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80152b4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80152b8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80152bc:	6828      	ldr	r0, [r5, #0]
 80152be:	fb11 2103 	smlabb	r1, r1, r3, r2
 80152c2:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 80152c6:	f9bd 603e 	ldrsh.w	r6, [sp, #62]	; 0x3e
 80152ca:	440f      	add	r7, r1
 80152cc:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80152d0:	440a      	add	r2, r1
 80152d2:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80152d6:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80152da:	4413      	add	r3, r2
 80152dc:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80152e0:	6803      	ldr	r3, [r0, #0]
 80152e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80152e4:	4798      	blx	r3
 80152e6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80152ea:	6828      	ldr	r0, [r5, #0]
 80152ec:	d01f      	beq.n	801532e <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb2>
 80152ee:	2201      	movs	r2, #1
 80152f0:	2500      	movs	r5, #0
 80152f2:	6801      	ldr	r1, [r0, #0]
 80152f4:	b2a4      	uxth	r4, r4
 80152f6:	b2b6      	uxth	r6, r6
 80152f8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80152fc:	e9cd 2508 	strd	r2, r5, [sp, #32]
 8015300:	250b      	movs	r5, #11
 8015302:	9507      	str	r5, [sp, #28]
 8015304:	f8ba 5000 	ldrh.w	r5, [sl]
 8015308:	f8cd 9010 	str.w	r9, [sp, #16]
 801530c:	9602      	str	r6, [sp, #8]
 801530e:	9401      	str	r4, [sp, #4]
 8015310:	e9cd 2505 	strd	r2, r5, [sp, #20]
 8015314:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8015318:	9203      	str	r2, [sp, #12]
 801531a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801531e:	9200      	str	r2, [sp, #0]
 8015320:	4642      	mov	r2, r8
 8015322:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8015324:	4639      	mov	r1, r7
 8015326:	47a0      	blx	r4
 8015328:	b011      	add	sp, #68	; 0x44
 801532a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801532e:	6803      	ldr	r3, [r0, #0]
 8015330:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015332:	4798      	blx	r3
 8015334:	f8ba 5000 	ldrh.w	r5, [sl]
 8015338:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801533c:	f04f 0e04 	mov.w	lr, #4
 8015340:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8015344:	436e      	muls	r6, r5
 8015346:	fb05 2303 	mla	r3, r5, r3, r2
 801534a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801534e:	1b2d      	subs	r5, r5, r4
 8015350:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015354:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015358:	4418      	add	r0, r3
 801535a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801535e:	1982      	adds	r2, r0, r6
 8015360:	1b1b      	subs	r3, r3, r4
 8015362:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015366:	930b      	str	r3, [sp, #44]	; 0x2c
 8015368:	4290      	cmp	r0, r2
 801536a:	d254      	bcs.n	8015416 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x19a>
 801536c:	eb00 0a04 	add.w	sl, r0, r4
 8015370:	4550      	cmp	r0, sl
 8015372:	d24c      	bcs.n	801540e <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x192>
 8015374:	f817 1b01 	ldrb.w	r1, [r7], #1
 8015378:	fb1e e101 	smlabb	r1, lr, r1, lr
 801537c:	eb08 0c01 	add.w	ip, r8, r1
 8015380:	f89c 3003 	ldrb.w	r3, [ip, #3]
 8015384:	b173      	cbz	r3, 80153a4 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8015386:	2bff      	cmp	r3, #255	; 0xff
 8015388:	f818 b001 	ldrb.w	fp, [r8, r1]
 801538c:	d10c      	bne.n	80153a8 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801538e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015392:	d109      	bne.n	80153a8 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8015394:	f880 b000 	strb.w	fp, [r0]
 8015398:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801539c:	7043      	strb	r3, [r0, #1]
 801539e:	f89c 3002 	ldrb.w	r3, [ip, #2]
 80153a2:	7083      	strb	r3, [r0, #2]
 80153a4:	3003      	adds	r0, #3
 80153a6:	e7e3      	b.n	8015370 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf4>
 80153a8:	fb09 f103 	mul.w	r1, r9, r3
 80153ac:	1c4b      	adds	r3, r1, #1
 80153ae:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80153b2:	7801      	ldrb	r1, [r0, #0]
 80153b4:	121b      	asrs	r3, r3, #8
 80153b6:	b29e      	uxth	r6, r3
 80153b8:	43db      	mvns	r3, r3
 80153ba:	fb1b fb06 	smulbb	fp, fp, r6
 80153be:	b2db      	uxtb	r3, r3
 80153c0:	fb01 b103 	mla	r1, r1, r3, fp
 80153c4:	b289      	uxth	r1, r1
 80153c6:	f101 0b01 	add.w	fp, r1, #1
 80153ca:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 80153ce:	f890 b001 	ldrb.w	fp, [r0, #1]
 80153d2:	fb1b fb03 	smulbb	fp, fp, r3
 80153d6:	1209      	asrs	r1, r1, #8
 80153d8:	7001      	strb	r1, [r0, #0]
 80153da:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80153de:	fb01 b106 	mla	r1, r1, r6, fp
 80153e2:	b289      	uxth	r1, r1
 80153e4:	f101 0b01 	add.w	fp, r1, #1
 80153e8:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 80153ec:	1209      	asrs	r1, r1, #8
 80153ee:	7041      	strb	r1, [r0, #1]
 80153f0:	f89c 1002 	ldrb.w	r1, [ip, #2]
 80153f4:	f890 c002 	ldrb.w	ip, [r0, #2]
 80153f8:	fb1c f303 	smulbb	r3, ip, r3
 80153fc:	fb01 3606 	mla	r6, r1, r6, r3
 8015400:	b2b6      	uxth	r6, r6
 8015402:	1c73      	adds	r3, r6, #1
 8015404:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015408:	1236      	asrs	r6, r6, #8
 801540a:	7086      	strb	r6, [r0, #2]
 801540c:	e7ca      	b.n	80153a4 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801540e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015410:	4428      	add	r0, r5
 8015412:	441f      	add	r7, r3
 8015414:	e7a8      	b.n	8015368 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xec>
 8015416:	4b03      	ldr	r3, [pc, #12]	; (8015424 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8015418:	6818      	ldr	r0, [r3, #0]
 801541a:	6803      	ldr	r3, [r0, #0]
 801541c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801541e:	4798      	blx	r3
 8015420:	e782      	b.n	8015328 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8015422:	bf00      	nop
 8015424:	2400894c 	.word	0x2400894c
 8015428:	24008946 	.word	0x24008946

0801542c <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801542c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015430:	b091      	sub	sp, #68	; 0x44
 8015432:	4680      	mov	r8, r0
 8015434:	460e      	mov	r6, r1
 8015436:	6810      	ldr	r0, [r2, #0]
 8015438:	6851      	ldr	r1, [r2, #4]
 801543a:	ad0c      	add	r5, sp, #48	; 0x30
 801543c:	4614      	mov	r4, r2
 801543e:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8015442:	f8df 9198 	ldr.w	r9, [pc, #408]	; 80155dc <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b0>
 8015446:	f8df a198 	ldr.w	sl, [pc, #408]	; 80155e0 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801544a:	c503      	stmia	r5!, {r0, r1}
 801544c:	6818      	ldr	r0, [r3, #0]
 801544e:	ad0e      	add	r5, sp, #56	; 0x38
 8015450:	6859      	ldr	r1, [r3, #4]
 8015452:	c503      	stmia	r5!, {r0, r1}
 8015454:	a80c      	add	r0, sp, #48	; 0x30
 8015456:	f7fa f931 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801545a:	4621      	mov	r1, r4
 801545c:	a80e      	add	r0, sp, #56	; 0x38
 801545e:	f7fa f971 	bl	800f744 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015462:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8015466:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801546a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801546e:	f8d9 0000 	ldr.w	r0, [r9]
 8015472:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015476:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801547a:	eb08 0401 	add.w	r4, r8, r1
 801547e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8015482:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015486:	440a      	add	r2, r1
 8015488:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801548c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8015490:	4413      	add	r3, r2
 8015492:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8015496:	6803      	ldr	r3, [r0, #0]
 8015498:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801549a:	4798      	blx	r3
 801549c:	f010 0f80 	tst.w	r0, #128	; 0x80
 80154a0:	f8d9 0000 	ldr.w	r0, [r9]
 80154a4:	d022      	beq.n	80154ec <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80154a6:	2200      	movs	r2, #0
 80154a8:	f04f 0c01 	mov.w	ip, #1
 80154ac:	6801      	ldr	r1, [r0, #0]
 80154ae:	b2ad      	uxth	r5, r5
 80154b0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80154b4:	e9cd c208 	strd	ip, r2, [sp, #32]
 80154b8:	f04f 0c0b 	mov.w	ip, #11
 80154bc:	f8cd c01c 	str.w	ip, [sp, #28]
 80154c0:	f8ba c000 	ldrh.w	ip, [sl]
 80154c4:	9704      	str	r7, [sp, #16]
 80154c6:	9502      	str	r5, [sp, #8]
 80154c8:	e9cd 2c05 	strd	r2, ip, [sp, #20]
 80154cc:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80154d0:	9203      	str	r2, [sp, #12]
 80154d2:	fa1f f288 	uxth.w	r2, r8
 80154d6:	9201      	str	r2, [sp, #4]
 80154d8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80154dc:	9200      	str	r2, [sp, #0]
 80154de:	4632      	mov	r2, r6
 80154e0:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80154e2:	4621      	mov	r1, r4
 80154e4:	47a8      	blx	r5
 80154e6:	b011      	add	sp, #68	; 0x44
 80154e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80154ec:	6803      	ldr	r3, [r0, #0]
 80154ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80154f0:	4798      	blx	r3
 80154f2:	f8ba 2000 	ldrh.w	r2, [sl]
 80154f6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80154fa:	f04f 0e03 	mov.w	lr, #3
 80154fe:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8015502:	4355      	muls	r5, r2
 8015504:	fa1f fc87 	uxth.w	ip, r7
 8015508:	fb02 1303 	mla	r3, r2, r3, r1
 801550c:	eba2 0208 	sub.w	r2, r2, r8
 8015510:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015514:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015518:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801551c:	4418      	add	r0, r3
 801551e:	920b      	str	r2, [sp, #44]	; 0x2c
 8015520:	1943      	adds	r3, r0, r5
 8015522:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8015526:	f1c7 05ff 	rsb	r5, r7, #255	; 0xff
 801552a:	eba2 0208 	sub.w	r2, r2, r8
 801552e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015532:	b2ad      	uxth	r5, r5
 8015534:	4298      	cmp	r0, r3
 8015536:	d24a      	bcs.n	80155ce <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1a2>
 8015538:	eb00 0908 	add.w	r9, r0, r8
 801553c:	4621      	mov	r1, r4
 801553e:	4548      	cmp	r0, r9
 8015540:	460c      	mov	r4, r1
 8015542:	d240      	bcs.n	80155c6 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19a>
 8015544:	f04f 0a04 	mov.w	sl, #4
 8015548:	7824      	ldrb	r4, [r4, #0]
 801554a:	2fff      	cmp	r7, #255	; 0xff
 801554c:	f101 0101 	add.w	r1, r1, #1
 8015550:	fb1e a404 	smlabb	r4, lr, r4, sl
 8015554:	eb06 0a04 	add.w	sl, r6, r4
 8015558:	f816 b004 	ldrb.w	fp, [r6, r4]
 801555c:	d02b      	beq.n	80155b6 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x18a>
 801555e:	7804      	ldrb	r4, [r0, #0]
 8015560:	fb14 f405 	smulbb	r4, r4, r5
 8015564:	fb0b 440c 	mla	r4, fp, ip, r4
 8015568:	b2a4      	uxth	r4, r4
 801556a:	f104 0b01 	add.w	fp, r4, #1
 801556e:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8015572:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015576:	fb1b fb05 	smulbb	fp, fp, r5
 801557a:	1224      	asrs	r4, r4, #8
 801557c:	7004      	strb	r4, [r0, #0]
 801557e:	f89a 4001 	ldrb.w	r4, [sl, #1]
 8015582:	fb04 b40c 	mla	r4, r4, ip, fp
 8015586:	b2a4      	uxth	r4, r4
 8015588:	f104 0b01 	add.w	fp, r4, #1
 801558c:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8015590:	1224      	asrs	r4, r4, #8
 8015592:	7044      	strb	r4, [r0, #1]
 8015594:	f89a 4002 	ldrb.w	r4, [sl, #2]
 8015598:	f890 a002 	ldrb.w	sl, [r0, #2]
 801559c:	fb1a fa05 	smulbb	sl, sl, r5
 80155a0:	fb04 a40c 	mla	r4, r4, ip, sl
 80155a4:	b2a4      	uxth	r4, r4
 80155a6:	f104 0a01 	add.w	sl, r4, #1
 80155aa:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80155ae:	1224      	asrs	r4, r4, #8
 80155b0:	7084      	strb	r4, [r0, #2]
 80155b2:	3003      	adds	r0, #3
 80155b4:	e7c3      	b.n	801553e <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x112>
 80155b6:	f880 b000 	strb.w	fp, [r0]
 80155ba:	f89a 4001 	ldrb.w	r4, [sl, #1]
 80155be:	7044      	strb	r4, [r0, #1]
 80155c0:	f89a 4002 	ldrb.w	r4, [sl, #2]
 80155c4:	e7f4      	b.n	80155b0 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x184>
 80155c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80155c8:	4420      	add	r0, r4
 80155ca:	188c      	adds	r4, r1, r2
 80155cc:	e7b2      	b.n	8015534 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x108>
 80155ce:	4b03      	ldr	r3, [pc, #12]	; (80155dc <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80155d0:	6818      	ldr	r0, [r3, #0]
 80155d2:	6803      	ldr	r3, [r0, #0]
 80155d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80155d6:	4798      	blx	r3
 80155d8:	e785      	b.n	80154e6 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xba>
 80155da:	bf00      	nop
 80155dc:	2400894c 	.word	0x2400894c
 80155e0:	24008946 	.word	0x24008946

080155e4 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80155e4:	b430      	push	{r4, r5}
 80155e6:	780d      	ldrb	r5, [r1, #0]
 80155e8:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80155ec:	b11d      	cbz	r5, 80155f6 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x12>
 80155ee:	2d01      	cmp	r5, #1
 80155f0:	d005      	beq.n	80155fe <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80155f2:	bc30      	pop	{r4, r5}
 80155f4:	4770      	bx	lr
 80155f6:	9402      	str	r4, [sp, #8]
 80155f8:	bc30      	pop	{r4, r5}
 80155fa:	f7ff be3f 	b.w	801527c <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80155fe:	9402      	str	r4, [sp, #8]
 8015600:	bc30      	pop	{r4, r5}
 8015602:	f7ff bf13 	b.w	801542c <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
	...

08015608 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>:
 8015608:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801560c:	4605      	mov	r5, r0
 801560e:	b08f      	sub	sp, #60	; 0x3c
 8015610:	460c      	mov	r4, r1
 8015612:	461f      	mov	r7, r3
 8015614:	2b00      	cmp	r3, #0
 8015616:	d052      	beq.n	80156be <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xb6>
 8015618:	6808      	ldr	r0, [r1, #0]
 801561a:	ab0a      	add	r3, sp, #40	; 0x28
 801561c:	6849      	ldr	r1, [r1, #4]
 801561e:	f8df 81c8 	ldr.w	r8, [pc, #456]	; 80157e8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e0>
 8015622:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 80157ec <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e4>
 8015626:	c303      	stmia	r3!, {r0, r1}
 8015628:	6810      	ldr	r0, [r2, #0]
 801562a:	ab0c      	add	r3, sp, #48	; 0x30
 801562c:	6851      	ldr	r1, [r2, #4]
 801562e:	c303      	stmia	r3!, {r0, r1}
 8015630:	a80a      	add	r0, sp, #40	; 0x28
 8015632:	f7fa f843 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015636:	4621      	mov	r1, r4
 8015638:	a80c      	add	r0, sp, #48	; 0x30
 801563a:	f7fa f883 	bl	800f744 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801563e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8015642:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015646:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801564a:	f8d8 0000 	ldr.w	r0, [r8]
 801564e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015652:	f9bd 6034 	ldrsh.w	r6, [sp, #52]	; 0x34
 8015656:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	; 0x36
 801565a:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 801565e:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8015662:	440a      	add	r2, r1
 8015664:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8015668:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801566c:	4413      	add	r3, r2
 801566e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015672:	6803      	ldr	r3, [r0, #0]
 8015674:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015676:	4798      	blx	r3
 8015678:	2fff      	cmp	r7, #255	; 0xff
 801567a:	d023      	beq.n	80156c4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xbc>
 801567c:	f010 0f04 	tst.w	r0, #4
 8015680:	f8d8 0000 	ldr.w	r0, [r8]
 8015684:	d021      	beq.n	80156ca <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xc2>
 8015686:	2100      	movs	r1, #0
 8015688:	f04f 0e01 	mov.w	lr, #1
 801568c:	f8d0 c000 	ldr.w	ip, [r0]
 8015690:	b2a4      	uxth	r4, r4
 8015692:	9106      	str	r1, [sp, #24]
 8015694:	b2b6      	uxth	r6, r6
 8015696:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801569a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801569e:	e9cd e107 	strd	lr, r1, [sp, #28]
 80156a2:	f8b9 e000 	ldrh.w	lr, [r9]
 80156a6:	9703      	str	r7, [sp, #12]
 80156a8:	9401      	str	r4, [sp, #4]
 80156aa:	9600      	str	r6, [sp, #0]
 80156ac:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80156b0:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80156b4:	9102      	str	r1, [sp, #8]
 80156b6:	4629      	mov	r1, r5
 80156b8:	f8dc 4040 	ldr.w	r4, [ip, #64]	; 0x40
 80156bc:	47a0      	blx	r4
 80156be:	b00f      	add	sp, #60	; 0x3c
 80156c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80156c4:	f010 0f01 	tst.w	r0, #1
 80156c8:	e7da      	b.n	8015680 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x78>
 80156ca:	6803      	ldr	r3, [r0, #0]
 80156cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80156ce:	4798      	blx	r3
 80156d0:	f8b9 1000 	ldrh.w	r1, [r9]
 80156d4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80156d8:	eb06 0c46 	add.w	ip, r6, r6, lsl #1
 80156dc:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80156e0:	434c      	muls	r4, r1
 80156e2:	2fff      	cmp	r7, #255	; 0xff
 80156e4:	fb01 2303 	mla	r3, r1, r3, r2
 80156e8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80156ec:	eba1 0106 	sub.w	r1, r1, r6
 80156f0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80156f4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80156f8:	4418      	add	r0, r3
 80156fa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80156fe:	eba3 0606 	sub.w	r6, r3, r6
 8015702:	4404      	add	r4, r0
 8015704:	ea4f 0646 	mov.w	r6, r6, lsl #1
 8015708:	d04a      	beq.n	80157a0 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x198>
 801570a:	43fa      	mvns	r2, r7
 801570c:	b2bb      	uxth	r3, r7
 801570e:	b2d7      	uxtb	r7, r2
 8015710:	42a0      	cmp	r0, r4
 8015712:	d263      	bcs.n	80157dc <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1d4>
 8015714:	eb00 0e0c 	add.w	lr, r0, ip
 8015718:	4586      	cmp	lr, r0
 801571a:	f100 0803 	add.w	r8, r0, #3
 801571e:	d93a      	bls.n	8015796 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x18e>
 8015720:	f835 2b02 	ldrh.w	r2, [r5], #2
 8015724:	f818 9c03 	ldrb.w	r9, [r8, #-3]
 8015728:	00d0      	lsls	r0, r2, #3
 801572a:	fb19 f907 	smulbb	r9, r9, r7
 801572e:	b2c0      	uxtb	r0, r0
 8015730:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8015734:	fb00 9003 	mla	r0, r0, r3, r9
 8015738:	b280      	uxth	r0, r0
 801573a:	f100 0901 	add.w	r9, r0, #1
 801573e:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8015742:	f818 9c02 	ldrb.w	r9, [r8, #-2]
 8015746:	fb19 f907 	smulbb	r9, r9, r7
 801574a:	1200      	asrs	r0, r0, #8
 801574c:	f808 0c03 	strb.w	r0, [r8, #-3]
 8015750:	10d0      	asrs	r0, r2, #3
 8015752:	1212      	asrs	r2, r2, #8
 8015754:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015758:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801575c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8015760:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8015764:	fb00 9003 	mla	r0, r0, r3, r9
 8015768:	b280      	uxth	r0, r0
 801576a:	f100 0901 	add.w	r9, r0, #1
 801576e:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8015772:	1200      	asrs	r0, r0, #8
 8015774:	f808 0c02 	strb.w	r0, [r8, #-2]
 8015778:	f818 0c01 	ldrb.w	r0, [r8, #-1]
 801577c:	fb10 f007 	smulbb	r0, r0, r7
 8015780:	fb02 0203 	mla	r2, r2, r3, r0
 8015784:	b292      	uxth	r2, r2
 8015786:	1c50      	adds	r0, r2, #1
 8015788:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801578c:	4640      	mov	r0, r8
 801578e:	1212      	asrs	r2, r2, #8
 8015790:	f808 2c01 	strb.w	r2, [r8, #-1]
 8015794:	e7c0      	b.n	8015718 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x110>
 8015796:	4408      	add	r0, r1
 8015798:	4435      	add	r5, r6
 801579a:	e7b9      	b.n	8015710 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x108>
 801579c:	4408      	add	r0, r1
 801579e:	4435      	add	r5, r6
 80157a0:	42a0      	cmp	r0, r4
 80157a2:	d21b      	bcs.n	80157dc <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1d4>
 80157a4:	eb00 070c 	add.w	r7, r0, ip
 80157a8:	42b8      	cmp	r0, r7
 80157aa:	d2f7      	bcs.n	801579c <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x194>
 80157ac:	f835 3b02 	ldrh.w	r3, [r5], #2
 80157b0:	3003      	adds	r0, #3
 80157b2:	00da      	lsls	r2, r3, #3
 80157b4:	b2d2      	uxtb	r2, r2
 80157b6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80157ba:	f800 2c03 	strb.w	r2, [r0, #-3]
 80157be:	10da      	asrs	r2, r3, #3
 80157c0:	121b      	asrs	r3, r3, #8
 80157c2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80157c6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80157ca:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80157ce:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80157d2:	f800 2c02 	strb.w	r2, [r0, #-2]
 80157d6:	f800 3c01 	strb.w	r3, [r0, #-1]
 80157da:	e7e5      	b.n	80157a8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1a0>
 80157dc:	4b02      	ldr	r3, [pc, #8]	; (80157e8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e0>)
 80157de:	6818      	ldr	r0, [r3, #0]
 80157e0:	6803      	ldr	r3, [r0, #0]
 80157e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80157e4:	4798      	blx	r3
 80157e6:	e76a      	b.n	80156be <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xb6>
 80157e8:	2400894c 	.word	0x2400894c
 80157ec:	24008946 	.word	0x24008946

080157f0 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80157f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80157f4:	b08a      	sub	sp, #40	; 0x28
 80157f6:	460d      	mov	r5, r1
 80157f8:	4604      	mov	r4, r0
 80157fa:	461e      	mov	r6, r3
 80157fc:	6808      	ldr	r0, [r1, #0]
 80157fe:	ab06      	add	r3, sp, #24
 8015800:	6849      	ldr	r1, [r1, #4]
 8015802:	4f5d      	ldr	r7, [pc, #372]	; (8015978 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x188>)
 8015804:	c303      	stmia	r3!, {r0, r1}
 8015806:	6810      	ldr	r0, [r2, #0]
 8015808:	ab08      	add	r3, sp, #32
 801580a:	6851      	ldr	r1, [r2, #4]
 801580c:	c303      	stmia	r3!, {r0, r1}
 801580e:	a806      	add	r0, sp, #24
 8015810:	f7f9 ff54 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015814:	4629      	mov	r1, r5
 8015816:	a808      	add	r0, sp, #32
 8015818:	f7f9 ff94 	bl	800f744 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801581c:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015820:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015824:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015828:	6838      	ldr	r0, [r7, #0]
 801582a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801582e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8015832:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8015836:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801583a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801583e:	440a      	add	r2, r1
 8015840:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015844:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015848:	4413      	add	r3, r2
 801584a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801584e:	6803      	ldr	r3, [r0, #0]
 8015850:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015852:	4798      	blx	r3
 8015854:	2eff      	cmp	r6, #255	; 0xff
 8015856:	d119      	bne.n	801588c <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 8015858:	f010 0f20 	tst.w	r0, #32
 801585c:	6838      	ldr	r0, [r7, #0]
 801585e:	d018      	beq.n	8015892 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 8015860:	b2ad      	uxth	r5, r5
 8015862:	2700      	movs	r7, #0
 8015864:	6801      	ldr	r1, [r0, #0]
 8015866:	9501      	str	r5, [sp, #4]
 8015868:	fa1f f588 	uxth.w	r5, r8
 801586c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8015870:	9500      	str	r5, [sp, #0]
 8015872:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015876:	e9cd 6703 	strd	r6, r7, [sp, #12]
 801587a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801587e:	9602      	str	r6, [sp, #8]
 8015880:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8015882:	4621      	mov	r1, r4
 8015884:	47a8      	blx	r5
 8015886:	b00a      	add	sp, #40	; 0x28
 8015888:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801588c:	f010 0f40 	tst.w	r0, #64	; 0x40
 8015890:	e7e4      	b.n	801585c <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6c>
 8015892:	6803      	ldr	r3, [r0, #0]
 8015894:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015896:	4798      	blx	r3
 8015898:	4b38      	ldr	r3, [pc, #224]	; (801597c <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18c>)
 801589a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801589e:	f8b3 c000 	ldrh.w	ip, [r3]
 80158a2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80158a6:	fb0c f505 	mul.w	r5, ip, r5
 80158aa:	f9bd e01c 	ldrsh.w	lr, [sp, #28]
 80158ae:	fb0c 2303 	mla	r3, ip, r3, r2
 80158b2:	ebac 0c08 	sub.w	ip, ip, r8
 80158b6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80158ba:	ebae 0e08 	sub.w	lr, lr, r8
 80158be:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80158c2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80158c6:	4418      	add	r0, r3
 80158c8:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80158cc:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 80158d0:	4405      	add	r5, r0
 80158d2:	42a8      	cmp	r0, r5
 80158d4:	d24a      	bcs.n	801596c <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x17c>
 80158d6:	eb00 0803 	add.w	r8, r0, r3
 80158da:	4540      	cmp	r0, r8
 80158dc:	d243      	bcs.n	8015966 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x176>
 80158de:	78e2      	ldrb	r2, [r4, #3]
 80158e0:	b15a      	cbz	r2, 80158fa <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 80158e2:	2aff      	cmp	r2, #255	; 0xff
 80158e4:	f894 9000 	ldrb.w	r9, [r4]
 80158e8:	d10a      	bne.n	8015900 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 80158ea:	2eff      	cmp	r6, #255	; 0xff
 80158ec:	d108      	bne.n	8015900 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 80158ee:	f880 9000 	strb.w	r9, [r0]
 80158f2:	7862      	ldrb	r2, [r4, #1]
 80158f4:	7042      	strb	r2, [r0, #1]
 80158f6:	78a2      	ldrb	r2, [r4, #2]
 80158f8:	7082      	strb	r2, [r0, #2]
 80158fa:	3003      	adds	r0, #3
 80158fc:	3404      	adds	r4, #4
 80158fe:	e7ec      	b.n	80158da <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xea>
 8015900:	4372      	muls	r2, r6
 8015902:	1c51      	adds	r1, r2, #1
 8015904:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8015908:	1209      	asrs	r1, r1, #8
 801590a:	fa1f fa81 	uxth.w	sl, r1
 801590e:	43c9      	mvns	r1, r1
 8015910:	fb19 f90a 	smulbb	r9, r9, sl
 8015914:	b2ca      	uxtb	r2, r1
 8015916:	7801      	ldrb	r1, [r0, #0]
 8015918:	fb01 9902 	mla	r9, r1, r2, r9
 801591c:	fa1f f989 	uxth.w	r9, r9
 8015920:	f109 0101 	add.w	r1, r9, #1
 8015924:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 8015928:	ea4f 2929 	mov.w	r9, r9, asr #8
 801592c:	f880 9000 	strb.w	r9, [r0]
 8015930:	f890 9001 	ldrb.w	r9, [r0, #1]
 8015934:	7861      	ldrb	r1, [r4, #1]
 8015936:	fb19 f902 	smulbb	r9, r9, r2
 801593a:	fb01 910a 	mla	r1, r1, sl, r9
 801593e:	b289      	uxth	r1, r1
 8015940:	f101 0901 	add.w	r9, r1, #1
 8015944:	eb09 2111 	add.w	r1, r9, r1, lsr #8
 8015948:	1209      	asrs	r1, r1, #8
 801594a:	7041      	strb	r1, [r0, #1]
 801594c:	7881      	ldrb	r1, [r0, #2]
 801594e:	f894 9002 	ldrb.w	r9, [r4, #2]
 8015952:	fb11 f202 	smulbb	r2, r1, r2
 8015956:	fb09 220a 	mla	r2, r9, sl, r2
 801595a:	b292      	uxth	r2, r2
 801595c:	1c51      	adds	r1, r2, #1
 801595e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015962:	1212      	asrs	r2, r2, #8
 8015964:	e7c8      	b.n	80158f8 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x108>
 8015966:	4460      	add	r0, ip
 8015968:	4474      	add	r4, lr
 801596a:	e7b2      	b.n	80158d2 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xe2>
 801596c:	6838      	ldr	r0, [r7, #0]
 801596e:	6803      	ldr	r3, [r0, #0]
 8015970:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015972:	4798      	blx	r3
 8015974:	e787      	b.n	8015886 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8015976:	bf00      	nop
 8015978:	2400894c 	.word	0x2400894c
 801597c:	24008946 	.word	0x24008946

08015980 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8015980:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015984:	b085      	sub	sp, #20
 8015986:	4606      	mov	r6, r0
 8015988:	460c      	mov	r4, r1
 801598a:	4691      	mov	r9, r2
 801598c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8015990:	4698      	mov	r8, r3
 8015992:	b31d      	cbz	r5, 80159dc <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8015994:	4608      	mov	r0, r1
 8015996:	f7fd fa17 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801599a:	4607      	mov	r7, r0
 801599c:	4620      	mov	r0, r4
 801599e:	f7fd fa47 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80159a2:	f8ad 000e 	strh.w	r0, [sp, #14]
 80159a6:	4620      	mov	r0, r4
 80159a8:	f8ad 9008 	strh.w	r9, [sp, #8]
 80159ac:	f8ad 800a 	strh.w	r8, [sp, #10]
 80159b0:	f8ad 700c 	strh.w	r7, [sp, #12]
 80159b4:	f7fd fb78 	bl	80130a8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80159b8:	280b      	cmp	r0, #11
 80159ba:	d80f      	bhi.n	80159dc <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80159bc:	e8df f000 	tbb	[pc, r0]
 80159c0:	0e062920 	.word	0x0e062920
 80159c4:	0e0e0e0e 	.word	0x0e0e0e0e
 80159c8:	110e0e0e 	.word	0x110e0e0e
 80159cc:	4620      	mov	r0, r4
 80159ce:	f7fd fae7 	bl	8012fa0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80159d2:	462b      	mov	r3, r5
 80159d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80159d6:	a902      	add	r1, sp, #8
 80159d8:	f7ff ff0a 	bl	80157f0 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80159dc:	b005      	add	sp, #20
 80159de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80159e2:	4620      	mov	r0, r4
 80159e4:	f7fd fadc 	bl	8012fa0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80159e8:	4606      	mov	r6, r0
 80159ea:	4620      	mov	r0, r4
 80159ec:	f7fd fb08 	bl	8013000 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80159f0:	9500      	str	r5, [sp, #0]
 80159f2:	4601      	mov	r1, r0
 80159f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80159f6:	aa02      	add	r2, sp, #8
 80159f8:	4630      	mov	r0, r6
 80159fa:	f7ff fdf3 	bl	80155e4 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80159fe:	e7ed      	b.n	80159dc <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8015a00:	4620      	mov	r0, r4
 8015a02:	f7fd facd 	bl	8012fa0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015a06:	462b      	mov	r3, r5
 8015a08:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015a0a:	a902      	add	r1, sp, #8
 8015a0c:	f7ff fdfc 	bl	8015608 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>
 8015a10:	e7e4      	b.n	80159dc <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8015a12:	6833      	ldr	r3, [r6, #0]
 8015a14:	4620      	mov	r0, r4
 8015a16:	68df      	ldr	r7, [r3, #12]
 8015a18:	f7fd fac2 	bl	8012fa0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015a1c:	2300      	movs	r3, #0
 8015a1e:	4601      	mov	r1, r0
 8015a20:	aa02      	add	r2, sp, #8
 8015a22:	4630      	mov	r0, r6
 8015a24:	e9cd 5300 	strd	r5, r3, [sp]
 8015a28:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015a2a:	47b8      	blx	r7
 8015a2c:	e7d6      	b.n	80159dc <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>

08015a2e <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8015a2e:	b4f0      	push	{r4, r5, r6, r7}
 8015a30:	4616      	mov	r6, r2
 8015a32:	461c      	mov	r4, r3
 8015a34:	460d      	mov	r5, r1
 8015a36:	9a04      	ldr	r2, [sp, #16]
 8015a38:	2e01      	cmp	r6, #1
 8015a3a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015a3e:	d00e      	beq.n	8015a5e <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x30>
 8015a40:	d303      	bcc.n	8015a4a <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x1c>
 8015a42:	2e02      	cmp	r6, #2
 8015a44:	d006      	beq.n	8015a54 <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x26>
 8015a46:	bcf0      	pop	{r4, r5, r6, r7}
 8015a48:	4770      	bx	lr
 8015a4a:	4621      	mov	r1, r4
 8015a4c:	4628      	mov	r0, r5
 8015a4e:	bcf0      	pop	{r4, r5, r6, r7}
 8015a50:	f7ff bdda 	b.w	8015608 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>
 8015a54:	4621      	mov	r1, r4
 8015a56:	4628      	mov	r0, r5
 8015a58:	bcf0      	pop	{r4, r5, r6, r7}
 8015a5a:	f7ff bec9 	b.w	80157f0 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015a5e:	6805      	ldr	r5, [r0, #0]
 8015a60:	2600      	movs	r6, #0
 8015a62:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8015a66:	68ed      	ldr	r5, [r5, #12]
 8015a68:	4613      	mov	r3, r2
 8015a6a:	4622      	mov	r2, r4
 8015a6c:	46ac      	mov	ip, r5
 8015a6e:	bcf0      	pop	{r4, r5, r6, r7}
 8015a70:	4760      	bx	ip
	...

08015a74 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE>:
 8015a74:	b160      	cbz	r0, 8015a90 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x1c>
 8015a76:	2903      	cmp	r1, #3
 8015a78:	d818      	bhi.n	8015aac <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x38>
 8015a7a:	e8df f001 	tbb	[pc, r1]
 8015a7e:	1902      	.short	0x1902
 8015a80:	1b06      	.short	0x1b06
 8015a82:	4b0e      	ldr	r3, [pc, #56]	; (8015abc <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x48>)
 8015a84:	8818      	ldrh	r0, [r3, #0]
 8015a86:	4240      	negs	r0, r0
 8015a88:	4770      	bx	lr
 8015a8a:	4b0c      	ldr	r3, [pc, #48]	; (8015abc <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x48>)
 8015a8c:	8818      	ldrh	r0, [r3, #0]
 8015a8e:	4770      	bx	lr
 8015a90:	2903      	cmp	r1, #3
 8015a92:	d80b      	bhi.n	8015aac <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x38>
 8015a94:	a301      	add	r3, pc, #4	; (adr r3, 8015a9c <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x28>)
 8015a96:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8015a9a:	bf00      	nop
 8015a9c:	08015ab1 	.word	0x08015ab1
 8015aa0:	08015a8b 	.word	0x08015a8b
 8015aa4:	08015ab5 	.word	0x08015ab5
 8015aa8:	08015a83 	.word	0x08015a83
 8015aac:	2000      	movs	r0, #0
 8015aae:	4770      	bx	lr
 8015ab0:	2001      	movs	r0, #1
 8015ab2:	4770      	bx	lr
 8015ab4:	f04f 30ff 	mov.w	r0, #4294967295
 8015ab8:	4770      	bx	lr
 8015aba:	bf00      	nop
 8015abc:	24008946 	.word	0x24008946

08015ac0 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE>:
 8015ac0:	b160      	cbz	r0, 8015adc <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x1c>
 8015ac2:	2903      	cmp	r1, #3
 8015ac4:	d818      	bhi.n	8015af8 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x38>
 8015ac6:	e8df f001 	tbb	[pc, r1]
 8015aca:	0219      	.short	0x0219
 8015acc:	051b      	.short	0x051b
 8015ace:	4b0e      	ldr	r3, [pc, #56]	; (8015b08 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x48>)
 8015ad0:	8818      	ldrh	r0, [r3, #0]
 8015ad2:	4770      	bx	lr
 8015ad4:	4b0c      	ldr	r3, [pc, #48]	; (8015b08 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x48>)
 8015ad6:	8818      	ldrh	r0, [r3, #0]
 8015ad8:	4240      	negs	r0, r0
 8015ada:	4770      	bx	lr
 8015adc:	2903      	cmp	r1, #3
 8015ade:	d80b      	bhi.n	8015af8 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x38>
 8015ae0:	a301      	add	r3, pc, #4	; (adr r3, 8015ae8 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x28>)
 8015ae2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8015ae6:	bf00      	nop
 8015ae8:	08015acf 	.word	0x08015acf
 8015aec:	08015b01 	.word	0x08015b01
 8015af0:	08015ad5 	.word	0x08015ad5
 8015af4:	08015afd 	.word	0x08015afd
 8015af8:	2000      	movs	r0, #0
 8015afa:	4770      	bx	lr
 8015afc:	2001      	movs	r0, #1
 8015afe:	4770      	bx	lr
 8015b00:	f04f 30ff 	mov.w	r0, #4294967295
 8015b04:	4770      	bx	lr
 8015b06:	bf00      	nop
 8015b08:	24008946 	.word	0x24008946

08015b0c <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8015b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b10:	b097      	sub	sp, #92	; 0x5c
 8015b12:	910b      	str	r1, [sp, #44]	; 0x2c
 8015b14:	a912      	add	r1, sp, #72	; 0x48
 8015b16:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 8015b1a:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 8015b1e:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 8015b22:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8015b26:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 8015b2a:	e881 000c 	stmia.w	r1, {r2, r3}
 8015b2e:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8015b32:	930a      	str	r3, [sp, #40]	; 0x28
 8015b34:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8015b38:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8015b3c:	9311      	str	r3, [sp, #68]	; 0x44
 8015b3e:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8015b42:	798d      	ldrb	r5, [r1, #6]
 8015b44:	930c      	str	r3, [sp, #48]	; 0x30
 8015b46:	7b4b      	ldrb	r3, [r1, #13]
 8015b48:	0158      	lsls	r0, r3, #5
 8015b4a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015b4e:	4328      	orrs	r0, r5
 8015b50:	9009      	str	r0, [sp, #36]	; 0x24
 8015b52:	f000 817c 	beq.w	8015e4e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8015b56:	011b      	lsls	r3, r3, #4
 8015b58:	79c8      	ldrb	r0, [r1, #7]
 8015b5a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015b5e:	4303      	orrs	r3, r0
 8015b60:	930e      	str	r3, [sp, #56]	; 0x38
 8015b62:	f000 8174 	beq.w	8015e4e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8015b66:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8015b6a:	b29b      	uxth	r3, r3
 8015b6c:	2f00      	cmp	r7, #0
 8015b6e:	f000 8116 	beq.w	8015d9e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x292>
 8015b72:	1aff      	subs	r7, r7, r3
 8015b74:	b2bf      	uxth	r7, r7
 8015b76:	043b      	lsls	r3, r7, #16
 8015b78:	d502      	bpl.n	8015b80 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8015b7a:	1bf6      	subs	r6, r6, r7
 8015b7c:	2700      	movs	r7, #0
 8015b7e:	b236      	sxth	r6, r6
 8015b80:	f9b2 1000 	ldrsh.w	r1, [r2]
 8015b84:	a812      	add	r0, sp, #72	; 0x48
 8015b86:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8015b8a:	428e      	cmp	r6, r1
 8015b8c:	b28b      	uxth	r3, r1
 8015b8e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8015b92:	bfbf      	itttt	lt
 8015b94:	18ff      	addlt	r7, r7, r3
 8015b96:	1bbe      	sublt	r6, r7, r6
 8015b98:	b2b7      	uxthlt	r7, r6
 8015b9a:	460e      	movlt	r6, r1
 8015b9c:	8891      	ldrh	r1, [r2, #4]
 8015b9e:	440b      	add	r3, r1
 8015ba0:	4631      	mov	r1, r6
 8015ba2:	b21b      	sxth	r3, r3
 8015ba4:	9310      	str	r3, [sp, #64]	; 0x40
 8015ba6:	88d3      	ldrh	r3, [r2, #6]
 8015ba8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015baa:	449a      	add	sl, r3
 8015bac:	fa0f f38a 	sxth.w	r3, sl
 8015bb0:	f8bd a038 	ldrh.w	sl, [sp, #56]	; 0x38
 8015bb4:	930f      	str	r3, [sp, #60]	; 0x3c
 8015bb6:	4bb5      	ldr	r3, [pc, #724]	; (8015e8c <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8015bb8:	f893 b000 	ldrb.w	fp, [r3]
 8015bbc:	f10b 3cff 	add.w	ip, fp, #4294967295
 8015bc0:	f1dc 0300 	rsbs	r3, ip, #0
 8015bc4:	eb43 030c 	adc.w	r3, r3, ip
 8015bc8:	930d      	str	r3, [sp, #52]	; 0x34
 8015bca:	464b      	mov	r3, r9
 8015bcc:	f7f9 fbf0 	bl	800f3b0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8015bd0:	4631      	mov	r1, r6
 8015bd2:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8015bd6:	464b      	mov	r3, r9
 8015bd8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015bda:	a812      	add	r0, sp, #72	; 0x48
 8015bdc:	f7f9 fc05 	bl	800f3ea <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8015be0:	a916      	add	r1, sp, #88	; 0x58
 8015be2:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8015be6:	a815      	add	r0, sp, #84	; 0x54
 8015be8:	f7f9 fd26 	bl	800f638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8015bec:	f1b9 0f00 	cmp.w	r9, #0
 8015bf0:	f040 80d8 	bne.w	8015da4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x298>
 8015bf4:	f1bb 0f01 	cmp.w	fp, #1
 8015bf8:	f040 80dc 	bne.w	8015db4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8015bfc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015bfe:	b153      	cbz	r3, 8015c16 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10a>
 8015c00:	2508      	movs	r5, #8
 8015c02:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015c04:	fb95 f3f8 	sdiv	r3, r5, r8
 8015c08:	1e5d      	subs	r5, r3, #1
 8015c0a:	4415      	add	r5, r2
 8015c0c:	fb95 f5f3 	sdiv	r5, r5, r3
 8015c10:	fb15 f503 	smulbb	r5, r5, r3
 8015c14:	b2ad      	uxth	r5, r5
 8015c16:	b907      	cbnz	r7, 8015c1a <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8015c18:	b16c      	cbz	r4, 8015c36 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12a>
 8015c1a:	fb04 7305 	mla	r3, r4, r5, r7
 8015c1e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8015c20:	ebaa 0a04 	sub.w	sl, sl, r4
 8015c24:	fb08 f303 	mul.w	r3, r8, r3
 8015c28:	fa1f fa8a 	uxth.w	sl, sl
 8015c2c:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8015c30:	f003 0407 	and.w	r4, r3, #7
 8015c34:	9226      	str	r2, [sp, #152]	; 0x98
 8015c36:	4649      	mov	r1, r9
 8015c38:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015c3a:	f7ff ff1b 	bl	8015a74 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE>
 8015c3e:	4683      	mov	fp, r0
 8015c40:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015c42:	f7ff ff3d 	bl	8015ac0 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE>
 8015c46:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015c48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015c4a:	4681      	mov	r9, r0
 8015c4c:	1a9b      	subs	r3, r3, r2
 8015c4e:	459a      	cmp	sl, r3
 8015c50:	bfa8      	it	ge
 8015c52:	469a      	movge	sl, r3
 8015c54:	f1ba 0f00 	cmp.w	sl, #0
 8015c58:	f340 80f9 	ble.w	8015e4e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8015c5c:	1bf6      	subs	r6, r6, r7
 8015c5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015c60:	1b9e      	subs	r6, r3, r6
 8015c62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c64:	429e      	cmp	r6, r3
 8015c66:	bfd4      	ite	le
 8015c68:	ebc7 0706 	rsble	r7, r7, r6
 8015c6c:	ebc7 0703 	rsbgt	r7, r7, r3
 8015c70:	2f00      	cmp	r7, #0
 8015c72:	f340 80ec 	ble.w	8015e4e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8015c76:	1bed      	subs	r5, r5, r7
 8015c78:	fb08 f305 	mul.w	r3, r8, r5
 8015c7c:	930d      	str	r3, [sp, #52]	; 0x34
 8015c7e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c80:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8015c84:	930e      	str	r3, [sp, #56]	; 0x38
 8015c86:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c88:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015c8c:	930f      	str	r3, [sp, #60]	; 0x3c
 8015c8e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c90:	b2db      	uxtb	r3, r3
 8015c92:	9310      	str	r3, [sp, #64]	; 0x40
 8015c94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015c96:	2b00      	cmp	r3, #0
 8015c98:	f040 80de 	bne.w	8015e58 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x34c>
 8015c9c:	4b7c      	ldr	r3, [pc, #496]	; (8015e90 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8015c9e:	6818      	ldr	r0, [r3, #0]
 8015ca0:	6803      	ldr	r3, [r0, #0]
 8015ca2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015ca4:	4798      	blx	r3
 8015ca6:	2301      	movs	r3, #1
 8015ca8:	4a7a      	ldr	r2, [pc, #488]	; (8015e94 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8015caa:	eb0b 064b 	add.w	r6, fp, fp, lsl #1
 8015cae:	fb07 9b1b 	mls	fp, r7, fp, r9
 8015cb2:	fa03 f308 	lsl.w	r3, r3, r8
 8015cb6:	8811      	ldrh	r1, [r2, #0]
 8015cb8:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8015cbc:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 8015cc0:	3b01      	subs	r3, #1
 8015cc2:	fb06 bb07 	mla	fp, r6, r7, fp
 8015cc6:	b2db      	uxtb	r3, r3
 8015cc8:	930a      	str	r3, [sp, #40]	; 0x28
 8015cca:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8015cce:	fb01 2303 	mla	r3, r1, r3, r2
 8015cd2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015cd6:	18c3      	adds	r3, r0, r3
 8015cd8:	9309      	str	r3, [sp, #36]	; 0x24
 8015cda:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015cdc:	781a      	ldrb	r2, [r3, #0]
 8015cde:	4122      	asrs	r2, r4
 8015ce0:	b2d2      	uxtb	r2, r2
 8015ce2:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8015ce6:	f0c0 80d7 	bcc.w	8015e98 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8015cea:	46be      	mov	lr, r7
 8015cec:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015cee:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8015cf2:	f0c0 80ba 	bcc.w	8015e6a <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x35e>
 8015cf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015cf8:	4013      	ands	r3, r2
 8015cfa:	d041      	beq.n	8015d80 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x274>
 8015cfc:	20ff      	movs	r0, #255	; 0xff
 8015cfe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8015d00:	fb90 f5f5 	sdiv	r5, r0, r5
 8015d04:	436b      	muls	r3, r5
 8015d06:	2bfe      	cmp	r3, #254	; 0xfe
 8015d08:	dd03      	ble.n	8015d12 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x206>
 8015d0a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8015d0c:	4285      	cmp	r5, r0
 8015d0e:	f000 80a5 	beq.w	8015e5c <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x350>
 8015d12:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8015d14:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015d16:	fb15 f303 	smulbb	r3, r5, r3
 8015d1a:	b29b      	uxth	r3, r3
 8015d1c:	1c5d      	adds	r5, r3, #1
 8015d1e:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8015d22:	780d      	ldrb	r5, [r1, #0]
 8015d24:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015d28:	fa1f fc83 	uxth.w	ip, r3
 8015d2c:	43db      	mvns	r3, r3
 8015d2e:	fb10 f90c 	smulbb	r9, r0, ip
 8015d32:	b2db      	uxtb	r3, r3
 8015d34:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015d36:	fb05 9503 	mla	r5, r5, r3, r9
 8015d3a:	b2ad      	uxth	r5, r5
 8015d3c:	f105 0901 	add.w	r9, r5, #1
 8015d40:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8015d44:	fb10 f90c 	smulbb	r9, r0, ip
 8015d48:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015d4a:	122d      	asrs	r5, r5, #8
 8015d4c:	fb10 fc0c 	smulbb	ip, r0, ip
 8015d50:	700d      	strb	r5, [r1, #0]
 8015d52:	784d      	ldrb	r5, [r1, #1]
 8015d54:	fb05 9503 	mla	r5, r5, r3, r9
 8015d58:	b2ad      	uxth	r5, r5
 8015d5a:	f105 0901 	add.w	r9, r5, #1
 8015d5e:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8015d62:	122d      	asrs	r5, r5, #8
 8015d64:	704d      	strb	r5, [r1, #1]
 8015d66:	788d      	ldrb	r5, [r1, #2]
 8015d68:	fb05 cc03 	mla	ip, r5, r3, ip
 8015d6c:	fa1f fc8c 	uxth.w	ip, ip
 8015d70:	f10c 0301 	add.w	r3, ip, #1
 8015d74:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8015d78:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8015d7c:	f881 c002 	strb.w	ip, [r1, #2]
 8015d80:	4444      	add	r4, r8
 8015d82:	4431      	add	r1, r6
 8015d84:	b2a4      	uxth	r4, r4
 8015d86:	2c07      	cmp	r4, #7
 8015d88:	bf89      	itett	hi
 8015d8a:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8015d8c:	fa42 f208 	asrls.w	r2, r2, r8
 8015d90:	2400      	movhi	r4, #0
 8015d92:	785a      	ldrbhi	r2, [r3, #1]
 8015d94:	bf8a      	itet	hi
 8015d96:	3301      	addhi	r3, #1
 8015d98:	b2d2      	uxtbls	r2, r2
 8015d9a:	9326      	strhi	r3, [sp, #152]	; 0x98
 8015d9c:	e7a7      	b.n	8015cee <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8015d9e:	441e      	add	r6, r3
 8015da0:	b236      	sxth	r6, r6
 8015da2:	e6ed      	b.n	8015b80 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8015da4:	f1b9 0f01 	cmp.w	r9, #1
 8015da8:	f47f af28 	bne.w	8015bfc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015dac:	f1bb 0f01 	cmp.w	fp, #1
 8015db0:	f47f af24 	bne.w	8015bfc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015db4:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8015e90 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>
 8015db8:	f8db 0000 	ldr.w	r0, [fp]
 8015dbc:	6803      	ldr	r3, [r0, #0]
 8015dbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015dc0:	4798      	blx	r3
 8015dc2:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8015dc6:	465a      	mov	r2, fp
 8015dc8:	d006      	beq.n	8015dd8 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 8015dca:	f1b8 0f04 	cmp.w	r8, #4
 8015dce:	d141      	bne.n	8015e54 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x348>
 8015dd0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015dd2:	3300      	adds	r3, #0
 8015dd4:	bf18      	it	ne
 8015dd6:	2301      	movne	r3, #1
 8015dd8:	0580      	lsls	r0, r0, #22
 8015dda:	d566      	bpl.n	8015eaa <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39e>
 8015ddc:	f1b8 0f08 	cmp.w	r8, #8
 8015de0:	d163      	bne.n	8015eaa <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39e>
 8015de2:	2b00      	cmp	r3, #0
 8015de4:	bf0c      	ite	eq
 8015de6:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8015dea:	f44f 7180 	movne.w	r1, #256	; 0x100
 8015dee:	2f00      	cmp	r7, #0
 8015df0:	f47f af04 	bne.w	8015bfc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015df4:	2c00      	cmp	r4, #0
 8015df6:	f47f af01 	bne.w	8015bfc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015dfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015dfc:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015dfe:	18f3      	adds	r3, r6, r3
 8015e00:	4283      	cmp	r3, r0
 8015e02:	f73f aefb 	bgt.w	8015bfc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015e06:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015e08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e0a:	4403      	add	r3, r0
 8015e0c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015e0e:	4283      	cmp	r3, r0
 8015e10:	f73f aef4 	bgt.w	8015bfc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015e14:	f1b8 0f08 	cmp.w	r8, #8
 8015e18:	6810      	ldr	r0, [r2, #0]
 8015e1a:	f04f 0600 	mov.w	r6, #0
 8015e1e:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8015e22:	bf18      	it	ne
 8015e24:	3501      	addne	r5, #1
 8015e26:	6804      	ldr	r4, [r0, #0]
 8015e28:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8015e2c:	bf18      	it	ne
 8015e2e:	f025 0501 	bicne.w	r5, r5, #1
 8015e32:	e9cd 1605 	strd	r1, r6, [sp, #20]
 8015e36:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015e38:	bf18      	it	ne
 8015e3a:	b2ad      	uxthne	r5, r5
 8015e3c:	9104      	str	r1, [sp, #16]
 8015e3e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8015e40:	e9cd 5a00 	strd	r5, sl, [sp]
 8015e44:	e9cd 5102 	strd	r5, r1, [sp, #8]
 8015e48:	9926      	ldr	r1, [sp, #152]	; 0x98
 8015e4a:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8015e4c:	47a0      	blx	r4
 8015e4e:	b017      	add	sp, #92	; 0x5c
 8015e50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e54:	2300      	movs	r3, #0
 8015e56:	e7bf      	b.n	8015dd8 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 8015e58:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015e5a:	e724      	b.n	8015ca6 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x19a>
 8015e5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e5e:	700b      	strb	r3, [r1, #0]
 8015e60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015e62:	704b      	strb	r3, [r1, #1]
 8015e64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e66:	708b      	strb	r3, [r1, #2]
 8015e68:	e78a      	b.n	8015d80 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x274>
 8015e6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015e6c:	b153      	cbz	r3, 8015e84 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 8015e6e:	441c      	add	r4, r3
 8015e70:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015e72:	b2a4      	uxth	r4, r4
 8015e74:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 8015e78:	f004 0407 	and.w	r4, r4, #7
 8015e7c:	781a      	ldrb	r2, [r3, #0]
 8015e7e:	9326      	str	r3, [sp, #152]	; 0x98
 8015e80:	4122      	asrs	r2, r4
 8015e82:	b2d2      	uxtb	r2, r2
 8015e84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015e86:	445b      	add	r3, fp
 8015e88:	9309      	str	r3, [sp, #36]	; 0x24
 8015e8a:	e72a      	b.n	8015ce2 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d6>
 8015e8c:	24008944 	.word	0x24008944
 8015e90:	2400894c 	.word	0x2400894c
 8015e94:	24008946 	.word	0x24008946
 8015e98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015e9a:	2b00      	cmp	r3, #0
 8015e9c:	d1d7      	bne.n	8015e4e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8015e9e:	4b06      	ldr	r3, [pc, #24]	; (8015eb8 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 8015ea0:	6818      	ldr	r0, [r3, #0]
 8015ea2:	6803      	ldr	r3, [r0, #0]
 8015ea4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ea6:	4798      	blx	r3
 8015ea8:	e7d1      	b.n	8015e4e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8015eaa:	2b00      	cmp	r3, #0
 8015eac:	f43f aea6 	beq.w	8015bfc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015eb0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8015eb4:	e79b      	b.n	8015dee <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8015eb6:	bf00      	nop
 8015eb8:	2400894c 	.word	0x2400894c

08015ebc <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8015ebc:	b538      	push	{r3, r4, r5, lr}
 8015ebe:	4c15      	ldr	r4, [pc, #84]	; (8015f14 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8015ec0:	4605      	mov	r5, r0
 8015ec2:	7823      	ldrb	r3, [r4, #0]
 8015ec4:	f3bf 8f5b 	dmb	ish
 8015ec8:	07da      	lsls	r2, r3, #31
 8015eca:	d40b      	bmi.n	8015ee4 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015ecc:	4620      	mov	r0, r4
 8015ece:	f006 fa9c 	bl	801c40a <__cxa_guard_acquire>
 8015ed2:	b138      	cbz	r0, 8015ee4 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015ed4:	4620      	mov	r0, r4
 8015ed6:	f006 faa4 	bl	801c422 <__cxa_guard_release>
 8015eda:	4a0f      	ldr	r2, [pc, #60]	; (8015f18 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015edc:	490f      	ldr	r1, [pc, #60]	; (8015f1c <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8015ede:	4810      	ldr	r0, [pc, #64]	; (8015f20 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015ee0:	f006 fa8c 	bl	801c3fc <__aeabi_atexit>
 8015ee4:	4c0f      	ldr	r4, [pc, #60]	; (8015f24 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8015ee6:	7823      	ldrb	r3, [r4, #0]
 8015ee8:	f3bf 8f5b 	dmb	ish
 8015eec:	07db      	lsls	r3, r3, #31
 8015eee:	d40b      	bmi.n	8015f08 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015ef0:	4620      	mov	r0, r4
 8015ef2:	f006 fa8a 	bl	801c40a <__cxa_guard_acquire>
 8015ef6:	b138      	cbz	r0, 8015f08 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015ef8:	4620      	mov	r0, r4
 8015efa:	f006 fa92 	bl	801c422 <__cxa_guard_release>
 8015efe:	4a06      	ldr	r2, [pc, #24]	; (8015f18 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015f00:	4909      	ldr	r1, [pc, #36]	; (8015f28 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8015f02:	480a      	ldr	r0, [pc, #40]	; (8015f2c <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015f04:	f006 fa7a 	bl	801c3fc <__aeabi_atexit>
 8015f08:	4b05      	ldr	r3, [pc, #20]	; (8015f20 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015f0a:	612b      	str	r3, [r5, #16]
 8015f0c:	4b07      	ldr	r3, [pc, #28]	; (8015f2c <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015f0e:	616b      	str	r3, [r5, #20]
 8015f10:	bd38      	pop	{r3, r4, r5, pc}
 8015f12:	bf00      	nop
 8015f14:	24008a20 	.word	0x24008a20
 8015f18:	24000000 	.word	0x24000000
 8015f1c:	08014a81 	.word	0x08014a81
 8015f20:	24000098 	.word	0x24000098
 8015f24:	24008a24 	.word	0x24008a24
 8015f28:	08014a7f 	.word	0x08014a7f
 8015f2c:	2400009c 	.word	0x2400009c

08015f30 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8015f30:	b538      	push	{r3, r4, r5, lr}
 8015f32:	4c15      	ldr	r4, [pc, #84]	; (8015f88 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8015f34:	4605      	mov	r5, r0
 8015f36:	7823      	ldrb	r3, [r4, #0]
 8015f38:	f3bf 8f5b 	dmb	ish
 8015f3c:	07da      	lsls	r2, r3, #31
 8015f3e:	d40b      	bmi.n	8015f58 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015f40:	4620      	mov	r0, r4
 8015f42:	f006 fa62 	bl	801c40a <__cxa_guard_acquire>
 8015f46:	b138      	cbz	r0, 8015f58 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015f48:	4620      	mov	r0, r4
 8015f4a:	f006 fa6a 	bl	801c422 <__cxa_guard_release>
 8015f4e:	4a0f      	ldr	r2, [pc, #60]	; (8015f8c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015f50:	490f      	ldr	r1, [pc, #60]	; (8015f90 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8015f52:	4810      	ldr	r0, [pc, #64]	; (8015f94 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015f54:	f006 fa52 	bl	801c3fc <__aeabi_atexit>
 8015f58:	4c0f      	ldr	r4, [pc, #60]	; (8015f98 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8015f5a:	7823      	ldrb	r3, [r4, #0]
 8015f5c:	f3bf 8f5b 	dmb	ish
 8015f60:	07db      	lsls	r3, r3, #31
 8015f62:	d40b      	bmi.n	8015f7c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015f64:	4620      	mov	r0, r4
 8015f66:	f006 fa50 	bl	801c40a <__cxa_guard_acquire>
 8015f6a:	b138      	cbz	r0, 8015f7c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015f6c:	4620      	mov	r0, r4
 8015f6e:	f006 fa58 	bl	801c422 <__cxa_guard_release>
 8015f72:	4a06      	ldr	r2, [pc, #24]	; (8015f8c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015f74:	4909      	ldr	r1, [pc, #36]	; (8015f9c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8015f76:	480a      	ldr	r0, [pc, #40]	; (8015fa0 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8015f78:	f006 fa40 	bl	801c3fc <__aeabi_atexit>
 8015f7c:	4b05      	ldr	r3, [pc, #20]	; (8015f94 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015f7e:	60ab      	str	r3, [r5, #8]
 8015f80:	4b07      	ldr	r3, [pc, #28]	; (8015fa0 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8015f82:	60eb      	str	r3, [r5, #12]
 8015f84:	bd38      	pop	{r3, r4, r5, pc}
 8015f86:	bf00      	nop
 8015f88:	24008a00 	.word	0x24008a00
 8015f8c:	24000000 	.word	0x24000000
 8015f90:	08014a85 	.word	0x08014a85
 8015f94:	24000078 	.word	0x24000078
 8015f98:	24008a04 	.word	0x24008a04
 8015f9c:	08014a83 	.word	0x08014a83
 8015fa0:	2400007c 	.word	0x2400007c

08015fa4 <_ZN8touchgfx8LCD24bpp28enableTextureMapperL8_RGB888Ev>:
 8015fa4:	b510      	push	{r4, lr}
 8015fa6:	4604      	mov	r4, r0
 8015fa8:	f7ff ff88 	bl	8015ebc <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8015fac:	4620      	mov	r0, r4
 8015fae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015fb2:	f7ff bfbd 	b.w	8015f30 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08015fb8 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8015fb8:	b538      	push	{r3, r4, r5, lr}
 8015fba:	4c15      	ldr	r4, [pc, #84]	; (8016010 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8015fbc:	4605      	mov	r5, r0
 8015fbe:	7823      	ldrb	r3, [r4, #0]
 8015fc0:	f3bf 8f5b 	dmb	ish
 8015fc4:	07da      	lsls	r2, r3, #31
 8015fc6:	d40b      	bmi.n	8015fe0 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015fc8:	4620      	mov	r0, r4
 8015fca:	f006 fa1e 	bl	801c40a <__cxa_guard_acquire>
 8015fce:	b138      	cbz	r0, 8015fe0 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015fd0:	4620      	mov	r0, r4
 8015fd2:	f006 fa26 	bl	801c422 <__cxa_guard_release>
 8015fd6:	4a0f      	ldr	r2, [pc, #60]	; (8016014 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015fd8:	490f      	ldr	r1, [pc, #60]	; (8016018 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8015fda:	4810      	ldr	r0, [pc, #64]	; (801601c <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015fdc:	f006 fa0e 	bl	801c3fc <__aeabi_atexit>
 8015fe0:	4c0f      	ldr	r4, [pc, #60]	; (8016020 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8015fe2:	7823      	ldrb	r3, [r4, #0]
 8015fe4:	f3bf 8f5b 	dmb	ish
 8015fe8:	07db      	lsls	r3, r3, #31
 8015fea:	d40b      	bmi.n	8016004 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015fec:	4620      	mov	r0, r4
 8015fee:	f006 fa0c 	bl	801c40a <__cxa_guard_acquire>
 8015ff2:	b138      	cbz	r0, 8016004 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015ff4:	4620      	mov	r0, r4
 8015ff6:	f006 fa14 	bl	801c422 <__cxa_guard_release>
 8015ffa:	4a06      	ldr	r2, [pc, #24]	; (8016014 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015ffc:	4909      	ldr	r1, [pc, #36]	; (8016024 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8015ffe:	480a      	ldr	r0, [pc, #40]	; (8016028 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8016000:	f006 f9fc 	bl	801c3fc <__aeabi_atexit>
 8016004:	4b05      	ldr	r3, [pc, #20]	; (801601c <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8016006:	622b      	str	r3, [r5, #32]
 8016008:	4b07      	ldr	r3, [pc, #28]	; (8016028 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801600a:	626b      	str	r3, [r5, #36]	; 0x24
 801600c:	bd38      	pop	{r3, r4, r5, pc}
 801600e:	bf00      	nop
 8016010:	24008a28 	.word	0x24008a28
 8016014:	24000000 	.word	0x24000000
 8016018:	08014a79 	.word	0x08014a79
 801601c:	240000a0 	.word	0x240000a0
 8016020:	24008a2c 	.word	0x24008a2c
 8016024:	08014a77 	.word	0x08014a77
 8016028:	240000a4 	.word	0x240000a4

0801602c <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801602c:	b538      	push	{r3, r4, r5, lr}
 801602e:	4c15      	ldr	r4, [pc, #84]	; (8016084 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8016030:	4605      	mov	r5, r0
 8016032:	7823      	ldrb	r3, [r4, #0]
 8016034:	f3bf 8f5b 	dmb	ish
 8016038:	07da      	lsls	r2, r3, #31
 801603a:	d40b      	bmi.n	8016054 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801603c:	4620      	mov	r0, r4
 801603e:	f006 f9e4 	bl	801c40a <__cxa_guard_acquire>
 8016042:	b138      	cbz	r0, 8016054 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8016044:	4620      	mov	r0, r4
 8016046:	f006 f9ec 	bl	801c422 <__cxa_guard_release>
 801604a:	4a0f      	ldr	r2, [pc, #60]	; (8016088 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801604c:	490f      	ldr	r1, [pc, #60]	; (801608c <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801604e:	4810      	ldr	r0, [pc, #64]	; (8016090 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8016050:	f006 f9d4 	bl	801c3fc <__aeabi_atexit>
 8016054:	4c0f      	ldr	r4, [pc, #60]	; (8016094 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8016056:	7823      	ldrb	r3, [r4, #0]
 8016058:	f3bf 8f5b 	dmb	ish
 801605c:	07db      	lsls	r3, r3, #31
 801605e:	d40b      	bmi.n	8016078 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016060:	4620      	mov	r0, r4
 8016062:	f006 f9d2 	bl	801c40a <__cxa_guard_acquire>
 8016066:	b138      	cbz	r0, 8016078 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016068:	4620      	mov	r0, r4
 801606a:	f006 f9da 	bl	801c422 <__cxa_guard_release>
 801606e:	4a06      	ldr	r2, [pc, #24]	; (8016088 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8016070:	4909      	ldr	r1, [pc, #36]	; (8016098 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8016072:	480a      	ldr	r0, [pc, #40]	; (801609c <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8016074:	f006 f9c2 	bl	801c3fc <__aeabi_atexit>
 8016078:	4b05      	ldr	r3, [pc, #20]	; (8016090 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801607a:	61ab      	str	r3, [r5, #24]
 801607c:	4b07      	ldr	r3, [pc, #28]	; (801609c <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801607e:	61eb      	str	r3, [r5, #28]
 8016080:	bd38      	pop	{r3, r4, r5, pc}
 8016082:	bf00      	nop
 8016084:	24008a08 	.word	0x24008a08
 8016088:	24000000 	.word	0x24000000
 801608c:	08014a7d 	.word	0x08014a7d
 8016090:	24000080 	.word	0x24000080
 8016094:	24008a0c 	.word	0x24008a0c
 8016098:	08014a7b 	.word	0x08014a7b
 801609c:	24000084 	.word	0x24000084

080160a0 <_ZN8touchgfx8LCD24bpp30enableTextureMapperL8_ARGB8888Ev>:
 80160a0:	b510      	push	{r4, lr}
 80160a2:	4604      	mov	r4, r0
 80160a4:	f7ff ff88 	bl	8015fb8 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80160a8:	4620      	mov	r0, r4
 80160aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80160ae:	f7ff bfbd 	b.w	801602c <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080160b4 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv>:
 80160b4:	b538      	push	{r3, r4, r5, lr}
 80160b6:	4c15      	ldr	r4, [pc, #84]	; (801610c <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x58>)
 80160b8:	4605      	mov	r5, r0
 80160ba:	7823      	ldrb	r3, [r4, #0]
 80160bc:	f3bf 8f5b 	dmb	ish
 80160c0:	07da      	lsls	r2, r3, #31
 80160c2:	d40b      	bmi.n	80160dc <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x28>
 80160c4:	4620      	mov	r0, r4
 80160c6:	f006 f9a0 	bl	801c40a <__cxa_guard_acquire>
 80160ca:	b138      	cbz	r0, 80160dc <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x28>
 80160cc:	4620      	mov	r0, r4
 80160ce:	f006 f9a8 	bl	801c422 <__cxa_guard_release>
 80160d2:	4a0f      	ldr	r2, [pc, #60]	; (8016110 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x5c>)
 80160d4:	490f      	ldr	r1, [pc, #60]	; (8016114 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x60>)
 80160d6:	4810      	ldr	r0, [pc, #64]	; (8016118 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x64>)
 80160d8:	f006 f990 	bl	801c3fc <__aeabi_atexit>
 80160dc:	4c0f      	ldr	r4, [pc, #60]	; (801611c <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x68>)
 80160de:	7823      	ldrb	r3, [r4, #0]
 80160e0:	f3bf 8f5b 	dmb	ish
 80160e4:	07db      	lsls	r3, r3, #31
 80160e6:	d40b      	bmi.n	8016100 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x4c>
 80160e8:	4620      	mov	r0, r4
 80160ea:	f006 f98e 	bl	801c40a <__cxa_guard_acquire>
 80160ee:	b138      	cbz	r0, 8016100 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x4c>
 80160f0:	4620      	mov	r0, r4
 80160f2:	f006 f996 	bl	801c422 <__cxa_guard_release>
 80160f6:	4a06      	ldr	r2, [pc, #24]	; (8016110 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x5c>)
 80160f8:	4909      	ldr	r1, [pc, #36]	; (8016120 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x6c>)
 80160fa:	480a      	ldr	r0, [pc, #40]	; (8016124 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x70>)
 80160fc:	f006 f97e 	bl	801c3fc <__aeabi_atexit>
 8016100:	4b05      	ldr	r3, [pc, #20]	; (8016118 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x64>)
 8016102:	632b      	str	r3, [r5, #48]	; 0x30
 8016104:	4b07      	ldr	r3, [pc, #28]	; (8016124 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x70>)
 8016106:	636b      	str	r3, [r5, #52]	; 0x34
 8016108:	bd38      	pop	{r3, r4, r5, pc}
 801610a:	bf00      	nop
 801610c:	24008a10 	.word	0x24008a10
 8016110:	24000000 	.word	0x24000000
 8016114:	08014a71 	.word	0x08014a71
 8016118:	24000088 	.word	0x24000088
 801611c:	24008a14 	.word	0x24008a14
 8016120:	08014a6f 	.word	0x08014a6f
 8016124:	2400008c 	.word	0x2400008c

08016128 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv>:
 8016128:	b538      	push	{r3, r4, r5, lr}
 801612a:	4c15      	ldr	r4, [pc, #84]	; (8016180 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x58>)
 801612c:	4605      	mov	r5, r0
 801612e:	7823      	ldrb	r3, [r4, #0]
 8016130:	f3bf 8f5b 	dmb	ish
 8016134:	07da      	lsls	r2, r3, #31
 8016136:	d40b      	bmi.n	8016150 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x28>
 8016138:	4620      	mov	r0, r4
 801613a:	f006 f966 	bl	801c40a <__cxa_guard_acquire>
 801613e:	b138      	cbz	r0, 8016150 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x28>
 8016140:	4620      	mov	r0, r4
 8016142:	f006 f96e 	bl	801c422 <__cxa_guard_release>
 8016146:	4a0f      	ldr	r2, [pc, #60]	; (8016184 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x5c>)
 8016148:	490f      	ldr	r1, [pc, #60]	; (8016188 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x60>)
 801614a:	4810      	ldr	r0, [pc, #64]	; (801618c <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x64>)
 801614c:	f006 f956 	bl	801c3fc <__aeabi_atexit>
 8016150:	4c0f      	ldr	r4, [pc, #60]	; (8016190 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x68>)
 8016152:	7823      	ldrb	r3, [r4, #0]
 8016154:	f3bf 8f5b 	dmb	ish
 8016158:	07db      	lsls	r3, r3, #31
 801615a:	d40b      	bmi.n	8016174 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x4c>
 801615c:	4620      	mov	r0, r4
 801615e:	f006 f954 	bl	801c40a <__cxa_guard_acquire>
 8016162:	b138      	cbz	r0, 8016174 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x4c>
 8016164:	4620      	mov	r0, r4
 8016166:	f006 f95c 	bl	801c422 <__cxa_guard_release>
 801616a:	4a06      	ldr	r2, [pc, #24]	; (8016184 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x5c>)
 801616c:	4909      	ldr	r1, [pc, #36]	; (8016194 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x6c>)
 801616e:	480a      	ldr	r0, [pc, #40]	; (8016198 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x70>)
 8016170:	f006 f944 	bl	801c3fc <__aeabi_atexit>
 8016174:	4b05      	ldr	r3, [pc, #20]	; (801618c <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x64>)
 8016176:	62ab      	str	r3, [r5, #40]	; 0x28
 8016178:	4b07      	ldr	r3, [pc, #28]	; (8016198 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x70>)
 801617a:	62eb      	str	r3, [r5, #44]	; 0x2c
 801617c:	bd38      	pop	{r3, r4, r5, pc}
 801617e:	bf00      	nop
 8016180:	240089e8 	.word	0x240089e8
 8016184:	24000000 	.word	0x24000000
 8016188:	08014a75 	.word	0x08014a75
 801618c:	24000060 	.word	0x24000060
 8016190:	240089ec 	.word	0x240089ec
 8016194:	08014a73 	.word	0x08014a73
 8016198:	24000064 	.word	0x24000064

0801619c <_ZN8touchgfx8LCD24bpp25enableTextureMapperRGB888Ev>:
 801619c:	b510      	push	{r4, lr}
 801619e:	4604      	mov	r4, r0
 80161a0:	f7ff ff88 	bl	80160b4 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv>
 80161a4:	4620      	mov	r0, r4
 80161a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80161aa:	f7ff bfbd 	b.w	8016128 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv>
	...

080161b0 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80161b0:	b538      	push	{r3, r4, r5, lr}
 80161b2:	4c15      	ldr	r4, [pc, #84]	; (8016208 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80161b4:	4605      	mov	r5, r0
 80161b6:	7823      	ldrb	r3, [r4, #0]
 80161b8:	f3bf 8f5b 	dmb	ish
 80161bc:	07da      	lsls	r2, r3, #31
 80161be:	d40b      	bmi.n	80161d8 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80161c0:	4620      	mov	r0, r4
 80161c2:	f006 f922 	bl	801c40a <__cxa_guard_acquire>
 80161c6:	b138      	cbz	r0, 80161d8 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80161c8:	4620      	mov	r0, r4
 80161ca:	f006 f92a 	bl	801c422 <__cxa_guard_release>
 80161ce:	4a0f      	ldr	r2, [pc, #60]	; (801620c <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80161d0:	490f      	ldr	r1, [pc, #60]	; (8016210 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80161d2:	4810      	ldr	r0, [pc, #64]	; (8016214 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80161d4:	f006 f912 	bl	801c3fc <__aeabi_atexit>
 80161d8:	4c0f      	ldr	r4, [pc, #60]	; (8016218 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80161da:	7823      	ldrb	r3, [r4, #0]
 80161dc:	f3bf 8f5b 	dmb	ish
 80161e0:	07db      	lsls	r3, r3, #31
 80161e2:	d40b      	bmi.n	80161fc <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80161e4:	4620      	mov	r0, r4
 80161e6:	f006 f910 	bl	801c40a <__cxa_guard_acquire>
 80161ea:	b138      	cbz	r0, 80161fc <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80161ec:	4620      	mov	r0, r4
 80161ee:	f006 f918 	bl	801c422 <__cxa_guard_release>
 80161f2:	4a06      	ldr	r2, [pc, #24]	; (801620c <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80161f4:	4909      	ldr	r1, [pc, #36]	; (801621c <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80161f6:	480a      	ldr	r0, [pc, #40]	; (8016220 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80161f8:	f006 f900 	bl	801c3fc <__aeabi_atexit>
 80161fc:	4b05      	ldr	r3, [pc, #20]	; (8016214 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80161fe:	642b      	str	r3, [r5, #64]	; 0x40
 8016200:	4b07      	ldr	r3, [pc, #28]	; (8016220 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8016202:	646b      	str	r3, [r5, #68]	; 0x44
 8016204:	bd38      	pop	{r3, r4, r5, pc}
 8016206:	bf00      	nop
 8016208:	24008a18 	.word	0x24008a18
 801620c:	24000000 	.word	0x24000000
 8016210:	08014a69 	.word	0x08014a69
 8016214:	24000090 	.word	0x24000090
 8016218:	24008a1c 	.word	0x24008a1c
 801621c:	08014a67 	.word	0x08014a67
 8016220:	24000094 	.word	0x24000094

08016224 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8016224:	b538      	push	{r3, r4, r5, lr}
 8016226:	4c15      	ldr	r4, [pc, #84]	; (801627c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8016228:	4605      	mov	r5, r0
 801622a:	7823      	ldrb	r3, [r4, #0]
 801622c:	f3bf 8f5b 	dmb	ish
 8016230:	07da      	lsls	r2, r3, #31
 8016232:	d40b      	bmi.n	801624c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8016234:	4620      	mov	r0, r4
 8016236:	f006 f8e8 	bl	801c40a <__cxa_guard_acquire>
 801623a:	b138      	cbz	r0, 801624c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801623c:	4620      	mov	r0, r4
 801623e:	f006 f8f0 	bl	801c422 <__cxa_guard_release>
 8016242:	4a0f      	ldr	r2, [pc, #60]	; (8016280 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8016244:	490f      	ldr	r1, [pc, #60]	; (8016284 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8016246:	4810      	ldr	r0, [pc, #64]	; (8016288 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8016248:	f006 f8d8 	bl	801c3fc <__aeabi_atexit>
 801624c:	4c0f      	ldr	r4, [pc, #60]	; (801628c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801624e:	7823      	ldrb	r3, [r4, #0]
 8016250:	f3bf 8f5b 	dmb	ish
 8016254:	07db      	lsls	r3, r3, #31
 8016256:	d40b      	bmi.n	8016270 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8016258:	4620      	mov	r0, r4
 801625a:	f006 f8d6 	bl	801c40a <__cxa_guard_acquire>
 801625e:	b138      	cbz	r0, 8016270 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8016260:	4620      	mov	r0, r4
 8016262:	f006 f8de 	bl	801c422 <__cxa_guard_release>
 8016266:	4a06      	ldr	r2, [pc, #24]	; (8016280 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8016268:	4909      	ldr	r1, [pc, #36]	; (8016290 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801626a:	480a      	ldr	r0, [pc, #40]	; (8016294 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801626c:	f006 f8c6 	bl	801c3fc <__aeabi_atexit>
 8016270:	4b05      	ldr	r3, [pc, #20]	; (8016288 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8016272:	63ab      	str	r3, [r5, #56]	; 0x38
 8016274:	4b07      	ldr	r3, [pc, #28]	; (8016294 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8016276:	63eb      	str	r3, [r5, #60]	; 0x3c
 8016278:	bd38      	pop	{r3, r4, r5, pc}
 801627a:	bf00      	nop
 801627c:	240089f8 	.word	0x240089f8
 8016280:	24000000 	.word	0x24000000
 8016284:	08014a6d 	.word	0x08014a6d
 8016288:	24000070 	.word	0x24000070
 801628c:	240089fc 	.word	0x240089fc
 8016290:	08014a6b 	.word	0x08014a6b
 8016294:	24000074 	.word	0x24000074

08016298 <_ZN8touchgfx8LCD24bpp27enableTextureMapperARGB8888Ev>:
 8016298:	b510      	push	{r4, lr}
 801629a:	4604      	mov	r4, r0
 801629c:	f7ff ff88 	bl	80161b0 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80162a0:	4620      	mov	r0, r4
 80162a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80162a6:	f7ff bfbd 	b.w	8016224 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080162ac <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80162ac:	b538      	push	{r3, r4, r5, lr}
 80162ae:	4c15      	ldr	r4, [pc, #84]	; (8016304 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80162b0:	4605      	mov	r5, r0
 80162b2:	7823      	ldrb	r3, [r4, #0]
 80162b4:	f3bf 8f5b 	dmb	ish
 80162b8:	07da      	lsls	r2, r3, #31
 80162ba:	d40b      	bmi.n	80162d4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80162bc:	4620      	mov	r0, r4
 80162be:	f006 f8a4 	bl	801c40a <__cxa_guard_acquire>
 80162c2:	b138      	cbz	r0, 80162d4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80162c4:	4620      	mov	r0, r4
 80162c6:	f006 f8ac 	bl	801c422 <__cxa_guard_release>
 80162ca:	4a0f      	ldr	r2, [pc, #60]	; (8016308 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80162cc:	490f      	ldr	r1, [pc, #60]	; (801630c <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80162ce:	4810      	ldr	r0, [pc, #64]	; (8016310 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80162d0:	f006 f894 	bl	801c3fc <__aeabi_atexit>
 80162d4:	4c0f      	ldr	r4, [pc, #60]	; (8016314 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80162d6:	7823      	ldrb	r3, [r4, #0]
 80162d8:	f3bf 8f5b 	dmb	ish
 80162dc:	07db      	lsls	r3, r3, #31
 80162de:	d40b      	bmi.n	80162f8 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80162e0:	4620      	mov	r0, r4
 80162e2:	f006 f892 	bl	801c40a <__cxa_guard_acquire>
 80162e6:	b138      	cbz	r0, 80162f8 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80162e8:	4620      	mov	r0, r4
 80162ea:	f006 f89a 	bl	801c422 <__cxa_guard_release>
 80162ee:	4a06      	ldr	r2, [pc, #24]	; (8016308 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80162f0:	4909      	ldr	r1, [pc, #36]	; (8016318 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80162f2:	480a      	ldr	r0, [pc, #40]	; (801631c <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80162f4:	f006 f882 	bl	801c3fc <__aeabi_atexit>
 80162f8:	4b05      	ldr	r3, [pc, #20]	; (8016310 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80162fa:	652b      	str	r3, [r5, #80]	; 0x50
 80162fc:	4b07      	ldr	r3, [pc, #28]	; (801631c <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80162fe:	656b      	str	r3, [r5, #84]	; 0x54
 8016300:	bd38      	pop	{r3, r4, r5, pc}
 8016302:	bf00      	nop
 8016304:	240089f0 	.word	0x240089f0
 8016308:	24000000 	.word	0x24000000
 801630c:	08014a61 	.word	0x08014a61
 8016310:	24000068 	.word	0x24000068
 8016314:	240089f4 	.word	0x240089f4
 8016318:	08014a5f 	.word	0x08014a5f
 801631c:	2400006c 	.word	0x2400006c

08016320 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv>:
 8016320:	b538      	push	{r3, r4, r5, lr}
 8016322:	4c15      	ldr	r4, [pc, #84]	; (8016378 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8016324:	4605      	mov	r5, r0
 8016326:	7823      	ldrb	r3, [r4, #0]
 8016328:	f3bf 8f5b 	dmb	ish
 801632c:	07da      	lsls	r2, r3, #31
 801632e:	d40b      	bmi.n	8016348 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8016330:	4620      	mov	r0, r4
 8016332:	f006 f86a 	bl	801c40a <__cxa_guard_acquire>
 8016336:	b138      	cbz	r0, 8016348 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8016338:	4620      	mov	r0, r4
 801633a:	f006 f872 	bl	801c422 <__cxa_guard_release>
 801633e:	4a0f      	ldr	r2, [pc, #60]	; (801637c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8016340:	490f      	ldr	r1, [pc, #60]	; (8016380 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8016342:	4810      	ldr	r0, [pc, #64]	; (8016384 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8016344:	f006 f85a 	bl	801c3fc <__aeabi_atexit>
 8016348:	4c0f      	ldr	r4, [pc, #60]	; (8016388 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801634a:	7823      	ldrb	r3, [r4, #0]
 801634c:	f3bf 8f5b 	dmb	ish
 8016350:	07db      	lsls	r3, r3, #31
 8016352:	d40b      	bmi.n	801636c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8016354:	4620      	mov	r0, r4
 8016356:	f006 f858 	bl	801c40a <__cxa_guard_acquire>
 801635a:	b138      	cbz	r0, 801636c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801635c:	4620      	mov	r0, r4
 801635e:	f006 f860 	bl	801c422 <__cxa_guard_release>
 8016362:	4a06      	ldr	r2, [pc, #24]	; (801637c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8016364:	4909      	ldr	r1, [pc, #36]	; (801638c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8016366:	480a      	ldr	r0, [pc, #40]	; (8016390 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8016368:	f006 f848 	bl	801c3fc <__aeabi_atexit>
 801636c:	4b05      	ldr	r3, [pc, #20]	; (8016384 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801636e:	64ab      	str	r3, [r5, #72]	; 0x48
 8016370:	4b07      	ldr	r3, [pc, #28]	; (8016390 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8016372:	64eb      	str	r3, [r5, #76]	; 0x4c
 8016374:	bd38      	pop	{r3, r4, r5, pc}
 8016376:	bf00      	nop
 8016378:	240089e0 	.word	0x240089e0
 801637c:	24000000 	.word	0x24000000
 8016380:	08014a65 	.word	0x08014a65
 8016384:	24000058 	.word	0x24000058
 8016388:	240089e4 	.word	0x240089e4
 801638c:	08014a63 	.word	0x08014a63
 8016390:	2400005c 	.word	0x2400005c

08016394 <_ZN8touchgfx8LCD24bpp21enableTextureMapperA4Ev>:
 8016394:	b510      	push	{r4, lr}
 8016396:	4604      	mov	r4, r0
 8016398:	f7ff ff88 	bl	80162ac <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801639c:	4620      	mov	r0, r4
 801639e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80163a2:	f7ff bfbd 	b.w	8016320 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv>

080163a6 <_ZN8touchgfx8LCD24bpp22enableTextureMapperAllEv>:
 80163a6:	b510      	push	{r4, lr}
 80163a8:	4604      	mov	r4, r0
 80163aa:	f7ff fff3 	bl	8016394 <_ZN8touchgfx8LCD24bpp21enableTextureMapperA4Ev>
 80163ae:	4620      	mov	r0, r4
 80163b0:	f7ff ff72 	bl	8016298 <_ZN8touchgfx8LCD24bpp27enableTextureMapperARGB8888Ev>
 80163b4:	4620      	mov	r0, r4
 80163b6:	f7ff fe73 	bl	80160a0 <_ZN8touchgfx8LCD24bpp30enableTextureMapperL8_ARGB8888Ev>
 80163ba:	4620      	mov	r0, r4
 80163bc:	f7ff fdf2 	bl	8015fa4 <_ZN8touchgfx8LCD24bpp28enableTextureMapperL8_RGB888Ev>
 80163c0:	4620      	mov	r0, r4
 80163c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80163c6:	f7ff bee9 	b.w	801619c <_ZN8touchgfx8LCD24bpp25enableTextureMapperRGB888Ev>

080163ca <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>:
 80163ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163ce:	b087      	sub	sp, #28
 80163d0:	788d      	ldrb	r5, [r1, #2]
 80163d2:	f891 9000 	ldrb.w	r9, [r1]
 80163d6:	f9bd 8040 	ldrsh.w	r8, [sp, #64]	; 0x40
 80163da:	9501      	str	r5, [sp, #4]
 80163dc:	784d      	ldrb	r5, [r1, #1]
 80163de:	9203      	str	r2, [sp, #12]
 80163e0:	9502      	str	r5, [sp, #8]
 80163e2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80163e6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80163ea:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80163ee:	f89d e058 	ldrb.w	lr, [sp, #88]	; 0x58
 80163f2:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80163f6:	fb06 0708 	mla	r7, r6, r8, r0
 80163fa:	2e00      	cmp	r6, #0
 80163fc:	eb02 0a07 	add.w	sl, r2, r7
 8016400:	ea4f 2205 	mov.w	r2, r5, lsl #8
 8016404:	9d01      	ldr	r5, [sp, #4]
 8016406:	ea42 4505 	orr.w	r5, r2, r5, lsl #16
 801640a:	ea45 0509 	orr.w	r5, r5, r9
 801640e:	9505      	str	r5, [sp, #20]
 8016410:	f2c0 80b2 	blt.w	8016578 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ae>
 8016414:	45b3      	cmp	fp, r6
 8016416:	f340 80af 	ble.w	8016578 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ae>
 801641a:	2800      	cmp	r0, #0
 801641c:	f2c0 80aa 	blt.w	8016574 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1aa>
 8016420:	4580      	cmp	r8, r0
 8016422:	f340 80a7 	ble.w	8016574 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1aa>
 8016426:	9a03      	ldr	r2, [sp, #12]
 8016428:	5dd7      	ldrb	r7, [r2, r7]
 801642a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801642e:	441f      	add	r7, r3
 8016430:	1c42      	adds	r2, r0, #1
 8016432:	f100 80a4 	bmi.w	801657e <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b4>
 8016436:	4590      	cmp	r8, r2
 8016438:	f340 80a1 	ble.w	801657e <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b4>
 801643c:	2c00      	cmp	r4, #0
 801643e:	f000 809e 	beq.w	801657e <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b4>
 8016442:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8016446:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801644a:	441d      	add	r5, r3
 801644c:	3601      	adds	r6, #1
 801644e:	f100 809a 	bmi.w	8016586 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1bc>
 8016452:	45b3      	cmp	fp, r6
 8016454:	f340 8097 	ble.w	8016586 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1bc>
 8016458:	f1bc 0f00 	cmp.w	ip, #0
 801645c:	f000 8093 	beq.w	8016586 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1bc>
 8016460:	2800      	cmp	r0, #0
 8016462:	f2c0 808e 	blt.w	8016582 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b8>
 8016466:	4580      	cmp	r8, r0
 8016468:	f340 808b 	ble.w	8016582 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b8>
 801646c:	f81a 6008 	ldrb.w	r6, [sl, r8]
 8016470:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016474:	441e      	add	r6, r3
 8016476:	3001      	adds	r0, #1
 8016478:	f100 8088 	bmi.w	801658c <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1c2>
 801647c:	4580      	cmp	r8, r0
 801647e:	f340 8085 	ble.w	801658c <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1c2>
 8016482:	2c00      	cmp	r4, #0
 8016484:	f000 8082 	beq.w	801658c <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1c2>
 8016488:	44d0      	add	r8, sl
 801648a:	f898 2001 	ldrb.w	r2, [r8, #1]
 801648e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016492:	4413      	add	r3, r2
 8016494:	b2a4      	uxth	r4, r4
 8016496:	f895 a000 	ldrb.w	sl, [r5]
 801649a:	fa1f fc8c 	uxth.w	ip, ip
 801649e:	fb04 fb0c 	mul.w	fp, r4, ip
 80164a2:	0124      	lsls	r4, r4, #4
 80164a4:	ebcb 1c0c 	rsb	ip, fp, ip, lsl #4
 80164a8:	f5c4 7880 	rsb	r8, r4, #256	; 0x100
 80164ac:	eba4 040b 	sub.w	r4, r4, fp
 80164b0:	fa1f f08c 	uxth.w	r0, ip
 80164b4:	b2a2      	uxth	r2, r4
 80164b6:	783c      	ldrb	r4, [r7, #0]
 80164b8:	eba8 0800 	sub.w	r8, r8, r0
 80164bc:	fa1f fc8e 	uxth.w	ip, lr
 80164c0:	fb02 fa0a 	mul.w	sl, r2, sl
 80164c4:	ea6f 0e0e 	mvn.w	lr, lr
 80164c8:	fa1f f888 	uxth.w	r8, r8
 80164cc:	fa5f fe8e 	uxtb.w	lr, lr
 80164d0:	fb08 aa04 	mla	sl, r8, r4, sl
 80164d4:	7834      	ldrb	r4, [r6, #0]
 80164d6:	fb19 f90e 	smulbb	r9, r9, lr
 80164da:	fb00 aa04 	mla	sl, r0, r4, sl
 80164de:	781c      	ldrb	r4, [r3, #0]
 80164e0:	fb0b a404 	mla	r4, fp, r4, sl
 80164e4:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80164e8:	fb04 990c 	mla	r9, r4, ip, r9
 80164ec:	fa1f f989 	uxth.w	r9, r9
 80164f0:	f109 0401 	add.w	r4, r9, #1
 80164f4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80164f8:	ea4f 2929 	mov.w	r9, r9, asr #8
 80164fc:	f881 9000 	strb.w	r9, [r1]
 8016500:	f895 9001 	ldrb.w	r9, [r5, #1]
 8016504:	787c      	ldrb	r4, [r7, #1]
 8016506:	fb02 f909 	mul.w	r9, r2, r9
 801650a:	fb08 9904 	mla	r9, r8, r4, r9
 801650e:	7874      	ldrb	r4, [r6, #1]
 8016510:	fb00 9904 	mla	r9, r0, r4, r9
 8016514:	785c      	ldrb	r4, [r3, #1]
 8016516:	fb0b 9404 	mla	r4, fp, r4, r9
 801651a:	f3c4 2a07 	ubfx	sl, r4, #8, #8
 801651e:	9c02      	ldr	r4, [sp, #8]
 8016520:	fb14 f90e 	smulbb	r9, r4, lr
 8016524:	fb0a 940c 	mla	r4, sl, ip, r9
 8016528:	b2a4      	uxth	r4, r4
 801652a:	f104 0901 	add.w	r9, r4, #1
 801652e:	eb09 2414 	add.w	r4, r9, r4, lsr #8
 8016532:	1224      	asrs	r4, r4, #8
 8016534:	704c      	strb	r4, [r1, #1]
 8016536:	78ad      	ldrb	r5, [r5, #2]
 8016538:	78bc      	ldrb	r4, [r7, #2]
 801653a:	436a      	muls	r2, r5
 801653c:	789b      	ldrb	r3, [r3, #2]
 801653e:	fb08 2204 	mla	r2, r8, r4, r2
 8016542:	78b4      	ldrb	r4, [r6, #2]
 8016544:	fb00 2004 	mla	r0, r0, r4, r2
 8016548:	fb0b 0b03 	mla	fp, fp, r3, r0
 801654c:	9b01      	ldr	r3, [sp, #4]
 801654e:	fb13 fe0e 	smulbb	lr, r3, lr
 8016552:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8016556:	fb0b ec0c 	mla	ip, fp, ip, lr
 801655a:	fa1f fc8c 	uxth.w	ip, ip
 801655e:	f10c 0e01 	add.w	lr, ip, #1
 8016562:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 8016566:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 801656a:	f881 c002 	strb.w	ip, [r1, #2]
 801656e:	b007      	add	sp, #28
 8016570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016574:	af05      	add	r7, sp, #20
 8016576:	e75b      	b.n	8016430 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x66>
 8016578:	ad05      	add	r5, sp, #20
 801657a:	462f      	mov	r7, r5
 801657c:	e766      	b.n	801644c <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x82>
 801657e:	ad05      	add	r5, sp, #20
 8016580:	e764      	b.n	801644c <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x82>
 8016582:	ae05      	add	r6, sp, #20
 8016584:	e777      	b.n	8016476 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xac>
 8016586:	ab05      	add	r3, sp, #20
 8016588:	461e      	mov	r6, r3
 801658a:	e783      	b.n	8016494 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xca>
 801658c:	ab05      	add	r3, sp, #20
 801658e:	e781      	b.n	8016494 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xca>

08016590 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016594:	b093      	sub	sp, #76	; 0x4c
 8016596:	9210      	str	r2, [sp, #64]	; 0x40
 8016598:	9309      	str	r3, [sp, #36]	; 0x24
 801659a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801659c:	f89d 3094 	ldrb.w	r3, [sp, #148]	; 0x94
 80165a0:	9011      	str	r0, [sp, #68]	; 0x44
 80165a2:	930e      	str	r3, [sp, #56]	; 0x38
 80165a4:	6850      	ldr	r0, [r2, #4]
 80165a6:	910d      	str	r1, [sp, #52]	; 0x34
 80165a8:	6812      	ldr	r2, [r2, #0]
 80165aa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80165ae:	fb00 1303 	mla	r3, r0, r3, r1
 80165b2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80165b6:	18d3      	adds	r3, r2, r3
 80165b8:	930a      	str	r3, [sp, #40]	; 0x28
 80165ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80165bc:	681b      	ldr	r3, [r3, #0]
 80165be:	930c      	str	r3, [sp, #48]	; 0x30
 80165c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80165c2:	685c      	ldr	r4, [r3, #4]
 80165c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80165c6:	3404      	adds	r4, #4
 80165c8:	43db      	mvns	r3, r3
 80165ca:	b2db      	uxtb	r3, r3
 80165cc:	930b      	str	r3, [sp, #44]	; 0x2c
 80165ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80165d0:	2b00      	cmp	r3, #0
 80165d2:	dc03      	bgt.n	80165dc <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80165d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80165d6:	2b00      	cmp	r3, #0
 80165d8:	f340 8250 	ble.w	8016a7c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ec>
 80165dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80165de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80165e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80165e6:	1e48      	subs	r0, r1, #1
 80165e8:	1e55      	subs	r5, r2, #1
 80165ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80165ec:	2b00      	cmp	r3, #0
 80165ee:	f340 80ee 	ble.w	80167ce <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23e>
 80165f2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80165f4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80165f6:	1436      	asrs	r6, r6, #16
 80165f8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80165fc:	d406      	bmi.n	801660c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80165fe:	4286      	cmp	r6, r0
 8016600:	da04      	bge.n	801660c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016602:	2b00      	cmp	r3, #0
 8016604:	db02      	blt.n	801660c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016606:	42ab      	cmp	r3, r5
 8016608:	f2c0 80e2 	blt.w	80167d0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801660c:	3601      	adds	r6, #1
 801660e:	f100 80cf 	bmi.w	80167b0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 8016612:	42b1      	cmp	r1, r6
 8016614:	f2c0 80cc 	blt.w	80167b0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 8016618:	3301      	adds	r3, #1
 801661a:	f100 80c9 	bmi.w	80167b0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 801661e:	429a      	cmp	r2, r3
 8016620:	f2c0 80c6 	blt.w	80167b0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 8016624:	e9dd b609 	ldrd	fp, r6, [sp, #36]	; 0x24
 8016628:	f1bb 0f00 	cmp.w	fp, #0
 801662c:	f340 80f1 	ble.w	8016812 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8016630:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8016632:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8016634:	9824      	ldr	r0, [sp, #144]	; 0x90
 8016636:	141d      	asrs	r5, r3, #16
 8016638:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801663a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801663e:	68c7      	ldr	r7, [r0, #12]
 8016640:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8016642:	1418      	asrs	r0, r3, #16
 8016644:	f3c3 3803 	ubfx	r8, r3, #12, #4
 8016648:	6892      	ldr	r2, [r2, #8]
 801664a:	f100 8137 	bmi.w	80168bc <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801664e:	f102 3cff 	add.w	ip, r2, #4294967295
 8016652:	4560      	cmp	r0, ip
 8016654:	f280 8132 	bge.w	80168bc <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8016658:	2d00      	cmp	r5, #0
 801665a:	f2c0 812f 	blt.w	80168bc <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801665e:	f107 3cff 	add.w	ip, r7, #4294967295
 8016662:	4565      	cmp	r5, ip
 8016664:	f280 812a 	bge.w	80168bc <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8016668:	b212      	sxth	r2, r2
 801666a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801666c:	fb05 0002 	mla	r0, r5, r2, r0
 8016670:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8016672:	f817 c000 	ldrb.w	ip, [r7, r0]
 8016676:	4405      	add	r5, r0
 8016678:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801667c:	eb04 0e0c 	add.w	lr, r4, ip
 8016680:	f1b8 0f00 	cmp.w	r8, #0
 8016684:	f000 810c 	beq.w	80168a0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 8016688:	786f      	ldrb	r7, [r5, #1]
 801668a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801668e:	4427      	add	r7, r4
 8016690:	2900      	cmp	r1, #0
 8016692:	f000 810d 	beq.w	80168b0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x320>
 8016696:	18a8      	adds	r0, r5, r2
 8016698:	5caa      	ldrb	r2, [r5, r2]
 801669a:	7840      	ldrb	r0, [r0, #1]
 801669c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80166a0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80166a4:	4422      	add	r2, r4
 80166a6:	4420      	add	r0, r4
 80166a8:	fa1f f388 	uxth.w	r3, r8
 80166ac:	f814 a00c 	ldrb.w	sl, [r4, ip]
 80166b0:	b289      	uxth	r1, r1
 80166b2:	f897 c000 	ldrb.w	ip, [r7]
 80166b6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80166ba:	fb03 f901 	mul.w	r9, r3, r1
 80166be:	011b      	lsls	r3, r3, #4
 80166c0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80166c4:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80166c8:	eba3 0309 	sub.w	r3, r3, r9
 80166cc:	b289      	uxth	r1, r1
 80166ce:	b29b      	uxth	r3, r3
 80166d0:	eba8 0801 	sub.w	r8, r8, r1
 80166d4:	fb03 fc0c 	mul.w	ip, r3, ip
 80166d8:	fa1f f888 	uxth.w	r8, r8
 80166dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80166de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166e0:	fb08 cc0a 	mla	ip, r8, sl, ip
 80166e4:	f892 a000 	ldrb.w	sl, [r2]
 80166e8:	fb01 cc0a 	mla	ip, r1, sl, ip
 80166ec:	f890 a000 	ldrb.w	sl, [r0]
 80166f0:	fb09 cc0a 	mla	ip, r9, sl, ip
 80166f4:	f896 a000 	ldrb.w	sl, [r6]
 80166f8:	fb1a fa03 	smulbb	sl, sl, r3
 80166fc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016700:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016702:	fb0c ac05 	mla	ip, ip, r5, sl
 8016706:	fa1f fc8c 	uxth.w	ip, ip
 801670a:	f10c 0a01 	add.w	sl, ip, #1
 801670e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016712:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8016716:	f886 a000 	strb.w	sl, [r6]
 801671a:	f897 c001 	ldrb.w	ip, [r7, #1]
 801671e:	f89e a001 	ldrb.w	sl, [lr, #1]
 8016722:	fb03 fc0c 	mul.w	ip, r3, ip
 8016726:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016728:	fb08 cc0a 	mla	ip, r8, sl, ip
 801672c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8016730:	fb01 cc0a 	mla	ip, r1, sl, ip
 8016734:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016738:	fb09 cc0a 	mla	ip, r9, sl, ip
 801673c:	f896 a001 	ldrb.w	sl, [r6, #1]
 8016740:	fb1a fa03 	smulbb	sl, sl, r3
 8016744:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016748:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801674a:	fb0c ac05 	mla	ip, ip, r5, sl
 801674e:	fa1f fc8c 	uxth.w	ip, ip
 8016752:	f10c 0a01 	add.w	sl, ip, #1
 8016756:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 801675a:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 801675e:	f886 c001 	strb.w	ip, [r6, #1]
 8016762:	78bf      	ldrb	r7, [r7, #2]
 8016764:	f89e c002 	ldrb.w	ip, [lr, #2]
 8016768:	437b      	muls	r3, r7
 801676a:	fb08 330c 	mla	r3, r8, ip, r3
 801676e:	f892 c002 	ldrb.w	ip, [r2, #2]
 8016772:	7882      	ldrb	r2, [r0, #2]
 8016774:	fb01 310c 	mla	r1, r1, ip, r3
 8016778:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801677a:	fb09 1902 	mla	r9, r9, r2, r1
 801677e:	78b1      	ldrb	r1, [r6, #2]
 8016780:	fb11 f103 	smulbb	r1, r1, r3
 8016784:	f3c9 2907 	ubfx	r9, r9, #8, #8
 8016788:	fb09 1505 	mla	r5, r9, r5, r1
 801678c:	b2ad      	uxth	r5, r5
 801678e:	1c6b      	adds	r3, r5, #1
 8016790:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8016794:	122d      	asrs	r5, r5, #8
 8016796:	70b5      	strb	r5, [r6, #2]
 8016798:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801679a:	3603      	adds	r6, #3
 801679c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801679e:	f10b 3bff 	add.w	fp, fp, #4294967295
 80167a2:	4413      	add	r3, r2
 80167a4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80167a6:	931d      	str	r3, [sp, #116]	; 0x74
 80167a8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80167aa:	4413      	add	r3, r2
 80167ac:	931e      	str	r3, [sp, #120]	; 0x78
 80167ae:	e73b      	b.n	8016628 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80167b0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80167b2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80167b4:	4433      	add	r3, r6
 80167b6:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80167b8:	931d      	str	r3, [sp, #116]	; 0x74
 80167ba:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80167bc:	4433      	add	r3, r6
 80167be:	931e      	str	r3, [sp, #120]	; 0x78
 80167c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167c2:	3b01      	subs	r3, #1
 80167c4:	9309      	str	r3, [sp, #36]	; 0x24
 80167c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80167c8:	3303      	adds	r3, #3
 80167ca:	930a      	str	r3, [sp, #40]	; 0x28
 80167cc:	e70d      	b.n	80165ea <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80167ce:	d028      	beq.n	8016822 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80167d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167d2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80167d4:	3b01      	subs	r3, #1
 80167d6:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80167d8:	fb00 5003 	mla	r0, r0, r3, r5
 80167dc:	1400      	asrs	r0, r0, #16
 80167de:	f53f af21 	bmi.w	8016624 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80167e2:	3901      	subs	r1, #1
 80167e4:	4288      	cmp	r0, r1
 80167e6:	f6bf af1d 	bge.w	8016624 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80167ea:	9920      	ldr	r1, [sp, #128]	; 0x80
 80167ec:	981e      	ldr	r0, [sp, #120]	; 0x78
 80167ee:	fb01 0303 	mla	r3, r1, r3, r0
 80167f2:	141b      	asrs	r3, r3, #16
 80167f4:	f53f af16 	bmi.w	8016624 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80167f8:	3a01      	subs	r2, #1
 80167fa:	4293      	cmp	r3, r2
 80167fc:	f6bf af12 	bge.w	8016624 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8016800:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016802:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8016806:	1cdf      	adds	r7, r3, #3
 8016808:	f8bd a038 	ldrh.w	sl, [sp, #56]	; 0x38
 801680c:	f1b9 0f00 	cmp.w	r9, #0
 8016810:	dc73      	bgt.n	80168fa <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36a>
 8016812:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016814:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016816:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801681a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801681e:	441a      	add	r2, r3
 8016820:	920a      	str	r2, [sp, #40]	; 0x28
 8016822:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016824:	2b00      	cmp	r3, #0
 8016826:	f340 8129 	ble.w	8016a7c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ec>
 801682a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801682e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016830:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016834:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016838:	eef0 6a62 	vmov.f32	s13, s5
 801683c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016840:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016844:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016848:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801684c:	eef0 6a43 	vmov.f32	s13, s6
 8016850:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016854:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8016858:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801685c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016860:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016864:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016868:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801686c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016870:	ee12 2a90 	vmov	r2, s5
 8016874:	eef0 2a47 	vmov.f32	s5, s14
 8016878:	fb92 f3f3 	sdiv	r3, r2, r3
 801687c:	ee13 2a10 	vmov	r2, s6
 8016880:	931f      	str	r3, [sp, #124]	; 0x7c
 8016882:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016884:	eeb0 3a67 	vmov.f32	s6, s15
 8016888:	fb92 f3f3 	sdiv	r3, r2, r3
 801688c:	9320      	str	r3, [sp, #128]	; 0x80
 801688e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016890:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016892:	3b01      	subs	r3, #1
 8016894:	930d      	str	r3, [sp, #52]	; 0x34
 8016896:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016898:	bf08      	it	eq
 801689a:	4613      	moveq	r3, r2
 801689c:	9309      	str	r3, [sp, #36]	; 0x24
 801689e:	e696      	b.n	80165ce <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80168a0:	b149      	cbz	r1, 80168b6 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 80168a2:	5caa      	ldrb	r2, [r5, r2]
 80168a4:	4670      	mov	r0, lr
 80168a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80168aa:	4422      	add	r2, r4
 80168ac:	4677      	mov	r7, lr
 80168ae:	e6fb      	b.n	80166a8 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 80168b0:	4670      	mov	r0, lr
 80168b2:	4672      	mov	r2, lr
 80168b4:	e6f8      	b.n	80166a8 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 80168b6:	4670      	mov	r0, lr
 80168b8:	4672      	mov	r2, lr
 80168ba:	e7f7      	b.n	80168ac <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80168bc:	f110 0c01 	adds.w	ip, r0, #1
 80168c0:	f53f af6a 	bmi.w	8016798 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80168c4:	4562      	cmp	r2, ip
 80168c6:	f6ff af67 	blt.w	8016798 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80168ca:	f115 0c01 	adds.w	ip, r5, #1
 80168ce:	f53f af63 	bmi.w	8016798 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80168d2:	4567      	cmp	r7, ip
 80168d4:	f6ff af60 	blt.w	8016798 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80168d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80168da:	b23f      	sxth	r7, r7
 80168dc:	b212      	sxth	r2, r2
 80168de:	9002      	str	r0, [sp, #8]
 80168e0:	9701      	str	r7, [sp, #4]
 80168e2:	9200      	str	r2, [sp, #0]
 80168e4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80168e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80168e8:	e9cd 1305 	strd	r1, r3, [sp, #20]
 80168ec:	e9cd 5803 	strd	r5, r8, [sp, #12]
 80168f0:	4623      	mov	r3, r4
 80168f2:	4631      	mov	r1, r6
 80168f4:	f7ff fd69 	bl	80163ca <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>
 80168f8:	e74e      	b.n	8016798 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80168fa:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80168fc:	981e      	ldr	r0, [sp, #120]	; 0x78
 80168fe:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016902:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8016904:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8016906:	1400      	asrs	r0, r0, #16
 8016908:	142d      	asrs	r5, r5, #16
 801690a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801690c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8016910:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8016914:	fb02 5000 	mla	r0, r2, r0, r5
 8016918:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801691a:	f815 e000 	ldrb.w	lr, [r5, r0]
 801691e:	eb05 0c00 	add.w	ip, r5, r0
 8016922:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016926:	eb04 060e 	add.w	r6, r4, lr
 801692a:	2b00      	cmp	r3, #0
 801692c:	f000 8097 	beq.w	8016a5e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8016930:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8016934:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016938:	4425      	add	r5, r4
 801693a:	2900      	cmp	r1, #0
 801693c:	f000 8098 	beq.w	8016a70 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e0>
 8016940:	eb0c 0002 	add.w	r0, ip, r2
 8016944:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8016948:	7840      	ldrb	r0, [r0, #1]
 801694a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801694e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016952:	4422      	add	r2, r4
 8016954:	4420      	add	r0, r4
 8016956:	b29b      	uxth	r3, r3
 8016958:	f814 b00e 	ldrb.w	fp, [r4, lr]
 801695c:	b289      	uxth	r1, r1
 801695e:	f895 e000 	ldrb.w	lr, [r5]
 8016962:	3703      	adds	r7, #3
 8016964:	f109 39ff 	add.w	r9, r9, #4294967295
 8016968:	fb03 f801 	mul.w	r8, r3, r1
 801696c:	011b      	lsls	r3, r3, #4
 801696e:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8016972:	f5c3 7c80 	rsb	ip, r3, #256	; 0x100
 8016976:	eba3 0308 	sub.w	r3, r3, r8
 801697a:	b289      	uxth	r1, r1
 801697c:	b29b      	uxth	r3, r3
 801697e:	ebac 0c01 	sub.w	ip, ip, r1
 8016982:	fb03 fe0e 	mul.w	lr, r3, lr
 8016986:	fa1f fc8c 	uxth.w	ip, ip
 801698a:	930f      	str	r3, [sp, #60]	; 0x3c
 801698c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801698e:	fb0c ee0b 	mla	lr, ip, fp, lr
 8016992:	f892 b000 	ldrb.w	fp, [r2]
 8016996:	fb01 ee0b 	mla	lr, r1, fp, lr
 801699a:	f890 b000 	ldrb.w	fp, [r0]
 801699e:	fb08 ee0b 	mla	lr, r8, fp, lr
 80169a2:	f817 bc06 	ldrb.w	fp, [r7, #-6]
 80169a6:	fb1b fb03 	smulbb	fp, fp, r3
 80169aa:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80169ae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80169b0:	fb0e be0a 	mla	lr, lr, sl, fp
 80169b4:	fa1f fe8e 	uxth.w	lr, lr
 80169b8:	f10e 0b01 	add.w	fp, lr, #1
 80169bc:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 80169c0:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 80169c4:	f807 ec06 	strb.w	lr, [r7, #-6]
 80169c8:	f895 e001 	ldrb.w	lr, [r5, #1]
 80169cc:	f896 b001 	ldrb.w	fp, [r6, #1]
 80169d0:	fb03 fe0e 	mul.w	lr, r3, lr
 80169d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80169d6:	fb0c ee0b 	mla	lr, ip, fp, lr
 80169da:	f892 b001 	ldrb.w	fp, [r2, #1]
 80169de:	fb01 ee0b 	mla	lr, r1, fp, lr
 80169e2:	f890 b001 	ldrb.w	fp, [r0, #1]
 80169e6:	fb08 ee0b 	mla	lr, r8, fp, lr
 80169ea:	f817 bc05 	ldrb.w	fp, [r7, #-5]
 80169ee:	fb1b fb03 	smulbb	fp, fp, r3
 80169f2:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80169f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80169f8:	fb0e be0a 	mla	lr, lr, sl, fp
 80169fc:	fa1f fe8e 	uxth.w	lr, lr
 8016a00:	f10e 0b01 	add.w	fp, lr, #1
 8016a04:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 8016a08:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8016a0c:	f807 ec05 	strb.w	lr, [r7, #-5]
 8016a10:	78ad      	ldrb	r5, [r5, #2]
 8016a12:	78b6      	ldrb	r6, [r6, #2]
 8016a14:	436b      	muls	r3, r5
 8016a16:	7895      	ldrb	r5, [r2, #2]
 8016a18:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016a1a:	fb0c 3306 	mla	r3, ip, r6, r3
 8016a1e:	fb01 3305 	mla	r3, r1, r5, r3
 8016a22:	7885      	ldrb	r5, [r0, #2]
 8016a24:	fb08 3805 	mla	r8, r8, r5, r3
 8016a28:	f817 3c04 	ldrb.w	r3, [r7, #-4]
 8016a2c:	fb13 f302 	smulbb	r3, r3, r2
 8016a30:	f3c8 2807 	ubfx	r8, r8, #8, #8
 8016a34:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8016a36:	fb08 380a 	mla	r8, r8, sl, r3
 8016a3a:	fa1f f888 	uxth.w	r8, r8
 8016a3e:	f108 0301 	add.w	r3, r8, #1
 8016a42:	eb03 2818 	add.w	r8, r3, r8, lsr #8
 8016a46:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8016a48:	4413      	add	r3, r2
 8016a4a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016a4c:	ea4f 2828 	mov.w	r8, r8, asr #8
 8016a50:	931d      	str	r3, [sp, #116]	; 0x74
 8016a52:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8016a54:	f807 8c04 	strb.w	r8, [r7, #-4]
 8016a58:	4413      	add	r3, r2
 8016a5a:	931e      	str	r3, [sp, #120]	; 0x78
 8016a5c:	e6d6      	b.n	801680c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016a5e:	b151      	cbz	r1, 8016a76 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 8016a60:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8016a64:	4630      	mov	r0, r6
 8016a66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016a6a:	4422      	add	r2, r4
 8016a6c:	4635      	mov	r5, r6
 8016a6e:	e772      	b.n	8016956 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8016a70:	4630      	mov	r0, r6
 8016a72:	4632      	mov	r2, r6
 8016a74:	e76f      	b.n	8016956 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8016a76:	4630      	mov	r0, r6
 8016a78:	4632      	mov	r2, r6
 8016a7a:	e7f7      	b.n	8016a6c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 8016a7c:	b013      	add	sp, #76	; 0x4c
 8016a7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016a82 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>:
 8016a82:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016a86:	784c      	ldrb	r4, [r1, #1]
 8016a88:	f891 a002 	ldrb.w	sl, [r1, #2]
 8016a8c:	0224      	lsls	r4, r4, #8
 8016a8e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8016a92:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	; 0x2c
 8016a96:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8016a9a:	f891 a000 	ldrb.w	sl, [r1]
 8016a9e:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 8016aa2:	ea44 040a 	orr.w	r4, r4, sl
 8016aa6:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8016aaa:	e9dd c50c 	ldrd	ip, r5, [sp, #48]	; 0x30
 8016aae:	9401      	str	r4, [sp, #4]
 8016ab0:	fb05 c70e 	mla	r7, r5, lr, ip
 8016ab4:	2d00      	cmp	r5, #0
 8016ab6:	eb02 0807 	add.w	r8, r2, r7
 8016aba:	db72      	blt.n	8016ba2 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x120>
 8016abc:	45a9      	cmp	r9, r5
 8016abe:	dd70      	ble.n	8016ba2 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x120>
 8016ac0:	f1bc 0f00 	cmp.w	ip, #0
 8016ac4:	db6b      	blt.n	8016b9e <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x11c>
 8016ac6:	45e6      	cmp	lr, ip
 8016ac8:	dd69      	ble.n	8016b9e <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x11c>
 8016aca:	5dd7      	ldrb	r7, [r2, r7]
 8016acc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016ad0:	441f      	add	r7, r3
 8016ad2:	f11c 0201 	adds.w	r2, ip, #1
 8016ad6:	d467      	bmi.n	8016ba8 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x126>
 8016ad8:	4596      	cmp	lr, r2
 8016ada:	dd65      	ble.n	8016ba8 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x126>
 8016adc:	2800      	cmp	r0, #0
 8016ade:	d063      	beq.n	8016ba8 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x126>
 8016ae0:	f898 4001 	ldrb.w	r4, [r8, #1]
 8016ae4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016ae8:	441c      	add	r4, r3
 8016aea:	3501      	adds	r5, #1
 8016aec:	d460      	bmi.n	8016bb0 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 8016aee:	45a9      	cmp	r9, r5
 8016af0:	dd5e      	ble.n	8016bb0 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 8016af2:	2e00      	cmp	r6, #0
 8016af4:	d05c      	beq.n	8016bb0 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 8016af6:	f1bc 0f00 	cmp.w	ip, #0
 8016afa:	db57      	blt.n	8016bac <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 8016afc:	45e6      	cmp	lr, ip
 8016afe:	dd55      	ble.n	8016bac <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 8016b00:	f818 500e 	ldrb.w	r5, [r8, lr]
 8016b04:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016b08:	441d      	add	r5, r3
 8016b0a:	f11c 0201 	adds.w	r2, ip, #1
 8016b0e:	d452      	bmi.n	8016bb6 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x134>
 8016b10:	4596      	cmp	lr, r2
 8016b12:	dd50      	ble.n	8016bb6 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x134>
 8016b14:	2800      	cmp	r0, #0
 8016b16:	d04e      	beq.n	8016bb6 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x134>
 8016b18:	44c6      	add	lr, r8
 8016b1a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8016b1e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016b22:	4413      	add	r3, r2
 8016b24:	b280      	uxth	r0, r0
 8016b26:	f897 8000 	ldrb.w	r8, [r7]
 8016b2a:	b2b2      	uxth	r2, r6
 8016b2c:	fb00 f602 	mul.w	r6, r0, r2
 8016b30:	0100      	lsls	r0, r0, #4
 8016b32:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8016b36:	f5c0 7e80 	rsb	lr, r0, #256	; 0x100
 8016b3a:	1b80      	subs	r0, r0, r6
 8016b3c:	fa1f fc82 	uxth.w	ip, r2
 8016b40:	b282      	uxth	r2, r0
 8016b42:	7820      	ldrb	r0, [r4, #0]
 8016b44:	ebae 0e0c 	sub.w	lr, lr, ip
 8016b48:	4350      	muls	r0, r2
 8016b4a:	fa1f fe8e 	uxth.w	lr, lr
 8016b4e:	fb0e 0808 	mla	r8, lr, r8, r0
 8016b52:	7828      	ldrb	r0, [r5, #0]
 8016b54:	fb0c 8800 	mla	r8, ip, r0, r8
 8016b58:	7818      	ldrb	r0, [r3, #0]
 8016b5a:	fb06 8000 	mla	r0, r6, r0, r8
 8016b5e:	1200      	asrs	r0, r0, #8
 8016b60:	7008      	strb	r0, [r1, #0]
 8016b62:	7860      	ldrb	r0, [r4, #1]
 8016b64:	f897 8001 	ldrb.w	r8, [r7, #1]
 8016b68:	4350      	muls	r0, r2
 8016b6a:	fb0e 0808 	mla	r8, lr, r8, r0
 8016b6e:	7868      	ldrb	r0, [r5, #1]
 8016b70:	fb0c 8800 	mla	r8, ip, r0, r8
 8016b74:	7858      	ldrb	r0, [r3, #1]
 8016b76:	fb06 8000 	mla	r0, r6, r0, r8
 8016b7a:	1200      	asrs	r0, r0, #8
 8016b7c:	7048      	strb	r0, [r1, #1]
 8016b7e:	78a0      	ldrb	r0, [r4, #2]
 8016b80:	78bf      	ldrb	r7, [r7, #2]
 8016b82:	4350      	muls	r0, r2
 8016b84:	78aa      	ldrb	r2, [r5, #2]
 8016b86:	fb0e 0007 	mla	r0, lr, r7, r0
 8016b8a:	fb0c 0c02 	mla	ip, ip, r2, r0
 8016b8e:	789a      	ldrb	r2, [r3, #2]
 8016b90:	fb06 c202 	mla	r2, r6, r2, ip
 8016b94:	1212      	asrs	r2, r2, #8
 8016b96:	708a      	strb	r2, [r1, #2]
 8016b98:	b002      	add	sp, #8
 8016b9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016b9e:	af01      	add	r7, sp, #4
 8016ba0:	e797      	b.n	8016ad2 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x50>
 8016ba2:	ac01      	add	r4, sp, #4
 8016ba4:	4627      	mov	r7, r4
 8016ba6:	e7a0      	b.n	8016aea <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 8016ba8:	ac01      	add	r4, sp, #4
 8016baa:	e79e      	b.n	8016aea <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 8016bac:	ad01      	add	r5, sp, #4
 8016bae:	e7ac      	b.n	8016b0a <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x88>
 8016bb0:	ab01      	add	r3, sp, #4
 8016bb2:	461d      	mov	r5, r3
 8016bb4:	e7b6      	b.n	8016b24 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xa2>
 8016bb6:	ab01      	add	r3, sp, #4
 8016bb8:	e7b4      	b.n	8016b24 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xa2>

08016bba <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016bba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bbe:	b08d      	sub	sp, #52	; 0x34
 8016bc0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016bc4:	e9cd 1209 	strd	r1, r2, [sp, #36]	; 0x24
 8016bc8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8016bca:	900b      	str	r0, [sp, #44]	; 0x2c
 8016bcc:	9306      	str	r3, [sp, #24]
 8016bce:	6850      	ldr	r0, [r2, #4]
 8016bd0:	6812      	ldr	r2, [r2, #0]
 8016bd2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016bd4:	e9dd 131c 	ldrd	r1, r3, [sp, #112]	; 0x70
 8016bd8:	fb00 1303 	mla	r3, r0, r3, r1
 8016bdc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016be0:	18d3      	adds	r3, r2, r3
 8016be2:	9307      	str	r3, [sp, #28]
 8016be4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8016be6:	681b      	ldr	r3, [r3, #0]
 8016be8:	9308      	str	r3, [sp, #32]
 8016bea:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8016bec:	685d      	ldr	r5, [r3, #4]
 8016bee:	3504      	adds	r5, #4
 8016bf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016bf2:	2b00      	cmp	r3, #0
 8016bf4:	dc03      	bgt.n	8016bfe <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8016bf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016bf8:	2b00      	cmp	r3, #0
 8016bfa:	f340 81e6 	ble.w	8016fca <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8016bfe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8016c00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016c04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016c08:	1e48      	subs	r0, r1, #1
 8016c0a:	1e56      	subs	r6, r2, #1
 8016c0c:	9b06      	ldr	r3, [sp, #24]
 8016c0e:	2b00      	cmp	r3, #0
 8016c10:	f340 80bd 	ble.w	8016d8e <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8016c14:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016c16:	1427      	asrs	r7, r4, #16
 8016c18:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016c1c:	d406      	bmi.n	8016c2c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016c1e:	4287      	cmp	r7, r0
 8016c20:	da04      	bge.n	8016c2c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016c22:	2b00      	cmp	r3, #0
 8016c24:	db02      	blt.n	8016c2c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016c26:	42b3      	cmp	r3, r6
 8016c28:	f2c0 80b2 	blt.w	8016d90 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8016c2c:	3701      	adds	r7, #1
 8016c2e:	f100 80a1 	bmi.w	8016d74 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8016c32:	42b9      	cmp	r1, r7
 8016c34:	f2c0 809e 	blt.w	8016d74 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8016c38:	3301      	adds	r3, #1
 8016c3a:	f100 809b 	bmi.w	8016d74 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8016c3e:	429a      	cmp	r2, r3
 8016c40:	f2c0 8098 	blt.w	8016d74 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8016c44:	e9dd b606 	ldrd	fp, r6, [sp, #24]
 8016c48:	f1bb 0f00 	cmp.w	fp, #0
 8016c4c:	f340 80bf 	ble.w	8016dce <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016c50:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016c52:	981e      	ldr	r0, [sp, #120]	; 0x78
 8016c54:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016c56:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016c5a:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8016c5e:	1420      	asrs	r0, r4, #16
 8016c60:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8016c62:	ea4f 4723 	mov.w	r7, r3, asr #16
 8016c66:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8016c6a:	6892      	ldr	r2, [r2, #8]
 8016c6c:	f100 8103 	bmi.w	8016e76 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8016c70:	f102 3eff 	add.w	lr, r2, #4294967295
 8016c74:	4570      	cmp	r0, lr
 8016c76:	f280 80fe 	bge.w	8016e76 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8016c7a:	2f00      	cmp	r7, #0
 8016c7c:	f2c0 80fb 	blt.w	8016e76 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8016c80:	f10c 3eff 	add.w	lr, ip, #4294967295
 8016c84:	4577      	cmp	r7, lr
 8016c86:	f280 80f6 	bge.w	8016e76 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8016c8a:	b212      	sxth	r2, r2
 8016c8c:	fb07 0002 	mla	r0, r7, r2, r0
 8016c90:	9f08      	ldr	r7, [sp, #32]
 8016c92:	f817 8000 	ldrb.w	r8, [r7, r0]
 8016c96:	eb07 0e00 	add.w	lr, r7, r0
 8016c9a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8016c9e:	eb05 0c08 	add.w	ip, r5, r8
 8016ca2:	2b00      	cmp	r3, #0
 8016ca4:	f000 80d8 	beq.w	8016e58 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 8016ca8:	f89e 7001 	ldrb.w	r7, [lr, #1]
 8016cac:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016cb0:	442f      	add	r7, r5
 8016cb2:	2900      	cmp	r1, #0
 8016cb4:	f000 80d9 	beq.w	8016e6a <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8016cb8:	eb0e 0002 	add.w	r0, lr, r2
 8016cbc:	f81e 2002 	ldrb.w	r2, [lr, r2]
 8016cc0:	7840      	ldrb	r0, [r0, #1]
 8016cc2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016cc6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016cca:	442a      	add	r2, r5
 8016ccc:	4428      	add	r0, r5
 8016cce:	b29b      	uxth	r3, r3
 8016cd0:	f815 a008 	ldrb.w	sl, [r5, r8]
 8016cd4:	b289      	uxth	r1, r1
 8016cd6:	f897 8000 	ldrb.w	r8, [r7]
 8016cda:	fb03 f901 	mul.w	r9, r3, r1
 8016cde:	011b      	lsls	r3, r3, #4
 8016ce0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016ce4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016ce8:	eba3 0309 	sub.w	r3, r3, r9
 8016cec:	b289      	uxth	r1, r1
 8016cee:	b29b      	uxth	r3, r3
 8016cf0:	ebae 0e01 	sub.w	lr, lr, r1
 8016cf4:	fb03 f808 	mul.w	r8, r3, r8
 8016cf8:	fa1f fe8e 	uxth.w	lr, lr
 8016cfc:	fb0e 880a 	mla	r8, lr, sl, r8
 8016d00:	f892 a000 	ldrb.w	sl, [r2]
 8016d04:	fb01 880a 	mla	r8, r1, sl, r8
 8016d08:	f890 a000 	ldrb.w	sl, [r0]
 8016d0c:	fb09 880a 	mla	r8, r9, sl, r8
 8016d10:	ea4f 2828 	mov.w	r8, r8, asr #8
 8016d14:	f886 8000 	strb.w	r8, [r6]
 8016d18:	f897 8001 	ldrb.w	r8, [r7, #1]
 8016d1c:	f89c a001 	ldrb.w	sl, [ip, #1]
 8016d20:	fb03 f808 	mul.w	r8, r3, r8
 8016d24:	fb0e 880a 	mla	r8, lr, sl, r8
 8016d28:	f892 a001 	ldrb.w	sl, [r2, #1]
 8016d2c:	fb01 880a 	mla	r8, r1, sl, r8
 8016d30:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016d34:	fb09 880a 	mla	r8, r9, sl, r8
 8016d38:	ea4f 2828 	mov.w	r8, r8, asr #8
 8016d3c:	f886 8001 	strb.w	r8, [r6, #1]
 8016d40:	78bf      	ldrb	r7, [r7, #2]
 8016d42:	f89c c002 	ldrb.w	ip, [ip, #2]
 8016d46:	437b      	muls	r3, r7
 8016d48:	7892      	ldrb	r2, [r2, #2]
 8016d4a:	fb0e 330c 	mla	r3, lr, ip, r3
 8016d4e:	fb01 3102 	mla	r1, r1, r2, r3
 8016d52:	7882      	ldrb	r2, [r0, #2]
 8016d54:	fb09 1902 	mla	r9, r9, r2, r1
 8016d58:	ea4f 2929 	mov.w	r9, r9, asr #8
 8016d5c:	f886 9002 	strb.w	r9, [r6, #2]
 8016d60:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016d62:	3603      	adds	r6, #3
 8016d64:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8016d66:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016d6a:	441c      	add	r4, r3
 8016d6c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016d6e:	4413      	add	r3, r2
 8016d70:	9318      	str	r3, [sp, #96]	; 0x60
 8016d72:	e769      	b.n	8016c48 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8016d74:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016d76:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8016d78:	441c      	add	r4, r3
 8016d7a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016d7c:	443b      	add	r3, r7
 8016d7e:	9318      	str	r3, [sp, #96]	; 0x60
 8016d80:	9b06      	ldr	r3, [sp, #24]
 8016d82:	3b01      	subs	r3, #1
 8016d84:	9306      	str	r3, [sp, #24]
 8016d86:	9b07      	ldr	r3, [sp, #28]
 8016d88:	3303      	adds	r3, #3
 8016d8a:	9307      	str	r3, [sp, #28]
 8016d8c:	e73e      	b.n	8016c0c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016d8e:	d026      	beq.n	8016dde <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8016d90:	9b06      	ldr	r3, [sp, #24]
 8016d92:	9819      	ldr	r0, [sp, #100]	; 0x64
 8016d94:	3b01      	subs	r3, #1
 8016d96:	fb00 4003 	mla	r0, r0, r3, r4
 8016d9a:	1400      	asrs	r0, r0, #16
 8016d9c:	f53f af52 	bmi.w	8016c44 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016da0:	3901      	subs	r1, #1
 8016da2:	4288      	cmp	r0, r1
 8016da4:	f6bf af4e 	bge.w	8016c44 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016da8:	991a      	ldr	r1, [sp, #104]	; 0x68
 8016daa:	9818      	ldr	r0, [sp, #96]	; 0x60
 8016dac:	fb01 0303 	mla	r3, r1, r3, r0
 8016db0:	141b      	asrs	r3, r3, #16
 8016db2:	f53f af47 	bmi.w	8016c44 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016db6:	3a01      	subs	r2, #1
 8016db8:	4293      	cmp	r3, r2
 8016dba:	f6bf af43 	bge.w	8016c44 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016dbe:	9b07      	ldr	r3, [sp, #28]
 8016dc0:	f8dd a018 	ldr.w	sl, [sp, #24]
 8016dc4:	f103 0803 	add.w	r8, r3, #3
 8016dc8:	f1ba 0f00 	cmp.w	sl, #0
 8016dcc:	dc71      	bgt.n	8016eb2 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 8016dce:	9b06      	ldr	r3, [sp, #24]
 8016dd0:	9a07      	ldr	r2, [sp, #28]
 8016dd2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016dd6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016dda:	441a      	add	r2, r3
 8016ddc:	9207      	str	r2, [sp, #28]
 8016dde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016de0:	2b00      	cmp	r3, #0
 8016de2:	f340 80f2 	ble.w	8016fca <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8016de6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016dea:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016dec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016df0:	eeb0 6a62 	vmov.f32	s12, s5
 8016df4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016df8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016dfc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016e00:	ee16 4a10 	vmov	r4, s12
 8016e04:	eeb0 6a43 	vmov.f32	s12, s6
 8016e08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016e0c:	ed8d 6a18 	vstr	s12, [sp, #96]	; 0x60
 8016e10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016e14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016e18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016e1c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016e20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016e24:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016e28:	ee12 2a90 	vmov	r2, s5
 8016e2c:	eef0 2a47 	vmov.f32	s5, s14
 8016e30:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e34:	ee13 2a10 	vmov	r2, s6
 8016e38:	9319      	str	r3, [sp, #100]	; 0x64
 8016e3a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016e3c:	eeb0 3a67 	vmov.f32	s6, s15
 8016e40:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e44:	931a      	str	r3, [sp, #104]	; 0x68
 8016e46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016e48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016e4a:	3b01      	subs	r3, #1
 8016e4c:	9309      	str	r3, [sp, #36]	; 0x24
 8016e4e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016e50:	bf08      	it	eq
 8016e52:	4613      	moveq	r3, r2
 8016e54:	9306      	str	r3, [sp, #24]
 8016e56:	e6cb      	b.n	8016bf0 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8016e58:	b151      	cbz	r1, 8016e70 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8016e5a:	f81e 2002 	ldrb.w	r2, [lr, r2]
 8016e5e:	4660      	mov	r0, ip
 8016e60:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016e64:	442a      	add	r2, r5
 8016e66:	4667      	mov	r7, ip
 8016e68:	e731      	b.n	8016cce <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8016e6a:	4660      	mov	r0, ip
 8016e6c:	4662      	mov	r2, ip
 8016e6e:	e72e      	b.n	8016cce <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8016e70:	4660      	mov	r0, ip
 8016e72:	4662      	mov	r2, ip
 8016e74:	e7f7      	b.n	8016e66 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8016e76:	f110 0e01 	adds.w	lr, r0, #1
 8016e7a:	f53f af71 	bmi.w	8016d60 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8016e7e:	4572      	cmp	r2, lr
 8016e80:	f6ff af6e 	blt.w	8016d60 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8016e84:	f117 0e01 	adds.w	lr, r7, #1
 8016e88:	f53f af6a 	bmi.w	8016d60 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8016e8c:	45f4      	cmp	ip, lr
 8016e8e:	f6ff af67 	blt.w	8016d60 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8016e92:	b212      	sxth	r2, r2
 8016e94:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8016e98:	fa0f f38c 	sxth.w	r3, ip
 8016e9c:	9200      	str	r2, [sp, #0]
 8016e9e:	4631      	mov	r1, r6
 8016ea0:	9a08      	ldr	r2, [sp, #32]
 8016ea2:	9301      	str	r3, [sp, #4]
 8016ea4:	462b      	mov	r3, r5
 8016ea6:	e9cd 0702 	strd	r0, r7, [sp, #8]
 8016eaa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016eac:	f7ff fde9 	bl	8016a82 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>
 8016eb0:	e756      	b.n	8016d60 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8016eb2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016eb4:	1426      	asrs	r6, r4, #16
 8016eb6:	9818      	ldr	r0, [sp, #96]	; 0x60
 8016eb8:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8016ebc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016ec0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8016ec2:	1400      	asrs	r0, r0, #16
 8016ec4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8016ec8:	fb02 6000 	mla	r0, r2, r0, r6
 8016ecc:	9e08      	ldr	r6, [sp, #32]
 8016ece:	f816 e000 	ldrb.w	lr, [r6, r0]
 8016ed2:	eb06 0c00 	add.w	ip, r6, r0
 8016ed6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016eda:	eb05 070e 	add.w	r7, r5, lr
 8016ede:	2b00      	cmp	r3, #0
 8016ee0:	d064      	beq.n	8016fac <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8016ee2:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8016ee6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016eea:	442e      	add	r6, r5
 8016eec:	2900      	cmp	r1, #0
 8016eee:	d066      	beq.n	8016fbe <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8016ef0:	eb0c 0002 	add.w	r0, ip, r2
 8016ef4:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8016ef8:	7840      	ldrb	r0, [r0, #1]
 8016efa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016efe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016f02:	442a      	add	r2, r5
 8016f04:	4428      	add	r0, r5
 8016f06:	b29b      	uxth	r3, r3
 8016f08:	f815 b00e 	ldrb.w	fp, [r5, lr]
 8016f0c:	b289      	uxth	r1, r1
 8016f0e:	f896 e000 	ldrb.w	lr, [r6]
 8016f12:	f108 0803 	add.w	r8, r8, #3
 8016f16:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016f1a:	fb03 f901 	mul.w	r9, r3, r1
 8016f1e:	011b      	lsls	r3, r3, #4
 8016f20:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016f24:	f5c3 7c80 	rsb	ip, r3, #256	; 0x100
 8016f28:	eba3 0309 	sub.w	r3, r3, r9
 8016f2c:	b289      	uxth	r1, r1
 8016f2e:	b29b      	uxth	r3, r3
 8016f30:	ebac 0c01 	sub.w	ip, ip, r1
 8016f34:	fb03 fe0e 	mul.w	lr, r3, lr
 8016f38:	fa1f fc8c 	uxth.w	ip, ip
 8016f3c:	fb0c ee0b 	mla	lr, ip, fp, lr
 8016f40:	f892 b000 	ldrb.w	fp, [r2]
 8016f44:	fb01 ee0b 	mla	lr, r1, fp, lr
 8016f48:	f890 b000 	ldrb.w	fp, [r0]
 8016f4c:	fb09 ee0b 	mla	lr, r9, fp, lr
 8016f50:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8016f54:	f808 ec06 	strb.w	lr, [r8, #-6]
 8016f58:	f896 e001 	ldrb.w	lr, [r6, #1]
 8016f5c:	f897 b001 	ldrb.w	fp, [r7, #1]
 8016f60:	fb03 fe0e 	mul.w	lr, r3, lr
 8016f64:	fb0c ee0b 	mla	lr, ip, fp, lr
 8016f68:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016f6c:	fb01 ee0b 	mla	lr, r1, fp, lr
 8016f70:	f890 b001 	ldrb.w	fp, [r0, #1]
 8016f74:	fb09 ee0b 	mla	lr, r9, fp, lr
 8016f78:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8016f7c:	f808 ec05 	strb.w	lr, [r8, #-5]
 8016f80:	78b6      	ldrb	r6, [r6, #2]
 8016f82:	78bf      	ldrb	r7, [r7, #2]
 8016f84:	4373      	muls	r3, r6
 8016f86:	7896      	ldrb	r6, [r2, #2]
 8016f88:	7882      	ldrb	r2, [r0, #2]
 8016f8a:	fb0c 3307 	mla	r3, ip, r7, r3
 8016f8e:	fb01 3306 	mla	r3, r1, r6, r3
 8016f92:	fb09 3902 	mla	r9, r9, r2, r3
 8016f96:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016f98:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8016f9a:	441c      	add	r4, r3
 8016f9c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016f9e:	ea4f 2929 	mov.w	r9, r9, asr #8
 8016fa2:	4413      	add	r3, r2
 8016fa4:	f808 9c04 	strb.w	r9, [r8, #-4]
 8016fa8:	9318      	str	r3, [sp, #96]	; 0x60
 8016faa:	e70d      	b.n	8016dc8 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8016fac:	b151      	cbz	r1, 8016fc4 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8016fae:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8016fb2:	4638      	mov	r0, r7
 8016fb4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016fb8:	442a      	add	r2, r5
 8016fba:	463e      	mov	r6, r7
 8016fbc:	e7a3      	b.n	8016f06 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 8016fbe:	4638      	mov	r0, r7
 8016fc0:	463a      	mov	r2, r7
 8016fc2:	e7a0      	b.n	8016f06 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 8016fc4:	4638      	mov	r0, r7
 8016fc6:	463a      	mov	r2, r7
 8016fc8:	e7f7      	b.n	8016fba <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8016fca:	b00d      	add	sp, #52	; 0x34
 8016fcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016fd0 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>:
 8016fd0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fd4:	e9dd 750e 	ldrd	r7, r5, [sp, #56]	; 0x38
 8016fd8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8016fdc:	2d00      	cmp	r5, #0
 8016fde:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8016fe2:	fb05 700c 	mla	r0, r5, ip, r7
 8016fe6:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 8016fea:	f89d e044 	ldrb.w	lr, [sp, #68]	; 0x44
 8016fee:	eb02 0800 	add.w	r8, r2, r0
 8016ff2:	f2c0 8118 	blt.w	8017226 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x256>
 8016ff6:	45a9      	cmp	r9, r5
 8016ff8:	f340 8115 	ble.w	8017226 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x256>
 8016ffc:	2f00      	cmp	r7, #0
 8016ffe:	f2c0 8110 	blt.w	8017222 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x252>
 8017002:	45bc      	cmp	ip, r7
 8017004:	f340 810d 	ble.w	8017222 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x252>
 8017008:	5c12      	ldrb	r2, [r2, r0]
 801700a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801700e:	1c7a      	adds	r2, r7, #1
 8017010:	f100 810c 	bmi.w	801722c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x25c>
 8017014:	4594      	cmp	ip, r2
 8017016:	f340 8109 	ble.w	801722c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x25c>
 801701a:	2c00      	cmp	r4, #0
 801701c:	f000 8108 	beq.w	8017230 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x260>
 8017020:	f898 2001 	ldrb.w	r2, [r8, #1]
 8017024:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8017028:	3501      	adds	r5, #1
 801702a:	f100 8105 	bmi.w	8017238 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x268>
 801702e:	45a9      	cmp	r9, r5
 8017030:	f340 8102 	ble.w	8017238 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x268>
 8017034:	f1be 0f00 	cmp.w	lr, #0
 8017038:	f000 8101 	beq.w	801723e <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x26e>
 801703c:	2f00      	cmp	r7, #0
 801703e:	f2c0 80f9 	blt.w	8017234 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x264>
 8017042:	45bc      	cmp	ip, r7
 8017044:	f340 80f6 	ble.w	8017234 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x264>
 8017048:	f818 200c 	ldrb.w	r2, [r8, ip]
 801704c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8017050:	3701      	adds	r7, #1
 8017052:	f100 80f7 	bmi.w	8017244 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x274>
 8017056:	45bc      	cmp	ip, r7
 8017058:	f340 80f4 	ble.w	8017244 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x274>
 801705c:	2c00      	cmp	r4, #0
 801705e:	f000 80f3 	beq.w	8017248 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x278>
 8017062:	44c4      	add	ip, r8
 8017064:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8017068:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801706c:	fa1f fc84 	uxth.w	ip, r4
 8017070:	fa1f f48e 	uxth.w	r4, lr
 8017074:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8017078:	fb04 fe0c 	mul.w	lr, r4, ip
 801707c:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8017080:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8017084:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8017088:	ebac 070e 	sub.w	r7, ip, lr
 801708c:	f5cc 7380 	rsb	r3, ip, #256	; 0x100
 8017090:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8017094:	b2a4      	uxth	r4, r4
 8017096:	b2bf      	uxth	r7, r7
 8017098:	1b1b      	subs	r3, r3, r4
 801709a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801709e:	fb07 fc0a 	mul.w	ip, r7, sl
 80170a2:	b29b      	uxth	r3, r3
 80170a4:	fb03 cc0b 	mla	ip, r3, fp, ip
 80170a8:	9300      	str	r3, [sp, #0]
 80170aa:	fb04 cc09 	mla	ip, r4, r9, ip
 80170ae:	fb0e cc08 	mla	ip, lr, r8, ip
 80170b2:	f3cc 2307 	ubfx	r3, ip, #8, #8
 80170b6:	9301      	str	r3, [sp, #4]
 80170b8:	2b00      	cmp	r3, #0
 80170ba:	f000 80af 	beq.w	801721c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x24c>
 80170be:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80170c2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80170c6:	fb0b fc0c 	mul.w	ip, fp, ip
 80170ca:	fb0b f606 	mul.w	r6, fp, r6
 80170ce:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80170d2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80170d6:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80170da:	44dc      	add	ip, fp
 80170dc:	f000 1bff 	and.w	fp, r0, #16711935	; 0xff00ff
 80170e0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80170e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80170e8:	fb0a fb0b 	mul.w	fp, sl, fp
 80170ec:	fb0a fa00 	mul.w	sl, sl, r0
 80170f0:	f00c 13ff 	and.w	r3, ip, #16711935	; 0xff00ff
 80170f4:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 80170f8:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80170fc:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8017100:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8017104:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017108:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801710c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017110:	0a36      	lsrs	r6, r6, #8
 8017112:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017116:	44dc      	add	ip, fp
 8017118:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801711c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8017120:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017124:	fb09 fb0b 	mul.w	fp, r9, fp
 8017128:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801712c:	fb09 f905 	mul.w	r9, r9, r5
 8017130:	ea4f 201b 	mov.w	r0, fp, lsr #8
 8017134:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017138:	f509 7580 	add.w	r5, r9, #256	; 0x100
 801713c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017140:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017144:	fb0c fc07 	mul.w	ip, ip, r7
 8017148:	eb05 2919 	add.w	r9, r5, r9, lsr #8
 801714c:	f002 15ff 	and.w	r5, r2, #16711935	; 0xff00ff
 8017150:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017154:	4458      	add	r0, fp
 8017156:	fb08 f505 	mul.w	r5, r8, r5
 801715a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801715e:	fb08 f802 	mul.w	r8, r8, r2
 8017162:	0a00      	lsrs	r0, r0, #8
 8017164:	0a2a      	lsrs	r2, r5, #8
 8017166:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801716a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801716e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017172:	4415      	add	r5, r2
 8017174:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8017178:	0a2d      	lsrs	r5, r5, #8
 801717a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801717e:	9a00      	ldr	r2, [sp, #0]
 8017180:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017184:	fb03 cc02 	mla	ip, r3, r2, ip
 8017188:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801718c:	9b01      	ldr	r3, [sp, #4]
 801718e:	fb05 c50e 	mla	r5, r5, lr, ip
 8017192:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8017196:	fb00 5004 	mla	r0, r0, r4, r5
 801719a:	0a00      	lsrs	r0, r0, #8
 801719c:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80171a0:	f40a 407f 	and.w	r0, sl, #65280	; 0xff00
 80171a4:	4378      	muls	r0, r7
 80171a6:	fb02 0006 	mla	r0, r2, r6, r0
 80171aa:	fb0e 0e08 	mla	lr, lr, r8, r0
 80171ae:	f409 407f 	and.w	r0, r9, #65280	; 0xff00
 80171b2:	fb04 e000 	mla	r0, r4, r0, lr
 80171b6:	0a00      	lsrs	r0, r0, #8
 80171b8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80171bc:	4328      	orrs	r0, r5
 80171be:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80171c2:	b2ad      	uxth	r5, r5
 80171c4:	b2c4      	uxtb	r4, r0
 80171c6:	436b      	muls	r3, r5
 80171c8:	fb14 f405 	smulbb	r4, r4, r5
 80171cc:	1c5a      	adds	r2, r3, #1
 80171ce:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80171d2:	780b      	ldrb	r3, [r1, #0]
 80171d4:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 80171d8:	b2d2      	uxtb	r2, r2
 80171da:	fb03 4302 	mla	r3, r3, r2, r4
 80171de:	b29b      	uxth	r3, r3
 80171e0:	1c5c      	adds	r4, r3, #1
 80171e2:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 80171e6:	784c      	ldrb	r4, [r1, #1]
 80171e8:	fb14 f402 	smulbb	r4, r4, r2
 80171ec:	121b      	asrs	r3, r3, #8
 80171ee:	700b      	strb	r3, [r1, #0]
 80171f0:	f3c0 2307 	ubfx	r3, r0, #8, #8
 80171f4:	fb03 4305 	mla	r3, r3, r5, r4
 80171f8:	b29b      	uxth	r3, r3
 80171fa:	1c5c      	adds	r4, r3, #1
 80171fc:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8017200:	0c04      	lsrs	r4, r0, #16
 8017202:	7888      	ldrb	r0, [r1, #2]
 8017204:	121b      	asrs	r3, r3, #8
 8017206:	fb10 f002 	smulbb	r0, r0, r2
 801720a:	704b      	strb	r3, [r1, #1]
 801720c:	fb04 0005 	mla	r0, r4, r5, r0
 8017210:	b280      	uxth	r0, r0
 8017212:	1c43      	adds	r3, r0, #1
 8017214:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017218:	1200      	asrs	r0, r0, #8
 801721a:	7088      	strb	r0, [r1, #2]
 801721c:	b003      	add	sp, #12
 801721e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017222:	2600      	movs	r6, #0
 8017224:	e6f3      	b.n	801700e <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 8017226:	2000      	movs	r0, #0
 8017228:	4606      	mov	r6, r0
 801722a:	e6fd      	b.n	8017028 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x58>
 801722c:	2000      	movs	r0, #0
 801722e:	e6fb      	b.n	8017028 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x58>
 8017230:	4620      	mov	r0, r4
 8017232:	e6f9      	b.n	8017028 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x58>
 8017234:	2500      	movs	r5, #0
 8017236:	e70b      	b.n	8017050 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x80>
 8017238:	2200      	movs	r2, #0
 801723a:	4615      	mov	r5, r2
 801723c:	e716      	b.n	801706c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x9c>
 801723e:	4672      	mov	r2, lr
 8017240:	4675      	mov	r5, lr
 8017242:	e713      	b.n	801706c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x9c>
 8017244:	2200      	movs	r2, #0
 8017246:	e711      	b.n	801706c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x9c>
 8017248:	4622      	mov	r2, r4
 801724a:	e70f      	b.n	801706c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x9c>

0801724c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801724c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017250:	b09f      	sub	sp, #124	; 0x7c
 8017252:	921b      	str	r2, [sp, #108]	; 0x6c
 8017254:	9309      	str	r3, [sp, #36]	; 0x24
 8017256:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017258:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801725c:	901d      	str	r0, [sp, #116]	; 0x74
 801725e:	931c      	str	r3, [sp, #112]	; 0x70
 8017260:	6850      	ldr	r0, [r2, #4]
 8017262:	9119      	str	r1, [sp, #100]	; 0x64
 8017264:	6812      	ldr	r2, [r2, #0]
 8017266:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8017268:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801726c:	fb00 1303 	mla	r3, r0, r3, r1
 8017270:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8017274:	18d3      	adds	r3, r2, r3
 8017276:	930c      	str	r3, [sp, #48]	; 0x30
 8017278:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801727a:	681b      	ldr	r3, [r3, #0]
 801727c:	9312      	str	r3, [sp, #72]	; 0x48
 801727e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017280:	685e      	ldr	r6, [r3, #4]
 8017282:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8017286:	3604      	adds	r6, #4
 8017288:	930d      	str	r3, [sp, #52]	; 0x34
 801728a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801728c:	2b00      	cmp	r3, #0
 801728e:	dc03      	bgt.n	8017298 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8017290:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017292:	2b00      	cmp	r3, #0
 8017294:	f340 8378 	ble.w	8017988 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 8017298:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801729a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801729e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80172a2:	1e48      	subs	r0, r1, #1
 80172a4:	1e57      	subs	r7, r2, #1
 80172a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80172a8:	2b00      	cmp	r3, #0
 80172aa:	f340 818c 	ble.w	80175c6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80172ae:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80172b0:	142b      	asrs	r3, r5, #16
 80172b2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80172b6:	d406      	bmi.n	80172c6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80172b8:	4584      	cmp	ip, r0
 80172ba:	da04      	bge.n	80172c6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80172bc:	2b00      	cmp	r3, #0
 80172be:	db02      	blt.n	80172c6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80172c0:	42bb      	cmp	r3, r7
 80172c2:	f2c0 8181 	blt.w	80175c8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37c>
 80172c6:	f11c 0c01 	adds.w	ip, ip, #1
 80172ca:	f100 816f 	bmi.w	80175ac <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 80172ce:	4561      	cmp	r1, ip
 80172d0:	f2c0 816c 	blt.w	80175ac <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 80172d4:	3301      	adds	r3, #1
 80172d6:	f100 8169 	bmi.w	80175ac <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 80172da:	429a      	cmp	r2, r3
 80172dc:	f2c0 8166 	blt.w	80175ac <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 80172e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80172e2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80172e4:	931a      	str	r3, [sp, #104]	; 0x68
 80172e6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80172e8:	2b00      	cmp	r3, #0
 80172ea:	f340 818c 	ble.w	8017606 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 80172ee:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80172f0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80172f4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80172f8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80172fc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80172fe:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8017302:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017304:	141b      	asrs	r3, r3, #16
 8017306:	f100 81d0 	bmi.w	80176aa <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 801730a:	f100 38ff 	add.w	r8, r0, #4294967295
 801730e:	4543      	cmp	r3, r8
 8017310:	f280 81cb 	bge.w	80176aa <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 8017314:	f1bc 0f00 	cmp.w	ip, #0
 8017318:	f2c0 81c7 	blt.w	80176aa <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 801731c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017320:	45c4      	cmp	ip, r8
 8017322:	f280 81c2 	bge.w	80176aa <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 8017326:	b200      	sxth	r0, r0
 8017328:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801732a:	fb0c 3300 	mla	r3, ip, r0, r3
 801732e:	eb04 0803 	add.w	r8, r4, r3
 8017332:	5ce3      	ldrb	r3, [r4, r3]
 8017334:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017338:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801733c:	2a00      	cmp	r2, #0
 801733e:	f000 81a9 	beq.w	8017694 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x448>
 8017342:	f898 c001 	ldrb.w	ip, [r8, #1]
 8017346:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801734a:	940e      	str	r4, [sp, #56]	; 0x38
 801734c:	0e24      	lsrs	r4, r4, #24
 801734e:	9415      	str	r4, [sp, #84]	; 0x54
 8017350:	b179      	cbz	r1, 8017372 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8017352:	eb08 0c00 	add.w	ip, r8, r0
 8017356:	f818 0000 	ldrb.w	r0, [r8, r0]
 801735a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801735e:	900a      	str	r0, [sp, #40]	; 0x28
 8017360:	0e00      	lsrs	r0, r0, #24
 8017362:	9013      	str	r0, [sp, #76]	; 0x4c
 8017364:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8017368:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801736c:	900f      	str	r0, [sp, #60]	; 0x3c
 801736e:	0e00      	lsrs	r0, r0, #24
 8017370:	9016      	str	r0, [sp, #88]	; 0x58
 8017372:	b292      	uxth	r2, r2
 8017374:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017376:	b289      	uxth	r1, r1
 8017378:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801737a:	fb02 f901 	mul.w	r9, r2, r1
 801737e:	0112      	lsls	r2, r2, #4
 8017380:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017384:	eba2 0809 	sub.w	r8, r2, r9
 8017388:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801738c:	b289      	uxth	r1, r1
 801738e:	fa1f f888 	uxth.w	r8, r8
 8017392:	1a52      	subs	r2, r2, r1
 8017394:	fb08 f000 	mul.w	r0, r8, r0
 8017398:	b292      	uxth	r2, r2
 801739a:	fb02 000e 	mla	r0, r2, lr, r0
 801739e:	fb01 0004 	mla	r0, r1, r4, r0
 80173a2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80173a4:	fb09 0004 	mla	r0, r9, r4, r0
 80173a8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80173ac:	2800      	cmp	r0, #0
 80173ae:	f000 80f2 	beq.w	8017596 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 80173b2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80173b6:	d01b      	beq.n	80173f0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80173b8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80173bc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80173c0:	fb0e fa0a 	mul.w	sl, lr, sl
 80173c4:	fb0e fe03 	mul.w	lr, lr, r3
 80173c8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80173cc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80173d0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80173d4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80173d8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80173dc:	4453      	add	r3, sl
 80173de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80173e2:	0a1b      	lsrs	r3, r3, #8
 80173e4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80173e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80173ec:	ea43 030c 	orr.w	r3, r3, ip
 80173f0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80173f2:	2cff      	cmp	r4, #255	; 0xff
 80173f4:	d021      	beq.n	801743a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80173f6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80173f8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80173fc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80173fe:	fb04 fb0b 	mul.w	fp, r4, fp
 8017402:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017404:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017408:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801740a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801740e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017412:	fb04 fa0a 	mul.w	sl, r4, sl
 8017416:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801741a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801741e:	44de      	add	lr, fp
 8017420:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017424:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017428:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801742c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017430:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017434:	ea4e 040a 	orr.w	r4, lr, sl
 8017438:	940e      	str	r4, [sp, #56]	; 0x38
 801743a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801743c:	2cff      	cmp	r4, #255	; 0xff
 801743e:	d021      	beq.n	8017484 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8017440:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017442:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017446:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017448:	fb04 fb0b 	mul.w	fp, r4, fp
 801744c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801744e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017452:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017454:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017458:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801745c:	fb04 fa0a 	mul.w	sl, r4, sl
 8017460:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017464:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017468:	44de      	add	lr, fp
 801746a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801746e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017472:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017476:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801747a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801747e:	ea4e 040a 	orr.w	r4, lr, sl
 8017482:	940a      	str	r4, [sp, #40]	; 0x28
 8017484:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017486:	2cff      	cmp	r4, #255	; 0xff
 8017488:	d021      	beq.n	80174ce <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801748a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801748c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017490:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017492:	fb04 fb0b 	mul.w	fp, r4, fp
 8017496:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017498:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801749c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801749e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80174a2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80174a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80174aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80174ae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80174b2:	44de      	add	lr, fp
 80174b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80174b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80174bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80174c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80174c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80174c8:	ea4e 040a 	orr.w	r4, lr, sl
 80174cc:	940f      	str	r4, [sp, #60]	; 0x3c
 80174ce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80174d0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80174d4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80174d8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80174dc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80174de:	fb08 fc0c 	mul.w	ip, r8, ip
 80174e2:	fb02 cc0e 	mla	ip, r2, lr, ip
 80174e6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80174ea:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80174ec:	fb01 cc0e 	mla	ip, r1, lr, ip
 80174f0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80174f4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80174f6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80174fa:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80174fe:	fb08 f80e 	mul.w	r8, r8, lr
 8017502:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017506:	fb02 8303 	mla	r3, r2, r3, r8
 801750a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801750c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017510:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017514:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017516:	fb01 330a 	mla	r3, r1, sl, r3
 801751a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801751e:	fb09 3901 	mla	r9, r9, r1, r3
 8017522:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017524:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017526:	4343      	muls	r3, r0
 8017528:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801752c:	1c58      	adds	r0, r3, #1
 801752e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017532:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017536:	ea4c 0c09 	orr.w	ip, ip, r9
 801753a:	783b      	ldrb	r3, [r7, #0]
 801753c:	fa5f f28c 	uxtb.w	r2, ip
 8017540:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8017544:	fb12 f201 	smulbb	r2, r2, r1
 8017548:	b2c0      	uxtb	r0, r0
 801754a:	fb03 2300 	mla	r3, r3, r0, r2
 801754e:	b29b      	uxth	r3, r3
 8017550:	1c5a      	adds	r2, r3, #1
 8017552:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8017556:	787a      	ldrb	r2, [r7, #1]
 8017558:	fb12 f200 	smulbb	r2, r2, r0
 801755c:	121b      	asrs	r3, r3, #8
 801755e:	703b      	strb	r3, [r7, #0]
 8017560:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8017564:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8017568:	fb03 2301 	mla	r3, r3, r1, r2
 801756c:	b29b      	uxth	r3, r3
 801756e:	1c5a      	adds	r2, r3, #1
 8017570:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8017574:	121b      	asrs	r3, r3, #8
 8017576:	707b      	strb	r3, [r7, #1]
 8017578:	78bb      	ldrb	r3, [r7, #2]
 801757a:	fb13 f000 	smulbb	r0, r3, r0
 801757e:	fb0c 0c01 	mla	ip, ip, r1, r0
 8017582:	fa1f fc8c 	uxth.w	ip, ip
 8017586:	f10c 0301 	add.w	r3, ip, #1
 801758a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801758e:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8017592:	f887 c002 	strb.w	ip, [r7, #2]
 8017596:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017598:	3703      	adds	r7, #3
 801759a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801759c:	441a      	add	r2, r3
 801759e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80175a0:	441d      	add	r5, r3
 80175a2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80175a4:	9229      	str	r2, [sp, #164]	; 0xa4
 80175a6:	3b01      	subs	r3, #1
 80175a8:	931a      	str	r3, [sp, #104]	; 0x68
 80175aa:	e69c      	b.n	80172e6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80175ac:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80175ae:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80175b0:	441c      	add	r4, r3
 80175b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80175b4:	441d      	add	r5, r3
 80175b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80175b8:	9429      	str	r4, [sp, #164]	; 0xa4
 80175ba:	3b01      	subs	r3, #1
 80175bc:	9309      	str	r3, [sp, #36]	; 0x24
 80175be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80175c0:	3303      	adds	r3, #3
 80175c2:	930c      	str	r3, [sp, #48]	; 0x30
 80175c4:	e66f      	b.n	80172a6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80175c6:	d026      	beq.n	8017616 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80175c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80175ca:	982b      	ldr	r0, [sp, #172]	; 0xac
 80175cc:	3b01      	subs	r3, #1
 80175ce:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80175d0:	fb00 4003 	mla	r0, r0, r3, r4
 80175d4:	1400      	asrs	r0, r0, #16
 80175d6:	f53f ae83 	bmi.w	80172e0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80175da:	3901      	subs	r1, #1
 80175dc:	4288      	cmp	r0, r1
 80175de:	f6bf ae7f 	bge.w	80172e0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80175e2:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80175e4:	fb01 5303 	mla	r3, r1, r3, r5
 80175e8:	141b      	asrs	r3, r3, #16
 80175ea:	f53f ae79 	bmi.w	80172e0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80175ee:	3a01      	subs	r2, #1
 80175f0:	4293      	cmp	r3, r2
 80175f2:	f6bf ae75 	bge.w	80172e0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80175f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80175f8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80175fc:	f103 0e03 	add.w	lr, r3, #3
 8017600:	f1bb 0f00 	cmp.w	fp, #0
 8017604:	dc71      	bgt.n	80176ea <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 8017606:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017608:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801760c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801760e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8017612:	4423      	add	r3, r4
 8017614:	930c      	str	r3, [sp, #48]	; 0x30
 8017616:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017618:	2b00      	cmp	r3, #0
 801761a:	f340 81b5 	ble.w	8017988 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 801761e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017622:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017624:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017628:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801762c:	eef0 6a62 	vmov.f32	s13, s5
 8017630:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017634:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017638:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801763c:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8017640:	eef0 6a43 	vmov.f32	s13, s6
 8017644:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017648:	ee16 5a90 	vmov	r5, s13
 801764c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017650:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017654:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017658:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801765c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017660:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017664:	ee12 2a90 	vmov	r2, s5
 8017668:	eef0 2a47 	vmov.f32	s5, s14
 801766c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017670:	ee13 2a10 	vmov	r2, s6
 8017674:	932b      	str	r3, [sp, #172]	; 0xac
 8017676:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017678:	eeb0 3a67 	vmov.f32	s6, s15
 801767c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017680:	932c      	str	r3, [sp, #176]	; 0xb0
 8017682:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017684:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8017686:	3b01      	subs	r3, #1
 8017688:	9319      	str	r3, [sp, #100]	; 0x64
 801768a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801768c:	bf08      	it	eq
 801768e:	4613      	moveq	r3, r2
 8017690:	9309      	str	r3, [sp, #36]	; 0x24
 8017692:	e5fa      	b.n	801728a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017694:	2900      	cmp	r1, #0
 8017696:	f43f ae6c 	beq.w	8017372 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801769a:	f818 0000 	ldrb.w	r0, [r8, r0]
 801769e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80176a2:	900a      	str	r0, [sp, #40]	; 0x28
 80176a4:	0e00      	lsrs	r0, r0, #24
 80176a6:	9013      	str	r0, [sp, #76]	; 0x4c
 80176a8:	e663      	b.n	8017372 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80176aa:	f113 0801 	adds.w	r8, r3, #1
 80176ae:	f53f af72 	bmi.w	8017596 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 80176b2:	4540      	cmp	r0, r8
 80176b4:	f6ff af6f 	blt.w	8017596 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 80176b8:	f11c 0801 	adds.w	r8, ip, #1
 80176bc:	f53f af6b 	bmi.w	8017596 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 80176c0:	45c6      	cmp	lr, r8
 80176c2:	f6ff af68 	blt.w	8017596 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 80176c6:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80176c8:	b200      	sxth	r0, r0
 80176ca:	9302      	str	r3, [sp, #8]
 80176cc:	fa0f f38e 	sxth.w	r3, lr
 80176d0:	9000      	str	r0, [sp, #0]
 80176d2:	9301      	str	r3, [sp, #4]
 80176d4:	4633      	mov	r3, r6
 80176d6:	981d      	ldr	r0, [sp, #116]	; 0x74
 80176d8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80176dc:	e9cd c203 	strd	ip, r2, [sp, #12]
 80176e0:	4639      	mov	r1, r7
 80176e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80176e4:	f7ff fc74 	bl	8016fd0 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>
 80176e8:	e755      	b.n	8017596 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 80176ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80176ec:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80176f0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80176f2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80176f6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80176f8:	1427      	asrs	r7, r4, #16
 80176fa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80176fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017700:	142b      	asrs	r3, r5, #16
 8017702:	fb01 7303 	mla	r3, r1, r3, r7
 8017706:	18e7      	adds	r7, r4, r3
 8017708:	5ce3      	ldrb	r3, [r4, r3]
 801770a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801770e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017712:	2a00      	cmp	r2, #0
 8017714:	f000 812e 	beq.w	8017974 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8017718:	f897 8001 	ldrb.w	r8, [r7, #1]
 801771c:	f856 4028 	ldr.w	r4, [r6, r8, lsl #2]
 8017720:	9410      	str	r4, [sp, #64]	; 0x40
 8017722:	0e24      	lsrs	r4, r4, #24
 8017724:	9417      	str	r4, [sp, #92]	; 0x5c
 8017726:	b170      	cbz	r0, 8017746 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fa>
 8017728:	eb07 0801 	add.w	r8, r7, r1
 801772c:	5c79      	ldrb	r1, [r7, r1]
 801772e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017732:	910b      	str	r1, [sp, #44]	; 0x2c
 8017734:	0e09      	lsrs	r1, r1, #24
 8017736:	9114      	str	r1, [sp, #80]	; 0x50
 8017738:	f898 1001 	ldrb.w	r1, [r8, #1]
 801773c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017740:	9111      	str	r1, [sp, #68]	; 0x44
 8017742:	0e09      	lsrs	r1, r1, #24
 8017744:	9118      	str	r1, [sp, #96]	; 0x60
 8017746:	b292      	uxth	r2, r2
 8017748:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801774a:	b280      	uxth	r0, r0
 801774c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801774e:	fb02 f900 	mul.w	r9, r2, r0
 8017752:	0112      	lsls	r2, r2, #4
 8017754:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8017758:	eba2 0809 	sub.w	r8, r2, r9
 801775c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017760:	b280      	uxth	r0, r0
 8017762:	fa1f f888 	uxth.w	r8, r8
 8017766:	1a12      	subs	r2, r2, r0
 8017768:	fb08 f101 	mul.w	r1, r8, r1
 801776c:	b292      	uxth	r2, r2
 801776e:	fb02 110c 	mla	r1, r2, ip, r1
 8017772:	fb00 1104 	mla	r1, r0, r4, r1
 8017776:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017778:	fb09 1104 	mla	r1, r9, r4, r1
 801777c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017780:	2900      	cmp	r1, #0
 8017782:	f000 80ec 	beq.w	801795e <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x712>
 8017786:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801778a:	d019      	beq.n	80177c0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x574>
 801778c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017790:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017794:	fb0c fa0a 	mul.w	sl, ip, sl
 8017798:	fb0c fc03 	mul.w	ip, ip, r3
 801779c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80177a0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80177a4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80177a8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80177ac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80177b0:	4453      	add	r3, sl
 80177b2:	0a3f      	lsrs	r7, r7, #8
 80177b4:	0a1b      	lsrs	r3, r3, #8
 80177b6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80177ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80177be:	433b      	orrs	r3, r7
 80177c0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80177c2:	2cff      	cmp	r4, #255	; 0xff
 80177c4:	d020      	beq.n	8017808 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5bc>
 80177c6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80177c8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80177cc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80177ce:	4367      	muls	r7, r4
 80177d0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80177d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80177d6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80177da:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80177dc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80177e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80177e4:	fb04 fa0a 	mul.w	sl, r4, sl
 80177e8:	44bc      	add	ip, r7
 80177ea:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80177ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80177f2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80177f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80177fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80177fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017802:	ea4c 040a 	orr.w	r4, ip, sl
 8017806:	9410      	str	r4, [sp, #64]	; 0x40
 8017808:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801780a:	2cff      	cmp	r4, #255	; 0xff
 801780c:	d020      	beq.n	8017850 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x604>
 801780e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017810:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017814:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017816:	4367      	muls	r7, r4
 8017818:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801781a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801781e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017822:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017824:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017828:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801782c:	fb04 fa0a 	mul.w	sl, r4, sl
 8017830:	44bc      	add	ip, r7
 8017832:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017836:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801783a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801783e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017842:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017846:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801784a:	ea4c 040a 	orr.w	r4, ip, sl
 801784e:	940b      	str	r4, [sp, #44]	; 0x2c
 8017850:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017852:	2cff      	cmp	r4, #255	; 0xff
 8017854:	d020      	beq.n	8017898 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 8017856:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017858:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801785c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801785e:	4367      	muls	r7, r4
 8017860:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017862:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017866:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801786a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801786c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017870:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017874:	fb04 fa0a 	mul.w	sl, r4, sl
 8017878:	44bc      	add	ip, r7
 801787a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801787e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017882:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017886:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801788a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801788e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017892:	ea4c 040a 	orr.w	r4, ip, sl
 8017896:	9411      	str	r4, [sp, #68]	; 0x44
 8017898:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801789a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801789e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80178a2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80178a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80178a8:	fb08 f707 	mul.w	r7, r8, r7
 80178ac:	fb02 770c 	mla	r7, r2, ip, r7
 80178b0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80178b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80178b6:	fb00 770c 	mla	r7, r0, ip, r7
 80178ba:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80178be:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80178c0:	fb09 770c 	mla	r7, r9, ip, r7
 80178c4:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80178c8:	fb08 f80c 	mul.w	r8, r8, ip
 80178cc:	0a3f      	lsrs	r7, r7, #8
 80178ce:	fb02 8303 	mla	r3, r2, r3, r8
 80178d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80178d4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80178d8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80178dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80178de:	fb00 330a 	mla	r3, r0, sl, r3
 80178e2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80178e6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80178e8:	fb09 3c0c 	mla	ip, r9, ip, r3
 80178ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80178ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80178f2:	434b      	muls	r3, r1
 80178f4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80178f8:	1c59      	adds	r1, r3, #1
 80178fa:	ea47 070c 	orr.w	r7, r7, ip
 80178fe:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8017902:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 8017906:	b2fa      	uxtb	r2, r7
 8017908:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801790c:	fb12 f200 	smulbb	r2, r2, r0
 8017910:	b2c9      	uxtb	r1, r1
 8017912:	fb03 2301 	mla	r3, r3, r1, r2
 8017916:	b29b      	uxth	r3, r3
 8017918:	1c5a      	adds	r2, r3, #1
 801791a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801791e:	f81e 2c02 	ldrb.w	r2, [lr, #-2]
 8017922:	fb12 f201 	smulbb	r2, r2, r1
 8017926:	121b      	asrs	r3, r3, #8
 8017928:	f80e 3c03 	strb.w	r3, [lr, #-3]
 801792c:	f3c7 2307 	ubfx	r3, r7, #8, #8
 8017930:	0c3f      	lsrs	r7, r7, #16
 8017932:	fb03 2300 	mla	r3, r3, r0, r2
 8017936:	b29b      	uxth	r3, r3
 8017938:	1c5a      	adds	r2, r3, #1
 801793a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801793e:	121b      	asrs	r3, r3, #8
 8017940:	f80e 3c02 	strb.w	r3, [lr, #-2]
 8017944:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 8017948:	fb13 f101 	smulbb	r1, r3, r1
 801794c:	fb07 1700 	mla	r7, r7, r0, r1
 8017950:	b2bf      	uxth	r7, r7
 8017952:	1c7b      	adds	r3, r7, #1
 8017954:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8017958:	123f      	asrs	r7, r7, #8
 801795a:	f80e 7c01 	strb.w	r7, [lr, #-1]
 801795e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017960:	f10e 0e03 	add.w	lr, lr, #3
 8017964:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017966:	f10b 3bff 	add.w	fp, fp, #4294967295
 801796a:	441a      	add	r2, r3
 801796c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801796e:	9229      	str	r2, [sp, #164]	; 0xa4
 8017970:	441d      	add	r5, r3
 8017972:	e645      	b.n	8017600 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8017974:	2800      	cmp	r0, #0
 8017976:	f43f aee6 	beq.w	8017746 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fa>
 801797a:	5c79      	ldrb	r1, [r7, r1]
 801797c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017980:	910b      	str	r1, [sp, #44]	; 0x2c
 8017982:	0e09      	lsrs	r1, r1, #24
 8017984:	9114      	str	r1, [sp, #80]	; 0x50
 8017986:	e6de      	b.n	8017746 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fa>
 8017988:	b01f      	add	sp, #124	; 0x7c
 801798a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801798e <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>:
 801798e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017992:	e9dd 750e 	ldrd	r7, r5, [sp, #56]	; 0x38
 8017996:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801799a:	2d00      	cmp	r5, #0
 801799c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80179a0:	fb05 700e 	mla	r0, r5, lr, r7
 80179a4:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 80179a8:	f89d c044 	ldrb.w	ip, [sp, #68]	; 0x44
 80179ac:	eb02 0800 	add.w	r8, r2, r0
 80179b0:	f2c0 8105 	blt.w	8017bbe <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x230>
 80179b4:	45a9      	cmp	r9, r5
 80179b6:	f340 8102 	ble.w	8017bbe <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x230>
 80179ba:	2f00      	cmp	r7, #0
 80179bc:	f2c0 80fd 	blt.w	8017bba <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x22c>
 80179c0:	45be      	cmp	lr, r7
 80179c2:	f340 80fa 	ble.w	8017bba <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x22c>
 80179c6:	5c12      	ldrb	r2, [r2, r0]
 80179c8:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80179cc:	1c7a      	adds	r2, r7, #1
 80179ce:	f100 80f9 	bmi.w	8017bc4 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x236>
 80179d2:	4596      	cmp	lr, r2
 80179d4:	f340 80f6 	ble.w	8017bc4 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x236>
 80179d8:	2c00      	cmp	r4, #0
 80179da:	f000 80f5 	beq.w	8017bc8 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23a>
 80179de:	f898 2001 	ldrb.w	r2, [r8, #1]
 80179e2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80179e6:	3501      	adds	r5, #1
 80179e8:	f100 80f2 	bmi.w	8017bd0 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x242>
 80179ec:	45a9      	cmp	r9, r5
 80179ee:	f340 80ef 	ble.w	8017bd0 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x242>
 80179f2:	f1bc 0f00 	cmp.w	ip, #0
 80179f6:	f000 80ee 	beq.w	8017bd6 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x248>
 80179fa:	2f00      	cmp	r7, #0
 80179fc:	f2c0 80e6 	blt.w	8017bcc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23e>
 8017a00:	45be      	cmp	lr, r7
 8017a02:	f340 80e3 	ble.w	8017bcc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23e>
 8017a06:	f818 200e 	ldrb.w	r2, [r8, lr]
 8017a0a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8017a0e:	3701      	adds	r7, #1
 8017a10:	f100 80e4 	bmi.w	8017bdc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x24e>
 8017a14:	45be      	cmp	lr, r7
 8017a16:	f340 80e1 	ble.w	8017bdc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x24e>
 8017a1a:	2c00      	cmp	r4, #0
 8017a1c:	f000 80e0 	beq.w	8017be0 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x252>
 8017a20:	44c6      	add	lr, r8
 8017a22:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8017a26:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017a2a:	b2a3      	uxth	r3, r4
 8017a2c:	fa1f fc8c 	uxth.w	ip, ip
 8017a30:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8017a34:	fb0c fe03 	mul.w	lr, ip, r3
 8017a38:	011b      	lsls	r3, r3, #4
 8017a3a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8017a3e:	ebce 1c0c 	rsb	ip, lr, ip, lsl #4
 8017a42:	eba3 070e 	sub.w	r7, r3, lr
 8017a46:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 8017a4a:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8017a4e:	fa1f f48c 	uxth.w	r4, ip
 8017a52:	b2bf      	uxth	r7, r7
 8017a54:	1b1b      	subs	r3, r3, r4
 8017a56:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017a5a:	fb07 fc0a 	mul.w	ip, r7, sl
 8017a5e:	b29b      	uxth	r3, r3
 8017a60:	fb03 cc0b 	mla	ip, r3, fp, ip
 8017a64:	9300      	str	r3, [sp, #0]
 8017a66:	fb04 cc09 	mla	ip, r4, r9, ip
 8017a6a:	fb0e cc08 	mla	ip, lr, r8, ip
 8017a6e:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8017a72:	9301      	str	r3, [sp, #4]
 8017a74:	2b00      	cmp	r3, #0
 8017a76:	f000 809d 	beq.w	8017bb4 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x226>
 8017a7a:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017a7e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017a82:	fb0b fc0c 	mul.w	ip, fp, ip
 8017a86:	fb0b f606 	mul.w	r6, fp, r6
 8017a8a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8017a8e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017a92:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8017a96:	44dc      	add	ip, fp
 8017a98:	f000 1bff 	and.w	fp, r0, #16711935	; 0xff00ff
 8017a9c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017aa0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017aa4:	fb0a fb0b 	mul.w	fp, sl, fp
 8017aa8:	fb0a fa00 	mul.w	sl, sl, r0
 8017aac:	f00c 13ff 	and.w	r3, ip, #16711935	; 0xff00ff
 8017ab0:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8017ab4:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8017ab8:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8017abc:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8017ac0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017ac4:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8017ac8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017acc:	0a36      	lsrs	r6, r6, #8
 8017ace:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017ad2:	44dc      	add	ip, fp
 8017ad4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8017ad8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8017adc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017ae0:	fb09 fb0b 	mul.w	fp, r9, fp
 8017ae4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017ae8:	fb09 f905 	mul.w	r9, r9, r5
 8017aec:	ea4f 201b 	mov.w	r0, fp, lsr #8
 8017af0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017af4:	f509 7580 	add.w	r5, r9, #256	; 0x100
 8017af8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017afc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017b00:	fb0c fc07 	mul.w	ip, ip, r7
 8017b04:	eb05 2919 	add.w	r9, r5, r9, lsr #8
 8017b08:	f002 15ff 	and.w	r5, r2, #16711935	; 0xff00ff
 8017b0c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017b10:	4458      	add	r0, fp
 8017b12:	fb08 f505 	mul.w	r5, r8, r5
 8017b16:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017b1a:	fb08 f802 	mul.w	r8, r8, r2
 8017b1e:	0a00      	lsrs	r0, r0, #8
 8017b20:	0a2a      	lsrs	r2, r5, #8
 8017b22:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8017b26:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017b2a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017b2e:	4415      	add	r5, r2
 8017b30:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8017b34:	0a2d      	lsrs	r5, r5, #8
 8017b36:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8017b3a:	9a00      	ldr	r2, [sp, #0]
 8017b3c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017b40:	fb03 cc02 	mla	ip, r3, r2, ip
 8017b44:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017b48:	9b01      	ldr	r3, [sp, #4]
 8017b4a:	fb05 c50e 	mla	r5, r5, lr, ip
 8017b4e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8017b52:	43db      	mvns	r3, r3
 8017b54:	fb00 5004 	mla	r0, r0, r4, r5
 8017b58:	b2db      	uxtb	r3, r3
 8017b5a:	0a00      	lsrs	r0, r0, #8
 8017b5c:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8017b60:	f40a 407f 	and.w	r0, sl, #65280	; 0xff00
 8017b64:	4378      	muls	r0, r7
 8017b66:	fb02 0006 	mla	r0, r2, r6, r0
 8017b6a:	780a      	ldrb	r2, [r1, #0]
 8017b6c:	fb0e 0e08 	mla	lr, lr, r8, r0
 8017b70:	f409 407f 	and.w	r0, r9, #65280	; 0xff00
 8017b74:	fb04 e000 	mla	r0, r4, r0, lr
 8017b78:	fb02 f403 	mul.w	r4, r2, r3
 8017b7c:	0a00      	lsrs	r0, r0, #8
 8017b7e:	1c62      	adds	r2, r4, #1
 8017b80:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017b84:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017b88:	4328      	orrs	r0, r5
 8017b8a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017b8e:	700a      	strb	r2, [r1, #0]
 8017b90:	784a      	ldrb	r2, [r1, #1]
 8017b92:	435a      	muls	r2, r3
 8017b94:	1c54      	adds	r4, r2, #1
 8017b96:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8017b9a:	0a02      	lsrs	r2, r0, #8
 8017b9c:	0c00      	lsrs	r0, r0, #16
 8017b9e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017ba2:	704a      	strb	r2, [r1, #1]
 8017ba4:	788a      	ldrb	r2, [r1, #2]
 8017ba6:	4353      	muls	r3, r2
 8017ba8:	1c5a      	adds	r2, r3, #1
 8017baa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8017bae:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017bb2:	7088      	strb	r0, [r1, #2]
 8017bb4:	b003      	add	sp, #12
 8017bb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017bba:	2600      	movs	r6, #0
 8017bbc:	e706      	b.n	80179cc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3e>
 8017bbe:	2000      	movs	r0, #0
 8017bc0:	4606      	mov	r6, r0
 8017bc2:	e710      	b.n	80179e6 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x58>
 8017bc4:	2000      	movs	r0, #0
 8017bc6:	e70e      	b.n	80179e6 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x58>
 8017bc8:	4620      	mov	r0, r4
 8017bca:	e70c      	b.n	80179e6 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x58>
 8017bcc:	2500      	movs	r5, #0
 8017bce:	e71e      	b.n	8017a0e <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x80>
 8017bd0:	2200      	movs	r2, #0
 8017bd2:	4615      	mov	r5, r2
 8017bd4:	e729      	b.n	8017a2a <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>
 8017bd6:	4662      	mov	r2, ip
 8017bd8:	4665      	mov	r5, ip
 8017bda:	e726      	b.n	8017a2a <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>
 8017bdc:	2200      	movs	r2, #0
 8017bde:	e724      	b.n	8017a2a <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>
 8017be0:	4622      	mov	r2, r4
 8017be2:	e722      	b.n	8017a2a <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>

08017be4 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017be4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017be8:	b09b      	sub	sp, #108	; 0x6c
 8017bea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017bee:	9218      	str	r2, [sp, #96]	; 0x60
 8017bf0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017bf2:	9019      	str	r0, [sp, #100]	; 0x64
 8017bf4:	9116      	str	r1, [sp, #88]	; 0x58
 8017bf6:	6850      	ldr	r0, [r2, #4]
 8017bf8:	9307      	str	r3, [sp, #28]
 8017bfa:	6812      	ldr	r2, [r2, #0]
 8017bfc:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8017bfe:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8017c02:	fb00 1303 	mla	r3, r0, r3, r1
 8017c06:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8017c0a:	18d3      	adds	r3, r2, r3
 8017c0c:	930a      	str	r3, [sp, #40]	; 0x28
 8017c0e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017c10:	681b      	ldr	r3, [r3, #0]
 8017c12:	930f      	str	r3, [sp, #60]	; 0x3c
 8017c14:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017c16:	685e      	ldr	r6, [r3, #4]
 8017c18:	3604      	adds	r6, #4
 8017c1a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017c1c:	2b00      	cmp	r3, #0
 8017c1e:	dc03      	bgt.n	8017c28 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8017c20:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017c22:	2b00      	cmp	r3, #0
 8017c24:	f340 834f 	ble.w	80182c6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e2>
 8017c28:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017c2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017c2e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017c32:	1e48      	subs	r0, r1, #1
 8017c34:	1e57      	subs	r7, r2, #1
 8017c36:	9b07      	ldr	r3, [sp, #28]
 8017c38:	2b00      	cmp	r3, #0
 8017c3a:	f340 8178 	ble.w	8017f2e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8017c3e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8017c40:	142b      	asrs	r3, r5, #16
 8017c42:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017c46:	d406      	bmi.n	8017c56 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017c48:	4584      	cmp	ip, r0
 8017c4a:	da04      	bge.n	8017c56 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017c4c:	2b00      	cmp	r3, #0
 8017c4e:	db02      	blt.n	8017c56 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017c50:	42bb      	cmp	r3, r7
 8017c52:	f2c0 816d 	blt.w	8017f30 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 8017c56:	f11c 0c01 	adds.w	ip, ip, #1
 8017c5a:	f100 815b 	bmi.w	8017f14 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8017c5e:	4561      	cmp	r1, ip
 8017c60:	f2c0 8158 	blt.w	8017f14 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8017c64:	3301      	adds	r3, #1
 8017c66:	f100 8155 	bmi.w	8017f14 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8017c6a:	429a      	cmp	r2, r3
 8017c6c:	f2c0 8152 	blt.w	8017f14 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8017c70:	9b07      	ldr	r3, [sp, #28]
 8017c72:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017c74:	9317      	str	r3, [sp, #92]	; 0x5c
 8017c76:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017c78:	2b00      	cmp	r3, #0
 8017c7a:	f340 8178 	ble.w	8017f6e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017c7e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8017c80:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017c84:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017c88:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017c8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017c8e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8017c92:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8017c94:	141b      	asrs	r3, r3, #16
 8017c96:	f100 81ba 	bmi.w	801800e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8017c9a:	f101 38ff 	add.w	r8, r1, #4294967295
 8017c9e:	4543      	cmp	r3, r8
 8017ca0:	f280 81b5 	bge.w	801800e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8017ca4:	f1bc 0f00 	cmp.w	ip, #0
 8017ca8:	f2c0 81b1 	blt.w	801800e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8017cac:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017cb0:	45c4      	cmp	ip, r8
 8017cb2:	f280 81ac 	bge.w	801800e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8017cb6:	b209      	sxth	r1, r1
 8017cb8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017cba:	fb0c 3301 	mla	r3, ip, r1, r3
 8017cbe:	eb04 0803 	add.w	r8, r4, r3
 8017cc2:	5ce3      	ldrb	r3, [r4, r3]
 8017cc4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017cc8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8017ccc:	2a00      	cmp	r2, #0
 8017cce:	f000 8193 	beq.w	8017ff8 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x414>
 8017cd2:	f898 c001 	ldrb.w	ip, [r8, #1]
 8017cd6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8017cda:	940b      	str	r4, [sp, #44]	; 0x2c
 8017cdc:	0e24      	lsrs	r4, r4, #24
 8017cde:	9412      	str	r4, [sp, #72]	; 0x48
 8017ce0:	b178      	cbz	r0, 8017d02 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8017ce2:	eb08 0c01 	add.w	ip, r8, r1
 8017ce6:	f818 1001 	ldrb.w	r1, [r8, r1]
 8017cea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017cee:	9108      	str	r1, [sp, #32]
 8017cf0:	0e09      	lsrs	r1, r1, #24
 8017cf2:	9110      	str	r1, [sp, #64]	; 0x40
 8017cf4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8017cf8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017cfc:	910c      	str	r1, [sp, #48]	; 0x30
 8017cfe:	0e09      	lsrs	r1, r1, #24
 8017d00:	9113      	str	r1, [sp, #76]	; 0x4c
 8017d02:	b292      	uxth	r2, r2
 8017d04:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017d06:	b280      	uxth	r0, r0
 8017d08:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017d0a:	fb02 f900 	mul.w	r9, r2, r0
 8017d0e:	0112      	lsls	r2, r2, #4
 8017d10:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8017d14:	eba2 0809 	sub.w	r8, r2, r9
 8017d18:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017d1c:	b280      	uxth	r0, r0
 8017d1e:	fa1f f888 	uxth.w	r8, r8
 8017d22:	1a12      	subs	r2, r2, r0
 8017d24:	fb08 f101 	mul.w	r1, r8, r1
 8017d28:	b292      	uxth	r2, r2
 8017d2a:	fb02 110e 	mla	r1, r2, lr, r1
 8017d2e:	fb00 1104 	mla	r1, r0, r4, r1
 8017d32:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017d34:	fb09 1104 	mla	r1, r9, r4, r1
 8017d38:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017d3c:	2900      	cmp	r1, #0
 8017d3e:	f000 80de 	beq.w	8017efe <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8017d42:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017d46:	d01b      	beq.n	8017d80 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 8017d48:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017d4c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017d50:	fb0e fa0a 	mul.w	sl, lr, sl
 8017d54:	fb0e fe03 	mul.w	lr, lr, r3
 8017d58:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017d5c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017d60:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8017d64:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017d68:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017d6c:	4453      	add	r3, sl
 8017d6e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017d72:	0a1b      	lsrs	r3, r3, #8
 8017d74:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017d78:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017d7c:	ea43 030c 	orr.w	r3, r3, ip
 8017d80:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017d82:	2cff      	cmp	r4, #255	; 0xff
 8017d84:	d021      	beq.n	8017dca <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8017d86:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017d88:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017d8c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017d8e:	fb04 fb0b 	mul.w	fp, r4, fp
 8017d92:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017d94:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017d98:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017d9a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017d9e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017da2:	fb04 fa0a 	mul.w	sl, r4, sl
 8017da6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017daa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017dae:	44de      	add	lr, fp
 8017db0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017db4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017db8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017dbc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017dc0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017dc4:	ea4e 040a 	orr.w	r4, lr, sl
 8017dc8:	940b      	str	r4, [sp, #44]	; 0x2c
 8017dca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017dcc:	2cff      	cmp	r4, #255	; 0xff
 8017dce:	d021      	beq.n	8017e14 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8017dd0:	9c08      	ldr	r4, [sp, #32]
 8017dd2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017dd6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017dd8:	fb04 fb0b 	mul.w	fp, r4, fp
 8017ddc:	9c08      	ldr	r4, [sp, #32]
 8017dde:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017de2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017de4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017de8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017dec:	fb04 fa0a 	mul.w	sl, r4, sl
 8017df0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017df4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017df8:	44de      	add	lr, fp
 8017dfa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017dfe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e0e:	ea4e 040a 	orr.w	r4, lr, sl
 8017e12:	9408      	str	r4, [sp, #32]
 8017e14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017e16:	2cff      	cmp	r4, #255	; 0xff
 8017e18:	d021      	beq.n	8017e5e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8017e1a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017e1c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017e20:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017e22:	fb04 fb0b 	mul.w	fp, r4, fp
 8017e26:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017e28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017e2c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017e2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017e32:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017e36:	fb04 fa0a 	mul.w	sl, r4, sl
 8017e3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e3e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017e42:	44de      	add	lr, fp
 8017e44:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017e48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e58:	ea4e 040a 	orr.w	r4, lr, sl
 8017e5c:	940c      	str	r4, [sp, #48]	; 0x30
 8017e5e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017e60:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017e64:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017e68:	43c9      	mvns	r1, r1
 8017e6a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017e6e:	9c08      	ldr	r4, [sp, #32]
 8017e70:	b2c9      	uxtb	r1, r1
 8017e72:	fb08 fc0c 	mul.w	ip, r8, ip
 8017e76:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017e7a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017e7e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017e80:	fb00 cc0e 	mla	ip, r0, lr, ip
 8017e84:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017e88:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017e8a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017e8e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8017e92:	fb08 f80e 	mul.w	r8, r8, lr
 8017e96:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017e9a:	fb02 8303 	mla	r3, r2, r3, r8
 8017e9e:	9a08      	ldr	r2, [sp, #32]
 8017ea0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017ea4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017ea8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017eaa:	fb00 330a 	mla	r3, r0, sl, r3
 8017eae:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8017eb2:	fb09 3900 	mla	r9, r9, r0, r3
 8017eb6:	783b      	ldrb	r3, [r7, #0]
 8017eb8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017ebc:	fb03 f201 	mul.w	r2, r3, r1
 8017ec0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017ec4:	1c53      	adds	r3, r2, #1
 8017ec6:	ea4c 0c09 	orr.w	ip, ip, r9
 8017eca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017ece:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8017ed2:	703b      	strb	r3, [r7, #0]
 8017ed4:	787b      	ldrb	r3, [r7, #1]
 8017ed6:	434b      	muls	r3, r1
 8017ed8:	1c5a      	adds	r2, r3, #1
 8017eda:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8017ede:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8017ee2:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8017ee6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017eea:	707b      	strb	r3, [r7, #1]
 8017eec:	78bb      	ldrb	r3, [r7, #2]
 8017eee:	4359      	muls	r1, r3
 8017ef0:	1c4b      	adds	r3, r1, #1
 8017ef2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017ef6:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8017efa:	f887 c002 	strb.w	ip, [r7, #2]
 8017efe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017f00:	3703      	adds	r7, #3
 8017f02:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8017f04:	441a      	add	r2, r3
 8017f06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017f08:	441d      	add	r5, r3
 8017f0a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017f0c:	9225      	str	r2, [sp, #148]	; 0x94
 8017f0e:	3b01      	subs	r3, #1
 8017f10:	9317      	str	r3, [sp, #92]	; 0x5c
 8017f12:	e6b0      	b.n	8017c76 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017f14:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017f16:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8017f18:	441c      	add	r4, r3
 8017f1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017f1c:	441d      	add	r5, r3
 8017f1e:	9b07      	ldr	r3, [sp, #28]
 8017f20:	9425      	str	r4, [sp, #148]	; 0x94
 8017f22:	3b01      	subs	r3, #1
 8017f24:	9307      	str	r3, [sp, #28]
 8017f26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017f28:	3303      	adds	r3, #3
 8017f2a:	930a      	str	r3, [sp, #40]	; 0x28
 8017f2c:	e683      	b.n	8017c36 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8017f2e:	d026      	beq.n	8017f7e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8017f30:	9b07      	ldr	r3, [sp, #28]
 8017f32:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8017f34:	3b01      	subs	r3, #1
 8017f36:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8017f38:	fb00 4003 	mla	r0, r0, r3, r4
 8017f3c:	1400      	asrs	r0, r0, #16
 8017f3e:	f53f ae97 	bmi.w	8017c70 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017f42:	3901      	subs	r1, #1
 8017f44:	4288      	cmp	r0, r1
 8017f46:	f6bf ae93 	bge.w	8017c70 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017f4a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017f4c:	fb01 5303 	mla	r3, r1, r3, r5
 8017f50:	141b      	asrs	r3, r3, #16
 8017f52:	f53f ae8d 	bmi.w	8017c70 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017f56:	3a01      	subs	r2, #1
 8017f58:	4293      	cmp	r3, r2
 8017f5a:	f6bf ae89 	bge.w	8017c70 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017f5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017f60:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8017f64:	f103 0e03 	add.w	lr, r3, #3
 8017f68:	f1bb 0f00 	cmp.w	fp, #0
 8017f6c:	dc6d      	bgt.n	801804a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x466>
 8017f6e:	9b07      	ldr	r3, [sp, #28]
 8017f70:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017f74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017f76:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8017f7a:	4423      	add	r3, r4
 8017f7c:	930a      	str	r3, [sp, #40]	; 0x28
 8017f7e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017f80:	2b00      	cmp	r3, #0
 8017f82:	f340 81a0 	ble.w	80182c6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e2>
 8017f86:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017f8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017f8c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017f90:	eeb0 6a62 	vmov.f32	s12, s5
 8017f94:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017f98:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017f9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017fa0:	ed8d 6a25 	vstr	s12, [sp, #148]	; 0x94
 8017fa4:	eeb0 6a43 	vmov.f32	s12, s6
 8017fa8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017fac:	ee16 5a10 	vmov	r5, s12
 8017fb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017fb4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017fb8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017fbc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017fc0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017fc4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017fc8:	ee12 2a90 	vmov	r2, s5
 8017fcc:	eef0 2a47 	vmov.f32	s5, s14
 8017fd0:	fb92 f3f3 	sdiv	r3, r2, r3
 8017fd4:	ee13 2a10 	vmov	r2, s6
 8017fd8:	9327      	str	r3, [sp, #156]	; 0x9c
 8017fda:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017fdc:	eeb0 3a67 	vmov.f32	s6, s15
 8017fe0:	fb92 f3f3 	sdiv	r3, r2, r3
 8017fe4:	9328      	str	r3, [sp, #160]	; 0xa0
 8017fe6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017fe8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017fea:	3b01      	subs	r3, #1
 8017fec:	9316      	str	r3, [sp, #88]	; 0x58
 8017fee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017ff0:	bf08      	it	eq
 8017ff2:	4613      	moveq	r3, r2
 8017ff4:	9307      	str	r3, [sp, #28]
 8017ff6:	e610      	b.n	8017c1a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8017ff8:	2800      	cmp	r0, #0
 8017ffa:	f43f ae82 	beq.w	8017d02 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8017ffe:	f818 1001 	ldrb.w	r1, [r8, r1]
 8018002:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018006:	9108      	str	r1, [sp, #32]
 8018008:	0e09      	lsrs	r1, r1, #24
 801800a:	9110      	str	r1, [sp, #64]	; 0x40
 801800c:	e679      	b.n	8017d02 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801800e:	f113 0801 	adds.w	r8, r3, #1
 8018012:	f53f af74 	bmi.w	8017efe <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8018016:	4541      	cmp	r1, r8
 8018018:	f6ff af71 	blt.w	8017efe <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801801c:	f11c 0801 	adds.w	r8, ip, #1
 8018020:	f53f af6d 	bmi.w	8017efe <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8018024:	45c6      	cmp	lr, r8
 8018026:	f6ff af6a 	blt.w	8017efe <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801802a:	b209      	sxth	r1, r1
 801802c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8018030:	fa0f f38e 	sxth.w	r3, lr
 8018034:	9100      	str	r1, [sp, #0]
 8018036:	4639      	mov	r1, r7
 8018038:	9301      	str	r3, [sp, #4]
 801803a:	4633      	mov	r3, r6
 801803c:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8018040:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018042:	9819      	ldr	r0, [sp, #100]	; 0x64
 8018044:	f7ff fca3 	bl	801798e <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>
 8018048:	e759      	b.n	8017efe <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801804a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801804c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018050:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8018052:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018056:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018058:	1427      	asrs	r7, r4, #16
 801805a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801805c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018060:	142b      	asrs	r3, r5, #16
 8018062:	fb01 7303 	mla	r3, r1, r3, r7
 8018066:	18e7      	adds	r7, r4, r3
 8018068:	5ce3      	ldrb	r3, [r4, r3]
 801806a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801806e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018072:	2a00      	cmp	r2, #0
 8018074:	f000 811d 	beq.w	80182b2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ce>
 8018078:	f897 8001 	ldrb.w	r8, [r7, #1]
 801807c:	f856 4028 	ldr.w	r4, [r6, r8, lsl #2]
 8018080:	940d      	str	r4, [sp, #52]	; 0x34
 8018082:	0e24      	lsrs	r4, r4, #24
 8018084:	9414      	str	r4, [sp, #80]	; 0x50
 8018086:	b170      	cbz	r0, 80180a6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 8018088:	eb07 0801 	add.w	r8, r7, r1
 801808c:	5c79      	ldrb	r1, [r7, r1]
 801808e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018092:	9109      	str	r1, [sp, #36]	; 0x24
 8018094:	0e09      	lsrs	r1, r1, #24
 8018096:	9111      	str	r1, [sp, #68]	; 0x44
 8018098:	f898 1001 	ldrb.w	r1, [r8, #1]
 801809c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80180a0:	910e      	str	r1, [sp, #56]	; 0x38
 80180a2:	0e09      	lsrs	r1, r1, #24
 80180a4:	9115      	str	r1, [sp, #84]	; 0x54
 80180a6:	b292      	uxth	r2, r2
 80180a8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80180aa:	b280      	uxth	r0, r0
 80180ac:	fb02 f900 	mul.w	r9, r2, r0
 80180b0:	0112      	lsls	r2, r2, #4
 80180b2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80180b6:	eba2 0809 	sub.w	r8, r2, r9
 80180ba:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80180be:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80180c0:	b280      	uxth	r0, r0
 80180c2:	fa1f f888 	uxth.w	r8, r8
 80180c6:	1a09      	subs	r1, r1, r0
 80180c8:	fb08 f202 	mul.w	r2, r8, r2
 80180cc:	b289      	uxth	r1, r1
 80180ce:	fb01 220c 	mla	r2, r1, ip, r2
 80180d2:	fb00 2204 	mla	r2, r0, r4, r2
 80180d6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80180d8:	fb09 2204 	mla	r2, r9, r4, r2
 80180dc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80180e0:	2a00      	cmp	r2, #0
 80180e2:	f000 80db 	beq.w	801829c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 80180e6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80180ea:	d019      	beq.n	8018120 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53c>
 80180ec:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80180f0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80180f4:	fb0c fa0a 	mul.w	sl, ip, sl
 80180f8:	fb0c fc03 	mul.w	ip, ip, r3
 80180fc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018100:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018104:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8018108:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801810c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018110:	4453      	add	r3, sl
 8018112:	0a3f      	lsrs	r7, r7, #8
 8018114:	0a1b      	lsrs	r3, r3, #8
 8018116:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801811a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801811e:	433b      	orrs	r3, r7
 8018120:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018122:	2cff      	cmp	r4, #255	; 0xff
 8018124:	d020      	beq.n	8018168 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x584>
 8018126:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018128:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801812c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801812e:	4367      	muls	r7, r4
 8018130:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018132:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018136:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801813a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801813c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018140:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018144:	fb04 fa0a 	mul.w	sl, r4, sl
 8018148:	44bc      	add	ip, r7
 801814a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801814e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018152:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018156:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801815a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801815e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018162:	ea4c 040a 	orr.w	r4, ip, sl
 8018166:	940d      	str	r4, [sp, #52]	; 0x34
 8018168:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801816a:	2cff      	cmp	r4, #255	; 0xff
 801816c:	d020      	beq.n	80181b0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5cc>
 801816e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018170:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018174:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018176:	4367      	muls	r7, r4
 8018178:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801817a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801817e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018182:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018184:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018188:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801818c:	fb04 fa0a 	mul.w	sl, r4, sl
 8018190:	44bc      	add	ip, r7
 8018192:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018196:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801819a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801819e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80181a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80181aa:	ea4c 040a 	orr.w	r4, ip, sl
 80181ae:	9409      	str	r4, [sp, #36]	; 0x24
 80181b0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80181b2:	2cff      	cmp	r4, #255	; 0xff
 80181b4:	d020      	beq.n	80181f8 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x614>
 80181b6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80181b8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80181bc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80181be:	4367      	muls	r7, r4
 80181c0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80181c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80181c6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80181ca:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80181cc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80181d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181d4:	fb04 fa0a 	mul.w	sl, r4, sl
 80181d8:	44bc      	add	ip, r7
 80181da:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80181de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80181e2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80181e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80181ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80181f2:	ea4c 040a 	orr.w	r4, ip, sl
 80181f6:	940e      	str	r4, [sp, #56]	; 0x38
 80181f8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80181fa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80181fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018202:	43d2      	mvns	r2, r2
 8018204:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018208:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801820a:	b2d2      	uxtb	r2, r2
 801820c:	fb08 f707 	mul.w	r7, r8, r7
 8018210:	fb01 770c 	mla	r7, r1, ip, r7
 8018214:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018218:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801821a:	fb00 770c 	mla	r7, r0, ip, r7
 801821e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018222:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018224:	fb09 770c 	mla	r7, r9, ip, r7
 8018228:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801822c:	fb08 f80c 	mul.w	r8, r8, ip
 8018230:	0a3f      	lsrs	r7, r7, #8
 8018232:	fb01 8303 	mla	r3, r1, r3, r8
 8018236:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018238:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801823c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8018240:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018242:	fb00 330a 	mla	r3, r0, sl, r3
 8018246:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801824a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801824e:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 8018252:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018256:	fb03 f102 	mul.w	r1, r3, r2
 801825a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801825e:	1c4b      	adds	r3, r1, #1
 8018260:	ea47 070c 	orr.w	r7, r7, ip
 8018264:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018268:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 801826c:	f80e 3c03 	strb.w	r3, [lr, #-3]
 8018270:	f81e 3c02 	ldrb.w	r3, [lr, #-2]
 8018274:	4353      	muls	r3, r2
 8018276:	1c59      	adds	r1, r3, #1
 8018278:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801827c:	0a3b      	lsrs	r3, r7, #8
 801827e:	0c3f      	lsrs	r7, r7, #16
 8018280:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018284:	f80e 3c02 	strb.w	r3, [lr, #-2]
 8018288:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 801828c:	435a      	muls	r2, r3
 801828e:	1c53      	adds	r3, r2, #1
 8018290:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8018294:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018298:	f80e 7c01 	strb.w	r7, [lr, #-1]
 801829c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801829e:	f10e 0e03 	add.w	lr, lr, #3
 80182a2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80182a4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80182a8:	441a      	add	r2, r3
 80182aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80182ac:	9225      	str	r2, [sp, #148]	; 0x94
 80182ae:	441d      	add	r5, r3
 80182b0:	e65a      	b.n	8017f68 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 80182b2:	2800      	cmp	r0, #0
 80182b4:	f43f aef7 	beq.w	80180a6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 80182b8:	5c79      	ldrb	r1, [r7, r1]
 80182ba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80182be:	9109      	str	r1, [sp, #36]	; 0x24
 80182c0:	0e09      	lsrs	r1, r1, #24
 80182c2:	9111      	str	r1, [sp, #68]	; 0x44
 80182c4:	e6ef      	b.n	80180a6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 80182c6:	b01b      	add	sp, #108	; 0x6c
 80182c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080182cc <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh>:
 80182cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182d0:	b08d      	sub	sp, #52	; 0x34
 80182d2:	468b      	mov	fp, r1
 80182d4:	e9dd 5c17 	ldrd	r5, ip, [sp, #92]	; 0x5c
 80182d8:	f89d 106c 	ldrb.w	r1, [sp, #108]	; 0x6c
 80182dc:	fb0c 5703 	mla	r7, ip, r3, r5
 80182e0:	f1bc 0f00 	cmp.w	ip, #0
 80182e4:	910b      	str	r1, [sp, #44]	; 0x2c
 80182e6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80182ea:	f9bd e058 	ldrsh.w	lr, [sp, #88]	; 0x58
 80182ee:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 80182f2:	f89d a068 	ldrb.w	sl, [sp, #104]	; 0x68
 80182f6:	eb02 0607 	add.w	r6, r2, r7
 80182fa:	f89b 4000 	ldrb.w	r4, [fp]
 80182fe:	f89b 0001 	ldrb.w	r0, [fp, #1]
 8018302:	f89b 1002 	ldrb.w	r1, [fp, #2]
 8018306:	f2c0 80c1 	blt.w	801848c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1c0>
 801830a:	45e6      	cmp	lr, ip
 801830c:	f340 80be 	ble.w	801848c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1c0>
 8018310:	2d00      	cmp	r5, #0
 8018312:	f2c0 80b7 	blt.w	8018484 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1b8>
 8018316:	42ab      	cmp	r3, r5
 8018318:	f340 80b4 	ble.w	8018484 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1b8>
 801831c:	5dd2      	ldrb	r2, [r2, r7]
 801831e:	9205      	str	r2, [sp, #20]
 8018320:	7872      	ldrb	r2, [r6, #1]
 8018322:	9206      	str	r2, [sp, #24]
 8018324:	78b2      	ldrb	r2, [r6, #2]
 8018326:	9207      	str	r2, [sp, #28]
 8018328:	1c6a      	adds	r2, r5, #1
 801832a:	f100 80b6 	bmi.w	801849a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ce>
 801832e:	4293      	cmp	r3, r2
 8018330:	f340 80b3 	ble.w	801849a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ce>
 8018334:	f1b8 0f00 	cmp.w	r8, #0
 8018338:	f000 80af 	beq.w	801849a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ce>
 801833c:	78f2      	ldrb	r2, [r6, #3]
 801833e:	9201      	str	r2, [sp, #4]
 8018340:	7932      	ldrb	r2, [r6, #4]
 8018342:	9202      	str	r2, [sp, #8]
 8018344:	7972      	ldrb	r2, [r6, #5]
 8018346:	9203      	str	r2, [sp, #12]
 8018348:	f11c 0c01 	adds.w	ip, ip, #1
 801834c:	f100 80ad 	bmi.w	80184aa <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1de>
 8018350:	45e6      	cmp	lr, ip
 8018352:	f340 80aa 	ble.w	80184aa <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1de>
 8018356:	f1ba 0f00 	cmp.w	sl, #0
 801835a:	f000 80a6 	beq.w	80184aa <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1de>
 801835e:	2d00      	cmp	r5, #0
 8018360:	f2c0 809f 	blt.w	80184a2 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1d6>
 8018364:	42ab      	cmp	r3, r5
 8018366:	f340 809c 	ble.w	80184a2 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1d6>
 801836a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801836e:	f816 9002 	ldrb.w	r9, [r6, r2]
 8018372:	2203      	movs	r2, #3
 8018374:	fb03 6c02 	mla	ip, r3, r2, r6
 8018378:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801837c:	f89c e002 	ldrb.w	lr, [ip, #2]
 8018380:	9704      	str	r7, [sp, #16]
 8018382:	3501      	adds	r5, #1
 8018384:	f100 8098 	bmi.w	80184b8 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ec>
 8018388:	42ab      	cmp	r3, r5
 801838a:	f340 8095 	ble.w	80184b8 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ec>
 801838e:	f1b8 0f00 	cmp.w	r8, #0
 8018392:	f000 8091 	beq.w	80184b8 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ec>
 8018396:	f04f 0c03 	mov.w	ip, #3
 801839a:	fb13 c20c 	smlabb	r2, r3, ip, ip
 801839e:	5cb5      	ldrb	r5, [r6, r2]
 80183a0:	fb03 620c 	mla	r2, r3, ip, r6
 80183a4:	fb03 630c 	mla	r3, r3, ip, r6
 80183a8:	7912      	ldrb	r2, [r2, #4]
 80183aa:	795e      	ldrb	r6, [r3, #5]
 80183ac:	fa1f f388 	uxth.w	r3, r8
 80183b0:	fa1f fc8a 	uxth.w	ip, sl
 80183b4:	fb03 f70c 	mul.w	r7, r3, ip
 80183b8:	011b      	lsls	r3, r3, #4
 80183ba:	9708      	str	r7, [sp, #32]
 80183bc:	ebc7 1c0c 	rsb	ip, r7, ip, lsl #4
 80183c0:	f5c3 7a80 	rsb	sl, r3, #256	; 0x100
 80183c4:	1bdb      	subs	r3, r3, r7
 80183c6:	f8bd 702c 	ldrh.w	r7, [sp, #44]	; 0x2c
 80183ca:	fa1f fc8c 	uxth.w	ip, ip
 80183ce:	b29b      	uxth	r3, r3
 80183d0:	9709      	str	r7, [sp, #36]	; 0x24
 80183d2:	ebaa 0a0c 	sub.w	sl, sl, ip
 80183d6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80183d8:	930a      	str	r3, [sp, #40]	; 0x28
 80183da:	fa1f fa8a 	uxth.w	sl, sl
 80183de:	ea6f 0807 	mvn.w	r8, r7
 80183e2:	9f01      	ldr	r7, [sp, #4]
 80183e4:	435f      	muls	r7, r3
 80183e6:	9b05      	ldr	r3, [sp, #20]
 80183e8:	fa5f f888 	uxtb.w	r8, r8
 80183ec:	fb0a 7703 	mla	r7, sl, r3, r7
 80183f0:	9b08      	ldr	r3, [sp, #32]
 80183f2:	fb14 f408 	smulbb	r4, r4, r8
 80183f6:	fb0c 7709 	mla	r7, ip, r9, r7
 80183fa:	fb10 f008 	smulbb	r0, r0, r8
 80183fe:	fb11 f108 	smulbb	r1, r1, r8
 8018402:	fb03 7705 	mla	r7, r3, r5, r7
 8018406:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018408:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801840c:	fb07 4703 	mla	r7, r7, r3, r4
 8018410:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018412:	b2bf      	uxth	r7, r7
 8018414:	1c7c      	adds	r4, r7, #1
 8018416:	eb04 2417 	add.w	r4, r4, r7, lsr #8
 801841a:	1224      	asrs	r4, r4, #8
 801841c:	f88b 4000 	strb.w	r4, [fp]
 8018420:	9c02      	ldr	r4, [sp, #8]
 8018422:	435c      	muls	r4, r3
 8018424:	9b06      	ldr	r3, [sp, #24]
 8018426:	fb0a 4403 	mla	r4, sl, r3, r4
 801842a:	9b04      	ldr	r3, [sp, #16]
 801842c:	fb0c 4403 	mla	r4, ip, r3, r4
 8018430:	9b08      	ldr	r3, [sp, #32]
 8018432:	fb03 4402 	mla	r4, r3, r2, r4
 8018436:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018438:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801843a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801843e:	fb04 0403 	mla	r4, r4, r3, r0
 8018442:	9b03      	ldr	r3, [sp, #12]
 8018444:	435a      	muls	r2, r3
 8018446:	b2a4      	uxth	r4, r4
 8018448:	4613      	mov	r3, r2
 801844a:	9a07      	ldr	r2, [sp, #28]
 801844c:	1c60      	adds	r0, r4, #1
 801844e:	fb0a 3a02 	mla	sl, sl, r2, r3
 8018452:	9b08      	ldr	r3, [sp, #32]
 8018454:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8018458:	fb0c ac0e 	mla	ip, ip, lr, sl
 801845c:	1224      	asrs	r4, r4, #8
 801845e:	fb03 c606 	mla	r6, r3, r6, ip
 8018462:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018464:	f88b 4001 	strb.w	r4, [fp, #1]
 8018468:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801846c:	fb06 1103 	mla	r1, r6, r3, r1
 8018470:	b289      	uxth	r1, r1
 8018472:	1c4e      	adds	r6, r1, #1
 8018474:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 8018478:	1209      	asrs	r1, r1, #8
 801847a:	f88b 1002 	strb.w	r1, [fp, #2]
 801847e:	b00d      	add	sp, #52	; 0x34
 8018480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018484:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8018488:	9405      	str	r4, [sp, #20]
 801848a:	e74d      	b.n	8018328 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x5c>
 801848c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8018490:	9401      	str	r4, [sp, #4]
 8018492:	9405      	str	r4, [sp, #20]
 8018494:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8018498:	e756      	b.n	8018348 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x7c>
 801849a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801849e:	9401      	str	r4, [sp, #4]
 80184a0:	e752      	b.n	8018348 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x7c>
 80184a2:	468e      	mov	lr, r1
 80184a4:	9004      	str	r0, [sp, #16]
 80184a6:	46a1      	mov	r9, r4
 80184a8:	e76b      	b.n	8018382 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xb6>
 80184aa:	460e      	mov	r6, r1
 80184ac:	4602      	mov	r2, r0
 80184ae:	4625      	mov	r5, r4
 80184b0:	468e      	mov	lr, r1
 80184b2:	9004      	str	r0, [sp, #16]
 80184b4:	46a1      	mov	r9, r4
 80184b6:	e779      	b.n	80183ac <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xe0>
 80184b8:	460e      	mov	r6, r1
 80184ba:	4602      	mov	r2, r0
 80184bc:	4625      	mov	r5, r4
 80184be:	e775      	b.n	80183ac <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xe0>

080184c0 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80184c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184c4:	b09f      	sub	sp, #124	; 0x7c
 80184c6:	920e      	str	r2, [sp, #56]	; 0x38
 80184c8:	9307      	str	r3, [sp, #28]
 80184ca:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80184cc:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80184d0:	901d      	str	r0, [sp, #116]	; 0x74
 80184d2:	930c      	str	r3, [sp, #48]	; 0x30
 80184d4:	6850      	ldr	r0, [r2, #4]
 80184d6:	910b      	str	r1, [sp, #44]	; 0x2c
 80184d8:	6812      	ldr	r2, [r2, #0]
 80184da:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80184de:	e9dd a829 	ldrd	sl, r8, [sp, #164]	; 0xa4
 80184e2:	fb00 1303 	mla	r3, r0, r3, r1
 80184e6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80184ea:	18d3      	adds	r3, r2, r3
 80184ec:	9308      	str	r3, [sp, #32]
 80184ee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80184f0:	681b      	ldr	r3, [r3, #0]
 80184f2:	930a      	str	r3, [sp, #40]	; 0x28
 80184f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80184f6:	43db      	mvns	r3, r3
 80184f8:	b2db      	uxtb	r3, r3
 80184fa:	9309      	str	r3, [sp, #36]	; 0x24
 80184fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80184fe:	2b00      	cmp	r3, #0
 8018500:	dc03      	bgt.n	801850a <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018502:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018504:	2b00      	cmp	r3, #0
 8018506:	f340 81f5 	ble.w	80188f4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 801850a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801850c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018510:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018514:	1e48      	subs	r0, r1, #1
 8018516:	1e54      	subs	r4, r2, #1
 8018518:	9b07      	ldr	r3, [sp, #28]
 801851a:	2b00      	cmp	r3, #0
 801851c:	f340 80d5 	ble.w	80186ca <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8018520:	ea5f 452a 	movs.w	r5, sl, asr #16
 8018524:	ea4f 4328 	mov.w	r3, r8, asr #16
 8018528:	d406      	bmi.n	8018538 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801852a:	4285      	cmp	r5, r0
 801852c:	da04      	bge.n	8018538 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801852e:	2b00      	cmp	r3, #0
 8018530:	db02      	blt.n	8018538 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018532:	42a3      	cmp	r3, r4
 8018534:	f2c0 80ca 	blt.w	80186cc <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8018538:	3501      	adds	r5, #1
 801853a:	f100 80bb 	bmi.w	80186b4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 801853e:	42a9      	cmp	r1, r5
 8018540:	f2c0 80b8 	blt.w	80186b4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8018544:	3301      	adds	r3, #1
 8018546:	f100 80b5 	bmi.w	80186b4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 801854a:	429a      	cmp	r2, r3
 801854c:	f2c0 80b2 	blt.w	80186b4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8018550:	9b07      	ldr	r3, [sp, #28]
 8018552:	9d08      	ldr	r5, [sp, #32]
 8018554:	930d      	str	r3, [sp, #52]	; 0x34
 8018556:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018558:	2b00      	cmp	r3, #0
 801855a:	f340 80d6 	ble.w	801870a <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801855e:	9830      	ldr	r0, [sp, #192]	; 0xc0
 8018560:	ea4f 4428 	mov.w	r4, r8, asr #16
 8018564:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018566:	f3ca 3203 	ubfx	r2, sl, #12, #4
 801856a:	68c6      	ldr	r6, [r0, #12]
 801856c:	ea5f 402a 	movs.w	r0, sl, asr #16
 8018570:	f3c8 3103 	ubfx	r1, r8, #12, #4
 8018574:	689b      	ldr	r3, [r3, #8]
 8018576:	f100 810f 	bmi.w	8018798 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801857a:	1e5f      	subs	r7, r3, #1
 801857c:	42b8      	cmp	r0, r7
 801857e:	f280 810b 	bge.w	8018798 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018582:	2c00      	cmp	r4, #0
 8018584:	f2c0 8108 	blt.w	8018798 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018588:	1e77      	subs	r7, r6, #1
 801858a:	42bc      	cmp	r4, r7
 801858c:	f280 8104 	bge.w	8018798 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018590:	b21b      	sxth	r3, r3
 8018592:	fb04 0003 	mla	r0, r4, r3, r0
 8018596:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018598:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801859c:	1826      	adds	r6, r4, r0
 801859e:	5c24      	ldrb	r4, [r4, r0]
 80185a0:	78b7      	ldrb	r7, [r6, #2]
 80185a2:	7870      	ldrb	r0, [r6, #1]
 80185a4:	970f      	str	r7, [sp, #60]	; 0x3c
 80185a6:	7977      	ldrb	r7, [r6, #5]
 80185a8:	f896 e003 	ldrb.w	lr, [r6, #3]
 80185ac:	f896 c004 	ldrb.w	ip, [r6, #4]
 80185b0:	9710      	str	r7, [sp, #64]	; 0x40
 80185b2:	b1c9      	cbz	r1, 80185e8 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80185b4:	f04f 0b03 	mov.w	fp, #3
 80185b8:	f06f 0904 	mvn.w	r9, #4
 80185bc:	3605      	adds	r6, #5
 80185be:	fb13 930b 	smlabb	r3, r3, fp, r9
 80185c2:	eb06 0b03 	add.w	fp, r6, r3
 80185c6:	5cf3      	ldrb	r3, [r6, r3]
 80185c8:	9311      	str	r3, [sp, #68]	; 0x44
 80185ca:	f89b 3001 	ldrb.w	r3, [fp, #1]
 80185ce:	9313      	str	r3, [sp, #76]	; 0x4c
 80185d0:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80185d4:	9315      	str	r3, [sp, #84]	; 0x54
 80185d6:	f89b 3003 	ldrb.w	r3, [fp, #3]
 80185da:	9312      	str	r3, [sp, #72]	; 0x48
 80185dc:	f89b 3004 	ldrb.w	r3, [fp, #4]
 80185e0:	9314      	str	r3, [sp, #80]	; 0x50
 80185e2:	f89b 3005 	ldrb.w	r3, [fp, #5]
 80185e6:	9316      	str	r3, [sp, #88]	; 0x58
 80185e8:	b292      	uxth	r2, r2
 80185ea:	9f11      	ldr	r7, [sp, #68]	; 0x44
 80185ec:	b289      	uxth	r1, r1
 80185ee:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80185f2:	fb02 f601 	mul.w	r6, r2, r1
 80185f6:	0112      	lsls	r2, r2, #4
 80185f8:	ebc6 1101 	rsb	r1, r6, r1, lsl #4
 80185fc:	f5c2 7980 	rsb	r9, r2, #256	; 0x100
 8018600:	1b92      	subs	r2, r2, r6
 8018602:	b289      	uxth	r1, r1
 8018604:	b292      	uxth	r2, r2
 8018606:	eba9 0901 	sub.w	r9, r9, r1
 801860a:	fb02 fe0e 	mul.w	lr, r2, lr
 801860e:	fa1f f989 	uxth.w	r9, r9
 8018612:	fb02 fc0c 	mul.w	ip, r2, ip
 8018616:	fb09 e404 	mla	r4, r9, r4, lr
 801861a:	f895 e000 	ldrb.w	lr, [r5]
 801861e:	fb09 c000 	mla	r0, r9, r0, ip
 8018622:	fb01 4407 	mla	r4, r1, r7, r4
 8018626:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8018628:	fb06 4407 	mla	r4, r6, r7, r4
 801862c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801862e:	fb1e fe07 	smulbb	lr, lr, r7
 8018632:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8018636:	fb04 e403 	mla	r4, r4, r3, lr
 801863a:	b2a4      	uxth	r4, r4
 801863c:	f104 0e01 	add.w	lr, r4, #1
 8018640:	eb0e 2e14 	add.w	lr, lr, r4, lsr #8
 8018644:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018646:	fb01 0004 	mla	r0, r1, r4, r0
 801864a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801864c:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8018650:	fb06 0004 	mla	r0, r6, r4, r0
 8018654:	786c      	ldrb	r4, [r5, #1]
 8018656:	f885 e000 	strb.w	lr, [r5]
 801865a:	fb14 f407 	smulbb	r4, r4, r7
 801865e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018662:	fb00 4003 	mla	r0, r0, r3, r4
 8018666:	b280      	uxth	r0, r0
 8018668:	1c44      	adds	r4, r0, #1
 801866a:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801866e:	1200      	asrs	r0, r0, #8
 8018670:	7068      	strb	r0, [r5, #1]
 8018672:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018674:	4342      	muls	r2, r0
 8018676:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018678:	fb09 2200 	mla	r2, r9, r0, r2
 801867c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801867e:	fb01 2100 	mla	r1, r1, r0, r2
 8018682:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018684:	fb06 1602 	mla	r6, r6, r2, r1
 8018688:	78a9      	ldrb	r1, [r5, #2]
 801868a:	fb11 f107 	smulbb	r1, r1, r7
 801868e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8018692:	fb06 1303 	mla	r3, r6, r3, r1
 8018696:	b29b      	uxth	r3, r3
 8018698:	1c5e      	adds	r6, r3, #1
 801869a:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 801869e:	121b      	asrs	r3, r3, #8
 80186a0:	70ab      	strb	r3, [r5, #2]
 80186a2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80186a4:	3503      	adds	r5, #3
 80186a6:	449a      	add	sl, r3
 80186a8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80186aa:	4498      	add	r8, r3
 80186ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80186ae:	3b01      	subs	r3, #1
 80186b0:	930d      	str	r3, [sp, #52]	; 0x34
 80186b2:	e750      	b.n	8018556 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80186b4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80186b6:	449a      	add	sl, r3
 80186b8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80186ba:	4498      	add	r8, r3
 80186bc:	9b07      	ldr	r3, [sp, #28]
 80186be:	3b01      	subs	r3, #1
 80186c0:	9307      	str	r3, [sp, #28]
 80186c2:	9b08      	ldr	r3, [sp, #32]
 80186c4:	3303      	adds	r3, #3
 80186c6:	9308      	str	r3, [sp, #32]
 80186c8:	e726      	b.n	8018518 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80186ca:	d026      	beq.n	801871a <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80186cc:	9b07      	ldr	r3, [sp, #28]
 80186ce:	982b      	ldr	r0, [sp, #172]	; 0xac
 80186d0:	3b01      	subs	r3, #1
 80186d2:	fb00 a003 	mla	r0, r0, r3, sl
 80186d6:	1400      	asrs	r0, r0, #16
 80186d8:	f53f af3a 	bmi.w	8018550 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80186dc:	3901      	subs	r1, #1
 80186de:	4288      	cmp	r0, r1
 80186e0:	f6bf af36 	bge.w	8018550 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80186e4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80186e6:	fb01 8303 	mla	r3, r1, r3, r8
 80186ea:	141b      	asrs	r3, r3, #16
 80186ec:	f53f af30 	bmi.w	8018550 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80186f0:	3a01      	subs	r2, #1
 80186f2:	4293      	cmp	r3, r2
 80186f4:	f6bf af2c 	bge.w	8018550 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80186f8:	9b08      	ldr	r3, [sp, #32]
 80186fa:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80186fe:	1cdd      	adds	r5, r3, #3
 8018700:	f8bd e030 	ldrh.w	lr, [sp, #48]	; 0x30
 8018704:	f1bc 0f00 	cmp.w	ip, #0
 8018708:	dc5f      	bgt.n	80187ca <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30a>
 801870a:	9b07      	ldr	r3, [sp, #28]
 801870c:	9a08      	ldr	r2, [sp, #32]
 801870e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018712:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8018716:	441a      	add	r2, r3
 8018718:	9208      	str	r2, [sp, #32]
 801871a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801871c:	2b00      	cmp	r3, #0
 801871e:	f340 80e9 	ble.w	80188f4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 8018722:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018726:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018728:	ee30 0a04 	vadd.f32	s0, s0, s8
 801872c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018730:	eef0 6a62 	vmov.f32	s13, s5
 8018734:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018738:	ee31 1a05 	vadd.f32	s2, s2, s10
 801873c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018740:	ee16 aa90 	vmov	sl, s13
 8018744:	eef0 6a43 	vmov.f32	s13, s6
 8018748:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801874c:	ee16 8a90 	vmov	r8, s13
 8018750:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018754:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018758:	ee77 2a62 	vsub.f32	s5, s14, s5
 801875c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018760:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018764:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018768:	ee12 2a90 	vmov	r2, s5
 801876c:	eef0 2a47 	vmov.f32	s5, s14
 8018770:	fb92 f3f3 	sdiv	r3, r2, r3
 8018774:	ee13 2a10 	vmov	r2, s6
 8018778:	932b      	str	r3, [sp, #172]	; 0xac
 801877a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801877c:	eeb0 3a67 	vmov.f32	s6, s15
 8018780:	fb92 f3f3 	sdiv	r3, r2, r3
 8018784:	932c      	str	r3, [sp, #176]	; 0xb0
 8018786:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018788:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801878a:	3b01      	subs	r3, #1
 801878c:	930b      	str	r3, [sp, #44]	; 0x2c
 801878e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018790:	bf08      	it	eq
 8018792:	4613      	moveq	r3, r2
 8018794:	9307      	str	r3, [sp, #28]
 8018796:	e6b1      	b.n	80184fc <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018798:	1c47      	adds	r7, r0, #1
 801879a:	d482      	bmi.n	80186a2 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801879c:	42bb      	cmp	r3, r7
 801879e:	db80      	blt.n	80186a2 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80187a0:	1c67      	adds	r7, r4, #1
 80187a2:	f53f af7e 	bmi.w	80186a2 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80187a6:	42be      	cmp	r6, r7
 80187a8:	f6ff af7b 	blt.w	80186a2 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80187ac:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80187ae:	b236      	sxth	r6, r6
 80187b0:	9001      	str	r0, [sp, #4]
 80187b2:	b21b      	sxth	r3, r3
 80187b4:	9600      	str	r6, [sp, #0]
 80187b6:	981d      	ldr	r0, [sp, #116]	; 0x74
 80187b8:	e9cd 1704 	strd	r1, r7, [sp, #16]
 80187bc:	e9cd 4202 	strd	r4, r2, [sp, #8]
 80187c0:	4629      	mov	r1, r5
 80187c2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80187c4:	f7ff fd82 	bl	80182cc <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh>
 80187c8:	e76b      	b.n	80186a2 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80187ca:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80187cc:	ea4f 402a 	mov.w	r0, sl, asr #16
 80187d0:	f3c8 3203 	ubfx	r2, r8, #12, #4
 80187d4:	f3ca 3303 	ubfx	r3, sl, #12, #4
 80187d8:	f9b1 7008 	ldrsh.w	r7, [r1, #8]
 80187dc:	ea4f 4128 	mov.w	r1, r8, asr #16
 80187e0:	fb07 0101 	mla	r1, r7, r1, r0
 80187e4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80187e6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80187ea:	1844      	adds	r4, r0, r1
 80187ec:	5c40      	ldrb	r0, [r0, r1]
 80187ee:	78a6      	ldrb	r6, [r4, #2]
 80187f0:	7861      	ldrb	r1, [r4, #1]
 80187f2:	960f      	str	r6, [sp, #60]	; 0x3c
 80187f4:	78e6      	ldrb	r6, [r4, #3]
 80187f6:	910d      	str	r1, [sp, #52]	; 0x34
 80187f8:	9610      	str	r6, [sp, #64]	; 0x40
 80187fa:	f894 9004 	ldrb.w	r9, [r4, #4]
 80187fe:	f894 b005 	ldrb.w	fp, [r4, #5]
 8018802:	b192      	cbz	r2, 801882a <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36a>
 8018804:	f06f 0604 	mvn.w	r6, #4
 8018808:	2103      	movs	r1, #3
 801880a:	3405      	adds	r4, #5
 801880c:	fb17 6701 	smlabb	r7, r7, r1, r6
 8018810:	19e6      	adds	r6, r4, r7
 8018812:	5de4      	ldrb	r4, [r4, r7]
 8018814:	9417      	str	r4, [sp, #92]	; 0x5c
 8018816:	7874      	ldrb	r4, [r6, #1]
 8018818:	9419      	str	r4, [sp, #100]	; 0x64
 801881a:	78b4      	ldrb	r4, [r6, #2]
 801881c:	941b      	str	r4, [sp, #108]	; 0x6c
 801881e:	78f4      	ldrb	r4, [r6, #3]
 8018820:	9418      	str	r4, [sp, #96]	; 0x60
 8018822:	7934      	ldrb	r4, [r6, #4]
 8018824:	941a      	str	r4, [sp, #104]	; 0x68
 8018826:	7974      	ldrb	r4, [r6, #5]
 8018828:	941c      	str	r4, [sp, #112]	; 0x70
 801882a:	b29b      	uxth	r3, r3
 801882c:	9f10      	ldr	r7, [sp, #64]	; 0x40
 801882e:	b292      	uxth	r2, r2
 8018830:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018832:	3503      	adds	r5, #3
 8018834:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018838:	fb03 f402 	mul.w	r4, r3, r2
 801883c:	011b      	lsls	r3, r3, #4
 801883e:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 8018842:	f5c3 7680 	rsb	r6, r3, #256	; 0x100
 8018846:	1b1b      	subs	r3, r3, r4
 8018848:	b292      	uxth	r2, r2
 801884a:	b29b      	uxth	r3, r3
 801884c:	1ab6      	subs	r6, r6, r2
 801884e:	435f      	muls	r7, r3
 8018850:	b2b6      	uxth	r6, r6
 8018852:	fb03 f909 	mul.w	r9, r3, r9
 8018856:	fb03 fb0b 	mul.w	fp, r3, fp
 801885a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801885c:	fb06 7000 	mla	r0, r6, r0, r7
 8018860:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8018862:	fb06 bb03 	mla	fp, r6, r3, fp
 8018866:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8018868:	fb02 0007 	mla	r0, r2, r7, r0
 801886c:	9f18      	ldr	r7, [sp, #96]	; 0x60
 801886e:	fb02 bb03 	mla	fp, r2, r3, fp
 8018872:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018874:	fb04 0007 	mla	r0, r4, r7, r0
 8018878:	f815 7c06 	ldrb.w	r7, [r5, #-6]
 801887c:	fb17 f701 	smulbb	r7, r7, r1
 8018880:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018884:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018886:	fb00 700e 	mla	r0, r0, lr, r7
 801888a:	fb06 9101 	mla	r1, r6, r1, r9
 801888e:	b280      	uxth	r0, r0
 8018890:	1c47      	adds	r7, r0, #1
 8018892:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8018896:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018898:	1200      	asrs	r0, r0, #8
 801889a:	f805 0c06 	strb.w	r0, [r5, #-6]
 801889e:	9819      	ldr	r0, [sp, #100]	; 0x64
 80188a0:	fb02 1100 	mla	r1, r2, r0, r1
 80188a4:	981a      	ldr	r0, [sp, #104]	; 0x68
 80188a6:	fb04 1100 	mla	r1, r4, r0, r1
 80188aa:	f815 0c05 	ldrb.w	r0, [r5, #-5]
 80188ae:	fb04 b403 	mla	r4, r4, r3, fp
 80188b2:	f815 3c04 	ldrb.w	r3, [r5, #-4]
 80188b6:	fb10 f007 	smulbb	r0, r0, r7
 80188ba:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80188be:	fb13 f307 	smulbb	r3, r3, r7
 80188c2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80188c6:	fb01 010e 	mla	r1, r1, lr, r0
 80188ca:	fb04 340e 	mla	r4, r4, lr, r3
 80188ce:	b289      	uxth	r1, r1
 80188d0:	b2a4      	uxth	r4, r4
 80188d2:	1c48      	adds	r0, r1, #1
 80188d4:	1c63      	adds	r3, r4, #1
 80188d6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80188da:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80188de:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80188e0:	1209      	asrs	r1, r1, #8
 80188e2:	1224      	asrs	r4, r4, #8
 80188e4:	449a      	add	sl, r3
 80188e6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80188e8:	f805 1c05 	strb.w	r1, [r5, #-5]
 80188ec:	f805 4c04 	strb.w	r4, [r5, #-4]
 80188f0:	4498      	add	r8, r3
 80188f2:	e707      	b.n	8018704 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 80188f4:	b01f      	add	sp, #124	; 0x7c
 80188f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080188fa <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh>:
 80188fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188fe:	b087      	sub	sp, #28
 8018900:	780d      	ldrb	r5, [r1, #0]
 8018902:	784c      	ldrb	r4, [r1, #1]
 8018904:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8018908:	f9bd 7040 	ldrsh.w	r7, [sp, #64]	; 0x40
 801890c:	9004      	str	r0, [sp, #16]
 801890e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8018912:	e9dd b611 	ldrd	fp, r6, [sp, #68]	; 0x44
 8018916:	9005      	str	r0, [sp, #20]
 8018918:	fb06 bc03 	mla	ip, r6, r3, fp
 801891c:	2e00      	cmp	r6, #0
 801891e:	7888      	ldrb	r0, [r1, #2]
 8018920:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018924:	eb02 090c 	add.w	r9, r2, ip
 8018928:	f2c0 8084 	blt.w	8018a34 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x13a>
 801892c:	42b7      	cmp	r7, r6
 801892e:	f340 8081 	ble.w	8018a34 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x13a>
 8018932:	f1bb 0f00 	cmp.w	fp, #0
 8018936:	db79      	blt.n	8018a2c <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x132>
 8018938:	455b      	cmp	r3, fp
 801893a:	dd77      	ble.n	8018a2c <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x132>
 801893c:	f812 200c 	ldrb.w	r2, [r2, ip]
 8018940:	9201      	str	r2, [sp, #4]
 8018942:	f899 2001 	ldrb.w	r2, [r9, #1]
 8018946:	9202      	str	r2, [sp, #8]
 8018948:	f899 2002 	ldrb.w	r2, [r9, #2]
 801894c:	9203      	str	r2, [sp, #12]
 801894e:	f11b 0201 	adds.w	r2, fp, #1
 8018952:	d476      	bmi.n	8018a42 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x148>
 8018954:	4293      	cmp	r3, r2
 8018956:	dd74      	ble.n	8018a42 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x148>
 8018958:	9a04      	ldr	r2, [sp, #16]
 801895a:	2a00      	cmp	r2, #0
 801895c:	d071      	beq.n	8018a42 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x148>
 801895e:	f899 8003 	ldrb.w	r8, [r9, #3]
 8018962:	f899 c004 	ldrb.w	ip, [r9, #4]
 8018966:	f899 a005 	ldrb.w	sl, [r9, #5]
 801896a:	3601      	adds	r6, #1
 801896c:	d471      	bmi.n	8018a52 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x158>
 801896e:	42b7      	cmp	r7, r6
 8018970:	dd6f      	ble.n	8018a52 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x158>
 8018972:	9a05      	ldr	r2, [sp, #20]
 8018974:	2a00      	cmp	r2, #0
 8018976:	d06c      	beq.n	8018a52 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x158>
 8018978:	f1bb 0f00 	cmp.w	fp, #0
 801897c:	db65      	blt.n	8018a4a <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x150>
 801897e:	455b      	cmp	r3, fp
 8018980:	dd63      	ble.n	8018a4a <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x150>
 8018982:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8018986:	f819 e002 	ldrb.w	lr, [r9, r2]
 801898a:	2203      	movs	r2, #3
 801898c:	fb03 9602 	mla	r6, r3, r2, r9
 8018990:	7877      	ldrb	r7, [r6, #1]
 8018992:	78b6      	ldrb	r6, [r6, #2]
 8018994:	f11b 0b01 	adds.w	fp, fp, #1
 8018998:	d40c      	bmi.n	80189b4 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xba>
 801899a:	455b      	cmp	r3, fp
 801899c:	dd0a      	ble.n	80189b4 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xba>
 801899e:	9a04      	ldr	r2, [sp, #16]
 80189a0:	b142      	cbz	r2, 80189b4 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xba>
 80189a2:	2203      	movs	r2, #3
 80189a4:	fb13 2002 	smlabb	r0, r3, r2, r2
 80189a8:	f819 5000 	ldrb.w	r5, [r9, r0]
 80189ac:	fb03 9002 	mla	r0, r3, r2, r9
 80189b0:	7904      	ldrb	r4, [r0, #4]
 80189b2:	7940      	ldrb	r0, [r0, #5]
 80189b4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80189b8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80189bc:	fb03 fb02 	mul.w	fp, r3, r2
 80189c0:	011b      	lsls	r3, r3, #4
 80189c2:	ebcb 1202 	rsb	r2, fp, r2, lsl #4
 80189c6:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 80189ca:	eba3 030b 	sub.w	r3, r3, fp
 80189ce:	b292      	uxth	r2, r2
 80189d0:	b29b      	uxth	r3, r3
 80189d2:	eba9 0902 	sub.w	r9, r9, r2
 80189d6:	9304      	str	r3, [sp, #16]
 80189d8:	fa1f f989 	uxth.w	r9, r9
 80189dc:	fb03 f808 	mul.w	r8, r3, r8
 80189e0:	9b01      	ldr	r3, [sp, #4]
 80189e2:	fb09 8803 	mla	r8, r9, r3, r8
 80189e6:	9b04      	ldr	r3, [sp, #16]
 80189e8:	fb03 fc0c 	mul.w	ip, r3, ip
 80189ec:	9b02      	ldr	r3, [sp, #8]
 80189ee:	fb02 880e 	mla	r8, r2, lr, r8
 80189f2:	fb09 cc03 	mla	ip, r9, r3, ip
 80189f6:	9b04      	ldr	r3, [sp, #16]
 80189f8:	fb0b 8805 	mla	r8, fp, r5, r8
 80189fc:	fb02 c707 	mla	r7, r2, r7, ip
 8018a00:	fb03 f30a 	mul.w	r3, r3, sl
 8018a04:	ea4f 2828 	mov.w	r8, r8, asr #8
 8018a08:	fb0b 7404 	mla	r4, fp, r4, r7
 8018a0c:	f881 8000 	strb.w	r8, [r1]
 8018a10:	1224      	asrs	r4, r4, #8
 8018a12:	704c      	strb	r4, [r1, #1]
 8018a14:	9c03      	ldr	r4, [sp, #12]
 8018a16:	fb09 3904 	mla	r9, r9, r4, r3
 8018a1a:	fb02 9206 	mla	r2, r2, r6, r9
 8018a1e:	fb0b 2000 	mla	r0, fp, r0, r2
 8018a22:	1200      	asrs	r0, r0, #8
 8018a24:	7088      	strb	r0, [r1, #2]
 8018a26:	b007      	add	sp, #28
 8018a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a2c:	e9cd 4002 	strd	r4, r0, [sp, #8]
 8018a30:	9501      	str	r5, [sp, #4]
 8018a32:	e78c      	b.n	801894e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x54>
 8018a34:	4682      	mov	sl, r0
 8018a36:	46a4      	mov	ip, r4
 8018a38:	46a8      	mov	r8, r5
 8018a3a:	9501      	str	r5, [sp, #4]
 8018a3c:	e9cd 4002 	strd	r4, r0, [sp, #8]
 8018a40:	e793      	b.n	801896a <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x70>
 8018a42:	4682      	mov	sl, r0
 8018a44:	46a4      	mov	ip, r4
 8018a46:	46a8      	mov	r8, r5
 8018a48:	e78f      	b.n	801896a <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x70>
 8018a4a:	4606      	mov	r6, r0
 8018a4c:	4627      	mov	r7, r4
 8018a4e:	46ae      	mov	lr, r5
 8018a50:	e7a0      	b.n	8018994 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x9a>
 8018a52:	4606      	mov	r6, r0
 8018a54:	4627      	mov	r7, r4
 8018a56:	46ae      	mov	lr, r5
 8018a58:	e7ac      	b.n	80189b4 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xba>

08018a5a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018a5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a5e:	b09b      	sub	sp, #108	; 0x6c
 8018a60:	920b      	str	r2, [sp, #44]	; 0x2c
 8018a62:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018a64:	9019      	str	r0, [sp, #100]	; 0x64
 8018a66:	9109      	str	r1, [sp, #36]	; 0x24
 8018a68:	6850      	ldr	r0, [r2, #4]
 8018a6a:	9306      	str	r3, [sp, #24]
 8018a6c:	6812      	ldr	r2, [r2, #0]
 8018a6e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8018a72:	e9dd b425 	ldrd	fp, r4, [sp, #148]	; 0x94
 8018a76:	fb00 1303 	mla	r3, r0, r3, r1
 8018a7a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8018a7e:	18d3      	adds	r3, r2, r3
 8018a80:	9307      	str	r3, [sp, #28]
 8018a82:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018a84:	681b      	ldr	r3, [r3, #0]
 8018a86:	9308      	str	r3, [sp, #32]
 8018a88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a8a:	2b00      	cmp	r3, #0
 8018a8c:	dc03      	bgt.n	8018a96 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018a8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018a90:	2b00      	cmp	r3, #0
 8018a92:	f340 81ab 	ble.w	8018dec <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8018a96:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018a98:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018a9c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018aa0:	1e48      	subs	r0, r1, #1
 8018aa2:	1e55      	subs	r5, r2, #1
 8018aa4:	9b06      	ldr	r3, [sp, #24]
 8018aa6:	2b00      	cmp	r3, #0
 8018aa8:	f340 80b1 	ble.w	8018c0e <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8018aac:	ea5f 462b 	movs.w	r6, fp, asr #16
 8018ab0:	ea4f 4324 	mov.w	r3, r4, asr #16
 8018ab4:	d406      	bmi.n	8018ac4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8018ab6:	4286      	cmp	r6, r0
 8018ab8:	da04      	bge.n	8018ac4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8018aba:	2b00      	cmp	r3, #0
 8018abc:	db02      	blt.n	8018ac4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8018abe:	42ab      	cmp	r3, r5
 8018ac0:	f2c0 80a6 	blt.w	8018c10 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8018ac4:	3601      	adds	r6, #1
 8018ac6:	f100 8097 	bmi.w	8018bf8 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8018aca:	42b1      	cmp	r1, r6
 8018acc:	f2c0 8094 	blt.w	8018bf8 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8018ad0:	3301      	adds	r3, #1
 8018ad2:	f100 8091 	bmi.w	8018bf8 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8018ad6:	429a      	cmp	r2, r3
 8018ad8:	f2c0 808e 	blt.w	8018bf8 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8018adc:	9b06      	ldr	r3, [sp, #24]
 8018ade:	9e07      	ldr	r6, [sp, #28]
 8018ae0:	930a      	str	r3, [sp, #40]	; 0x28
 8018ae2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018ae4:	2b00      	cmp	r3, #0
 8018ae6:	f340 80b0 	ble.w	8018c4a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018aea:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8018aec:	1425      	asrs	r5, r4, #16
 8018aee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018af0:	f3cb 3203 	ubfx	r2, fp, #12, #4
 8018af4:	68c7      	ldr	r7, [r0, #12]
 8018af6:	ea5f 402b 	movs.w	r0, fp, asr #16
 8018afa:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8018afe:	689b      	ldr	r3, [r3, #8]
 8018b00:	f100 80ea 	bmi.w	8018cd8 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8018b04:	f103 3cff 	add.w	ip, r3, #4294967295
 8018b08:	4560      	cmp	r0, ip
 8018b0a:	f280 80e5 	bge.w	8018cd8 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8018b0e:	2d00      	cmp	r5, #0
 8018b10:	f2c0 80e2 	blt.w	8018cd8 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8018b14:	f107 3cff 	add.w	ip, r7, #4294967295
 8018b18:	4565      	cmp	r5, ip
 8018b1a:	f280 80dd 	bge.w	8018cd8 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8018b1e:	b21b      	sxth	r3, r3
 8018b20:	fb05 0003 	mla	r0, r5, r3, r0
 8018b24:	9d08      	ldr	r5, [sp, #32]
 8018b26:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018b2a:	182f      	adds	r7, r5, r0
 8018b2c:	5c2d      	ldrb	r5, [r5, r0]
 8018b2e:	7878      	ldrb	r0, [r7, #1]
 8018b30:	f897 e002 	ldrb.w	lr, [r7, #2]
 8018b34:	900c      	str	r0, [sp, #48]	; 0x30
 8018b36:	f897 9003 	ldrb.w	r9, [r7, #3]
 8018b3a:	f897 8004 	ldrb.w	r8, [r7, #4]
 8018b3e:	f897 a005 	ldrb.w	sl, [r7, #5]
 8018b42:	b1c9      	cbz	r1, 8018b78 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8018b44:	f04f 0c03 	mov.w	ip, #3
 8018b48:	f06f 0004 	mvn.w	r0, #4
 8018b4c:	3705      	adds	r7, #5
 8018b4e:	fb13 030c 	smlabb	r3, r3, ip, r0
 8018b52:	eb07 0c03 	add.w	ip, r7, r3
 8018b56:	5cfb      	ldrb	r3, [r7, r3]
 8018b58:	930d      	str	r3, [sp, #52]	; 0x34
 8018b5a:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8018b5e:	930f      	str	r3, [sp, #60]	; 0x3c
 8018b60:	f89c 3002 	ldrb.w	r3, [ip, #2]
 8018b64:	9311      	str	r3, [sp, #68]	; 0x44
 8018b66:	f89c 3003 	ldrb.w	r3, [ip, #3]
 8018b6a:	930e      	str	r3, [sp, #56]	; 0x38
 8018b6c:	f89c 3004 	ldrb.w	r3, [ip, #4]
 8018b70:	9310      	str	r3, [sp, #64]	; 0x40
 8018b72:	f89c 3005 	ldrb.w	r3, [ip, #5]
 8018b76:	9312      	str	r3, [sp, #72]	; 0x48
 8018b78:	b292      	uxth	r2, r2
 8018b7a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018b7c:	b289      	uxth	r1, r1
 8018b7e:	fb02 f301 	mul.w	r3, r2, r1
 8018b82:	0112      	lsls	r2, r2, #4
 8018b84:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8018b88:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8018b8c:	1ad2      	subs	r2, r2, r3
 8018b8e:	b289      	uxth	r1, r1
 8018b90:	b292      	uxth	r2, r2
 8018b92:	1a7f      	subs	r7, r7, r1
 8018b94:	fb02 f909 	mul.w	r9, r2, r9
 8018b98:	b2bf      	uxth	r7, r7
 8018b9a:	fb02 f808 	mul.w	r8, r2, r8
 8018b9e:	fb02 fa0a 	mul.w	sl, r2, sl
 8018ba2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018ba4:	fb07 9905 	mla	r9, r7, r5, r9
 8018ba8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018baa:	fb07 8800 	mla	r8, r7, r0, r8
 8018bae:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018bb0:	fb07 aa0e 	mla	sl, r7, lr, sl
 8018bb4:	fb01 9905 	mla	r9, r1, r5, r9
 8018bb8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018bba:	fb01 8800 	mla	r8, r1, r0, r8
 8018bbe:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018bc0:	fb01 a102 	mla	r1, r1, r2, sl
 8018bc4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018bc6:	fb03 9905 	mla	r9, r3, r5, r9
 8018bca:	fb03 8800 	mla	r8, r3, r0, r8
 8018bce:	fb03 1302 	mla	r3, r3, r2, r1
 8018bd2:	ea4f 2929 	mov.w	r9, r9, asr #8
 8018bd6:	ea4f 2828 	mov.w	r8, r8, asr #8
 8018bda:	121b      	asrs	r3, r3, #8
 8018bdc:	f886 9000 	strb.w	r9, [r6]
 8018be0:	f886 8001 	strb.w	r8, [r6, #1]
 8018be4:	70b3      	strb	r3, [r6, #2]
 8018be6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018be8:	3603      	adds	r6, #3
 8018bea:	449b      	add	fp, r3
 8018bec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018bee:	441c      	add	r4, r3
 8018bf0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018bf2:	3b01      	subs	r3, #1
 8018bf4:	930a      	str	r3, [sp, #40]	; 0x28
 8018bf6:	e774      	b.n	8018ae2 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018bf8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018bfa:	449b      	add	fp, r3
 8018bfc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018bfe:	441c      	add	r4, r3
 8018c00:	9b06      	ldr	r3, [sp, #24]
 8018c02:	3b01      	subs	r3, #1
 8018c04:	9306      	str	r3, [sp, #24]
 8018c06:	9b07      	ldr	r3, [sp, #28]
 8018c08:	3303      	adds	r3, #3
 8018c0a:	9307      	str	r3, [sp, #28]
 8018c0c:	e74a      	b.n	8018aa4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018c0e:	d024      	beq.n	8018c5a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018c10:	9b06      	ldr	r3, [sp, #24]
 8018c12:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018c14:	3b01      	subs	r3, #1
 8018c16:	fb00 b003 	mla	r0, r0, r3, fp
 8018c1a:	1400      	asrs	r0, r0, #16
 8018c1c:	f53f af5e 	bmi.w	8018adc <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8018c20:	3901      	subs	r1, #1
 8018c22:	4288      	cmp	r0, r1
 8018c24:	f6bf af5a 	bge.w	8018adc <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8018c28:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018c2a:	fb01 4303 	mla	r3, r1, r3, r4
 8018c2e:	141b      	asrs	r3, r3, #16
 8018c30:	f53f af54 	bmi.w	8018adc <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8018c34:	3a01      	subs	r2, #1
 8018c36:	4293      	cmp	r3, r2
 8018c38:	f6bf af50 	bge.w	8018adc <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8018c3c:	9b07      	ldr	r3, [sp, #28]
 8018c3e:	f8dd e018 	ldr.w	lr, [sp, #24]
 8018c42:	1cde      	adds	r6, r3, #3
 8018c44:	f1be 0f00 	cmp.w	lr, #0
 8018c48:	dc5f      	bgt.n	8018d0a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8018c4a:	9b06      	ldr	r3, [sp, #24]
 8018c4c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018c50:	9b07      	ldr	r3, [sp, #28]
 8018c52:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8018c56:	4423      	add	r3, r4
 8018c58:	9307      	str	r3, [sp, #28]
 8018c5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c5c:	2b00      	cmp	r3, #0
 8018c5e:	f340 80c5 	ble.w	8018dec <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8018c62:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018c66:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018c68:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018c6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018c70:	eef0 6a62 	vmov.f32	s13, s5
 8018c74:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018c78:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018c7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c80:	ee16 ba90 	vmov	fp, s13
 8018c84:	eef0 6a43 	vmov.f32	s13, s6
 8018c88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c8c:	ee16 4a90 	vmov	r4, s13
 8018c90:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018c94:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018c98:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018c9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ca0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ca4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ca8:	ee12 2a90 	vmov	r2, s5
 8018cac:	eef0 2a47 	vmov.f32	s5, s14
 8018cb0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018cb4:	ee13 2a10 	vmov	r2, s6
 8018cb8:	9327      	str	r3, [sp, #156]	; 0x9c
 8018cba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018cbc:	eeb0 3a67 	vmov.f32	s6, s15
 8018cc0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018cc4:	9328      	str	r3, [sp, #160]	; 0xa0
 8018cc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018cc8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018cca:	3b01      	subs	r3, #1
 8018ccc:	9309      	str	r3, [sp, #36]	; 0x24
 8018cce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018cd0:	bf08      	it	eq
 8018cd2:	4613      	moveq	r3, r2
 8018cd4:	9306      	str	r3, [sp, #24]
 8018cd6:	e6d7      	b.n	8018a88 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8018cd8:	f110 0c01 	adds.w	ip, r0, #1
 8018cdc:	d483      	bmi.n	8018be6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8018cde:	4563      	cmp	r3, ip
 8018ce0:	db81      	blt.n	8018be6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8018ce2:	f115 0c01 	adds.w	ip, r5, #1
 8018ce6:	f53f af7e 	bmi.w	8018be6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8018cea:	4567      	cmp	r7, ip
 8018cec:	f6ff af7b 	blt.w	8018be6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8018cf0:	b23f      	sxth	r7, r7
 8018cf2:	b21b      	sxth	r3, r3
 8018cf4:	9700      	str	r7, [sp, #0]
 8018cf6:	e9cd 2103 	strd	r2, r1, [sp, #12]
 8018cfa:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8018cfe:	9a08      	ldr	r2, [sp, #32]
 8018d00:	4631      	mov	r1, r6
 8018d02:	9819      	ldr	r0, [sp, #100]	; 0x64
 8018d04:	f7ff fdf9 	bl	80188fa <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh>
 8018d08:	e76d      	b.n	8018be6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8018d0a:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8018d0c:	ea4f 402b 	mov.w	r0, fp, asr #16
 8018d10:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8018d14:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018d18:	f9b1 c008 	ldrsh.w	ip, [r1, #8]
 8018d1c:	1421      	asrs	r1, r4, #16
 8018d1e:	930a      	str	r3, [sp, #40]	; 0x28
 8018d20:	fb0c 0101 	mla	r1, ip, r1, r0
 8018d24:	9808      	ldr	r0, [sp, #32]
 8018d26:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8018d2a:	1845      	adds	r5, r0, r1
 8018d2c:	5c40      	ldrb	r0, [r0, r1]
 8018d2e:	796f      	ldrb	r7, [r5, #5]
 8018d30:	7869      	ldrb	r1, [r5, #1]
 8018d32:	f895 8002 	ldrb.w	r8, [r5, #2]
 8018d36:	f895 a003 	ldrb.w	sl, [r5, #3]
 8018d3a:	f895 9004 	ldrb.w	r9, [r5, #4]
 8018d3e:	970c      	str	r7, [sp, #48]	; 0x30
 8018d40:	b1a2      	cbz	r2, 8018d6c <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 8018d42:	2703      	movs	r7, #3
 8018d44:	f06f 0304 	mvn.w	r3, #4
 8018d48:	3505      	adds	r5, #5
 8018d4a:	fb1c 3c07 	smlabb	ip, ip, r7, r3
 8018d4e:	eb05 070c 	add.w	r7, r5, ip
 8018d52:	f815 500c 	ldrb.w	r5, [r5, ip]
 8018d56:	9513      	str	r5, [sp, #76]	; 0x4c
 8018d58:	787d      	ldrb	r5, [r7, #1]
 8018d5a:	9515      	str	r5, [sp, #84]	; 0x54
 8018d5c:	78bd      	ldrb	r5, [r7, #2]
 8018d5e:	9517      	str	r5, [sp, #92]	; 0x5c
 8018d60:	78fd      	ldrb	r5, [r7, #3]
 8018d62:	9514      	str	r5, [sp, #80]	; 0x50
 8018d64:	793d      	ldrb	r5, [r7, #4]
 8018d66:	9516      	str	r5, [sp, #88]	; 0x58
 8018d68:	797d      	ldrb	r5, [r7, #5]
 8018d6a:	9518      	str	r5, [sp, #96]	; 0x60
 8018d6c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8018d70:	b292      	uxth	r2, r2
 8018d72:	3603      	adds	r6, #3
 8018d74:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018d78:	fb03 f502 	mul.w	r5, r3, r2
 8018d7c:	011b      	lsls	r3, r3, #4
 8018d7e:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 8018d82:	f5c3 7780 	rsb	r7, r3, #256	; 0x100
 8018d86:	1b5b      	subs	r3, r3, r5
 8018d88:	b292      	uxth	r2, r2
 8018d8a:	b29b      	uxth	r3, r3
 8018d8c:	1abf      	subs	r7, r7, r2
 8018d8e:	fb03 f909 	mul.w	r9, r3, r9
 8018d92:	b2bf      	uxth	r7, r7
 8018d94:	fb03 fa0a 	mul.w	sl, r3, sl
 8018d98:	fb07 9901 	mla	r9, r7, r1, r9
 8018d9c:	9915      	ldr	r1, [sp, #84]	; 0x54
 8018d9e:	fb07 aa00 	mla	sl, r7, r0, sl
 8018da2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018da4:	fb02 9901 	mla	r9, r2, r1, r9
 8018da8:	9916      	ldr	r1, [sp, #88]	; 0x58
 8018daa:	fb02 aa00 	mla	sl, r2, r0, sl
 8018dae:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018db0:	fb05 9901 	mla	r9, r5, r1, r9
 8018db4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018db6:	fb05 aa00 	mla	sl, r5, r0, sl
 8018dba:	434b      	muls	r3, r1
 8018dbc:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8018dbe:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8018dc2:	fb07 3308 	mla	r3, r7, r8, r3
 8018dc6:	ea4f 2929 	mov.w	r9, r9, asr #8
 8018dca:	f806 ac06 	strb.w	sl, [r6, #-6]
 8018dce:	fb02 3201 	mla	r2, r2, r1, r3
 8018dd2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018dd4:	f806 9c05 	strb.w	r9, [r6, #-5]
 8018dd8:	fb05 2503 	mla	r5, r5, r3, r2
 8018ddc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018dde:	122d      	asrs	r5, r5, #8
 8018de0:	449b      	add	fp, r3
 8018de2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018de4:	f806 5c04 	strb.w	r5, [r6, #-4]
 8018de8:	441c      	add	r4, r3
 8018dea:	e72b      	b.n	8018c44 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8018dec:	b01b      	add	sp, #108	; 0x6c
 8018dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018df2 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh>:
 8018df2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018df6:	b087      	sub	sp, #28
 8018df8:	e9dd 7511 	ldrd	r7, r5, [sp, #68]	; 0x44
 8018dfc:	f9bd 8040 	ldrsh.w	r8, [sp, #64]	; 0x40
 8018e00:	fb05 7003 	mla	r0, r5, r3, r7
 8018e04:	2d00      	cmp	r5, #0
 8018e06:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8018e0a:	f89d e050 	ldrb.w	lr, [sp, #80]	; 0x50
 8018e0e:	eb02 0c80 	add.w	ip, r2, r0, lsl #2
 8018e12:	f2c0 811f 	blt.w	8019054 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x262>
 8018e16:	45a8      	cmp	r8, r5
 8018e18:	f340 811c 	ble.w	8019054 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x262>
 8018e1c:	2f00      	cmp	r7, #0
 8018e1e:	f2c0 8117 	blt.w	8019050 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x25e>
 8018e22:	42bb      	cmp	r3, r7
 8018e24:	f340 8114 	ble.w	8019050 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x25e>
 8018e28:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
 8018e2c:	1c7a      	adds	r2, r7, #1
 8018e2e:	f100 8114 	bmi.w	801905a <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x268>
 8018e32:	4293      	cmp	r3, r2
 8018e34:	f340 8111 	ble.w	801905a <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x268>
 8018e38:	2c00      	cmp	r4, #0
 8018e3a:	f000 8110 	beq.w	801905e <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x26c>
 8018e3e:	f8dc 0004 	ldr.w	r0, [ip, #4]
 8018e42:	3501      	adds	r5, #1
 8018e44:	f100 810f 	bmi.w	8019066 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x274>
 8018e48:	45a8      	cmp	r8, r5
 8018e4a:	f340 810c 	ble.w	8019066 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x274>
 8018e4e:	f1be 0f00 	cmp.w	lr, #0
 8018e52:	f000 810b 	beq.w	801906c <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x27a>
 8018e56:	2f00      	cmp	r7, #0
 8018e58:	f2c0 8103 	blt.w	8019062 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x270>
 8018e5c:	42bb      	cmp	r3, r7
 8018e5e:	f340 8100 	ble.w	8019062 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x270>
 8018e62:	f85c 5023 	ldr.w	r5, [ip, r3, lsl #2]
 8018e66:	3701      	adds	r7, #1
 8018e68:	f100 8103 	bmi.w	8019072 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x280>
 8018e6c:	42bb      	cmp	r3, r7
 8018e6e:	f340 8100 	ble.w	8019072 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x280>
 8018e72:	2c00      	cmp	r4, #0
 8018e74:	f000 80ff 	beq.w	8019076 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x284>
 8018e78:	3301      	adds	r3, #1
 8018e7a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8018e7e:	fa1f fc84 	uxth.w	ip, r4
 8018e82:	fa1f fe8e 	uxth.w	lr, lr
 8018e86:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8018e8a:	fb0c f90e 	mul.w	r9, ip, lr
 8018e8e:	0e13      	lsrs	r3, r2, #24
 8018e90:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8018e94:	ebc9 1e0e 	rsb	lr, r9, lr, lsl #4
 8018e98:	9302      	str	r3, [sp, #8]
 8018e9a:	ebac 0709 	sub.w	r7, ip, r9
 8018e9e:	f5cc 7380 	rsb	r3, ip, #256	; 0x100
 8018ea2:	fa1f f48e 	uxth.w	r4, lr
 8018ea6:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8018eaa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018eae:	ea4f 6b10 	mov.w	fp, r0, lsr #24
 8018eb2:	fb0a fe0e 	mul.w	lr, sl, lr
 8018eb6:	1b1b      	subs	r3, r3, r4
 8018eb8:	fb0a f606 	mul.w	r6, sl, r6
 8018ebc:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8018ec0:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8018ec4:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8018ec8:	b29b      	uxth	r3, r3
 8018eca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018ece:	b2bf      	uxth	r7, r7
 8018ed0:	9301      	str	r3, [sp, #4]
 8018ed2:	44e6      	add	lr, ip
 8018ed4:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8018ed8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018edc:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8018ee0:	f00e 13ff 	and.w	r3, lr, #16711935	; 0xff00ff
 8018ee4:	9303      	str	r3, [sp, #12]
 8018ee6:	0a33      	lsrs	r3, r6, #8
 8018ee8:	f000 16ff 	and.w	r6, r0, #16711935	; 0xff00ff
 8018eec:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018ef0:	9304      	str	r3, [sp, #16]
 8018ef2:	fb0b f606 	mul.w	r6, fp, r6
 8018ef6:	fb0b f000 	mul.w	r0, fp, r0
 8018efa:	ea4f 2e16 	mov.w	lr, r6, lsr #8
 8018efe:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8018f02:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018f06:	44b6      	add	lr, r6
 8018f08:	f500 7680 	add.w	r6, r0, #256	; 0x100
 8018f0c:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 8018f10:	f005 16ff 	and.w	r6, r5, #16711935	; 0xff00ff
 8018f14:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8018f18:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018f1c:	fb08 f606 	mul.w	r6, r8, r6
 8018f20:	0a03      	lsrs	r3, r0, #8
 8018f22:	fb08 f505 	mul.w	r5, r8, r5
 8018f26:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018f2a:	0a30      	lsrs	r0, r6, #8
 8018f2c:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8018f30:	9305      	str	r3, [sp, #20]
 8018f32:	0e13      	lsrs	r3, r2, #24
 8018f34:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018f38:	fb0e fe07 	mul.w	lr, lr, r7
 8018f3c:	4430      	add	r0, r6
 8018f3e:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8018f42:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8018f46:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 8018f4a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018f4e:	0a00      	lsrs	r0, r0, #8
 8018f50:	435e      	muls	r6, r3
 8018f52:	0a2d      	lsrs	r5, r5, #8
 8018f54:	435a      	muls	r2, r3
 8018f56:	9b03      	ldr	r3, [sp, #12]
 8018f58:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 8018f5c:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8018f60:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018f64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018f68:	44b4      	add	ip, r6
 8018f6a:	f502 7680 	add.w	r6, r2, #256	; 0x100
 8018f6e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018f72:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 8018f76:	9e01      	ldr	r6, [sp, #4]
 8018f78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018f7c:	fb03 ee06 	mla	lr, r3, r6, lr
 8018f80:	9b04      	ldr	r3, [sp, #16]
 8018f82:	0a12      	lsrs	r2, r2, #8
 8018f84:	fb0c ee09 	mla	lr, ip, r9, lr
 8018f88:	f403 467f 	and.w	r6, r3, #65280	; 0xff00
 8018f8c:	9b05      	ldr	r3, [sp, #20]
 8018f8e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018f92:	fb00 ee04 	mla	lr, r0, r4, lr
 8018f96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018f9a:	f00e 10ff 	and.w	r0, lr, #16711935	; 0xff00ff
 8018f9e:	f403 4e7f 	and.w	lr, r3, #65280	; 0xff00
 8018fa2:	9b01      	ldr	r3, [sp, #4]
 8018fa4:	fb07 fe0e 	mul.w	lr, r7, lr
 8018fa8:	fb07 f70b 	mul.w	r7, r7, fp
 8018fac:	fb03 ee06 	mla	lr, r3, r6, lr
 8018fb0:	fb03 730a 	mla	r3, r3, sl, r7
 8018fb4:	fb09 e202 	mla	r2, r9, r2, lr
 8018fb8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8018fbc:	fb04 2e0e 	mla	lr, r4, lr, r2
 8018fc0:	f89d 2054 	ldrb.w	r2, [sp, #84]	; 0x54
 8018fc4:	fb04 3408 	mla	r4, r4, r8, r3
 8018fc8:	9b02      	ldr	r3, [sp, #8]
 8018fca:	b292      	uxth	r2, r2
 8018fcc:	fb09 4903 	mla	r9, r9, r3, r4
 8018fd0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018fd4:	f3c9 2907 	ubfx	r9, r9, #8, #8
 8018fd8:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018fdc:	fb09 f902 	mul.w	r9, r9, r2
 8018fe0:	ea40 0e0e 	orr.w	lr, r0, lr
 8018fe4:	f109 0301 	add.w	r3, r9, #1
 8018fe8:	fa5f f08e 	uxtb.w	r0, lr
 8018fec:	fb10 f002 	smulbb	r0, r0, r2
 8018ff0:	eb03 2919 	add.w	r9, r3, r9, lsr #8
 8018ff4:	780b      	ldrb	r3, [r1, #0]
 8018ff6:	ea6f 2919 	mvn.w	r9, r9, lsr #8
 8018ffa:	fa5f f989 	uxtb.w	r9, r9
 8018ffe:	fb03 0309 	mla	r3, r3, r9, r0
 8019002:	b29b      	uxth	r3, r3
 8019004:	1c58      	adds	r0, r3, #1
 8019006:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801900a:	7848      	ldrb	r0, [r1, #1]
 801900c:	fb10 f009 	smulbb	r0, r0, r9
 8019010:	121b      	asrs	r3, r3, #8
 8019012:	700b      	strb	r3, [r1, #0]
 8019014:	f3ce 2307 	ubfx	r3, lr, #8, #8
 8019018:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 801901c:	fb03 0302 	mla	r3, r3, r2, r0
 8019020:	b29b      	uxth	r3, r3
 8019022:	1c58      	adds	r0, r3, #1
 8019024:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8019028:	121b      	asrs	r3, r3, #8
 801902a:	704b      	strb	r3, [r1, #1]
 801902c:	788b      	ldrb	r3, [r1, #2]
 801902e:	fb13 f909 	smulbb	r9, r3, r9
 8019032:	fb0e 9e02 	mla	lr, lr, r2, r9
 8019036:	fa1f fe8e 	uxth.w	lr, lr
 801903a:	f10e 0301 	add.w	r3, lr, #1
 801903e:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 8019042:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8019046:	f881 e002 	strb.w	lr, [r1, #2]
 801904a:	b007      	add	sp, #28
 801904c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019050:	2600      	movs	r6, #0
 8019052:	e6eb      	b.n	8018e2c <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x3a>
 8019054:	2000      	movs	r0, #0
 8019056:	4606      	mov	r6, r0
 8019058:	e6f3      	b.n	8018e42 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x50>
 801905a:	2000      	movs	r0, #0
 801905c:	e6f1      	b.n	8018e42 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x50>
 801905e:	4620      	mov	r0, r4
 8019060:	e6ef      	b.n	8018e42 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x50>
 8019062:	2500      	movs	r5, #0
 8019064:	e6ff      	b.n	8018e66 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x74>
 8019066:	2200      	movs	r2, #0
 8019068:	4615      	mov	r5, r2
 801906a:	e708      	b.n	8018e7e <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8c>
 801906c:	4672      	mov	r2, lr
 801906e:	4675      	mov	r5, lr
 8019070:	e705      	b.n	8018e7e <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8c>
 8019072:	2200      	movs	r2, #0
 8019074:	e703      	b.n	8018e7e <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8c>
 8019076:	4622      	mov	r2, r4
 8019078:	e701      	b.n	8018e7e <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8c>

0801907a <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801907a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801907e:	b09d      	sub	sp, #116	; 0x74
 8019080:	9219      	str	r2, [sp, #100]	; 0x64
 8019082:	9307      	str	r3, [sp, #28]
 8019084:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019086:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801908a:	901b      	str	r0, [sp, #108]	; 0x6c
 801908c:	931a      	str	r3, [sp, #104]	; 0x68
 801908e:	6850      	ldr	r0, [r2, #4]
 8019090:	9117      	str	r1, [sp, #92]	; 0x5c
 8019092:	6812      	ldr	r2, [r2, #0]
 8019094:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8019098:	e9dd 5627 	ldrd	r5, r6, [sp, #156]	; 0x9c
 801909c:	fb00 1303 	mla	r3, r0, r3, r1
 80190a0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80190a4:	18d3      	adds	r3, r2, r3
 80190a6:	930a      	str	r3, [sp, #40]	; 0x28
 80190a8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80190aa:	681b      	ldr	r3, [r3, #0]
 80190ac:	9310      	str	r3, [sp, #64]	; 0x40
 80190ae:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80190b2:	930b      	str	r3, [sp, #44]	; 0x2c
 80190b4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80190b6:	2b00      	cmp	r3, #0
 80190b8:	dc03      	bgt.n	80190c2 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80190ba:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80190bc:	2b00      	cmp	r3, #0
 80190be:	f340 8368 	ble.w	8019792 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 80190c2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80190c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80190c8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80190cc:	1e48      	subs	r0, r1, #1
 80190ce:	1e57      	subs	r7, r2, #1
 80190d0:	9b07      	ldr	r3, [sp, #28]
 80190d2:	2b00      	cmp	r3, #0
 80190d4:	f340 8187 	ble.w	80193e6 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80190d8:	ea5f 4c25 	movs.w	ip, r5, asr #16
 80190dc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80190e0:	d406      	bmi.n	80190f0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80190e2:	4584      	cmp	ip, r0
 80190e4:	da04      	bge.n	80190f0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80190e6:	2b00      	cmp	r3, #0
 80190e8:	db02      	blt.n	80190f0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80190ea:	42bb      	cmp	r3, r7
 80190ec:	f2c0 817c 	blt.w	80193e8 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 80190f0:	f11c 0c01 	adds.w	ip, ip, #1
 80190f4:	f100 816c 	bmi.w	80193d0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80190f8:	4561      	cmp	r1, ip
 80190fa:	f2c0 8169 	blt.w	80193d0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80190fe:	3301      	adds	r3, #1
 8019100:	f100 8166 	bmi.w	80193d0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8019104:	429a      	cmp	r2, r3
 8019106:	f2c0 8163 	blt.w	80193d0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801910a:	9b07      	ldr	r3, [sp, #28]
 801910c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801910e:	9318      	str	r3, [sp, #96]	; 0x60
 8019110:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019112:	2b00      	cmp	r3, #0
 8019114:	f340 8186 	ble.w	8019424 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8019118:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801911a:	142a      	asrs	r2, r5, #16
 801911c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019120:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019124:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019128:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801912c:	f100 81cb 	bmi.w	80194c6 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 8019130:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019134:	4542      	cmp	r2, r8
 8019136:	f280 81c6 	bge.w	80194c6 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 801913a:	2800      	cmp	r0, #0
 801913c:	f2c0 81c3 	blt.w	80194c6 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 8019140:	f103 38ff 	add.w	r8, r3, #4294967295
 8019144:	4540      	cmp	r0, r8
 8019146:	f280 81be 	bge.w	80194c6 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 801914a:	fa0f f38e 	sxth.w	r3, lr
 801914e:	fb00 2203 	mla	r2, r0, r3, r2
 8019152:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019154:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 8019158:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 801915c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019160:	2900      	cmp	r1, #0
 8019162:	f000 81a6 	beq.w	80194b2 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8019166:	f8d8 0004 	ldr.w	r0, [r8, #4]
 801916a:	900c      	str	r0, [sp, #48]	; 0x30
 801916c:	0e00      	lsrs	r0, r0, #24
 801916e:	9013      	str	r0, [sp, #76]	; 0x4c
 8019170:	f1bc 0f00 	cmp.w	ip, #0
 8019174:	d00f      	beq.n	8019196 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019176:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801917a:	3b01      	subs	r3, #1
 801917c:	009b      	lsls	r3, r3, #2
 801917e:	3304      	adds	r3, #4
 8019180:	eb08 0003 	add.w	r0, r8, r3
 8019184:	f858 3003 	ldr.w	r3, [r8, r3]
 8019188:	9308      	str	r3, [sp, #32]
 801918a:	0e1b      	lsrs	r3, r3, #24
 801918c:	9311      	str	r3, [sp, #68]	; 0x44
 801918e:	6843      	ldr	r3, [r0, #4]
 8019190:	930d      	str	r3, [sp, #52]	; 0x34
 8019192:	0e1b      	lsrs	r3, r3, #24
 8019194:	9314      	str	r3, [sp, #80]	; 0x50
 8019196:	b289      	uxth	r1, r1
 8019198:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801919a:	fa1f fc8c 	uxth.w	ip, ip
 801919e:	0108      	lsls	r0, r1, #4
 80191a0:	fb01 f90c 	mul.w	r9, r1, ip
 80191a4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80191a8:	ebc9 1c0c 	rsb	ip, r9, ip, lsl #4
 80191ac:	eba0 0809 	sub.w	r8, r0, r9
 80191b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80191b2:	fa1f f18c 	uxth.w	r1, ip
 80191b6:	fa1f f888 	uxth.w	r8, r8
 80191ba:	1a5b      	subs	r3, r3, r1
 80191bc:	fb08 f000 	mul.w	r0, r8, r0
 80191c0:	b29b      	uxth	r3, r3
 80191c2:	fb03 000e 	mla	r0, r3, lr, r0
 80191c6:	fb01 0004 	mla	r0, r1, r4, r0
 80191ca:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80191cc:	fb09 0004 	mla	r0, r9, r4, r0
 80191d0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80191d4:	2800      	cmp	r0, #0
 80191d6:	f000 80f2 	beq.w	80193be <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80191da:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80191de:	d01b      	beq.n	8019218 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80191e0:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80191e4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80191e8:	fb0e fa0a 	mul.w	sl, lr, sl
 80191ec:	fb0e fe02 	mul.w	lr, lr, r2
 80191f0:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80191f4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80191f8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80191fc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019200:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019204:	4452      	add	r2, sl
 8019206:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801920a:	0a12      	lsrs	r2, r2, #8
 801920c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019210:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019214:	ea42 020c 	orr.w	r2, r2, ip
 8019218:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801921a:	2cff      	cmp	r4, #255	; 0xff
 801921c:	d021      	beq.n	8019262 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801921e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019220:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019224:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019226:	fb04 fb0b 	mul.w	fp, r4, fp
 801922a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801922c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019230:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019232:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019236:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801923a:	fb04 fa0a 	mul.w	sl, r4, sl
 801923e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019242:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019246:	44de      	add	lr, fp
 8019248:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801924c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019250:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019254:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019258:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801925c:	ea4e 040a 	orr.w	r4, lr, sl
 8019260:	940c      	str	r4, [sp, #48]	; 0x30
 8019262:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019264:	2cff      	cmp	r4, #255	; 0xff
 8019266:	d021      	beq.n	80192ac <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8019268:	9c08      	ldr	r4, [sp, #32]
 801926a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801926e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019270:	fb04 fb0b 	mul.w	fp, r4, fp
 8019274:	9c08      	ldr	r4, [sp, #32]
 8019276:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801927a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801927c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019280:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019284:	fb04 fa0a 	mul.w	sl, r4, sl
 8019288:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801928c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019290:	44de      	add	lr, fp
 8019292:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019296:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801929a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801929e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80192a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80192a6:	ea4e 040a 	orr.w	r4, lr, sl
 80192aa:	9408      	str	r4, [sp, #32]
 80192ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80192ae:	2cff      	cmp	r4, #255	; 0xff
 80192b0:	d021      	beq.n	80192f6 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80192b2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80192b4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80192b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80192ba:	fb04 fb0b 	mul.w	fp, r4, fp
 80192be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80192c0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80192c4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80192c6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80192ca:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80192ce:	fb04 fa0a 	mul.w	sl, r4, sl
 80192d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80192d6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80192da:	44de      	add	lr, fp
 80192dc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80192e0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80192e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80192e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80192ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80192f0:	ea4e 040a 	orr.w	r4, lr, sl
 80192f4:	940d      	str	r4, [sp, #52]	; 0x34
 80192f6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80192f8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80192fc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019300:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019304:	9c08      	ldr	r4, [sp, #32]
 8019306:	fb08 fc0c 	mul.w	ip, r8, ip
 801930a:	fb03 cc0e 	mla	ip, r3, lr, ip
 801930e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019312:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019314:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019318:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801931c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801931e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019322:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019326:	fb08 f80e 	mul.w	r8, r8, lr
 801932a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801932e:	fb03 8202 	mla	r2, r3, r2, r8
 8019332:	9b08      	ldr	r3, [sp, #32]
 8019334:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019338:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801933c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801933e:	fb01 220a 	mla	r2, r1, sl, r2
 8019342:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8019346:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019348:	fb09 2901 	mla	r9, r9, r1, r2
 801934c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801934e:	4343      	muls	r3, r0
 8019350:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019354:	1c58      	adds	r0, r3, #1
 8019356:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801935a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801935e:	783b      	ldrb	r3, [r7, #0]
 8019360:	ea4c 0c09 	orr.w	ip, ip, r9
 8019364:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019368:	fa5f f28c 	uxtb.w	r2, ip
 801936c:	b2c0      	uxtb	r0, r0
 801936e:	fb12 f201 	smulbb	r2, r2, r1
 8019372:	fb03 2300 	mla	r3, r3, r0, r2
 8019376:	b29b      	uxth	r3, r3
 8019378:	1c5a      	adds	r2, r3, #1
 801937a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801937e:	787a      	ldrb	r2, [r7, #1]
 8019380:	fb12 f200 	smulbb	r2, r2, r0
 8019384:	121b      	asrs	r3, r3, #8
 8019386:	703b      	strb	r3, [r7, #0]
 8019388:	f3cc 2307 	ubfx	r3, ip, #8, #8
 801938c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8019390:	fb03 2301 	mla	r3, r3, r1, r2
 8019394:	b29b      	uxth	r3, r3
 8019396:	1c5a      	adds	r2, r3, #1
 8019398:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801939c:	121b      	asrs	r3, r3, #8
 801939e:	707b      	strb	r3, [r7, #1]
 80193a0:	78bb      	ldrb	r3, [r7, #2]
 80193a2:	fb13 f000 	smulbb	r0, r3, r0
 80193a6:	fb0c 0c01 	mla	ip, ip, r1, r0
 80193aa:	fa1f fc8c 	uxth.w	ip, ip
 80193ae:	f10c 0301 	add.w	r3, ip, #1
 80193b2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80193b6:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 80193ba:	f887 c002 	strb.w	ip, [r7, #2]
 80193be:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80193c0:	3703      	adds	r7, #3
 80193c2:	441d      	add	r5, r3
 80193c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80193c6:	441e      	add	r6, r3
 80193c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80193ca:	3b01      	subs	r3, #1
 80193cc:	9318      	str	r3, [sp, #96]	; 0x60
 80193ce:	e69f      	b.n	8019110 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80193d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80193d2:	441d      	add	r5, r3
 80193d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80193d6:	441e      	add	r6, r3
 80193d8:	9b07      	ldr	r3, [sp, #28]
 80193da:	3b01      	subs	r3, #1
 80193dc:	9307      	str	r3, [sp, #28]
 80193de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80193e0:	3303      	adds	r3, #3
 80193e2:	930a      	str	r3, [sp, #40]	; 0x28
 80193e4:	e674      	b.n	80190d0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80193e6:	d025      	beq.n	8019434 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 80193e8:	9b07      	ldr	r3, [sp, #28]
 80193ea:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80193ec:	3b01      	subs	r3, #1
 80193ee:	fb00 5003 	mla	r0, r0, r3, r5
 80193f2:	1400      	asrs	r0, r0, #16
 80193f4:	f53f ae89 	bmi.w	801910a <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80193f8:	3901      	subs	r1, #1
 80193fa:	4288      	cmp	r0, r1
 80193fc:	f6bf ae85 	bge.w	801910a <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019400:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8019402:	fb01 6303 	mla	r3, r1, r3, r6
 8019406:	141b      	asrs	r3, r3, #16
 8019408:	f53f ae7f 	bmi.w	801910a <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801940c:	3a01      	subs	r2, #1
 801940e:	4293      	cmp	r3, r2
 8019410:	f6bf ae7b 	bge.w	801910a <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019414:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019416:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801941a:	f103 0e03 	add.w	lr, r3, #3
 801941e:	f1bb 0f00 	cmp.w	fp, #0
 8019422:	dc6e      	bgt.n	8019502 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 8019424:	9b07      	ldr	r3, [sp, #28]
 8019426:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801942a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801942c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8019430:	4423      	add	r3, r4
 8019432:	930a      	str	r3, [sp, #40]	; 0x28
 8019434:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019436:	2b00      	cmp	r3, #0
 8019438:	f340 81ab 	ble.w	8019792 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801943c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019440:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019442:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019446:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801944a:	eef0 6a62 	vmov.f32	s13, s5
 801944e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019452:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019456:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801945a:	ee16 5a90 	vmov	r5, s13
 801945e:	eef0 6a43 	vmov.f32	s13, s6
 8019462:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019466:	ee16 6a90 	vmov	r6, s13
 801946a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801946e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019472:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019476:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801947a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801947e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019482:	ee12 2a90 	vmov	r2, s5
 8019486:	eef0 2a47 	vmov.f32	s5, s14
 801948a:	fb92 f3f3 	sdiv	r3, r2, r3
 801948e:	ee13 2a10 	vmov	r2, s6
 8019492:	9329      	str	r3, [sp, #164]	; 0xa4
 8019494:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019496:	eeb0 3a67 	vmov.f32	s6, s15
 801949a:	fb92 f3f3 	sdiv	r3, r2, r3
 801949e:	932a      	str	r3, [sp, #168]	; 0xa8
 80194a0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80194a2:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80194a4:	3b01      	subs	r3, #1
 80194a6:	9317      	str	r3, [sp, #92]	; 0x5c
 80194a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80194aa:	bf08      	it	eq
 80194ac:	4613      	moveq	r3, r2
 80194ae:	9307      	str	r3, [sp, #28]
 80194b0:	e600      	b.n	80190b4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80194b2:	f1bc 0f00 	cmp.w	ip, #0
 80194b6:	f43f ae6e 	beq.w	8019196 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80194ba:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80194be:	9308      	str	r3, [sp, #32]
 80194c0:	0e1b      	lsrs	r3, r3, #24
 80194c2:	9311      	str	r3, [sp, #68]	; 0x44
 80194c4:	e667      	b.n	8019196 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80194c6:	f112 0801 	adds.w	r8, r2, #1
 80194ca:	f53f af78 	bmi.w	80193be <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80194ce:	45c6      	cmp	lr, r8
 80194d0:	f6ff af75 	blt.w	80193be <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80194d4:	f110 0801 	adds.w	r8, r0, #1
 80194d8:	f53f af71 	bmi.w	80193be <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80194dc:	4543      	cmp	r3, r8
 80194de:	f6ff af6e 	blt.w	80193be <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80194e2:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 80194e4:	b21b      	sxth	r3, r3
 80194e6:	9201      	str	r2, [sp, #4]
 80194e8:	9300      	str	r3, [sp, #0]
 80194ea:	fa0f f38e 	sxth.w	r3, lr
 80194ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80194f0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80194f4:	e9cd c404 	strd	ip, r4, [sp, #16]
 80194f8:	4639      	mov	r1, r7
 80194fa:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80194fc:	f7ff fc79 	bl	8018df2 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh>
 8019500:	e75d      	b.n	80193be <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8019502:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019504:	142f      	asrs	r7, r5, #16
 8019506:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019508:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801950c:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8019510:	1433      	asrs	r3, r6, #16
 8019512:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019516:	fb02 7303 	mla	r3, r2, r3, r7
 801951a:	eb04 0783 	add.w	r7, r4, r3, lsl #2
 801951e:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8019522:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019526:	2900      	cmp	r1, #0
 8019528:	f000 812a 	beq.w	8019780 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801952c:	687c      	ldr	r4, [r7, #4]
 801952e:	940e      	str	r4, [sp, #56]	; 0x38
 8019530:	0e24      	lsrs	r4, r4, #24
 8019532:	9415      	str	r4, [sp, #84]	; 0x54
 8019534:	b178      	cbz	r0, 8019556 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 8019536:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 801953a:	3a01      	subs	r2, #1
 801953c:	0092      	lsls	r2, r2, #2
 801953e:	3204      	adds	r2, #4
 8019540:	eb07 0802 	add.w	r8, r7, r2
 8019544:	58ba      	ldr	r2, [r7, r2]
 8019546:	9209      	str	r2, [sp, #36]	; 0x24
 8019548:	0e12      	lsrs	r2, r2, #24
 801954a:	9212      	str	r2, [sp, #72]	; 0x48
 801954c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8019550:	920f      	str	r2, [sp, #60]	; 0x3c
 8019552:	0e12      	lsrs	r2, r2, #24
 8019554:	9216      	str	r2, [sp, #88]	; 0x58
 8019556:	b289      	uxth	r1, r1
 8019558:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801955a:	b280      	uxth	r0, r0
 801955c:	fb01 f900 	mul.w	r9, r1, r0
 8019560:	0109      	lsls	r1, r1, #4
 8019562:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019566:	eba1 0809 	sub.w	r8, r1, r9
 801956a:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 801956e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8019570:	b280      	uxth	r0, r0
 8019572:	fa1f f888 	uxth.w	r8, r8
 8019576:	1a12      	subs	r2, r2, r0
 8019578:	fb08 f101 	mul.w	r1, r8, r1
 801957c:	b292      	uxth	r2, r2
 801957e:	fb02 110c 	mla	r1, r2, ip, r1
 8019582:	fb00 1104 	mla	r1, r0, r4, r1
 8019586:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019588:	fb09 1104 	mla	r1, r9, r4, r1
 801958c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019590:	2900      	cmp	r1, #0
 8019592:	f000 80ec 	beq.w	801976e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f4>
 8019596:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801959a:	d019      	beq.n	80195d0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801959c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80195a0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80195a4:	fb0c fa0a 	mul.w	sl, ip, sl
 80195a8:	fb0c fc03 	mul.w	ip, ip, r3
 80195ac:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80195b0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80195b4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80195b8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80195bc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80195c0:	4453      	add	r3, sl
 80195c2:	0a3f      	lsrs	r7, r7, #8
 80195c4:	0a1b      	lsrs	r3, r3, #8
 80195c6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80195ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80195ce:	433b      	orrs	r3, r7
 80195d0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80195d2:	2cff      	cmp	r4, #255	; 0xff
 80195d4:	d020      	beq.n	8019618 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59e>
 80195d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80195d8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80195dc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80195de:	4367      	muls	r7, r4
 80195e0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80195e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80195e6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80195ea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80195ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80195f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80195f4:	fb04 fa0a 	mul.w	sl, r4, sl
 80195f8:	44bc      	add	ip, r7
 80195fa:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80195fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019602:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019606:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801960a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801960e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019612:	ea4c 040a 	orr.w	r4, ip, sl
 8019616:	940e      	str	r4, [sp, #56]	; 0x38
 8019618:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801961a:	2cff      	cmp	r4, #255	; 0xff
 801961c:	d020      	beq.n	8019660 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e6>
 801961e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8019620:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019624:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019626:	4367      	muls	r7, r4
 8019628:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801962a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801962e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019632:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019634:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019638:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801963c:	fb04 fa0a 	mul.w	sl, r4, sl
 8019640:	44bc      	add	ip, r7
 8019642:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019646:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801964a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801964e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019652:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019656:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801965a:	ea4c 040a 	orr.w	r4, ip, sl
 801965e:	9409      	str	r4, [sp, #36]	; 0x24
 8019660:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019662:	2cff      	cmp	r4, #255	; 0xff
 8019664:	d020      	beq.n	80196a8 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62e>
 8019666:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019668:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801966c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801966e:	4367      	muls	r7, r4
 8019670:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019672:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019676:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801967a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801967c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019680:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019684:	fb04 fa0a 	mul.w	sl, r4, sl
 8019688:	44bc      	add	ip, r7
 801968a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801968e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019692:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019696:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801969a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801969e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80196a2:	ea4c 040a 	orr.w	r4, ip, sl
 80196a6:	940f      	str	r4, [sp, #60]	; 0x3c
 80196a8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80196aa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80196ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80196b2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80196b6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80196b8:	fb08 f707 	mul.w	r7, r8, r7
 80196bc:	fb02 770c 	mla	r7, r2, ip, r7
 80196c0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80196c4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80196c6:	fb00 770c 	mla	r7, r0, ip, r7
 80196ca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80196ce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80196d0:	fb09 770c 	mla	r7, r9, ip, r7
 80196d4:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80196d8:	fb08 f80c 	mul.w	r8, r8, ip
 80196dc:	0a3f      	lsrs	r7, r7, #8
 80196de:	fb02 8303 	mla	r3, r2, r3, r8
 80196e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80196e4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80196e8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80196ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80196ee:	fb00 330a 	mla	r3, r0, sl, r3
 80196f2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80196f6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80196f8:	fb09 3c0c 	mla	ip, r9, ip, r3
 80196fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80196fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019702:	434b      	muls	r3, r1
 8019704:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019708:	1c59      	adds	r1, r3, #1
 801970a:	ea47 070c 	orr.w	r7, r7, ip
 801970e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8019712:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 8019716:	b2fa      	uxtb	r2, r7
 8019718:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801971c:	fb12 f200 	smulbb	r2, r2, r0
 8019720:	b2c9      	uxtb	r1, r1
 8019722:	fb03 2301 	mla	r3, r3, r1, r2
 8019726:	b29b      	uxth	r3, r3
 8019728:	1c5a      	adds	r2, r3, #1
 801972a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801972e:	f81e 2c02 	ldrb.w	r2, [lr, #-2]
 8019732:	fb12 f201 	smulbb	r2, r2, r1
 8019736:	121b      	asrs	r3, r3, #8
 8019738:	f80e 3c03 	strb.w	r3, [lr, #-3]
 801973c:	f3c7 2307 	ubfx	r3, r7, #8, #8
 8019740:	0c3f      	lsrs	r7, r7, #16
 8019742:	fb03 2300 	mla	r3, r3, r0, r2
 8019746:	b29b      	uxth	r3, r3
 8019748:	1c5a      	adds	r2, r3, #1
 801974a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801974e:	121b      	asrs	r3, r3, #8
 8019750:	f80e 3c02 	strb.w	r3, [lr, #-2]
 8019754:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 8019758:	fb13 f101 	smulbb	r1, r3, r1
 801975c:	fb07 1700 	mla	r7, r7, r0, r1
 8019760:	b2bf      	uxth	r7, r7
 8019762:	1c79      	adds	r1, r7, #1
 8019764:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8019768:	123f      	asrs	r7, r7, #8
 801976a:	f80e 7c01 	strb.w	r7, [lr, #-1]
 801976e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019770:	f10e 0e03 	add.w	lr, lr, #3
 8019774:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019778:	441d      	add	r5, r3
 801977a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801977c:	441e      	add	r6, r3
 801977e:	e64e      	b.n	801941e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8019780:	2800      	cmp	r0, #0
 8019782:	f43f aee8 	beq.w	8019556 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 8019786:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801978a:	9209      	str	r2, [sp, #36]	; 0x24
 801978c:	0e12      	lsrs	r2, r2, #24
 801978e:	9212      	str	r2, [sp, #72]	; 0x48
 8019790:	e6e1      	b.n	8019556 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 8019792:	b01d      	add	sp, #116	; 0x74
 8019794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019798 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh>:
 8019798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801979c:	b087      	sub	sp, #28
 801979e:	e9dd 7511 	ldrd	r7, r5, [sp, #68]	; 0x44
 80197a2:	f9bd 8040 	ldrsh.w	r8, [sp, #64]	; 0x40
 80197a6:	fb05 7003 	mla	r0, r5, r3, r7
 80197aa:	2d00      	cmp	r5, #0
 80197ac:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80197b0:	f89d e050 	ldrb.w	lr, [sp, #80]	; 0x50
 80197b4:	eb02 0c80 	add.w	ip, r2, r0, lsl #2
 80197b8:	f2c0 810a 	blt.w	80199d0 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x238>
 80197bc:	45a8      	cmp	r8, r5
 80197be:	f340 8107 	ble.w	80199d0 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x238>
 80197c2:	2f00      	cmp	r7, #0
 80197c4:	f2c0 8102 	blt.w	80199cc <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x234>
 80197c8:	42bb      	cmp	r3, r7
 80197ca:	f340 80ff 	ble.w	80199cc <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x234>
 80197ce:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
 80197d2:	1c7a      	adds	r2, r7, #1
 80197d4:	f100 80ff 	bmi.w	80199d6 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x23e>
 80197d8:	4293      	cmp	r3, r2
 80197da:	f340 80fc 	ble.w	80199d6 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x23e>
 80197de:	2c00      	cmp	r4, #0
 80197e0:	f000 80fb 	beq.w	80199da <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x242>
 80197e4:	f8dc 0004 	ldr.w	r0, [ip, #4]
 80197e8:	3501      	adds	r5, #1
 80197ea:	f100 80fa 	bmi.w	80199e2 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x24a>
 80197ee:	45a8      	cmp	r8, r5
 80197f0:	f340 80f7 	ble.w	80199e2 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x24a>
 80197f4:	f1be 0f00 	cmp.w	lr, #0
 80197f8:	f000 80f6 	beq.w	80199e8 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x250>
 80197fc:	2f00      	cmp	r7, #0
 80197fe:	f2c0 80ee 	blt.w	80199de <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x246>
 8019802:	42bb      	cmp	r3, r7
 8019804:	f340 80eb 	ble.w	80199de <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x246>
 8019808:	f85c 5023 	ldr.w	r5, [ip, r3, lsl #2]
 801980c:	3701      	adds	r7, #1
 801980e:	f100 80ee 	bmi.w	80199ee <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x256>
 8019812:	42bb      	cmp	r3, r7
 8019814:	f340 80eb 	ble.w	80199ee <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x256>
 8019818:	2c00      	cmp	r4, #0
 801981a:	f000 80ea 	beq.w	80199f2 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x25a>
 801981e:	3301      	adds	r3, #1
 8019820:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8019824:	fa1f fc84 	uxth.w	ip, r4
 8019828:	fa1f fe8e 	uxth.w	lr, lr
 801982c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019830:	fb0c f90e 	mul.w	r9, ip, lr
 8019834:	0e13      	lsrs	r3, r2, #24
 8019836:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 801983a:	ebc9 1e0e 	rsb	lr, r9, lr, lsl #4
 801983e:	9302      	str	r3, [sp, #8]
 8019840:	ebac 0709 	sub.w	r7, ip, r9
 8019844:	f5cc 7380 	rsb	r3, ip, #256	; 0x100
 8019848:	fa1f f48e 	uxth.w	r4, lr
 801984c:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8019850:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019854:	ea4f 6b10 	mov.w	fp, r0, lsr #24
 8019858:	fb0a fe0e 	mul.w	lr, sl, lr
 801985c:	1b1b      	subs	r3, r3, r4
 801985e:	fb0a f606 	mul.w	r6, sl, r6
 8019862:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8019866:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801986a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801986e:	b29b      	uxth	r3, r3
 8019870:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019874:	b2bf      	uxth	r7, r7
 8019876:	9301      	str	r3, [sp, #4]
 8019878:	44e6      	add	lr, ip
 801987a:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 801987e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019882:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8019886:	f00e 13ff 	and.w	r3, lr, #16711935	; 0xff00ff
 801988a:	9303      	str	r3, [sp, #12]
 801988c:	0a33      	lsrs	r3, r6, #8
 801988e:	f000 16ff 	and.w	r6, r0, #16711935	; 0xff00ff
 8019892:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019896:	9304      	str	r3, [sp, #16]
 8019898:	fb0b f606 	mul.w	r6, fp, r6
 801989c:	fb0b f000 	mul.w	r0, fp, r0
 80198a0:	ea4f 2e16 	mov.w	lr, r6, lsr #8
 80198a4:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 80198a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80198ac:	44b6      	add	lr, r6
 80198ae:	f500 7680 	add.w	r6, r0, #256	; 0x100
 80198b2:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 80198b6:	f005 16ff 	and.w	r6, r5, #16711935	; 0xff00ff
 80198ba:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80198be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80198c2:	fb08 f606 	mul.w	r6, r8, r6
 80198c6:	0a03      	lsrs	r3, r0, #8
 80198c8:	fb08 f505 	mul.w	r5, r8, r5
 80198cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80198d0:	0a30      	lsrs	r0, r6, #8
 80198d2:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 80198d6:	9305      	str	r3, [sp, #20]
 80198d8:	0e13      	lsrs	r3, r2, #24
 80198da:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80198de:	fb0e fe07 	mul.w	lr, lr, r7
 80198e2:	4430      	add	r0, r6
 80198e4:	f505 7680 	add.w	r6, r5, #256	; 0x100
 80198e8:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 80198ec:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 80198f0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80198f4:	0a00      	lsrs	r0, r0, #8
 80198f6:	435e      	muls	r6, r3
 80198f8:	0a2d      	lsrs	r5, r5, #8
 80198fa:	435a      	muls	r2, r3
 80198fc:	9b03      	ldr	r3, [sp, #12]
 80198fe:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 8019902:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8019906:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801990a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801990e:	44b4      	add	ip, r6
 8019910:	f502 7680 	add.w	r6, r2, #256	; 0x100
 8019914:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019918:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 801991c:	9e01      	ldr	r6, [sp, #4]
 801991e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019922:	fb03 ee06 	mla	lr, r3, r6, lr
 8019926:	9b04      	ldr	r3, [sp, #16]
 8019928:	0a12      	lsrs	r2, r2, #8
 801992a:	fb0c ee09 	mla	lr, ip, r9, lr
 801992e:	f403 467f 	and.w	r6, r3, #65280	; 0xff00
 8019932:	9b05      	ldr	r3, [sp, #20]
 8019934:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019938:	fb00 ee04 	mla	lr, r0, r4, lr
 801993c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019940:	f00e 10ff 	and.w	r0, lr, #16711935	; 0xff00ff
 8019944:	f403 4e7f 	and.w	lr, r3, #65280	; 0xff00
 8019948:	9b01      	ldr	r3, [sp, #4]
 801994a:	fb07 fe0e 	mul.w	lr, r7, lr
 801994e:	fb07 f70b 	mul.w	r7, r7, fp
 8019952:	fb03 ee06 	mla	lr, r3, r6, lr
 8019956:	fb03 730a 	mla	r3, r3, sl, r7
 801995a:	fb09 e202 	mla	r2, r9, r2, lr
 801995e:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019962:	fb04 2e0e 	mla	lr, r4, lr, r2
 8019966:	fb04 3408 	mla	r4, r4, r8, r3
 801996a:	9b02      	ldr	r3, [sp, #8]
 801996c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019970:	fb09 4903 	mla	r9, r9, r3, r4
 8019974:	780b      	ldrb	r3, [r1, #0]
 8019976:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801997a:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801997e:	ea40 0e0e 	orr.w	lr, r0, lr
 8019982:	fa5f f989 	uxtb.w	r9, r9
 8019986:	fb03 f209 	mul.w	r2, r3, r9
 801998a:	1c53      	adds	r3, r2, #1
 801998c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019990:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 8019994:	700b      	strb	r3, [r1, #0]
 8019996:	784b      	ldrb	r3, [r1, #1]
 8019998:	fb03 f309 	mul.w	r3, r3, r9
 801999c:	1c5a      	adds	r2, r3, #1
 801999e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80199a2:	ea4f 231e 	mov.w	r3, lr, lsr #8
 80199a6:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 80199aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80199ae:	704b      	strb	r3, [r1, #1]
 80199b0:	788b      	ldrb	r3, [r1, #2]
 80199b2:	fb03 f909 	mul.w	r9, r3, r9
 80199b6:	f109 0301 	add.w	r3, r9, #1
 80199ba:	eb03 2919 	add.w	r9, r3, r9, lsr #8
 80199be:	eb0e 2e19 	add.w	lr, lr, r9, lsr #8
 80199c2:	f881 e002 	strb.w	lr, [r1, #2]
 80199c6:	b007      	add	sp, #28
 80199c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199cc:	2600      	movs	r6, #0
 80199ce:	e700      	b.n	80197d2 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x3a>
 80199d0:	2000      	movs	r0, #0
 80199d2:	4606      	mov	r6, r0
 80199d4:	e708      	b.n	80197e8 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x50>
 80199d6:	2000      	movs	r0, #0
 80199d8:	e706      	b.n	80197e8 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x50>
 80199da:	4620      	mov	r0, r4
 80199dc:	e704      	b.n	80197e8 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x50>
 80199de:	2500      	movs	r5, #0
 80199e0:	e714      	b.n	801980c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x74>
 80199e2:	2200      	movs	r2, #0
 80199e4:	4615      	mov	r5, r2
 80199e6:	e71d      	b.n	8019824 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8c>
 80199e8:	4672      	mov	r2, lr
 80199ea:	4675      	mov	r5, lr
 80199ec:	e71a      	b.n	8019824 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8c>
 80199ee:	2200      	movs	r2, #0
 80199f0:	e718      	b.n	8019824 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8c>
 80199f2:	4622      	mov	r2, r4
 80199f4:	e716      	b.n	8019824 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8c>

080199f6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199fa:	b099      	sub	sp, #100	; 0x64
 80199fc:	e9cd 1215 	strd	r1, r2, [sp, #84]	; 0x54
 8019a00:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019a02:	9017      	str	r0, [sp, #92]	; 0x5c
 8019a04:	9306      	str	r3, [sp, #24]
 8019a06:	6850      	ldr	r0, [r2, #4]
 8019a08:	6812      	ldr	r2, [r2, #0]
 8019a0a:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019a0e:	e9dd 5623 	ldrd	r5, r6, [sp, #140]	; 0x8c
 8019a12:	fb00 1303 	mla	r3, r0, r3, r1
 8019a16:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8019a1a:	18d3      	adds	r3, r2, r3
 8019a1c:	9309      	str	r3, [sp, #36]	; 0x24
 8019a1e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019a20:	681b      	ldr	r3, [r3, #0]
 8019a22:	930e      	str	r3, [sp, #56]	; 0x38
 8019a24:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8019a26:	2b00      	cmp	r3, #0
 8019a28:	dc03      	bgt.n	8019a32 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019a2a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019a2c:	2b00      	cmp	r3, #0
 8019a2e:	f340 8360 	ble.w	801a0f2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fc>
 8019a32:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019a34:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019a38:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019a3c:	1e48      	subs	r0, r1, #1
 8019a3e:	1e57      	subs	r7, r2, #1
 8019a40:	9b06      	ldr	r3, [sp, #24]
 8019a42:	2b00      	cmp	r3, #0
 8019a44:	f340 817b 	ble.w	8019d3e <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x348>
 8019a48:	ea5f 4c25 	movs.w	ip, r5, asr #16
 8019a4c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019a50:	d406      	bmi.n	8019a60 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019a52:	4584      	cmp	ip, r0
 8019a54:	da04      	bge.n	8019a60 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019a56:	2b00      	cmp	r3, #0
 8019a58:	db02      	blt.n	8019a60 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019a5a:	42bb      	cmp	r3, r7
 8019a5c:	f2c0 8170 	blt.w	8019d40 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8019a60:	f11c 0c01 	adds.w	ip, ip, #1
 8019a64:	f100 8160 	bmi.w	8019d28 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019a68:	4561      	cmp	r1, ip
 8019a6a:	f2c0 815d 	blt.w	8019d28 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019a6e:	3301      	adds	r3, #1
 8019a70:	f100 815a 	bmi.w	8019d28 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019a74:	429a      	cmp	r2, r3
 8019a76:	f2c0 8157 	blt.w	8019d28 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019a7a:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019a7e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8019a80:	f1b8 0f00 	cmp.w	r8, #0
 8019a84:	f340 8179 	ble.w	8019d7a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 8019a88:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019a8a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019a8e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019a90:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019a94:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019a98:	142a      	asrs	r2, r5, #16
 8019a9a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019a9e:	689b      	ldr	r3, [r3, #8]
 8019aa0:	f100 81be 	bmi.w	8019e20 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8019aa4:	f103 39ff 	add.w	r9, r3, #4294967295
 8019aa8:	454a      	cmp	r2, r9
 8019aaa:	f280 81b9 	bge.w	8019e20 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8019aae:	f1bc 0f00 	cmp.w	ip, #0
 8019ab2:	f2c0 81b5 	blt.w	8019e20 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8019ab6:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019aba:	45cc      	cmp	ip, r9
 8019abc:	f280 81b0 	bge.w	8019e20 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8019ac0:	b21b      	sxth	r3, r3
 8019ac2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019ac4:	fb0c 2203 	mla	r2, ip, r3, r2
 8019ac8:	eb04 0982 	add.w	r9, r4, r2, lsl #2
 8019acc:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8019ad0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019ad4:	2900      	cmp	r1, #0
 8019ad6:	f000 8197 	beq.w	8019e08 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 8019ada:	f8d9 4004 	ldr.w	r4, [r9, #4]
 8019ade:	940a      	str	r4, [sp, #40]	; 0x28
 8019ae0:	0e24      	lsrs	r4, r4, #24
 8019ae2:	9411      	str	r4, [sp, #68]	; 0x44
 8019ae4:	b180      	cbz	r0, 8019b08 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 8019ae6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8019aea:	3b01      	subs	r3, #1
 8019aec:	009b      	lsls	r3, r3, #2
 8019aee:	3304      	adds	r3, #4
 8019af0:	eb09 0c03 	add.w	ip, r9, r3
 8019af4:	f859 3003 	ldr.w	r3, [r9, r3]
 8019af8:	9307      	str	r3, [sp, #28]
 8019afa:	0e1b      	lsrs	r3, r3, #24
 8019afc:	930f      	str	r3, [sp, #60]	; 0x3c
 8019afe:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8019b02:	930b      	str	r3, [sp, #44]	; 0x2c
 8019b04:	0e1b      	lsrs	r3, r3, #24
 8019b06:	9312      	str	r3, [sp, #72]	; 0x48
 8019b08:	b289      	uxth	r1, r1
 8019b0a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019b0c:	b280      	uxth	r0, r0
 8019b0e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019b10:	fb01 fa00 	mul.w	sl, r1, r0
 8019b14:	0109      	lsls	r1, r1, #4
 8019b16:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8019b1a:	eba1 090a 	sub.w	r9, r1, sl
 8019b1e:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8019b22:	b280      	uxth	r0, r0
 8019b24:	fa1f f989 	uxth.w	r9, r9
 8019b28:	1a09      	subs	r1, r1, r0
 8019b2a:	fb09 f303 	mul.w	r3, r9, r3
 8019b2e:	b289      	uxth	r1, r1
 8019b30:	fb01 330e 	mla	r3, r1, lr, r3
 8019b34:	fb00 3304 	mla	r3, r0, r4, r3
 8019b38:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019b3a:	fb0a 3304 	mla	r3, sl, r4, r3
 8019b3e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019b42:	2b00      	cmp	r3, #0
 8019b44:	f000 80e8 	beq.w	8019d18 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019b48:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019b4c:	d01b      	beq.n	8019b86 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x190>
 8019b4e:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
 8019b52:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019b56:	fb0e fb0b 	mul.w	fp, lr, fp
 8019b5a:	fb0e fe02 	mul.w	lr, lr, r2
 8019b5e:	ea4f 221b 	mov.w	r2, fp, lsr #8
 8019b62:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019b66:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019b6a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019b6e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019b72:	445a      	add	r2, fp
 8019b74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019b78:	0a12      	lsrs	r2, r2, #8
 8019b7a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019b7e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019b82:	ea42 020c 	orr.w	r2, r2, ip
 8019b86:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019b88:	2cff      	cmp	r4, #255	; 0xff
 8019b8a:	d021      	beq.n	8019bd0 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8019b8c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019b8e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019b92:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019b94:	fb04 fc0c 	mul.w	ip, r4, ip
 8019b98:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019b9a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8019b9e:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 8019ba2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019ba4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019ba8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019bac:	fb04 fb0b 	mul.w	fp, r4, fp
 8019bb0:	44e6      	add	lr, ip
 8019bb2:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 8019bb6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019bba:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 8019bbe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019bc2:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8019bc6:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8019bca:	ea4e 040b 	orr.w	r4, lr, fp
 8019bce:	940a      	str	r4, [sp, #40]	; 0x28
 8019bd0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019bd2:	2cff      	cmp	r4, #255	; 0xff
 8019bd4:	d021      	beq.n	8019c1a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019bd6:	9c07      	ldr	r4, [sp, #28]
 8019bd8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019bdc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019bde:	fb04 fc0c 	mul.w	ip, r4, ip
 8019be2:	9c07      	ldr	r4, [sp, #28]
 8019be4:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8019be8:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 8019bec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019bee:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019bf2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019bf6:	fb04 fb0b 	mul.w	fp, r4, fp
 8019bfa:	44e6      	add	lr, ip
 8019bfc:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 8019c00:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c04:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 8019c08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c0c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8019c10:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8019c14:	ea4e 040b 	orr.w	r4, lr, fp
 8019c18:	9407      	str	r4, [sp, #28]
 8019c1a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019c1c:	2cff      	cmp	r4, #255	; 0xff
 8019c1e:	d021      	beq.n	8019c64 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26e>
 8019c20:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019c22:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019c26:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019c28:	fb04 fc0c 	mul.w	ip, r4, ip
 8019c2c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019c2e:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8019c32:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 8019c36:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019c38:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019c3c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c40:	fb04 fb0b 	mul.w	fp, r4, fp
 8019c44:	44e6      	add	lr, ip
 8019c46:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 8019c4a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c4e:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 8019c52:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c56:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8019c5a:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8019c5e:	ea4e 040b 	orr.w	r4, lr, fp
 8019c62:	940b      	str	r4, [sp, #44]	; 0x2c
 8019c64:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019c66:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019c6a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019c6e:	2bff      	cmp	r3, #255	; 0xff
 8019c70:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019c74:	9c07      	ldr	r4, [sp, #28]
 8019c76:	fb09 fc0c 	mul.w	ip, r9, ip
 8019c7a:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019c7e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019c82:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019c84:	fb00 cc0e 	mla	ip, r0, lr, ip
 8019c88:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019c8c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019c8e:	fb0a cc0e 	mla	ip, sl, lr, ip
 8019c92:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019c96:	fb09 f90e 	mul.w	r9, r9, lr
 8019c9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019c9e:	fb01 9202 	mla	r2, r1, r2, r9
 8019ca2:	9907      	ldr	r1, [sp, #28]
 8019ca4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019ca8:	f401 4b7f 	and.w	fp, r1, #65280	; 0xff00
 8019cac:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8019cae:	fb00 220b 	mla	r2, r0, fp, r2
 8019cb2:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8019cb6:	fb0a 2a00 	mla	sl, sl, r0, r2
 8019cba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019cbe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019cc2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019cc6:	fa5f f08c 	uxtb.w	r0, ip
 8019cca:	f3cc 2107 	ubfx	r1, ip, #8, #8
 8019cce:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8019cd2:	f000 80a2 	beq.w	8019e1a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 8019cd6:	43db      	mvns	r3, r3
 8019cd8:	783a      	ldrb	r2, [r7, #0]
 8019cda:	f897 a002 	ldrb.w	sl, [r7, #2]
 8019cde:	b2db      	uxtb	r3, r3
 8019ce0:	fb02 fe03 	mul.w	lr, r2, r3
 8019ce4:	fb0a fa03 	mul.w	sl, sl, r3
 8019ce8:	f10e 0201 	add.w	r2, lr, #1
 8019cec:	eb02 221e 	add.w	r2, r2, lr, lsr #8
 8019cf0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019cf4:	703a      	strb	r2, [r7, #0]
 8019cf6:	787a      	ldrb	r2, [r7, #1]
 8019cf8:	fb02 f003 	mul.w	r0, r2, r3
 8019cfc:	f10a 0301 	add.w	r3, sl, #1
 8019d00:	1c42      	adds	r2, r0, #1
 8019d02:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8019d06:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8019d0a:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019d0e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019d12:	707a      	strb	r2, [r7, #1]
 8019d14:	f887 c002 	strb.w	ip, [r7, #2]
 8019d18:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019d1a:	3703      	adds	r7, #3
 8019d1c:	f108 38ff 	add.w	r8, r8, #4294967295
 8019d20:	441d      	add	r5, r3
 8019d22:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d24:	441e      	add	r6, r3
 8019d26:	e6ab      	b.n	8019a80 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019d28:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019d2a:	441d      	add	r5, r3
 8019d2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d2e:	441e      	add	r6, r3
 8019d30:	9b06      	ldr	r3, [sp, #24]
 8019d32:	3b01      	subs	r3, #1
 8019d34:	9306      	str	r3, [sp, #24]
 8019d36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d38:	3303      	adds	r3, #3
 8019d3a:	9309      	str	r3, [sp, #36]	; 0x24
 8019d3c:	e680      	b.n	8019a40 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019d3e:	d024      	beq.n	8019d8a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8019d40:	9b06      	ldr	r3, [sp, #24]
 8019d42:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019d44:	3b01      	subs	r3, #1
 8019d46:	fb00 5003 	mla	r0, r0, r3, r5
 8019d4a:	1400      	asrs	r0, r0, #16
 8019d4c:	f53f ae95 	bmi.w	8019a7a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019d50:	3901      	subs	r1, #1
 8019d52:	4288      	cmp	r0, r1
 8019d54:	f6bf ae91 	bge.w	8019a7a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019d58:	9926      	ldr	r1, [sp, #152]	; 0x98
 8019d5a:	fb01 6303 	mla	r3, r1, r3, r6
 8019d5e:	141b      	asrs	r3, r3, #16
 8019d60:	f53f ae8b 	bmi.w	8019a7a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019d64:	3a01      	subs	r2, #1
 8019d66:	4293      	cmp	r3, r2
 8019d68:	f6bf ae87 	bge.w	8019a7a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019d6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d6e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019d72:	1cdf      	adds	r7, r3, #3
 8019d74:	f1bb 0f00 	cmp.w	fp, #0
 8019d78:	dc6e      	bgt.n	8019e58 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8019d7a:	9b06      	ldr	r3, [sp, #24]
 8019d7c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019d80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d82:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8019d86:	4423      	add	r3, r4
 8019d88:	9309      	str	r3, [sp, #36]	; 0x24
 8019d8a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8019d8c:	2b00      	cmp	r3, #0
 8019d8e:	f340 81b0 	ble.w	801a0f2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fc>
 8019d92:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019d96:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019d98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019da0:	eef0 6a62 	vmov.f32	s13, s5
 8019da4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019da8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019dac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019db0:	ee16 5a90 	vmov	r5, s13
 8019db4:	eef0 6a43 	vmov.f32	s13, s6
 8019db8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019dbc:	ee16 6a90 	vmov	r6, s13
 8019dc0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019dc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019dc8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019dcc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019dd0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019dd4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019dd8:	ee12 2a90 	vmov	r2, s5
 8019ddc:	eef0 2a47 	vmov.f32	s5, s14
 8019de0:	fb92 f3f3 	sdiv	r3, r2, r3
 8019de4:	ee13 2a10 	vmov	r2, s6
 8019de8:	9325      	str	r3, [sp, #148]	; 0x94
 8019dea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019dec:	eeb0 3a67 	vmov.f32	s6, s15
 8019df0:	fb92 f3f3 	sdiv	r3, r2, r3
 8019df4:	9326      	str	r3, [sp, #152]	; 0x98
 8019df6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8019df8:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019dfa:	3b01      	subs	r3, #1
 8019dfc:	9315      	str	r3, [sp, #84]	; 0x54
 8019dfe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019e00:	bf08      	it	eq
 8019e02:	4613      	moveq	r3, r2
 8019e04:	9306      	str	r3, [sp, #24]
 8019e06:	e60d      	b.n	8019a24 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8019e08:	2800      	cmp	r0, #0
 8019e0a:	f43f ae7d 	beq.w	8019b08 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 8019e0e:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8019e12:	9307      	str	r3, [sp, #28]
 8019e14:	0e1b      	lsrs	r3, r3, #24
 8019e16:	930f      	str	r3, [sp, #60]	; 0x3c
 8019e18:	e676      	b.n	8019b08 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 8019e1a:	7038      	strb	r0, [r7, #0]
 8019e1c:	7079      	strb	r1, [r7, #1]
 8019e1e:	e779      	b.n	8019d14 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8019e20:	f112 0901 	adds.w	r9, r2, #1
 8019e24:	f53f af78 	bmi.w	8019d18 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019e28:	454b      	cmp	r3, r9
 8019e2a:	f6ff af75 	blt.w	8019d18 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019e2e:	f11c 0901 	adds.w	r9, ip, #1
 8019e32:	f53f af71 	bmi.w	8019d18 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019e36:	45ce      	cmp	lr, r9
 8019e38:	f6ff af6e 	blt.w	8019d18 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019e3c:	b21b      	sxth	r3, r3
 8019e3e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8019e42:	fa0f f28e 	sxth.w	r2, lr
 8019e46:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8019e4a:	9200      	str	r2, [sp, #0]
 8019e4c:	4639      	mov	r1, r7
 8019e4e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019e50:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8019e52:	f7ff fca1 	bl	8019798 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh>
 8019e56:	e75f      	b.n	8019d18 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019e58:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019e5a:	1429      	asrs	r1, r5, #16
 8019e5c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019e5e:	f3c5 3203 	ubfx	r2, r5, #12, #4
 8019e62:	f9b3 c008 	ldrsh.w	ip, [r3, #8]
 8019e66:	1433      	asrs	r3, r6, #16
 8019e68:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019e6c:	fb0c 1303 	mla	r3, ip, r3, r1
 8019e70:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019e72:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8019e76:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8019e7a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8019e7e:	2a00      	cmp	r2, #0
 8019e80:	f000 8129 	beq.w	801a0d6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8019e84:	684c      	ldr	r4, [r1, #4]
 8019e86:	940c      	str	r4, [sp, #48]	; 0x30
 8019e88:	0e24      	lsrs	r4, r4, #24
 8019e8a:	9413      	str	r4, [sp, #76]	; 0x4c
 8019e8c:	b198      	cbz	r0, 8019eb6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c0>
 8019e8e:	f10c 4c80 	add.w	ip, ip, #1073741824	; 0x40000000
 8019e92:	f10c 3cff 	add.w	ip, ip, #4294967295
 8019e96:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8019e9a:	f10c 0c04 	add.w	ip, ip, #4
 8019e9e:	eb01 080c 	add.w	r8, r1, ip
 8019ea2:	f851 100c 	ldr.w	r1, [r1, ip]
 8019ea6:	9108      	str	r1, [sp, #32]
 8019ea8:	0e09      	lsrs	r1, r1, #24
 8019eaa:	9110      	str	r1, [sp, #64]	; 0x40
 8019eac:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8019eb0:	910d      	str	r1, [sp, #52]	; 0x34
 8019eb2:	0e09      	lsrs	r1, r1, #24
 8019eb4:	9114      	str	r1, [sp, #80]	; 0x50
 8019eb6:	b292      	uxth	r2, r2
 8019eb8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019eba:	b280      	uxth	r0, r0
 8019ebc:	fb02 f900 	mul.w	r9, r2, r0
 8019ec0:	0112      	lsls	r2, r2, #4
 8019ec2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019ec6:	eba2 0809 	sub.w	r8, r2, r9
 8019eca:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8019ece:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019ed0:	b280      	uxth	r0, r0
 8019ed2:	fa1f f888 	uxth.w	r8, r8
 8019ed6:	1a09      	subs	r1, r1, r0
 8019ed8:	fb08 f202 	mul.w	r2, r8, r2
 8019edc:	b289      	uxth	r1, r1
 8019ede:	fb01 220e 	mla	r2, r1, lr, r2
 8019ee2:	fb00 2204 	mla	r2, r0, r4, r2
 8019ee6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019ee8:	fb09 2204 	mla	r2, r9, r4, r2
 8019eec:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019ef0:	2a00      	cmp	r2, #0
 8019ef2:	f000 80e8 	beq.w	801a0c6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8019ef6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019efa:	d01b      	beq.n	8019f34 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53e>
 8019efc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019f00:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019f04:	fb0e fa0a 	mul.w	sl, lr, sl
 8019f08:	fb0e fe03 	mul.w	lr, lr, r3
 8019f0c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019f10:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019f14:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019f18:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019f1c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019f20:	4453      	add	r3, sl
 8019f22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f26:	0a1b      	lsrs	r3, r3, #8
 8019f28:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019f2c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019f30:	ea43 030c 	orr.w	r3, r3, ip
 8019f34:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019f36:	2cff      	cmp	r4, #255	; 0xff
 8019f38:	d021      	beq.n	8019f7e <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x588>
 8019f3a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019f3c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019f40:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019f42:	fb04 fc0c 	mul.w	ip, r4, ip
 8019f46:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019f48:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8019f4c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019f50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019f52:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019f56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f5a:	fb04 fa0a 	mul.w	sl, r4, sl
 8019f5e:	44e6      	add	lr, ip
 8019f60:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019f64:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019f68:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019f6c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019f74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019f78:	ea4e 040a 	orr.w	r4, lr, sl
 8019f7c:	940c      	str	r4, [sp, #48]	; 0x30
 8019f7e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019f80:	2cff      	cmp	r4, #255	; 0xff
 8019f82:	d021      	beq.n	8019fc8 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d2>
 8019f84:	9c08      	ldr	r4, [sp, #32]
 8019f86:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019f8a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019f8c:	fb04 fc0c 	mul.w	ip, r4, ip
 8019f90:	9c08      	ldr	r4, [sp, #32]
 8019f92:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019f96:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019f98:	fb04 fa0e 	mul.w	sl, r4, lr
 8019f9c:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8019fa0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019fa4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019fa8:	44e6      	add	lr, ip
 8019faa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019fae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019fb2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019fb6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019fba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019fbe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019fc2:	ea4e 040a 	orr.w	r4, lr, sl
 8019fc6:	9408      	str	r4, [sp, #32]
 8019fc8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019fca:	2cff      	cmp	r4, #255	; 0xff
 8019fcc:	d021      	beq.n	801a012 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 8019fce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019fd0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019fd4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019fd6:	fb04 fc0c 	mul.w	ip, r4, ip
 8019fda:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019fdc:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8019fe0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019fe4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019fe6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019fea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019fee:	fb04 fa0a 	mul.w	sl, r4, sl
 8019ff2:	44e6      	add	lr, ip
 8019ff4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019ff8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019ffc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a000:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a004:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a008:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a00c:	ea4e 040a 	orr.w	r4, lr, sl
 801a010:	940d      	str	r4, [sp, #52]	; 0x34
 801a012:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a014:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801a018:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a01c:	2aff      	cmp	r2, #255	; 0xff
 801a01e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a022:	9c08      	ldr	r4, [sp, #32]
 801a024:	fb08 fc0c 	mul.w	ip, r8, ip
 801a028:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a02c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a030:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a032:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a036:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a03a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a03c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a040:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801a044:	fb08 f80e 	mul.w	r8, r8, lr
 801a048:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a04c:	fb01 8303 	mla	r3, r1, r3, r8
 801a050:	9908      	ldr	r1, [sp, #32]
 801a052:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a056:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a05a:	990d      	ldr	r1, [sp, #52]	; 0x34
 801a05c:	fb00 330a 	mla	r3, r0, sl, r3
 801a060:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 801a064:	fb09 3e0e 	mla	lr, r9, lr, r3
 801a068:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a06c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a070:	ea4c 0c0e 	orr.w	ip, ip, lr
 801a074:	fa5f f08c 	uxtb.w	r0, ip
 801a078:	f3cc 2107 	ubfx	r1, ip, #8, #8
 801a07c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 801a080:	d032      	beq.n	801a0e8 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f2>
 801a082:	43d2      	mvns	r2, r2
 801a084:	f817 ec03 	ldrb.w	lr, [r7, #-3]
 801a088:	b2d2      	uxtb	r2, r2
 801a08a:	fb0e fe02 	mul.w	lr, lr, r2
 801a08e:	f10e 0301 	add.w	r3, lr, #1
 801a092:	eb03 231e 	add.w	r3, r3, lr, lsr #8
 801a096:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801a09a:	f817 0c02 	ldrb.w	r0, [r7, #-2]
 801a09e:	4350      	muls	r0, r2
 801a0a0:	f807 3c03 	strb.w	r3, [r7, #-3]
 801a0a4:	1c43      	adds	r3, r0, #1
 801a0a6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a0aa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a0ae:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 801a0b2:	4353      	muls	r3, r2
 801a0b4:	f807 1c02 	strb.w	r1, [r7, #-2]
 801a0b8:	1c5a      	adds	r2, r3, #1
 801a0ba:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a0be:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 801a0c2:	f807 cc01 	strb.w	ip, [r7, #-1]
 801a0c6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a0c8:	3703      	adds	r7, #3
 801a0ca:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a0ce:	441d      	add	r5, r3
 801a0d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a0d2:	441e      	add	r6, r3
 801a0d4:	e64e      	b.n	8019d74 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a0d6:	2800      	cmp	r0, #0
 801a0d8:	f43f aeed 	beq.w	8019eb6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c0>
 801a0dc:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 801a0e0:	9108      	str	r1, [sp, #32]
 801a0e2:	0e09      	lsrs	r1, r1, #24
 801a0e4:	9110      	str	r1, [sp, #64]	; 0x40
 801a0e6:	e6e6      	b.n	8019eb6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c0>
 801a0e8:	f807 0c03 	strb.w	r0, [r7, #-3]
 801a0ec:	f807 1c02 	strb.w	r1, [r7, #-2]
 801a0f0:	e7e7      	b.n	801a0c2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6cc>
 801a0f2:	b019      	add	sp, #100	; 0x64
 801a0f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a0f8 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh>:
 801a0f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0fc:	e9dd 400b 	ldrd	r4, r0, [sp, #44]	; 0x2c
 801a100:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a104:	2c00      	cmp	r4, #0
 801a106:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801a10a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a10e:	fb00 4e03 	mla	lr, r0, r3, r4
 801a112:	f89d c038 	ldrb.w	ip, [sp, #56]	; 0x38
 801a116:	f2c0 80b8 	blt.w	801a28a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x192>
 801a11a:	45a1      	cmp	r9, r4
 801a11c:	f340 80b5 	ble.w	801a28a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x192>
 801a120:	2800      	cmp	r0, #0
 801a122:	f2c0 80b2 	blt.w	801a28a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x192>
 801a126:	4580      	cmp	r8, r0
 801a128:	f340 80af 	ble.w	801a28a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x192>
 801a12c:	ea4f 055e 	mov.w	r5, lr, lsr #1
 801a130:	f01e 0f01 	tst.w	lr, #1
 801a134:	5d56      	ldrb	r6, [r2, r5]
 801a136:	bf0c      	ite	eq
 801a138:	f006 060f 	andeq.w	r6, r6, #15
 801a13c:	1136      	asrne	r6, r6, #4
 801a13e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a142:	b2f6      	uxtb	r6, r6
 801a144:	f114 0a01 	adds.w	sl, r4, #1
 801a148:	f100 80a1 	bmi.w	801a28e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x196>
 801a14c:	45d1      	cmp	r9, sl
 801a14e:	f340 809e 	ble.w	801a28e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x196>
 801a152:	2800      	cmp	r0, #0
 801a154:	f2c0 809b 	blt.w	801a28e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x196>
 801a158:	4580      	cmp	r8, r0
 801a15a:	f340 8098 	ble.w	801a28e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x196>
 801a15e:	2f00      	cmp	r7, #0
 801a160:	f000 8097 	beq.w	801a292 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x19a>
 801a164:	f10e 0b01 	add.w	fp, lr, #1
 801a168:	ea4f 055b 	mov.w	r5, fp, lsr #1
 801a16c:	f01b 0f01 	tst.w	fp, #1
 801a170:	5d55      	ldrb	r5, [r2, r5]
 801a172:	bf0c      	ite	eq
 801a174:	f005 050f 	andeq.w	r5, r5, #15
 801a178:	112d      	asrne	r5, r5, #4
 801a17a:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801a17e:	b2ed      	uxtb	r5, r5
 801a180:	f1bc 0f00 	cmp.w	ip, #0
 801a184:	f000 8089 	beq.w	801a29a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1a2>
 801a188:	2c00      	cmp	r4, #0
 801a18a:	f100 0001 	add.w	r0, r0, #1
 801a18e:	f2c0 8082 	blt.w	801a296 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x19e>
 801a192:	45a1      	cmp	r9, r4
 801a194:	dd7f      	ble.n	801a296 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x19e>
 801a196:	2800      	cmp	r0, #0
 801a198:	db7d      	blt.n	801a296 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x19e>
 801a19a:	4580      	cmp	r8, r0
 801a19c:	dd7b      	ble.n	801a296 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x19e>
 801a19e:	eb03 0b0e 	add.w	fp, r3, lr
 801a1a2:	ea4f 045b 	mov.w	r4, fp, lsr #1
 801a1a6:	f01b 0f01 	tst.w	fp, #1
 801a1aa:	5d14      	ldrb	r4, [r2, r4]
 801a1ac:	bf0c      	ite	eq
 801a1ae:	f004 040f 	andeq.w	r4, r4, #15
 801a1b2:	1124      	asrne	r4, r4, #4
 801a1b4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a1b8:	b2e4      	uxtb	r4, r4
 801a1ba:	f1ba 0f00 	cmp.w	sl, #0
 801a1be:	db6f      	blt.n	801a2a0 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1a8>
 801a1c0:	45d1      	cmp	r9, sl
 801a1c2:	dd6d      	ble.n	801a2a0 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1a8>
 801a1c4:	2800      	cmp	r0, #0
 801a1c6:	db6b      	blt.n	801a2a0 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1a8>
 801a1c8:	4580      	cmp	r8, r0
 801a1ca:	dd69      	ble.n	801a2a0 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1a8>
 801a1cc:	2f00      	cmp	r7, #0
 801a1ce:	d069      	beq.n	801a2a4 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1ac>
 801a1d0:	3301      	adds	r3, #1
 801a1d2:	449e      	add	lr, r3
 801a1d4:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a1d8:	f01e 0f01 	tst.w	lr, #1
 801a1dc:	5cd0      	ldrb	r0, [r2, r3]
 801a1de:	bf0c      	ite	eq
 801a1e0:	f000 000f 	andeq.w	r0, r0, #15
 801a1e4:	1100      	asrne	r0, r0, #4
 801a1e6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a1ea:	b2c3      	uxtb	r3, r0
 801a1ec:	b2ba      	uxth	r2, r7
 801a1ee:	fa1f fc8c 	uxth.w	ip, ip
 801a1f2:	fb02 f00c 	mul.w	r0, r2, ip
 801a1f6:	0112      	lsls	r2, r2, #4
 801a1f8:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801a1fc:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801a200:	1a12      	subs	r2, r2, r0
 801a202:	fa1f fc8c 	uxth.w	ip, ip
 801a206:	b292      	uxth	r2, r2
 801a208:	eba7 070c 	sub.w	r7, r7, ip
 801a20c:	436a      	muls	r2, r5
 801a20e:	b2bf      	uxth	r7, r7
 801a210:	fb06 2207 	mla	r2, r6, r7, r2
 801a214:	fb0c 2404 	mla	r4, ip, r4, r2
 801a218:	fb00 4303 	mla	r3, r0, r3, r4
 801a21c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a220:	b38b      	cbz	r3, 801a286 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x18e>
 801a222:	4a21      	ldr	r2, [pc, #132]	; (801a2a8 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1b0>)
 801a224:	6814      	ldr	r4, [r2, #0]
 801a226:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 801a22a:	b2e5      	uxtb	r5, r4
 801a22c:	4353      	muls	r3, r2
 801a22e:	1c5a      	adds	r2, r3, #1
 801a230:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a234:	1212      	asrs	r2, r2, #8
 801a236:	b290      	uxth	r0, r2
 801a238:	43d2      	mvns	r2, r2
 801a23a:	fb15 f500 	smulbb	r5, r5, r0
 801a23e:	b2d3      	uxtb	r3, r2
 801a240:	780a      	ldrb	r2, [r1, #0]
 801a242:	fb02 5203 	mla	r2, r2, r3, r5
 801a246:	b292      	uxth	r2, r2
 801a248:	1c55      	adds	r5, r2, #1
 801a24a:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 801a24e:	784d      	ldrb	r5, [r1, #1]
 801a250:	fb15 f503 	smulbb	r5, r5, r3
 801a254:	1212      	asrs	r2, r2, #8
 801a256:	700a      	strb	r2, [r1, #0]
 801a258:	f3c4 2207 	ubfx	r2, r4, #8, #8
 801a25c:	f3c4 4407 	ubfx	r4, r4, #16, #8
 801a260:	fb02 5200 	mla	r2, r2, r0, r5
 801a264:	b292      	uxth	r2, r2
 801a266:	1c55      	adds	r5, r2, #1
 801a268:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 801a26c:	1212      	asrs	r2, r2, #8
 801a26e:	704a      	strb	r2, [r1, #1]
 801a270:	788a      	ldrb	r2, [r1, #2]
 801a272:	fb12 f303 	smulbb	r3, r2, r3
 801a276:	fb04 3300 	mla	r3, r4, r0, r3
 801a27a:	b29b      	uxth	r3, r3
 801a27c:	1c5a      	adds	r2, r3, #1
 801a27e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a282:	121b      	asrs	r3, r3, #8
 801a284:	708b      	strb	r3, [r1, #2]
 801a286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a28a:	2600      	movs	r6, #0
 801a28c:	e75a      	b.n	801a144 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x4c>
 801a28e:	2500      	movs	r5, #0
 801a290:	e776      	b.n	801a180 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x88>
 801a292:	463d      	mov	r5, r7
 801a294:	e774      	b.n	801a180 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x88>
 801a296:	2400      	movs	r4, #0
 801a298:	e78f      	b.n	801a1ba <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xc2>
 801a29a:	4663      	mov	r3, ip
 801a29c:	4664      	mov	r4, ip
 801a29e:	e7a5      	b.n	801a1ec <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf4>
 801a2a0:	2300      	movs	r3, #0
 801a2a2:	e7a3      	b.n	801a1ec <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf4>
 801a2a4:	463b      	mov	r3, r7
 801a2a6:	e7a1      	b.n	801a1ec <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf4>
 801a2a8:	2400895c 	.word	0x2400895c

0801a2ac <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a2ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2b0:	b097      	sub	sp, #92	; 0x5c
 801a2b2:	9214      	str	r2, [sp, #80]	; 0x50
 801a2b4:	9309      	str	r3, [sp, #36]	; 0x24
 801a2b6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801a2b8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801a2bc:	9015      	str	r0, [sp, #84]	; 0x54
 801a2be:	910c      	str	r1, [sp, #48]	; 0x30
 801a2c0:	6850      	ldr	r0, [r2, #4]
 801a2c2:	930e      	str	r3, [sp, #56]	; 0x38
 801a2c4:	6812      	ldr	r2, [r2, #0]
 801a2c6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801a2ca:	e9dd 5621 	ldrd	r5, r6, [sp, #132]	; 0x84
 801a2ce:	fb00 1303 	mla	r3, r0, r3, r1
 801a2d2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801a2d6:	eb02 0a03 	add.w	sl, r2, r3
 801a2da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a2dc:	689b      	ldr	r3, [r3, #8]
 801a2de:	3301      	adds	r3, #1
 801a2e0:	f023 0301 	bic.w	r3, r3, #1
 801a2e4:	930f      	str	r3, [sp, #60]	; 0x3c
 801a2e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a2e8:	681f      	ldr	r7, [r3, #0]
 801a2ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a2ec:	2b00      	cmp	r3, #0
 801a2ee:	dc03      	bgt.n	801a2f8 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a2f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a2f2:	2b00      	cmp	r3, #0
 801a2f4:	f340 8247 	ble.w	801a786 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4da>
 801a2f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a2fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a2fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a302:	1e48      	subs	r0, r1, #1
 801a304:	f102 3cff 	add.w	ip, r2, #4294967295
 801a308:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a30a:	2b00      	cmp	r3, #0
 801a30c:	f340 80e5 	ble.w	801a4da <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801a310:	ea5f 4e25 	movs.w	lr, r5, asr #16
 801a314:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a318:	d406      	bmi.n	801a328 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a31a:	4586      	cmp	lr, r0
 801a31c:	da04      	bge.n	801a328 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a31e:	2b00      	cmp	r3, #0
 801a320:	db02      	blt.n	801a328 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a322:	4563      	cmp	r3, ip
 801a324:	f2c0 80da 	blt.w	801a4dc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a328:	f11e 0e01 	adds.w	lr, lr, #1
 801a32c:	f100 80cb 	bmi.w	801a4c6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21a>
 801a330:	4571      	cmp	r1, lr
 801a332:	f2c0 80c8 	blt.w	801a4c6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21a>
 801a336:	3301      	adds	r3, #1
 801a338:	f100 80c5 	bmi.w	801a4c6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21a>
 801a33c:	429a      	cmp	r2, r3
 801a33e:	f2c0 80c2 	blt.w	801a4c6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21a>
 801a342:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a344:	46d0      	mov	r8, sl
 801a346:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 801a34a:	930d      	str	r3, [sp, #52]	; 0x34
 801a34c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a34e:	2b00      	cmp	r3, #0
 801a350:	f340 80e3 	ble.w	801a51a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26e>
 801a354:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a356:	1430      	asrs	r0, r6, #16
 801a358:	f3c5 3203 	ubfx	r2, r5, #12, #4
 801a35c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a360:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801a364:	142b      	asrs	r3, r5, #16
 801a366:	f100 812e 	bmi.w	801a5c6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801a36a:	f10c 3bff 	add.w	fp, ip, #4294967295
 801a36e:	455b      	cmp	r3, fp
 801a370:	f280 8129 	bge.w	801a5c6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801a374:	2800      	cmp	r0, #0
 801a376:	f2c0 8126 	blt.w	801a5c6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801a37a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a37e:	4558      	cmp	r0, fp
 801a380:	f280 8121 	bge.w	801a5c6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801a384:	fb00 3309 	mla	r3, r0, r9, r3
 801a388:	0858      	lsrs	r0, r3, #1
 801a38a:	07dc      	lsls	r4, r3, #31
 801a38c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801a390:	bf54      	ite	pl
 801a392:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a396:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a39a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a39e:	fa5f fc8c 	uxtb.w	ip, ip
 801a3a2:	2a00      	cmp	r2, #0
 801a3a4:	f000 80fe 	beq.w	801a5a4 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801a3a8:	1c58      	adds	r0, r3, #1
 801a3aa:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801a3ae:	07c0      	lsls	r0, r0, #31
 801a3b0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a3b4:	bf54      	ite	pl
 801a3b6:	f00e 0e0f 	andpl.w	lr, lr, #15
 801a3ba:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801a3be:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801a3c2:	fa5f f08e 	uxtb.w	r0, lr
 801a3c6:	9010      	str	r0, [sp, #64]	; 0x40
 801a3c8:	b1d9      	cbz	r1, 801a402 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a3ca:	444b      	add	r3, r9
 801a3cc:	0858      	lsrs	r0, r3, #1
 801a3ce:	07dc      	lsls	r4, r3, #31
 801a3d0:	f103 0301 	add.w	r3, r3, #1
 801a3d4:	5c38      	ldrb	r0, [r7, r0]
 801a3d6:	bf54      	ite	pl
 801a3d8:	f000 000f 	andpl.w	r0, r0, #15
 801a3dc:	1100      	asrmi	r0, r0, #4
 801a3de:	07dc      	lsls	r4, r3, #31
 801a3e0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a3e4:	b2c0      	uxtb	r0, r0
 801a3e6:	900a      	str	r0, [sp, #40]	; 0x28
 801a3e8:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801a3ec:	f817 e000 	ldrb.w	lr, [r7, r0]
 801a3f0:	bf54      	ite	pl
 801a3f2:	f00e 030f 	andpl.w	r3, lr, #15
 801a3f6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801a3fa:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a3fe:	b2db      	uxtb	r3, r3
 801a400:	9311      	str	r3, [sp, #68]	; 0x44
 801a402:	b292      	uxth	r2, r2
 801a404:	b289      	uxth	r1, r1
 801a406:	0113      	lsls	r3, r2, #4
 801a408:	fb02 f001 	mul.w	r0, r2, r1
 801a40c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a40e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a412:	ebc0 1101 	rsb	r1, r0, r1, lsl #4
 801a416:	1a1b      	subs	r3, r3, r0
 801a418:	b289      	uxth	r1, r1
 801a41a:	b29b      	uxth	r3, r3
 801a41c:	ebae 0e01 	sub.w	lr, lr, r1
 801a420:	4353      	muls	r3, r2
 801a422:	fa1f fe8e 	uxth.w	lr, lr
 801a426:	fb0c 320e 	mla	r2, ip, lr, r3
 801a42a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a42c:	fb01 2203 	mla	r2, r1, r3, r2
 801a430:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a432:	fb00 2203 	mla	r2, r0, r3, r2
 801a436:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a43a:	2a00      	cmp	r2, #0
 801a43c:	d039      	beq.n	801a4b2 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a43e:	4bc7      	ldr	r3, [pc, #796]	; (801a75c <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801a440:	6819      	ldr	r1, [r3, #0]
 801a442:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a444:	fa5f fc81 	uxtb.w	ip, r1
 801a448:	435a      	muls	r2, r3
 801a44a:	1c53      	adds	r3, r2, #1
 801a44c:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801a450:	1212      	asrs	r2, r2, #8
 801a452:	b290      	uxth	r0, r2
 801a454:	43d2      	mvns	r2, r2
 801a456:	fb1c fc00 	smulbb	ip, ip, r0
 801a45a:	b2d3      	uxtb	r3, r2
 801a45c:	f898 2000 	ldrb.w	r2, [r8]
 801a460:	fb02 c203 	mla	r2, r2, r3, ip
 801a464:	b292      	uxth	r2, r2
 801a466:	f102 0c01 	add.w	ip, r2, #1
 801a46a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801a46e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801a472:	fb1c fc03 	smulbb	ip, ip, r3
 801a476:	1212      	asrs	r2, r2, #8
 801a478:	f888 2000 	strb.w	r2, [r8]
 801a47c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801a480:	f3c1 4107 	ubfx	r1, r1, #16, #8
 801a484:	fb02 c200 	mla	r2, r2, r0, ip
 801a488:	b292      	uxth	r2, r2
 801a48a:	f102 0c01 	add.w	ip, r2, #1
 801a48e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801a492:	1212      	asrs	r2, r2, #8
 801a494:	f888 2001 	strb.w	r2, [r8, #1]
 801a498:	f898 2002 	ldrb.w	r2, [r8, #2]
 801a49c:	fb12 f303 	smulbb	r3, r2, r3
 801a4a0:	fb01 3300 	mla	r3, r1, r0, r3
 801a4a4:	b29b      	uxth	r3, r3
 801a4a6:	1c5a      	adds	r2, r3, #1
 801a4a8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a4ac:	121b      	asrs	r3, r3, #8
 801a4ae:	f888 3002 	strb.w	r3, [r8, #2]
 801a4b2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a4b4:	f108 0803 	add.w	r8, r8, #3
 801a4b8:	441d      	add	r5, r3
 801a4ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a4bc:	441e      	add	r6, r3
 801a4be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a4c0:	3b01      	subs	r3, #1
 801a4c2:	930d      	str	r3, [sp, #52]	; 0x34
 801a4c4:	e742      	b.n	801a34c <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a4c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a4c8:	f10a 0a03 	add.w	sl, sl, #3
 801a4cc:	441d      	add	r5, r3
 801a4ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a4d0:	441e      	add	r6, r3
 801a4d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a4d4:	3b01      	subs	r3, #1
 801a4d6:	9309      	str	r3, [sp, #36]	; 0x24
 801a4d8:	e716      	b.n	801a308 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a4da:	d024      	beq.n	801a526 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a4dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a4de:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801a4e0:	3b01      	subs	r3, #1
 801a4e2:	fb00 5003 	mla	r0, r0, r3, r5
 801a4e6:	1400      	asrs	r0, r0, #16
 801a4e8:	f53f af2b 	bmi.w	801a342 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a4ec:	3901      	subs	r1, #1
 801a4ee:	4288      	cmp	r0, r1
 801a4f0:	f6bf af27 	bge.w	801a342 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a4f4:	9924      	ldr	r1, [sp, #144]	; 0x90
 801a4f6:	fb01 6303 	mla	r3, r1, r3, r6
 801a4fa:	141b      	asrs	r3, r3, #16
 801a4fc:	f53f af21 	bmi.w	801a342 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a500:	3a01      	subs	r2, #1
 801a502:	4293      	cmp	r3, r2
 801a504:	f6bf af1d 	bge.w	801a342 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a508:	f10a 0e03 	add.w	lr, sl, #3
 801a50c:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 801a510:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 801a514:	f1b8 0f00 	cmp.w	r8, #0
 801a518:	dc76      	bgt.n	801a608 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 801a51a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a51c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a520:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a524:	44a2      	add	sl, r4
 801a526:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a528:	2b00      	cmp	r3, #0
 801a52a:	f340 812c 	ble.w	801a786 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4da>
 801a52e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a532:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a534:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a538:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a53c:	eef0 6a62 	vmov.f32	s13, s5
 801a540:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a544:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a548:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a54c:	ee16 5a90 	vmov	r5, s13
 801a550:	eef0 6a43 	vmov.f32	s13, s6
 801a554:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a558:	ee16 6a90 	vmov	r6, s13
 801a55c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a560:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a564:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a568:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a56c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a570:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a574:	ee12 2a90 	vmov	r2, s5
 801a578:	eef0 2a47 	vmov.f32	s5, s14
 801a57c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a580:	ee13 2a10 	vmov	r2, s6
 801a584:	9323      	str	r3, [sp, #140]	; 0x8c
 801a586:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a588:	eeb0 3a67 	vmov.f32	s6, s15
 801a58c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a590:	9324      	str	r3, [sp, #144]	; 0x90
 801a592:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a594:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a596:	3b01      	subs	r3, #1
 801a598:	930c      	str	r3, [sp, #48]	; 0x30
 801a59a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a59c:	bf08      	it	eq
 801a59e:	4613      	moveq	r3, r2
 801a5a0:	9309      	str	r3, [sp, #36]	; 0x24
 801a5a2:	e6a2      	b.n	801a2ea <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a5a4:	2900      	cmp	r1, #0
 801a5a6:	f43f af2c 	beq.w	801a402 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a5aa:	eb09 0003 	add.w	r0, r9, r3
 801a5ae:	0843      	lsrs	r3, r0, #1
 801a5b0:	07c0      	lsls	r0, r0, #31
 801a5b2:	5cfb      	ldrb	r3, [r7, r3]
 801a5b4:	bf54      	ite	pl
 801a5b6:	f003 030f 	andpl.w	r3, r3, #15
 801a5ba:	111b      	asrmi	r3, r3, #4
 801a5bc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a5c0:	b2db      	uxtb	r3, r3
 801a5c2:	930a      	str	r3, [sp, #40]	; 0x28
 801a5c4:	e71d      	b.n	801a402 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a5c6:	f113 0b01 	adds.w	fp, r3, #1
 801a5ca:	f53f af72 	bmi.w	801a4b2 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a5ce:	45dc      	cmp	ip, fp
 801a5d0:	f6ff af6f 	blt.w	801a4b2 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a5d4:	f110 0b01 	adds.w	fp, r0, #1
 801a5d8:	f53f af6b 	bmi.w	801a4b2 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a5dc:	45de      	cmp	lr, fp
 801a5de:	f6ff af68 	blt.w	801a4b2 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a5e2:	9302      	str	r3, [sp, #8]
 801a5e4:	fa0f f38e 	sxth.w	r3, lr
 801a5e8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a5ea:	9301      	str	r3, [sp, #4]
 801a5ec:	fa0f f38c 	sxth.w	r3, ip
 801a5f0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801a5f4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a5f8:	9300      	str	r3, [sp, #0]
 801a5fa:	463a      	mov	r2, r7
 801a5fc:	464b      	mov	r3, r9
 801a5fe:	4641      	mov	r1, r8
 801a600:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a602:	f7ff fd79 	bl	801a0f8 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh>
 801a606:	e754      	b.n	801a4b2 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a608:	142a      	asrs	r2, r5, #16
 801a60a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a60e:	1433      	asrs	r3, r6, #16
 801a610:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a614:	fb09 2303 	mla	r3, r9, r3, r2
 801a618:	085a      	lsrs	r2, r3, #1
 801a61a:	07dc      	lsls	r4, r3, #31
 801a61c:	5cba      	ldrb	r2, [r7, r2]
 801a61e:	bf54      	ite	pl
 801a620:	f002 020f 	andpl.w	r2, r2, #15
 801a624:	1112      	asrmi	r2, r2, #4
 801a626:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a62a:	b2d2      	uxtb	r2, r2
 801a62c:	2900      	cmp	r1, #0
 801a62e:	f000 8097 	beq.w	801a760 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a632:	f103 0b01 	add.w	fp, r3, #1
 801a636:	ea4f 0c5b 	mov.w	ip, fp, lsr #1
 801a63a:	f01b 0f01 	tst.w	fp, #1
 801a63e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a642:	bf0c      	ite	eq
 801a644:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a648:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a64c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a650:	fa5f f48c 	uxtb.w	r4, ip
 801a654:	9412      	str	r4, [sp, #72]	; 0x48
 801a656:	b300      	cbz	r0, 801a69a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801a658:	444b      	add	r3, r9
 801a65a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a65e:	07dc      	lsls	r4, r3, #31
 801a660:	f103 0301 	add.w	r3, r3, #1
 801a664:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a668:	bf54      	ite	pl
 801a66a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a66e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a672:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a676:	fa5f f48c 	uxtb.w	r4, ip
 801a67a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a67e:	940b      	str	r4, [sp, #44]	; 0x2c
 801a680:	07dc      	lsls	r4, r3, #31
 801a682:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a686:	bf54      	ite	pl
 801a688:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a68c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a690:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a694:	fa5f f38c 	uxtb.w	r3, ip
 801a698:	9313      	str	r3, [sp, #76]	; 0x4c
 801a69a:	b289      	uxth	r1, r1
 801a69c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a69e:	b280      	uxth	r0, r0
 801a6a0:	fb01 f300 	mul.w	r3, r1, r0
 801a6a4:	0109      	lsls	r1, r1, #4
 801a6a6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801a6aa:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801a6ae:	1ac9      	subs	r1, r1, r3
 801a6b0:	b280      	uxth	r0, r0
 801a6b2:	b289      	uxth	r1, r1
 801a6b4:	ebac 0c00 	sub.w	ip, ip, r0
 801a6b8:	4361      	muls	r1, r4
 801a6ba:	fa1f fc8c 	uxth.w	ip, ip
 801a6be:	fb02 120c 	mla	r2, r2, ip, r1
 801a6c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801a6c4:	fb00 2001 	mla	r0, r0, r1, r2
 801a6c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a6ca:	fb03 0302 	mla	r3, r3, r2, r0
 801a6ce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a6d2:	2b00      	cmp	r3, #0
 801a6d4:	d039      	beq.n	801a74a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801a6d6:	4a21      	ldr	r2, [pc, #132]	; (801a75c <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801a6d8:	f81e 1c03 	ldrb.w	r1, [lr, #-3]
 801a6dc:	6810      	ldr	r0, [r2, #0]
 801a6de:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a6e0:	fa5f fc80 	uxtb.w	ip, r0
 801a6e4:	4353      	muls	r3, r2
 801a6e6:	1c5a      	adds	r2, r3, #1
 801a6e8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a6ec:	121b      	asrs	r3, r3, #8
 801a6ee:	b29a      	uxth	r2, r3
 801a6f0:	43db      	mvns	r3, r3
 801a6f2:	fb1c fc02 	smulbb	ip, ip, r2
 801a6f6:	b2db      	uxtb	r3, r3
 801a6f8:	fb01 c103 	mla	r1, r1, r3, ip
 801a6fc:	b289      	uxth	r1, r1
 801a6fe:	f101 0c01 	add.w	ip, r1, #1
 801a702:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801a706:	f81e cc02 	ldrb.w	ip, [lr, #-2]
 801a70a:	fb1c fc03 	smulbb	ip, ip, r3
 801a70e:	1209      	asrs	r1, r1, #8
 801a710:	f80e 1c03 	strb.w	r1, [lr, #-3]
 801a714:	f3c0 2107 	ubfx	r1, r0, #8, #8
 801a718:	f3c0 4007 	ubfx	r0, r0, #16, #8
 801a71c:	fb01 c102 	mla	r1, r1, r2, ip
 801a720:	b289      	uxth	r1, r1
 801a722:	f101 0c01 	add.w	ip, r1, #1
 801a726:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801a72a:	1209      	asrs	r1, r1, #8
 801a72c:	f80e 1c02 	strb.w	r1, [lr, #-2]
 801a730:	f81e 1c01 	ldrb.w	r1, [lr, #-1]
 801a734:	fb11 f303 	smulbb	r3, r1, r3
 801a738:	fb00 3002 	mla	r0, r0, r2, r3
 801a73c:	b280      	uxth	r0, r0
 801a73e:	1c42      	adds	r2, r0, #1
 801a740:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a744:	1200      	asrs	r0, r0, #8
 801a746:	f80e 0c01 	strb.w	r0, [lr, #-1]
 801a74a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a74c:	f10e 0e03 	add.w	lr, lr, #3
 801a750:	f108 38ff 	add.w	r8, r8, #4294967295
 801a754:	441d      	add	r5, r3
 801a756:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a758:	441e      	add	r6, r3
 801a75a:	e6db      	b.n	801a514 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801a75c:	2400895c 	.word	0x2400895c
 801a760:	2800      	cmp	r0, #0
 801a762:	d09a      	beq.n	801a69a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801a764:	444b      	add	r3, r9
 801a766:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a76a:	07db      	lsls	r3, r3, #31
 801a76c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a770:	bf54      	ite	pl
 801a772:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a776:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a77a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a77e:	fa5f f38c 	uxtb.w	r3, ip
 801a782:	930b      	str	r3, [sp, #44]	; 0x2c
 801a784:	e789      	b.n	801a69a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801a786:	b017      	add	sp, #92	; 0x5c
 801a788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a78c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh>:
 801a78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a790:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
 801a794:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a798:	2d00      	cmp	r5, #0
 801a79a:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801a79e:	f89d 0034 	ldrb.w	r0, [sp, #52]	; 0x34
 801a7a2:	fb04 5e03 	mla	lr, r4, r3, r5
 801a7a6:	f89d c038 	ldrb.w	ip, [sp, #56]	; 0x38
 801a7aa:	f2c0 80b1 	blt.w	801a910 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x184>
 801a7ae:	45a9      	cmp	r9, r5
 801a7b0:	f340 80ae 	ble.w	801a910 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x184>
 801a7b4:	2c00      	cmp	r4, #0
 801a7b6:	f2c0 80ab 	blt.w	801a910 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x184>
 801a7ba:	45a0      	cmp	r8, r4
 801a7bc:	f340 80a8 	ble.w	801a910 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x184>
 801a7c0:	ea4f 065e 	mov.w	r6, lr, lsr #1
 801a7c4:	f01e 0f01 	tst.w	lr, #1
 801a7c8:	5d97      	ldrb	r7, [r2, r6]
 801a7ca:	bf0c      	ite	eq
 801a7cc:	f007 070f 	andeq.w	r7, r7, #15
 801a7d0:	113f      	asrne	r7, r7, #4
 801a7d2:	eb07 1707 	add.w	r7, r7, r7, lsl #4
 801a7d6:	b2ff      	uxtb	r7, r7
 801a7d8:	f115 0a01 	adds.w	sl, r5, #1
 801a7dc:	f100 809a 	bmi.w	801a914 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x188>
 801a7e0:	45d1      	cmp	r9, sl
 801a7e2:	f340 8097 	ble.w	801a914 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x188>
 801a7e6:	2c00      	cmp	r4, #0
 801a7e8:	f2c0 8094 	blt.w	801a914 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x188>
 801a7ec:	45a0      	cmp	r8, r4
 801a7ee:	f340 8091 	ble.w	801a914 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x188>
 801a7f2:	2800      	cmp	r0, #0
 801a7f4:	f000 8090 	beq.w	801a918 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x18c>
 801a7f8:	f10e 0b01 	add.w	fp, lr, #1
 801a7fc:	ea4f 065b 	mov.w	r6, fp, lsr #1
 801a800:	f01b 0f01 	tst.w	fp, #1
 801a804:	5d96      	ldrb	r6, [r2, r6]
 801a806:	bf0c      	ite	eq
 801a808:	f006 060f 	andeq.w	r6, r6, #15
 801a80c:	1136      	asrne	r6, r6, #4
 801a80e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a812:	b2f6      	uxtb	r6, r6
 801a814:	f1bc 0f00 	cmp.w	ip, #0
 801a818:	f000 8082 	beq.w	801a920 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x194>
 801a81c:	2d00      	cmp	r5, #0
 801a81e:	f104 0401 	add.w	r4, r4, #1
 801a822:	db7b      	blt.n	801a91c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x190>
 801a824:	45a9      	cmp	r9, r5
 801a826:	dd79      	ble.n	801a91c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x190>
 801a828:	2c00      	cmp	r4, #0
 801a82a:	db77      	blt.n	801a91c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x190>
 801a82c:	45a0      	cmp	r8, r4
 801a82e:	dd75      	ble.n	801a91c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x190>
 801a830:	eb03 0b0e 	add.w	fp, r3, lr
 801a834:	ea4f 055b 	mov.w	r5, fp, lsr #1
 801a838:	f01b 0f01 	tst.w	fp, #1
 801a83c:	5d55      	ldrb	r5, [r2, r5]
 801a83e:	bf0c      	ite	eq
 801a840:	f005 050f 	andeq.w	r5, r5, #15
 801a844:	112d      	asrne	r5, r5, #4
 801a846:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801a84a:	b2ed      	uxtb	r5, r5
 801a84c:	f1ba 0f00 	cmp.w	sl, #0
 801a850:	db69      	blt.n	801a926 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19a>
 801a852:	45d1      	cmp	r9, sl
 801a854:	dd67      	ble.n	801a926 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19a>
 801a856:	2c00      	cmp	r4, #0
 801a858:	db65      	blt.n	801a926 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19a>
 801a85a:	45a0      	cmp	r8, r4
 801a85c:	dd63      	ble.n	801a926 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19a>
 801a85e:	2800      	cmp	r0, #0
 801a860:	d063      	beq.n	801a92a <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19e>
 801a862:	3301      	adds	r3, #1
 801a864:	449e      	add	lr, r3
 801a866:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a86a:	f01e 0f01 	tst.w	lr, #1
 801a86e:	5cd4      	ldrb	r4, [r2, r3]
 801a870:	bf0c      	ite	eq
 801a872:	f004 040f 	andeq.w	r4, r4, #15
 801a876:	1124      	asrne	r4, r4, #4
 801a878:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a87c:	b2e3      	uxtb	r3, r4
 801a87e:	b282      	uxth	r2, r0
 801a880:	fa1f fc8c 	uxth.w	ip, ip
 801a884:	fb02 f40c 	mul.w	r4, r2, ip
 801a888:	0112      	lsls	r2, r2, #4
 801a88a:	ebc4 1c0c 	rsb	ip, r4, ip, lsl #4
 801a88e:	fa1f f08c 	uxth.w	r0, ip
 801a892:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801a896:	1b12      	subs	r2, r2, r4
 801a898:	ebac 0c00 	sub.w	ip, ip, r0
 801a89c:	b292      	uxth	r2, r2
 801a89e:	fa1f fc8c 	uxth.w	ip, ip
 801a8a2:	4372      	muls	r2, r6
 801a8a4:	fb07 220c 	mla	r2, r7, ip, r2
 801a8a8:	fb00 2005 	mla	r0, r0, r5, r2
 801a8ac:	fb04 0303 	mla	r3, r4, r3, r0
 801a8b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a8b4:	b353      	cbz	r3, 801a90c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x180>
 801a8b6:	4a1e      	ldr	r2, [pc, #120]	; (801a930 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1a4>)
 801a8b8:	7808      	ldrb	r0, [r1, #0]
 801a8ba:	6814      	ldr	r4, [r2, #0]
 801a8bc:	b29a      	uxth	r2, r3
 801a8be:	43db      	mvns	r3, r3
 801a8c0:	b2e5      	uxtb	r5, r4
 801a8c2:	b2db      	uxtb	r3, r3
 801a8c4:	fb15 f502 	smulbb	r5, r5, r2
 801a8c8:	fb00 5003 	mla	r0, r0, r3, r5
 801a8cc:	b280      	uxth	r0, r0
 801a8ce:	1c45      	adds	r5, r0, #1
 801a8d0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801a8d4:	784d      	ldrb	r5, [r1, #1]
 801a8d6:	fb15 f503 	smulbb	r5, r5, r3
 801a8da:	1200      	asrs	r0, r0, #8
 801a8dc:	7008      	strb	r0, [r1, #0]
 801a8de:	f3c4 2007 	ubfx	r0, r4, #8, #8
 801a8e2:	f3c4 4407 	ubfx	r4, r4, #16, #8
 801a8e6:	fb00 5002 	mla	r0, r0, r2, r5
 801a8ea:	b280      	uxth	r0, r0
 801a8ec:	1c45      	adds	r5, r0, #1
 801a8ee:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801a8f2:	1200      	asrs	r0, r0, #8
 801a8f4:	7048      	strb	r0, [r1, #1]
 801a8f6:	7888      	ldrb	r0, [r1, #2]
 801a8f8:	fb10 f303 	smulbb	r3, r0, r3
 801a8fc:	fb04 3202 	mla	r2, r4, r2, r3
 801a900:	b292      	uxth	r2, r2
 801a902:	1c53      	adds	r3, r2, #1
 801a904:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801a908:	1212      	asrs	r2, r2, #8
 801a90a:	708a      	strb	r2, [r1, #2]
 801a90c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a910:	2700      	movs	r7, #0
 801a912:	e761      	b.n	801a7d8 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x4c>
 801a914:	2600      	movs	r6, #0
 801a916:	e77d      	b.n	801a814 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x88>
 801a918:	4606      	mov	r6, r0
 801a91a:	e77b      	b.n	801a814 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x88>
 801a91c:	2500      	movs	r5, #0
 801a91e:	e795      	b.n	801a84c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xc0>
 801a920:	4663      	mov	r3, ip
 801a922:	4665      	mov	r5, ip
 801a924:	e7ab      	b.n	801a87e <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf2>
 801a926:	2300      	movs	r3, #0
 801a928:	e7a9      	b.n	801a87e <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf2>
 801a92a:	4603      	mov	r3, r0
 801a92c:	e7a7      	b.n	801a87e <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf2>
 801a92e:	bf00      	nop
 801a930:	2400895c 	.word	0x2400895c

0801a934 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a938:	b093      	sub	sp, #76	; 0x4c
 801a93a:	461c      	mov	r4, r3
 801a93c:	920c      	str	r2, [sp, #48]	; 0x30
 801a93e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a940:	9011      	str	r0, [sp, #68]	; 0x44
 801a942:	9107      	str	r1, [sp, #28]
 801a944:	6850      	ldr	r0, [r2, #4]
 801a946:	6812      	ldr	r2, [r2, #0]
 801a948:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801a94c:	e9dd 561d 	ldrd	r5, r6, [sp, #116]	; 0x74
 801a950:	fb00 1303 	mla	r3, r0, r3, r1
 801a954:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801a958:	eb02 0b03 	add.w	fp, r2, r3
 801a95c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a95e:	689b      	ldr	r3, [r3, #8]
 801a960:	3301      	adds	r3, #1
 801a962:	f023 0301 	bic.w	r3, r3, #1
 801a966:	9309      	str	r3, [sp, #36]	; 0x24
 801a968:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a96a:	f8d3 8000 	ldr.w	r8, [r3]
 801a96e:	9b07      	ldr	r3, [sp, #28]
 801a970:	2b00      	cmp	r3, #0
 801a972:	dc03      	bgt.n	801a97c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a974:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a976:	2b00      	cmp	r3, #0
 801a978:	f340 822b 	ble.w	801add2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801a97c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a97e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a982:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a986:	1e48      	subs	r0, r1, #1
 801a988:	1e57      	subs	r7, r2, #1
 801a98a:	2c00      	cmp	r4, #0
 801a98c:	f340 80d7 	ble.w	801ab3e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801a990:	ea5f 4c25 	movs.w	ip, r5, asr #16
 801a994:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a998:	d406      	bmi.n	801a9a8 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a99a:	4584      	cmp	ip, r0
 801a99c:	da04      	bge.n	801a9a8 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a99e:	2b00      	cmp	r3, #0
 801a9a0:	db02      	blt.n	801a9a8 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a9a2:	42bb      	cmp	r3, r7
 801a9a4:	f2c0 80cc 	blt.w	801ab40 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801a9a8:	f11c 0c01 	adds.w	ip, ip, #1
 801a9ac:	f100 80bf 	bmi.w	801ab2e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a9b0:	4561      	cmp	r1, ip
 801a9b2:	f2c0 80bc 	blt.w	801ab2e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a9b6:	3301      	adds	r3, #1
 801a9b8:	f100 80b9 	bmi.w	801ab2e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a9bc:	429a      	cmp	r2, r3
 801a9be:	f2c0 80b6 	blt.w	801ab2e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a9c2:	46a2      	mov	sl, r4
 801a9c4:	465f      	mov	r7, fp
 801a9c6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a9ca:	f1ba 0f00 	cmp.w	sl, #0
 801a9ce:	f340 80d4 	ble.w	801ab7a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a9d2:	f3c5 3303 	ubfx	r3, r5, #12, #4
 801a9d6:	1430      	asrs	r0, r6, #16
 801a9d8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a9dc:	9308      	str	r3, [sp, #32]
 801a9de:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a9e0:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801a9e4:	142b      	asrs	r3, r5, #16
 801a9e6:	f100 8124 	bmi.w	801ac32 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801a9ea:	f10c 32ff 	add.w	r2, ip, #4294967295
 801a9ee:	4293      	cmp	r3, r2
 801a9f0:	f280 811f 	bge.w	801ac32 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801a9f4:	2800      	cmp	r0, #0
 801a9f6:	f2c0 811c 	blt.w	801ac32 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801a9fa:	f10e 32ff 	add.w	r2, lr, #4294967295
 801a9fe:	4290      	cmp	r0, r2
 801aa00:	f280 8117 	bge.w	801ac32 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801aa04:	fb00 3309 	mla	r3, r0, r9, r3
 801aa08:	0858      	lsrs	r0, r3, #1
 801aa0a:	07da      	lsls	r2, r3, #31
 801aa0c:	9a08      	ldr	r2, [sp, #32]
 801aa0e:	f818 c000 	ldrb.w	ip, [r8, r0]
 801aa12:	bf54      	ite	pl
 801aa14:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aa18:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aa1c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aa20:	fa5f fc8c 	uxtb.w	ip, ip
 801aa24:	2a00      	cmp	r2, #0
 801aa26:	f000 80ed 	beq.w	801ac04 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 801aa2a:	1c58      	adds	r0, r3, #1
 801aa2c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801aa30:	07c0      	lsls	r0, r0, #31
 801aa32:	f818 e00e 	ldrb.w	lr, [r8, lr]
 801aa36:	bf54      	ite	pl
 801aa38:	f00e 0e0f 	andpl.w	lr, lr, #15
 801aa3c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801aa40:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801aa44:	fa5f fe8e 	uxtb.w	lr, lr
 801aa48:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801aa4c:	b1c9      	cbz	r1, 801aa82 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aa4e:	444b      	add	r3, r9
 801aa50:	0858      	lsrs	r0, r3, #1
 801aa52:	07da      	lsls	r2, r3, #31
 801aa54:	f818 0000 	ldrb.w	r0, [r8, r0]
 801aa58:	bf54      	ite	pl
 801aa5a:	f000 000f 	andpl.w	r0, r0, #15
 801aa5e:	1100      	asrmi	r0, r0, #4
 801aa60:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801aa64:	b2c0      	uxtb	r0, r0
 801aa66:	900a      	str	r0, [sp, #40]	; 0x28
 801aa68:	1c58      	adds	r0, r3, #1
 801aa6a:	0843      	lsrs	r3, r0, #1
 801aa6c:	07c2      	lsls	r2, r0, #31
 801aa6e:	f818 3003 	ldrb.w	r3, [r8, r3]
 801aa72:	bf54      	ite	pl
 801aa74:	f003 030f 	andpl.w	r3, r3, #15
 801aa78:	111b      	asrmi	r3, r3, #4
 801aa7a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801aa7e:	b2db      	uxtb	r3, r3
 801aa80:	930e      	str	r3, [sp, #56]	; 0x38
 801aa82:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801aa86:	b289      	uxth	r1, r1
 801aa88:	fb02 f301 	mul.w	r3, r2, r1
 801aa8c:	0112      	lsls	r2, r2, #4
 801aa8e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801aa92:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801aa96:	1ad2      	subs	r2, r2, r3
 801aa98:	b289      	uxth	r1, r1
 801aa9a:	b292      	uxth	r2, r2
 801aa9c:	1a40      	subs	r0, r0, r1
 801aa9e:	fa1f fe80 	uxth.w	lr, r0
 801aaa2:	980d      	ldr	r0, [sp, #52]	; 0x34
 801aaa4:	4342      	muls	r2, r0
 801aaa6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801aaaa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801aaac:	fb01 c102 	mla	r1, r1, r2, ip
 801aab0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801aab2:	fb03 1302 	mla	r3, r3, r2, r1
 801aab6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801aaba:	b383      	cbz	r3, 801ab1e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801aabc:	4ac6      	ldr	r2, [pc, #792]	; (801add8 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>)
 801aabe:	2bff      	cmp	r3, #255	; 0xff
 801aac0:	6812      	ldr	r2, [r2, #0]
 801aac2:	f3c2 4e07 	ubfx	lr, r2, #16, #8
 801aac6:	f3c2 2007 	ubfx	r0, r2, #8, #8
 801aaca:	b2d2      	uxtb	r2, r2
 801aacc:	f000 80ac 	beq.w	801ac28 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801aad0:	b299      	uxth	r1, r3
 801aad2:	43db      	mvns	r3, r3
 801aad4:	f897 c000 	ldrb.w	ip, [r7]
 801aad8:	fb12 f201 	smulbb	r2, r2, r1
 801aadc:	b2db      	uxtb	r3, r3
 801aade:	fb10 f001 	smulbb	r0, r0, r1
 801aae2:	fb0c 2203 	mla	r2, ip, r3, r2
 801aae6:	fb1e f101 	smulbb	r1, lr, r1
 801aaea:	b292      	uxth	r2, r2
 801aaec:	f102 0c01 	add.w	ip, r2, #1
 801aaf0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801aaf4:	1212      	asrs	r2, r2, #8
 801aaf6:	703a      	strb	r2, [r7, #0]
 801aaf8:	787a      	ldrb	r2, [r7, #1]
 801aafa:	fb02 0003 	mla	r0, r2, r3, r0
 801aafe:	b280      	uxth	r0, r0
 801ab00:	1c42      	adds	r2, r0, #1
 801ab02:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ab06:	78ba      	ldrb	r2, [r7, #2]
 801ab08:	fb02 1303 	mla	r3, r2, r3, r1
 801ab0c:	1200      	asrs	r0, r0, #8
 801ab0e:	b29b      	uxth	r3, r3
 801ab10:	7078      	strb	r0, [r7, #1]
 801ab12:	f103 0e01 	add.w	lr, r3, #1
 801ab16:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 801ab1a:	121b      	asrs	r3, r3, #8
 801ab1c:	70bb      	strb	r3, [r7, #2]
 801ab1e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ab20:	3703      	adds	r7, #3
 801ab22:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ab26:	441d      	add	r5, r3
 801ab28:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ab2a:	441e      	add	r6, r3
 801ab2c:	e74d      	b.n	801a9ca <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ab2e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ab30:	3c01      	subs	r4, #1
 801ab32:	f10b 0b03 	add.w	fp, fp, #3
 801ab36:	441d      	add	r5, r3
 801ab38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ab3a:	441e      	add	r6, r3
 801ab3c:	e725      	b.n	801a98a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801ab3e:	d021      	beq.n	801ab84 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801ab40:	1e63      	subs	r3, r4, #1
 801ab42:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ab44:	fb00 5003 	mla	r0, r0, r3, r5
 801ab48:	1400      	asrs	r0, r0, #16
 801ab4a:	f53f af3a 	bmi.w	801a9c2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ab4e:	3901      	subs	r1, #1
 801ab50:	4288      	cmp	r0, r1
 801ab52:	f6bf af36 	bge.w	801a9c2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ab56:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ab58:	fb01 6303 	mla	r3, r1, r3, r6
 801ab5c:	141b      	asrs	r3, r3, #16
 801ab5e:	f53f af30 	bmi.w	801a9c2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ab62:	3a01      	subs	r2, #1
 801ab64:	4293      	cmp	r3, r2
 801ab66:	f6bf af2c 	bge.w	801a9c2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ab6a:	f10b 0c03 	add.w	ip, fp, #3
 801ab6e:	46a6      	mov	lr, r4
 801ab70:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ab74:	f1be 0f00 	cmp.w	lr, #0
 801ab78:	dc79      	bgt.n	801ac6e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801ab7a:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 801ab7e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801ab82:	44a3      	add	fp, r4
 801ab84:	9b07      	ldr	r3, [sp, #28]
 801ab86:	2b00      	cmp	r3, #0
 801ab88:	f340 8123 	ble.w	801add2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801ab8c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ab90:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ab92:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ab9a:	eef0 6a62 	vmov.f32	s13, s5
 801ab9e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801aba2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aba6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abaa:	ee16 5a90 	vmov	r5, s13
 801abae:	eef0 6a43 	vmov.f32	s13, s6
 801abb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abb6:	ee16 6a90 	vmov	r6, s13
 801abba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801abbe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801abc2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801abc6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801abca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801abce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801abd2:	ee12 2a90 	vmov	r2, s5
 801abd6:	eef0 2a47 	vmov.f32	s5, s14
 801abda:	fb92 f3f3 	sdiv	r3, r2, r3
 801abde:	ee13 2a10 	vmov	r2, s6
 801abe2:	931f      	str	r3, [sp, #124]	; 0x7c
 801abe4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801abe6:	eeb0 3a67 	vmov.f32	s6, s15
 801abea:	fb92 f3f3 	sdiv	r3, r2, r3
 801abee:	9320      	str	r3, [sp, #128]	; 0x80
 801abf0:	9b07      	ldr	r3, [sp, #28]
 801abf2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801abf4:	3b01      	subs	r3, #1
 801abf6:	9307      	str	r3, [sp, #28]
 801abf8:	bf08      	it	eq
 801abfa:	4614      	moveq	r4, r2
 801abfc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801abfe:	bf18      	it	ne
 801ac00:	461c      	movne	r4, r3
 801ac02:	e6b4      	b.n	801a96e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ac04:	2900      	cmp	r1, #0
 801ac06:	f43f af3c 	beq.w	801aa82 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ac0a:	eb09 0003 	add.w	r0, r9, r3
 801ac0e:	0843      	lsrs	r3, r0, #1
 801ac10:	07c0      	lsls	r0, r0, #31
 801ac12:	f818 3003 	ldrb.w	r3, [r8, r3]
 801ac16:	bf54      	ite	pl
 801ac18:	f003 030f 	andpl.w	r3, r3, #15
 801ac1c:	111b      	asrmi	r3, r3, #4
 801ac1e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ac22:	b2db      	uxtb	r3, r3
 801ac24:	930a      	str	r3, [sp, #40]	; 0x28
 801ac26:	e72c      	b.n	801aa82 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ac28:	703a      	strb	r2, [r7, #0]
 801ac2a:	7078      	strb	r0, [r7, #1]
 801ac2c:	f887 e002 	strb.w	lr, [r7, #2]
 801ac30:	e775      	b.n	801ab1e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801ac32:	1c5a      	adds	r2, r3, #1
 801ac34:	f53f af73 	bmi.w	801ab1e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801ac38:	4594      	cmp	ip, r2
 801ac3a:	f6ff af70 	blt.w	801ab1e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801ac3e:	1c42      	adds	r2, r0, #1
 801ac40:	f53f af6d 	bmi.w	801ab1e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801ac44:	4596      	cmp	lr, r2
 801ac46:	f6ff af6a 	blt.w	801ab1e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801ac4a:	9302      	str	r3, [sp, #8]
 801ac4c:	fa0f f38e 	sxth.w	r3, lr
 801ac50:	9a08      	ldr	r2, [sp, #32]
 801ac52:	9301      	str	r3, [sp, #4]
 801ac54:	fa0f f38c 	sxth.w	r3, ip
 801ac58:	9105      	str	r1, [sp, #20]
 801ac5a:	4639      	mov	r1, r7
 801ac5c:	9300      	str	r3, [sp, #0]
 801ac5e:	464b      	mov	r3, r9
 801ac60:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801ac64:	4642      	mov	r2, r8
 801ac66:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ac68:	f7ff fd90 	bl	801a78c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh>
 801ac6c:	e757      	b.n	801ab1e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801ac6e:	142a      	asrs	r2, r5, #16
 801ac70:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ac74:	1433      	asrs	r3, r6, #16
 801ac76:	f3c6 3703 	ubfx	r7, r6, #12, #4
 801ac7a:	fb09 2303 	mla	r3, r9, r3, r2
 801ac7e:	085a      	lsrs	r2, r3, #1
 801ac80:	07d9      	lsls	r1, r3, #31
 801ac82:	f818 2002 	ldrb.w	r2, [r8, r2]
 801ac86:	bf54      	ite	pl
 801ac88:	f002 020f 	andpl.w	r2, r2, #15
 801ac8c:	1112      	asrmi	r2, r2, #4
 801ac8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ac92:	b2d2      	uxtb	r2, r2
 801ac94:	2800      	cmp	r0, #0
 801ac96:	f000 8085 	beq.w	801ada4 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801ac9a:	f103 0a01 	add.w	sl, r3, #1
 801ac9e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801aca2:	f01a 0f01 	tst.w	sl, #1
 801aca6:	f818 1001 	ldrb.w	r1, [r8, r1]
 801acaa:	bf0c      	ite	eq
 801acac:	f001 010f 	andeq.w	r1, r1, #15
 801acb0:	1109      	asrne	r1, r1, #4
 801acb2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801acb6:	b2c9      	uxtb	r1, r1
 801acb8:	910f      	str	r1, [sp, #60]	; 0x3c
 801acba:	b1df      	cbz	r7, 801acf4 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801acbc:	444b      	add	r3, r9
 801acbe:	0859      	lsrs	r1, r3, #1
 801acc0:	f013 0f01 	tst.w	r3, #1
 801acc4:	f103 0301 	add.w	r3, r3, #1
 801acc8:	f818 1001 	ldrb.w	r1, [r8, r1]
 801accc:	bf0c      	ite	eq
 801acce:	f001 010f 	andeq.w	r1, r1, #15
 801acd2:	1109      	asrne	r1, r1, #4
 801acd4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801acd8:	b2c9      	uxtb	r1, r1
 801acda:	910b      	str	r1, [sp, #44]	; 0x2c
 801acdc:	0859      	lsrs	r1, r3, #1
 801acde:	07db      	lsls	r3, r3, #31
 801ace0:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ace4:	bf54      	ite	pl
 801ace6:	f001 010f 	andpl.w	r1, r1, #15
 801acea:	1109      	asrmi	r1, r1, #4
 801acec:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801acf0:	b2c9      	uxtb	r1, r1
 801acf2:	9110      	str	r1, [sp, #64]	; 0x40
 801acf4:	b280      	uxth	r0, r0
 801acf6:	b2bf      	uxth	r7, r7
 801acf8:	fb00 f307 	mul.w	r3, r0, r7
 801acfc:	0100      	lsls	r0, r0, #4
 801acfe:	ebc3 1707 	rsb	r7, r3, r7, lsl #4
 801ad02:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801ad06:	1ac0      	subs	r0, r0, r3
 801ad08:	b2bf      	uxth	r7, r7
 801ad0a:	b280      	uxth	r0, r0
 801ad0c:	1bc9      	subs	r1, r1, r7
 801ad0e:	fa1f fa81 	uxth.w	sl, r1
 801ad12:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ad14:	4348      	muls	r0, r1
 801ad16:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801ad18:	fb02 020a 	mla	r2, r2, sl, r0
 801ad1c:	fb07 2701 	mla	r7, r7, r1, r2
 801ad20:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ad22:	fb03 7302 	mla	r3, r3, r2, r7
 801ad26:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ad2a:	b393      	cbz	r3, 801ad92 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 801ad2c:	4a2a      	ldr	r2, [pc, #168]	; (801add8 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>)
 801ad2e:	2bff      	cmp	r3, #255	; 0xff
 801ad30:	6811      	ldr	r1, [r2, #0]
 801ad32:	f3c1 4a07 	ubfx	sl, r1, #16, #8
 801ad36:	f3c1 2707 	ubfx	r7, r1, #8, #8
 801ad3a:	b2c9      	uxtb	r1, r1
 801ad3c:	d042      	beq.n	801adc4 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ad3e:	b298      	uxth	r0, r3
 801ad40:	43db      	mvns	r3, r3
 801ad42:	f81c 2c03 	ldrb.w	r2, [ip, #-3]
 801ad46:	fb11 f100 	smulbb	r1, r1, r0
 801ad4a:	b2db      	uxtb	r3, r3
 801ad4c:	fb17 f700 	smulbb	r7, r7, r0
 801ad50:	fb02 1103 	mla	r1, r2, r3, r1
 801ad54:	fb1a f000 	smulbb	r0, sl, r0
 801ad58:	b289      	uxth	r1, r1
 801ad5a:	1c4a      	adds	r2, r1, #1
 801ad5c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ad60:	f81c 2c02 	ldrb.w	r2, [ip, #-2]
 801ad64:	fb02 7703 	mla	r7, r2, r3, r7
 801ad68:	1209      	asrs	r1, r1, #8
 801ad6a:	b2bf      	uxth	r7, r7
 801ad6c:	f80c 1c03 	strb.w	r1, [ip, #-3]
 801ad70:	1c7a      	adds	r2, r7, #1
 801ad72:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ad76:	f81c 2c01 	ldrb.w	r2, [ip, #-1]
 801ad7a:	fb02 0303 	mla	r3, r2, r3, r0
 801ad7e:	123f      	asrs	r7, r7, #8
 801ad80:	b29b      	uxth	r3, r3
 801ad82:	f80c 7c02 	strb.w	r7, [ip, #-2]
 801ad86:	1c5a      	adds	r2, r3, #1
 801ad88:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ad8c:	121b      	asrs	r3, r3, #8
 801ad8e:	f80c 3c01 	strb.w	r3, [ip, #-1]
 801ad92:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ad94:	f10c 0c03 	add.w	ip, ip, #3
 801ad98:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ad9c:	441d      	add	r5, r3
 801ad9e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ada0:	441e      	add	r6, r3
 801ada2:	e6e7      	b.n	801ab74 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ada4:	2f00      	cmp	r7, #0
 801ada6:	d0a5      	beq.n	801acf4 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801ada8:	444b      	add	r3, r9
 801adaa:	0859      	lsrs	r1, r3, #1
 801adac:	07db      	lsls	r3, r3, #31
 801adae:	f818 1001 	ldrb.w	r1, [r8, r1]
 801adb2:	bf54      	ite	pl
 801adb4:	f001 010f 	andpl.w	r1, r1, #15
 801adb8:	1109      	asrmi	r1, r1, #4
 801adba:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801adbe:	b2c9      	uxtb	r1, r1
 801adc0:	910b      	str	r1, [sp, #44]	; 0x2c
 801adc2:	e797      	b.n	801acf4 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801adc4:	f80c 1c03 	strb.w	r1, [ip, #-3]
 801adc8:	f80c 7c02 	strb.w	r7, [ip, #-2]
 801adcc:	f80c ac01 	strb.w	sl, [ip, #-1]
 801add0:	e7df      	b.n	801ad92 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 801add2:	b013      	add	sp, #76	; 0x4c
 801add4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801add8:	2400895c 	.word	0x2400895c

0801addc <CRC_Lock>:
 801addc:	4a20      	ldr	r2, [pc, #128]	; (801ae60 <CRC_Lock+0x84>)
 801adde:	b530      	push	{r4, r5, lr}
 801ade0:	6813      	ldr	r3, [r2, #0]
 801ade2:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801ade6:	f24c 2540 	movw	r5, #49728	; 0xc240
 801adea:	f023 0301 	bic.w	r3, r3, #1
 801adee:	6013      	str	r3, [r2, #0]
 801adf0:	4b1c      	ldr	r3, [pc, #112]	; (801ae64 <CRC_Lock+0x88>)
 801adf2:	681a      	ldr	r2, [r3, #0]
 801adf4:	4022      	ands	r2, r4
 801adf6:	42aa      	cmp	r2, r5
 801adf8:	d005      	beq.n	801ae06 <CRC_Lock+0x2a>
 801adfa:	681b      	ldr	r3, [r3, #0]
 801adfc:	f24c 2270 	movw	r2, #49776	; 0xc270
 801ae00:	4023      	ands	r3, r4
 801ae02:	4293      	cmp	r3, r2
 801ae04:	d124      	bne.n	801ae50 <CRC_Lock+0x74>
 801ae06:	4b18      	ldr	r3, [pc, #96]	; (801ae68 <CRC_Lock+0x8c>)
 801ae08:	681b      	ldr	r3, [r3, #0]
 801ae0a:	bb0b      	cbnz	r3, 801ae50 <CRC_Lock+0x74>
 801ae0c:	4b17      	ldr	r3, [pc, #92]	; (801ae6c <CRC_Lock+0x90>)
 801ae0e:	681a      	ldr	r2, [r3, #0]
 801ae10:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ae14:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801ae18:	d00d      	beq.n	801ae36 <CRC_Lock+0x5a>
 801ae1a:	681a      	ldr	r2, [r3, #0]
 801ae1c:	f240 4483 	movw	r4, #1155	; 0x483
 801ae20:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ae24:	42a2      	cmp	r2, r4
 801ae26:	d006      	beq.n	801ae36 <CRC_Lock+0x5a>
 801ae28:	681b      	ldr	r3, [r3, #0]
 801ae2a:	f240 4285 	movw	r2, #1157	; 0x485
 801ae2e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ae32:	4293      	cmp	r3, r2
 801ae34:	d10c      	bne.n	801ae50 <CRC_Lock+0x74>
 801ae36:	4b0e      	ldr	r3, [pc, #56]	; (801ae70 <CRC_Lock+0x94>)
 801ae38:	2201      	movs	r2, #1
 801ae3a:	601a      	str	r2, [r3, #0]
 801ae3c:	681a      	ldr	r2, [r3, #0]
 801ae3e:	2a00      	cmp	r2, #0
 801ae40:	d1fc      	bne.n	801ae3c <CRC_Lock+0x60>
 801ae42:	4b0c      	ldr	r3, [pc, #48]	; (801ae74 <CRC_Lock+0x98>)
 801ae44:	6018      	str	r0, [r3, #0]
 801ae46:	6818      	ldr	r0, [r3, #0]
 801ae48:	1a43      	subs	r3, r0, r1
 801ae4a:	4258      	negs	r0, r3
 801ae4c:	4158      	adcs	r0, r3
 801ae4e:	bd30      	pop	{r4, r5, pc}
 801ae50:	4b09      	ldr	r3, [pc, #36]	; (801ae78 <CRC_Lock+0x9c>)
 801ae52:	2201      	movs	r2, #1
 801ae54:	601a      	str	r2, [r3, #0]
 801ae56:	681a      	ldr	r2, [r3, #0]
 801ae58:	2a00      	cmp	r2, #0
 801ae5a:	d1fc      	bne.n	801ae56 <CRC_Lock+0x7a>
 801ae5c:	4b07      	ldr	r3, [pc, #28]	; (801ae7c <CRC_Lock+0xa0>)
 801ae5e:	e7f1      	b.n	801ae44 <CRC_Lock+0x68>
 801ae60:	e0002000 	.word	0xe0002000
 801ae64:	e000ed00 	.word	0xe000ed00
 801ae68:	e0042000 	.word	0xe0042000
 801ae6c:	5c001000 	.word	0x5c001000
 801ae70:	58024c08 	.word	0x58024c08
 801ae74:	58024c00 	.word	0x58024c00
 801ae78:	40023008 	.word	0x40023008
 801ae7c:	40023000 	.word	0x40023000

0801ae80 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801ae80:	6101      	str	r1, [r0, #16]
 801ae82:	4770      	bx	lr

0801ae84 <_ZN8touchgfx8Gestures4tickEv>:
 801ae84:	7b83      	ldrb	r3, [r0, #14]
 801ae86:	b14b      	cbz	r3, 801ae9c <_ZN8touchgfx8Gestures4tickEv+0x18>
 801ae88:	8903      	ldrh	r3, [r0, #8]
 801ae8a:	3301      	adds	r3, #1
 801ae8c:	b29b      	uxth	r3, r3
 801ae8e:	2b07      	cmp	r3, #7
 801ae90:	8103      	strh	r3, [r0, #8]
 801ae92:	bf81      	itttt	hi
 801ae94:	2300      	movhi	r3, #0
 801ae96:	8143      	strhhi	r3, [r0, #10]
 801ae98:	8183      	strhhi	r3, [r0, #12]
 801ae9a:	7383      	strbhi	r3, [r0, #14]
 801ae9c:	4770      	bx	lr
	...

0801aea0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801aea0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801aea4:	4698      	mov	r8, r3
 801aea6:	8883      	ldrh	r3, [r0, #4]
 801aea8:	4604      	mov	r4, r0
 801aeaa:	4617      	mov	r7, r2
 801aeac:	f8ad 3006 	strh.w	r3, [sp, #6]
 801aeb0:	eba8 0303 	sub.w	r3, r8, r3
 801aeb4:	4a19      	ldr	r2, [pc, #100]	; (801af1c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801aeb6:	460e      	mov	r6, r1
 801aeb8:	b21b      	sxth	r3, r3
 801aeba:	88c1      	ldrh	r1, [r0, #6]
 801aebc:	9200      	str	r2, [sp, #0]
 801aebe:	2000      	movs	r0, #0
 801aec0:	2b00      	cmp	r3, #0
 801aec2:	8aa2      	ldrh	r2, [r4, #20]
 801aec4:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801aec8:	bfb8      	it	lt
 801aeca:	425b      	neglt	r3, r3
 801aecc:	f88d 0004 	strb.w	r0, [sp, #4]
 801aed0:	f8ad 1008 	strh.w	r1, [sp, #8]
 801aed4:	b21b      	sxth	r3, r3
 801aed6:	f8ad 800a 	strh.w	r8, [sp, #10]
 801aeda:	f8ad 500c 	strh.w	r5, [sp, #12]
 801aede:	4293      	cmp	r3, r2
 801aee0:	dc07      	bgt.n	801aef2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 801aee2:	1a69      	subs	r1, r5, r1
 801aee4:	b209      	sxth	r1, r1
 801aee6:	2900      	cmp	r1, #0
 801aee8:	bfb8      	it	lt
 801aeea:	4249      	neglt	r1, r1
 801aeec:	b209      	sxth	r1, r1
 801aeee:	428a      	cmp	r2, r1
 801aef0:	da10      	bge.n	801af14 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 801aef2:	6920      	ldr	r0, [r4, #16]
 801aef4:	4669      	mov	r1, sp
 801aef6:	eba8 0606 	sub.w	r6, r8, r6
 801aefa:	1bef      	subs	r7, r5, r7
 801aefc:	6803      	ldr	r3, [r0, #0]
 801aefe:	685b      	ldr	r3, [r3, #4]
 801af00:	4798      	blx	r3
 801af02:	2300      	movs	r3, #0
 801af04:	2001      	movs	r0, #1
 801af06:	8166      	strh	r6, [r4, #10]
 801af08:	8123      	strh	r3, [r4, #8]
 801af0a:	81a7      	strh	r7, [r4, #12]
 801af0c:	f8a4 8004 	strh.w	r8, [r4, #4]
 801af10:	80e5      	strh	r5, [r4, #6]
 801af12:	73a0      	strb	r0, [r4, #14]
 801af14:	b004      	add	sp, #16
 801af16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801af1a:	bf00      	nop
 801af1c:	0801f488 	.word	0x0801f488

0801af20 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801af20:	b5f0      	push	{r4, r5, r6, r7, lr}
 801af22:	461e      	mov	r6, r3
 801af24:	1e4b      	subs	r3, r1, #1
 801af26:	b085      	sub	sp, #20
 801af28:	4604      	mov	r4, r0
 801af2a:	2b01      	cmp	r3, #1
 801af2c:	460d      	mov	r5, r1
 801af2e:	4617      	mov	r7, r2
 801af30:	d84b      	bhi.n	801afca <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801af32:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801af36:	1cd3      	adds	r3, r2, #3
 801af38:	b29b      	uxth	r3, r3
 801af3a:	2b06      	cmp	r3, #6
 801af3c:	d916      	bls.n	801af6c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801af3e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801afe0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801af42:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801af46:	f8cd c004 	str.w	ip, [sp, #4]
 801af4a:	f04f 0c00 	mov.w	ip, #0
 801af4e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801af52:	6900      	ldr	r0, [r0, #16]
 801af54:	f8ad 100c 	strh.w	r1, [sp, #12]
 801af58:	a901      	add	r1, sp, #4
 801af5a:	f88d c008 	strb.w	ip, [sp, #8]
 801af5e:	f8ad 200a 	strh.w	r2, [sp, #10]
 801af62:	f8ad 300e 	strh.w	r3, [sp, #14]
 801af66:	6803      	ldr	r3, [r0, #0]
 801af68:	689b      	ldr	r3, [r3, #8]
 801af6a:	4798      	blx	r3
 801af6c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801af70:	1cd3      	adds	r3, r2, #3
 801af72:	b29b      	uxth	r3, r3
 801af74:	2b06      	cmp	r3, #6
 801af76:	d916      	bls.n	801afa6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801af78:	f8df c064 	ldr.w	ip, [pc, #100]	; 801afe0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801af7c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801af80:	f8cd c004 	str.w	ip, [sp, #4]
 801af84:	f04f 0c01 	mov.w	ip, #1
 801af88:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801af8c:	6920      	ldr	r0, [r4, #16]
 801af8e:	f8ad 100c 	strh.w	r1, [sp, #12]
 801af92:	a901      	add	r1, sp, #4
 801af94:	f88d c008 	strb.w	ip, [sp, #8]
 801af98:	f8ad 200a 	strh.w	r2, [sp, #10]
 801af9c:	f8ad 300e 	strh.w	r3, [sp, #14]
 801afa0:	6803      	ldr	r3, [r0, #0]
 801afa2:	689b      	ldr	r3, [r3, #8]
 801afa4:	4798      	blx	r3
 801afa6:	4b0d      	ldr	r3, [pc, #52]	; (801afdc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801afa8:	a901      	add	r1, sp, #4
 801afaa:	6920      	ldr	r0, [r4, #16]
 801afac:	9301      	str	r3, [sp, #4]
 801afae:	2300      	movs	r3, #0
 801afb0:	f88d 5008 	strb.w	r5, [sp, #8]
 801afb4:	f8ad 700a 	strh.w	r7, [sp, #10]
 801afb8:	f8ad 600c 	strh.w	r6, [sp, #12]
 801afbc:	f8ad 300e 	strh.w	r3, [sp, #14]
 801afc0:	6803      	ldr	r3, [r0, #0]
 801afc2:	681b      	ldr	r3, [r3, #0]
 801afc4:	4798      	blx	r3
 801afc6:	b005      	add	sp, #20
 801afc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801afca:	2900      	cmp	r1, #0
 801afcc:	d1eb      	bne.n	801afa6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801afce:	80a2      	strh	r2, [r4, #4]
 801afd0:	80c6      	strh	r6, [r0, #6]
 801afd2:	60a1      	str	r1, [r4, #8]
 801afd4:	81a1      	strh	r1, [r4, #12]
 801afd6:	73a1      	strb	r1, [r4, #14]
 801afd8:	e7e5      	b.n	801afa6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801afda:	bf00      	nop
 801afdc:	0801f474 	.word	0x0801f474
 801afe0:	0801f49c 	.word	0x0801f49c

0801afe4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 801afe4:	10c9      	asrs	r1, r1, #3
 801afe6:	2900      	cmp	r1, #0
 801afe8:	bfb8      	it	lt
 801afea:	4249      	neglt	r1, r1
 801afec:	2801      	cmp	r0, #1
 801afee:	d108      	bne.n	801b002 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801aff0:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801aff4:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801aff8:	4601      	mov	r1, r0
 801affa:	dd02      	ble.n	801b002 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801affc:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801b000:	4770      	bx	lr
 801b002:	29ff      	cmp	r1, #255	; 0xff
 801b004:	bfa8      	it	ge
 801b006:	21ff      	movge	r1, #255	; 0xff
 801b008:	4608      	mov	r0, r1
 801b00a:	4770      	bx	lr

0801b00c <_ZN8touchgfx10Rasterizer6lineToEii>:
 801b00c:	b410      	push	{r4}
 801b00e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801b012:	429c      	cmp	r4, r3
 801b014:	d803      	bhi.n	801b01e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 801b016:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b01a:	f7f2 be61 	b.w	800dce0 <_ZN8touchgfx7Outline6lineToEii>
 801b01e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b022:	4770      	bx	lr

0801b024 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 801b024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b028:	b08b      	sub	sp, #44	; 0x2c
 801b02a:	4606      	mov	r6, r0
 801b02c:	468a      	mov	sl, r1
 801b02e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801b032:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801b036:	9308      	str	r3, [sp, #32]
 801b038:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801b03c:	9309      	str	r3, [sp, #36]	; 0x24
 801b03e:	f7f2 ffba 	bl	800dfb6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 801b042:	68b5      	ldr	r5, [r6, #8]
 801b044:	4604      	mov	r4, r0
 801b046:	2d00      	cmp	r5, #0
 801b048:	d044      	beq.n	801b0d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801b04a:	6873      	ldr	r3, [r6, #4]
 801b04c:	42ab      	cmp	r3, r5
 801b04e:	d33d      	bcc.n	801b0cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 801b050:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801b054:	f04f 0800 	mov.w	r8, #0
 801b058:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 801b05c:	eb02 0b03 	add.w	fp, r2, r3
 801b060:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801b064:	fb02 1203 	mla	r2, r2, r3, r1
 801b068:	9205      	str	r2, [sp, #20]
 801b06a:	1e6a      	subs	r2, r5, #1
 801b06c:	9204      	str	r2, [sp, #16]
 801b06e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 801b072:	f9b4 7000 	ldrsh.w	r7, [r4]
 801b076:	454b      	cmp	r3, r9
 801b078:	463a      	mov	r2, r7
 801b07a:	d008      	beq.n	801b08e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 801b07c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 801b080:	eb03 0b09 	add.w	fp, r3, r9
 801b084:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801b088:	fb03 1309 	mla	r3, r3, r9, r1
 801b08c:	9305      	str	r3, [sp, #20]
 801b08e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801b092:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801b096:	4498      	add	r8, r3
 801b098:	9b04      	ldr	r3, [sp, #16]
 801b09a:	3b01      	subs	r3, #1
 801b09c:	9304      	str	r3, [sp, #16]
 801b09e:	9b04      	ldr	r3, [sp, #16]
 801b0a0:	3301      	adds	r3, #1
 801b0a2:	d015      	beq.n	801b0d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 801b0a4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 801b0a8:	42bb      	cmp	r3, r7
 801b0aa:	d117      	bne.n	801b0dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 801b0ac:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 801b0b0:	9b04      	ldr	r3, [sp, #16]
 801b0b2:	4548      	cmp	r0, r9
 801b0b4:	f103 33ff 	add.w	r3, r3, #4294967295
 801b0b8:	d17d      	bne.n	801b1b6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
 801b0ba:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 801b0be:	4401      	add	r1, r0
 801b0c0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801b0c4:	4480      	add	r8, r0
 801b0c6:	e7e9      	b.n	801b09c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 801b0c8:	461f      	mov	r7, r3
 801b0ca:	e042      	b.n	801b152 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
 801b0cc:	2000      	movs	r0, #0
 801b0ce:	e002      	b.n	801b0d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 801b0d0:	2900      	cmp	r1, #0
 801b0d2:	d16d      	bne.n	801b1b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801b0d4:	2001      	movs	r0, #1
 801b0d6:	b00b      	add	sp, #44	; 0x2c
 801b0d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b0dc:	b379      	cbz	r1, 801b13e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
 801b0de:	2f00      	cmp	r7, #0
 801b0e0:	db29      	blt.n	801b136 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 801b0e2:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801b0e6:	42bb      	cmp	r3, r7
 801b0e8:	dd25      	ble.n	801b136 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 801b0ea:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 801b0ee:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801b0f2:	f7ff ff77 	bl	801afe4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801b0f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b0f8:	fb10 f003 	smulbb	r0, r0, r3
 801b0fc:	b280      	uxth	r0, r0
 801b0fe:	1c41      	adds	r1, r0, #1
 801b100:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801b104:	1209      	asrs	r1, r1, #8
 801b106:	f011 0fff 	tst.w	r1, #255	; 0xff
 801b10a:	d014      	beq.n	801b136 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 801b10c:	b2c9      	uxtb	r1, r1
 801b10e:	9808      	ldr	r0, [sp, #32]
 801b110:	b2ba      	uxth	r2, r7
 801b112:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801b114:	9102      	str	r1, [sp, #8]
 801b116:	2101      	movs	r1, #1
 801b118:	4413      	add	r3, r2
 801b11a:	4402      	add	r2, r0
 801b11c:	9101      	str	r1, [sp, #4]
 801b11e:	fa0f f18b 	sxth.w	r1, fp
 801b122:	f8da 0000 	ldr.w	r0, [sl]
 801b126:	b21b      	sxth	r3, r3
 801b128:	9100      	str	r1, [sp, #0]
 801b12a:	b212      	sxth	r2, r2
 801b12c:	6941      	ldr	r1, [r0, #20]
 801b12e:	4650      	mov	r0, sl
 801b130:	460d      	mov	r5, r1
 801b132:	9905      	ldr	r1, [sp, #20]
 801b134:	47a8      	blx	r5
 801b136:	9b04      	ldr	r3, [sp, #16]
 801b138:	1c7a      	adds	r2, r7, #1
 801b13a:	3301      	adds	r3, #1
 801b13c:	d0ca      	beq.n	801b0d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801b13e:	f9b4 7000 	ldrsh.w	r7, [r4]
 801b142:	1abb      	subs	r3, r7, r2
 801b144:	2b00      	cmp	r3, #0
 801b146:	dd31      	ble.n	801b1ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801b148:	2a00      	cmp	r2, #0
 801b14a:	dabd      	bge.n	801b0c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 801b14c:	2f00      	cmp	r7, #0
 801b14e:	dd2d      	ble.n	801b1ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801b150:	2200      	movs	r2, #0
 801b152:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801b156:	19d1      	adds	r1, r2, r7
 801b158:	4299      	cmp	r1, r3
 801b15a:	db02      	blt.n	801b162 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
 801b15c:	1a9f      	subs	r7, r3, r2
 801b15e:	2f00      	cmp	r7, #0
 801b160:	dd24      	ble.n	801b1ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801b162:	ea4f 1188 	mov.w	r1, r8, lsl #6
 801b166:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801b16a:	f7ff ff3b 	bl	801afe4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801b16e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b170:	fb10 f003 	smulbb	r0, r0, r3
 801b174:	b280      	uxth	r0, r0
 801b176:	1c41      	adds	r1, r0, #1
 801b178:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801b17c:	1209      	asrs	r1, r1, #8
 801b17e:	f011 0fff 	tst.w	r1, #255	; 0xff
 801b182:	d013      	beq.n	801b1ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801b184:	b292      	uxth	r2, r2
 801b186:	9808      	ldr	r0, [sp, #32]
 801b188:	b2c9      	uxtb	r1, r1
 801b18a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801b18c:	b23f      	sxth	r7, r7
 801b18e:	4413      	add	r3, r2
 801b190:	9102      	str	r1, [sp, #8]
 801b192:	4402      	add	r2, r0
 801b194:	fa0f f18b 	sxth.w	r1, fp
 801b198:	f8da 0000 	ldr.w	r0, [sl]
 801b19c:	b21b      	sxth	r3, r3
 801b19e:	9100      	str	r1, [sp, #0]
 801b1a0:	b212      	sxth	r2, r2
 801b1a2:	9701      	str	r7, [sp, #4]
 801b1a4:	9905      	ldr	r1, [sp, #20]
 801b1a6:	6947      	ldr	r7, [r0, #20]
 801b1a8:	4650      	mov	r0, sl
 801b1aa:	47b8      	blx	r7
 801b1ac:	464b      	mov	r3, r9
 801b1ae:	e75e      	b.n	801b06e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 801b1b0:	2f00      	cmp	r7, #0
 801b1b2:	da96      	bge.n	801b0e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
 801b1b4:	e78e      	b.n	801b0d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801b1b6:	2900      	cmp	r1, #0
 801b1b8:	d0f8      	beq.n	801b1ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801b1ba:	e790      	b.n	801b0de <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

0801b1bc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 801b1bc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801b1c0:	4b4a      	ldr	r3, [pc, #296]	; (801b2ec <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 801b1c2:	2500      	movs	r5, #0
 801b1c4:	f100 0620 	add.w	r6, r0, #32
 801b1c8:	4604      	mov	r4, r0
 801b1ca:	4690      	mov	r8, r2
 801b1cc:	f100 0718 	add.w	r7, r0, #24
 801b1d0:	e9c0 3100 	strd	r3, r1, [r0]
 801b1d4:	e9c0 5502 	strd	r5, r5, [r0, #8]
 801b1d8:	e9c0 5504 	strd	r5, r5, [r0, #16]
 801b1dc:	e9c0 5506 	strd	r5, r5, [r0, #24]
 801b1e0:	4630      	mov	r0, r6
 801b1e2:	f7f2 f8c3 	bl	800d36c <_ZN8touchgfx7OutlineC1Ev>
 801b1e6:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 801b1ea:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 801b1ee:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 801b1f2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 801b1f6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 801b1fa:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 801b1fe:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 801b202:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801b206:	9500      	str	r5, [sp, #0]
 801b208:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 801b20c:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 801b210:	f9b8 2000 	ldrsh.w	r2, [r8]
 801b214:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 801b218:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 801b21c:	4410      	add	r0, r2
 801b21e:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 801b222:	b280      	uxth	r0, r0
 801b224:	fa0f fa80 	sxth.w	sl, r0
 801b228:	45aa      	cmp	sl, r5
 801b22a:	dd5c      	ble.n	801b2e6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 801b22c:	4591      	cmp	r9, r2
 801b22e:	dd5a      	ble.n	801b2e6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 801b230:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 801b234:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801b238:	440b      	add	r3, r1
 801b23a:	b29b      	uxth	r3, r3
 801b23c:	b21d      	sxth	r5, r3
 801b23e:	2d00      	cmp	r5, #0
 801b240:	dd51      	ble.n	801b2e6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 801b242:	458e      	cmp	lr, r1
 801b244:	dd4f      	ble.n	801b2e6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 801b246:	45d1      	cmp	r9, sl
 801b248:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801b24c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801b250:	bfb8      	it	lt
 801b252:	fa1f f089 	uxthlt.w	r0, r9
 801b256:	45ae      	cmp	lr, r5
 801b258:	f8ad 2000 	strh.w	r2, [sp]
 801b25c:	bfb8      	it	lt
 801b25e:	fa1f f38e 	uxthlt.w	r3, lr
 801b262:	1a80      	subs	r0, r0, r2
 801b264:	f8ad 1002 	strh.w	r1, [sp, #2]
 801b268:	1a5b      	subs	r3, r3, r1
 801b26a:	f8ad 0004 	strh.w	r0, [sp, #4]
 801b26e:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b272:	466d      	mov	r5, sp
 801b274:	e895 0003 	ldmia.w	r5, {r0, r1}
 801b278:	e887 0003 	stmia.w	r7, {r0, r1}
 801b27c:	f8dc 3000 	ldr.w	r3, [ip]
 801b280:	4660      	mov	r0, ip
 801b282:	4639      	mov	r1, r7
 801b284:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b286:	4798      	blx	r3
 801b288:	6861      	ldr	r1, [r4, #4]
 801b28a:	4628      	mov	r0, r5
 801b28c:	3104      	adds	r1, #4
 801b28e:	f7f4 fa59 	bl	800f744 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b292:	4638      	mov	r0, r7
 801b294:	f7f4 fa12 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b298:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801b29c:	f8bd 2000 	ldrh.w	r2, [sp]
 801b2a0:	4630      	mov	r0, r6
 801b2a2:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 801b2a6:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 801b2aa:	f7f2 f843 	bl	800d334 <_ZN8touchgfx7Outline5resetEv>
 801b2ae:	f9bd 3000 	ldrsh.w	r3, [sp]
 801b2b2:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 801b2b6:	4620      	mov	r0, r4
 801b2b8:	015b      	lsls	r3, r3, #5
 801b2ba:	60a3      	str	r3, [r4, #8]
 801b2bc:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801b2c0:	015b      	lsls	r3, r3, #5
 801b2c2:	60e3      	str	r3, [r4, #12]
 801b2c4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801b2c8:	015b      	lsls	r3, r3, #5
 801b2ca:	6123      	str	r3, [r4, #16]
 801b2cc:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801b2d0:	015b      	lsls	r3, r3, #5
 801b2d2:	6163      	str	r3, [r4, #20]
 801b2d4:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 801b2d8:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 801b2dc:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 801b2e0:	b002      	add	sp, #8
 801b2e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b2e6:	2300      	movs	r3, #0
 801b2e8:	9301      	str	r3, [sp, #4]
 801b2ea:	e7c2      	b.n	801b272 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 801b2ec:	0801f6cc 	.word	0x0801f6cc

0801b2f0 <_ZN8touchgfx6Canvas5closeEv>:
 801b2f0:	b538      	push	{r3, r4, r5, lr}
 801b2f2:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 801b2f6:	4604      	mov	r4, r0
 801b2f8:	b193      	cbz	r3, 801b320 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801b2fa:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 801b2fe:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 801b302:	4213      	tst	r3, r2
 801b304:	d10c      	bne.n	801b320 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801b306:	f100 0520 	add.w	r5, r0, #32
 801b30a:	b123      	cbz	r3, 801b316 <_ZN8touchgfx6Canvas5closeEv+0x26>
 801b30c:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 801b310:	4628      	mov	r0, r5
 801b312:	f7ff fe7b 	bl	801b00c <_ZN8touchgfx10Rasterizer6lineToEii>
 801b316:	4628      	mov	r0, r5
 801b318:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 801b31c:	f7ff fe76 	bl	801b00c <_ZN8touchgfx10Rasterizer6lineToEii>
 801b320:	2300      	movs	r3, #0
 801b322:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801b326:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 801b32a:	4298      	cmp	r0, r3
 801b32c:	bf34      	ite	cc
 801b32e:	2000      	movcc	r0, #0
 801b330:	2001      	movcs	r0, #1
 801b332:	bd38      	pop	{r3, r4, r5, pc}

0801b334 <_ZN8touchgfx6Canvas6renderEh>:
 801b334:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801b338:	4604      	mov	r4, r0
 801b33a:	6840      	ldr	r0, [r0, #4]
 801b33c:	460d      	mov	r5, r1
 801b33e:	6803      	ldr	r3, [r0, #0]
 801b340:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801b342:	4798      	blx	r3
 801b344:	fb10 f105 	smulbb	r1, r0, r5
 801b348:	b289      	uxth	r1, r1
 801b34a:	1c4d      	adds	r5, r1, #1
 801b34c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801b350:	122d      	asrs	r5, r5, #8
 801b352:	f000 8097 	beq.w	801b484 <_ZN8touchgfx6Canvas6renderEh+0x150>
 801b356:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 801b35a:	2b00      	cmp	r3, #0
 801b35c:	f000 8092 	beq.w	801b484 <_ZN8touchgfx6Canvas6renderEh+0x150>
 801b360:	4620      	mov	r0, r4
 801b362:	f7ff ffc5 	bl	801b2f0 <_ZN8touchgfx6Canvas5closeEv>
 801b366:	4607      	mov	r7, r0
 801b368:	2800      	cmp	r0, #0
 801b36a:	d043      	beq.n	801b3f4 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 801b36c:	6863      	ldr	r3, [r4, #4]
 801b36e:	4e46      	ldr	r6, [pc, #280]	; (801b488 <_ZN8touchgfx6Canvas6renderEh+0x154>)
 801b370:	6a98      	ldr	r0, [r3, #40]	; 0x28
 801b372:	6837      	ldr	r7, [r6, #0]
 801b374:	6803      	ldr	r3, [r0, #0]
 801b376:	689b      	ldr	r3, [r3, #8]
 801b378:	4798      	blx	r3
 801b37a:	4601      	mov	r1, r0
 801b37c:	4638      	mov	r0, r7
 801b37e:	f7f0 fa51 	bl	800b824 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 801b382:	4607      	mov	r7, r0
 801b384:	f7ef fe12 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 801b388:	6803      	ldr	r3, [r0, #0]
 801b38a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b38c:	4798      	blx	r3
 801b38e:	4680      	mov	r8, r0
 801b390:	f7ef fe0c 	bl	800afac <_ZN8touchgfx3HAL3lcdEv>
 801b394:	6803      	ldr	r3, [r0, #0]
 801b396:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b398:	4798      	blx	r3
 801b39a:	280b      	cmp	r0, #11
 801b39c:	d857      	bhi.n	801b44e <_ZN8touchgfx6Canvas6renderEh+0x11a>
 801b39e:	e8df f000 	tbb	[pc, r0]
 801b3a2:	584d      	.short	0x584d
 801b3a4:	2d560668 	.word	0x2d560668
 801b3a8:	6161613d 	.word	0x6161613d
 801b3ac:	6161      	.short	0x6161
 801b3ae:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801b3b2:	2208      	movs	r2, #8
 801b3b4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801b3b8:	fb91 f2f2 	sdiv	r2, r1, r2
 801b3bc:	fb08 2303 	mla	r3, r8, r3, r2
 801b3c0:	441f      	add	r7, r3
 801b3c2:	424b      	negs	r3, r1
 801b3c4:	f001 0107 	and.w	r1, r1, #7
 801b3c8:	f003 0307 	and.w	r3, r3, #7
 801b3cc:	bf58      	it	pl
 801b3ce:	4259      	negpl	r1, r3
 801b3d0:	b2c9      	uxtb	r1, r1
 801b3d2:	6860      	ldr	r0, [r4, #4]
 801b3d4:	b2ed      	uxtb	r5, r5
 801b3d6:	fa0f f388 	sxth.w	r3, r8
 801b3da:	463a      	mov	r2, r7
 801b3dc:	e9cd 1500 	strd	r1, r5, [sp]
 801b3e0:	6a81      	ldr	r1, [r0, #40]	; 0x28
 801b3e2:	f104 0020 	add.w	r0, r4, #32
 801b3e6:	f7ff fe1d 	bl	801b024 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 801b3ea:	4607      	mov	r7, r0
 801b3ec:	6830      	ldr	r0, [r6, #0]
 801b3ee:	6803      	ldr	r3, [r0, #0]
 801b3f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b3f2:	4798      	blx	r3
 801b3f4:	4638      	mov	r0, r7
 801b3f6:	b002      	add	sp, #8
 801b3f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b3fc:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801b400:	2204      	movs	r2, #4
 801b402:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801b406:	fb91 f2f2 	sdiv	r2, r1, r2
 801b40a:	fb08 2303 	mla	r3, r8, r3, r2
 801b40e:	441f      	add	r7, r3
 801b410:	424b      	negs	r3, r1
 801b412:	f001 0103 	and.w	r1, r1, #3
 801b416:	f003 0303 	and.w	r3, r3, #3
 801b41a:	e7d7      	b.n	801b3cc <_ZN8touchgfx6Canvas6renderEh+0x98>
 801b41c:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801b420:	2202      	movs	r2, #2
 801b422:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801b426:	2900      	cmp	r1, #0
 801b428:	fb91 f2f2 	sdiv	r2, r1, r2
 801b42c:	f001 0101 	and.w	r1, r1, #1
 801b430:	fb08 2303 	mla	r3, r8, r3, r2
 801b434:	bfb8      	it	lt
 801b436:	4249      	neglt	r1, r1
 801b438:	441f      	add	r7, r3
 801b43a:	e7c9      	b.n	801b3d0 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 801b43c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801b440:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801b444:	fb08 f303 	mul.w	r3, r8, r3
 801b448:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801b44c:	441f      	add	r7, r3
 801b44e:	2100      	movs	r1, #0
 801b450:	e7bf      	b.n	801b3d2 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 801b452:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801b456:	2103      	movs	r1, #3
 801b458:	fb08 f203 	mul.w	r2, r8, r3
 801b45c:	8b23      	ldrh	r3, [r4, #24]
 801b45e:	fb13 2301 	smlabb	r3, r3, r1, r2
 801b462:	e7f3      	b.n	801b44c <_ZN8touchgfx6Canvas6renderEh+0x118>
 801b464:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801b468:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801b46c:	fb08 2303 	mla	r3, r8, r3, r2
 801b470:	e7ec      	b.n	801b44c <_ZN8touchgfx6Canvas6renderEh+0x118>
 801b472:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801b476:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801b47a:	fb08 f303 	mul.w	r3, r8, r3
 801b47e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801b482:	e7e3      	b.n	801b44c <_ZN8touchgfx6Canvas6renderEh+0x118>
 801b484:	2701      	movs	r7, #1
 801b486:	e7b5      	b.n	801b3f4 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 801b488:	2400894c 	.word	0x2400894c

0801b48c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 801b48c:	4b07      	ldr	r3, [pc, #28]	; (801b4ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 801b48e:	b510      	push	{r4, lr}
 801b490:	781b      	ldrb	r3, [r3, #0]
 801b492:	2b01      	cmp	r3, #1
 801b494:	d108      	bne.n	801b4a8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 801b496:	6843      	ldr	r3, [r0, #4]
 801b498:	6814      	ldr	r4, [r2, #0]
 801b49a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801b49e:	680b      	ldr	r3, [r1, #0]
 801b4a0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 801b4a4:	6013      	str	r3, [r2, #0]
 801b4a6:	600c      	str	r4, [r1, #0]
 801b4a8:	bd10      	pop	{r4, pc}
 801b4aa:	bf00      	nop
 801b4ac:	24008944 	.word	0x24008944

0801b4b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 801b4b0:	b513      	push	{r0, r1, r4, lr}
 801b4b2:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 801b4b6:	4604      	mov	r4, r0
 801b4b8:	e9cd 2100 	strd	r2, r1, [sp]
 801b4bc:	b9a3      	cbnz	r3, 801b4e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 801b4be:	466a      	mov	r2, sp
 801b4c0:	a901      	add	r1, sp, #4
 801b4c2:	4620      	mov	r0, r4
 801b4c4:	f7ff ffe2 	bl	801b48c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801b4c8:	68a3      	ldr	r3, [r4, #8]
 801b4ca:	9901      	ldr	r1, [sp, #4]
 801b4cc:	9a00      	ldr	r2, [sp, #0]
 801b4ce:	1ac9      	subs	r1, r1, r3
 801b4d0:	68e3      	ldr	r3, [r4, #12]
 801b4d2:	1ad2      	subs	r2, r2, r3
 801b4d4:	9101      	str	r1, [sp, #4]
 801b4d6:	2a00      	cmp	r2, #0
 801b4d8:	9200      	str	r2, [sp, #0]
 801b4da:	da0b      	bge.n	801b4f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 801b4dc:	2301      	movs	r3, #1
 801b4de:	2900      	cmp	r1, #0
 801b4e0:	da0e      	bge.n	801b500 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 801b4e2:	f043 0304 	orr.w	r3, r3, #4
 801b4e6:	e013      	b.n	801b510 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 801b4e8:	f7ff ff02 	bl	801b2f0 <_ZN8touchgfx6Canvas5closeEv>
 801b4ec:	2800      	cmp	r0, #0
 801b4ee:	d1e6      	bne.n	801b4be <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 801b4f0:	b002      	add	sp, #8
 801b4f2:	bd10      	pop	{r4, pc}
 801b4f4:	6963      	ldr	r3, [r4, #20]
 801b4f6:	429a      	cmp	r2, r3
 801b4f8:	bfac      	ite	ge
 801b4fa:	2302      	movge	r3, #2
 801b4fc:	2300      	movlt	r3, #0
 801b4fe:	e7ee      	b.n	801b4de <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 801b500:	6920      	ldr	r0, [r4, #16]
 801b502:	4281      	cmp	r1, r0
 801b504:	bfac      	ite	ge
 801b506:	2008      	movge	r0, #8
 801b508:	2000      	movlt	r0, #0
 801b50a:	4318      	orrs	r0, r3
 801b50c:	b2c3      	uxtb	r3, r0
 801b50e:	b158      	cbz	r0, 801b528 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 801b510:	2200      	movs	r2, #0
 801b512:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 801b516:	9901      	ldr	r1, [sp, #4]
 801b518:	9a00      	ldr	r2, [sp, #0]
 801b51a:	66a1      	str	r1, [r4, #104]	; 0x68
 801b51c:	66e2      	str	r2, [r4, #108]	; 0x6c
 801b51e:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 801b522:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 801b526:	e7e3      	b.n	801b4f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 801b528:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 801b52c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 801b530:	4298      	cmp	r0, r3
 801b532:	d803      	bhi.n	801b53c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 801b534:	f104 0020 	add.w	r0, r4, #32
 801b538:	f7f2 fbec 	bl	800dd14 <_ZN8touchgfx7Outline6moveToEii>
 801b53c:	2301      	movs	r3, #1
 801b53e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801b542:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b546:	2300      	movs	r3, #0
 801b548:	e7e5      	b.n	801b516 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0801b54a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 801b54a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801b54c:	ab02      	add	r3, sp, #8
 801b54e:	4604      	mov	r4, r0
 801b550:	9101      	str	r1, [sp, #4]
 801b552:	a901      	add	r1, sp, #4
 801b554:	f843 2d08 	str.w	r2, [r3, #-8]!
 801b558:	461a      	mov	r2, r3
 801b55a:	f7ff ff97 	bl	801b48c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801b55e:	68a3      	ldr	r3, [r4, #8]
 801b560:	9901      	ldr	r1, [sp, #4]
 801b562:	9a00      	ldr	r2, [sp, #0]
 801b564:	1ac9      	subs	r1, r1, r3
 801b566:	68e3      	ldr	r3, [r4, #12]
 801b568:	1ad2      	subs	r2, r2, r3
 801b56a:	9101      	str	r1, [sp, #4]
 801b56c:	2a00      	cmp	r2, #0
 801b56e:	9200      	str	r2, [sp, #0]
 801b570:	db1c      	blt.n	801b5ac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 801b572:	6963      	ldr	r3, [r4, #20]
 801b574:	429a      	cmp	r2, r3
 801b576:	bfac      	ite	ge
 801b578:	2002      	movge	r0, #2
 801b57a:	2000      	movlt	r0, #0
 801b57c:	2900      	cmp	r1, #0
 801b57e:	db17      	blt.n	801b5b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 801b580:	6923      	ldr	r3, [r4, #16]
 801b582:	4299      	cmp	r1, r3
 801b584:	bfac      	ite	ge
 801b586:	2308      	movge	r3, #8
 801b588:	2300      	movlt	r3, #0
 801b58a:	4303      	orrs	r3, r0
 801b58c:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 801b590:	b2dd      	uxtb	r5, r3
 801b592:	b978      	cbnz	r0, 801b5b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 801b594:	f104 0020 	add.w	r0, r4, #32
 801b598:	f7ff fd38 	bl	801b00c <_ZN8touchgfx10Rasterizer6lineToEii>
 801b59c:	9b01      	ldr	r3, [sp, #4]
 801b59e:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 801b5a2:	65e3      	str	r3, [r4, #92]	; 0x5c
 801b5a4:	9b00      	ldr	r3, [sp, #0]
 801b5a6:	6623      	str	r3, [r4, #96]	; 0x60
 801b5a8:	b002      	add	sp, #8
 801b5aa:	bd70      	pop	{r4, r5, r6, pc}
 801b5ac:	2001      	movs	r0, #1
 801b5ae:	e7e5      	b.n	801b57c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 801b5b0:	2304      	movs	r3, #4
 801b5b2:	e7ea      	b.n	801b58a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 801b5b4:	b113      	cbz	r3, 801b5bc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 801b5b6:	ea10 0305 	ands.w	r3, r0, r5
 801b5ba:	d11c      	bne.n	801b5f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 801b5bc:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 801b5c0:	f104 0620 	add.w	r6, r4, #32
 801b5c4:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 801b5c8:	b98b      	cbnz	r3, 801b5ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 801b5ca:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 801b5ce:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 801b5d2:	4298      	cmp	r0, r3
 801b5d4:	d802      	bhi.n	801b5dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 801b5d6:	4630      	mov	r0, r6
 801b5d8:	f7f2 fb9c 	bl	800dd14 <_ZN8touchgfx7Outline6moveToEii>
 801b5dc:	2301      	movs	r3, #1
 801b5de:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801b5e2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b5e6:	4630      	mov	r0, r6
 801b5e8:	e9dd 2100 	ldrd	r2, r1, [sp]
 801b5ec:	e7d4      	b.n	801b598 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 801b5ee:	4630      	mov	r0, r6
 801b5f0:	f7ff fd0c 	bl	801b00c <_ZN8touchgfx10Rasterizer6lineToEii>
 801b5f4:	e7f7      	b.n	801b5e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 801b5f6:	461d      	mov	r5, r3
 801b5f8:	e7d0      	b.n	801b59c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0801b5fc <_ZN8touchgfx6CanvasD1Ev>:
 801b5fc:	4b04      	ldr	r3, [pc, #16]	; (801b610 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 801b5fe:	b510      	push	{r4, lr}
 801b600:	4604      	mov	r4, r0
 801b602:	f840 3b20 	str.w	r3, [r0], #32
 801b606:	f7f1 fe8d 	bl	800d324 <_ZN8touchgfx7OutlineD1Ev>
 801b60a:	4620      	mov	r0, r4
 801b60c:	bd10      	pop	{r4, pc}
 801b60e:	bf00      	nop
 801b610:	0801f6cc 	.word	0x0801f6cc

0801b614 <_ZN8touchgfx6CanvasD0Ev>:
 801b614:	b510      	push	{r4, lr}
 801b616:	4604      	mov	r4, r0
 801b618:	f7ff fff0 	bl	801b5fc <_ZN8touchgfx6CanvasD1Ev>
 801b61c:	2170      	movs	r1, #112	; 0x70
 801b61e:	4620      	mov	r0, r4
 801b620:	f000 fef1 	bl	801c406 <_ZdlPvj>
 801b624:	4620      	mov	r0, r4
 801b626:	bd10      	pop	{r4, pc}

0801b628 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801b628:	790b      	ldrb	r3, [r1, #4]
 801b62a:	2b00      	cmp	r3, #0
 801b62c:	bf0c      	ite	eq
 801b62e:	2301      	moveq	r3, #1
 801b630:	2300      	movne	r3, #0
 801b632:	b570      	push	{r4, r5, r6, lr}
 801b634:	4604      	mov	r4, r0
 801b636:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801b63a:	460e      	mov	r6, r1
 801b63c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801b640:	d109      	bne.n	801b656 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801b642:	b14d      	cbz	r5, 801b658 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801b644:	7933      	ldrb	r3, [r6, #4]
 801b646:	2b01      	cmp	r3, #1
 801b648:	d10c      	bne.n	801b664 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801b64a:	6823      	ldr	r3, [r4, #0]
 801b64c:	4620      	mov	r0, r4
 801b64e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801b650:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b654:	4718      	bx	r3
 801b656:	b12d      	cbz	r5, 801b664 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801b658:	6823      	ldr	r3, [r4, #0]
 801b65a:	4620      	mov	r0, r4
 801b65c:	695b      	ldr	r3, [r3, #20]
 801b65e:	4798      	blx	r3
 801b660:	2d00      	cmp	r5, #0
 801b662:	d1ef      	bne.n	801b644 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801b664:	bd70      	pop	{r4, r5, r6, pc}

0801b666 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 801b666:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801b66a:	4770      	bx	lr

0801b66c <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 801b66c:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 801b670:	4770      	bx	lr

0801b672 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 801b672:	6802      	ldr	r2, [r0, #0]
 801b674:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801b678:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 801b67a:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801b67e:	4710      	bx	r2

0801b680 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 801b680:	6802      	ldr	r2, [r0, #0]
 801b682:	eef0 0a40 	vmov.f32	s1, s0
 801b686:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801b68a:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 801b68c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801b690:	4710      	bx	r2

0801b692 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 801b692:	6802      	ldr	r2, [r0, #0]
 801b694:	eeb0 1a40 	vmov.f32	s2, s0
 801b698:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801b69c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 801b69e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801b6a2:	4710      	bx	r2

0801b6a4 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 801b6a4:	6802      	ldr	r2, [r0, #0]
 801b6a6:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801b6aa:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 801b6ac:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801b6b0:	4710      	bx	r2

0801b6b2 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 801b6b2:	6802      	ldr	r2, [r0, #0]
 801b6b4:	eef0 0a40 	vmov.f32	s1, s0
 801b6b8:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801b6bc:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 801b6be:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801b6c2:	4710      	bx	r2

0801b6c4 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 801b6c4:	6802      	ldr	r2, [r0, #0]
 801b6c6:	eeb0 1a40 	vmov.f32	s2, s0
 801b6ca:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801b6ce:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 801b6d0:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801b6d4:	4710      	bx	r2

0801b6d6 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 801b6d6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801b6da:	4770      	bx	lr

0801b6dc <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 801b6dc:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 801b6e0:	4770      	bx	lr

0801b6e2 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 801b6e2:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 801b6e6:	4770      	bx	lr

0801b6e8 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 801b6e8:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 801b6ec:	4770      	bx	lr

0801b6ee <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 801b6ee:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 801b6f2:	4770      	bx	lr

0801b6f4 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 801b6f4:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 801b6f8:	4770      	bx	lr

0801b6fa <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 801b6fa:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 801b6fe:	4770      	bx	lr

0801b700 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 801b700:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 801b704:	4770      	bx	lr

0801b706 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 801b706:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 801b70a:	4770      	bx	lr

0801b70c <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 801b70c:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 801b710:	4770      	bx	lr

0801b712 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 801b712:	ee07 2a90 	vmov	s15, r2
 801b716:	6803      	ldr	r3, [r0, #0]
 801b718:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801b71c:	ee07 1a90 	vmov	s15, r1
 801b720:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801b724:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801b728:	4718      	bx	r3

0801b72a <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 801b72a:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 801b72e:	4770      	bx	lr

0801b730 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 801b730:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 801b734:	4770      	bx	lr

0801b736 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 801b736:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 801b73a:	4770      	bx	lr

0801b73c <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 801b73c:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 801b740:	4770      	bx	lr

0801b742 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 801b742:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 801b746:	4770      	bx	lr

0801b748 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 801b748:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 801b74c:	4770      	bx	lr

0801b74e <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 801b74e:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 801b752:	4770      	bx	lr

0801b754 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 801b754:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 801b758:	4770      	bx	lr

0801b75a <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 801b75a:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 801b75e:	4770      	bx	lr

0801b760 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 801b760:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 801b764:	4770      	bx	lr

0801b766 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 801b766:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 801b76a:	4770      	bx	lr

0801b76c <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 801b76c:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 801b770:	4770      	bx	lr

0801b772 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 801b772:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 801b776:	4770      	bx	lr

0801b778 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 801b778:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 801b77c:	4770      	bx	lr

0801b77e <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 801b77e:	b510      	push	{r4, lr}
 801b780:	ed2d 8b04 	vpush	{d8-d9}
 801b784:	6803      	ldr	r3, [r0, #0]
 801b786:	4604      	mov	r4, r0
 801b788:	eeb0 8a40 	vmov.f32	s16, s0
 801b78c:	eef0 8a60 	vmov.f32	s17, s1
 801b790:	699b      	ldr	r3, [r3, #24]
 801b792:	eeb0 9a41 	vmov.f32	s18, s2
 801b796:	4798      	blx	r3
 801b798:	6823      	ldr	r3, [r4, #0]
 801b79a:	4620      	mov	r0, r4
 801b79c:	eef0 0a68 	vmov.f32	s1, s17
 801b7a0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801b7a2:	eeb0 1a49 	vmov.f32	s2, s18
 801b7a6:	eeb0 0a48 	vmov.f32	s0, s16
 801b7aa:	4798      	blx	r3
 801b7ac:	6823      	ldr	r3, [r4, #0]
 801b7ae:	4620      	mov	r0, r4
 801b7b0:	699b      	ldr	r3, [r3, #24]
 801b7b2:	ecbd 8b04 	vpop	{d8-d9}
 801b7b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b7ba:	4718      	bx	r3

0801b7bc <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 801b7bc:	b510      	push	{r4, lr}
 801b7be:	ed2d 8b02 	vpush	{d8}
 801b7c2:	6803      	ldr	r3, [r0, #0]
 801b7c4:	4604      	mov	r4, r0
 801b7c6:	eeb0 8a40 	vmov.f32	s16, s0
 801b7ca:	699b      	ldr	r3, [r3, #24]
 801b7cc:	4798      	blx	r3
 801b7ce:	6823      	ldr	r3, [r4, #0]
 801b7d0:	4620      	mov	r0, r4
 801b7d2:	eeb0 0a48 	vmov.f32	s0, s16
 801b7d6:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801b7da:	4798      	blx	r3
 801b7dc:	6823      	ldr	r3, [r4, #0]
 801b7de:	4620      	mov	r0, r4
 801b7e0:	699b      	ldr	r3, [r3, #24]
 801b7e2:	ecbd 8b02 	vpop	{d8}
 801b7e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b7ea:	4718      	bx	r3

0801b7ec <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 801b7ec:	2200      	movs	r2, #0
 801b7ee:	8002      	strh	r2, [r0, #0]
 801b7f0:	8042      	strh	r2, [r0, #2]
 801b7f2:	8082      	strh	r2, [r0, #4]
 801b7f4:	80c2      	strh	r2, [r0, #6]
 801b7f6:	4770      	bx	lr

0801b7f8 <_ZN8touchgfx13TextureMapperD1Ev>:
 801b7f8:	4770      	bx	lr

0801b7fa <_ZN8touchgfx13TextureMapperD0Ev>:
 801b7fa:	b510      	push	{r4, lr}
 801b7fc:	4604      	mov	r4, r0
 801b7fe:	2190      	movs	r1, #144	; 0x90
 801b800:	f000 fe01 	bl	801c406 <_ZdlPvj>
 801b804:	4620      	mov	r0, r4
 801b806:	bd10      	pop	{r4, pc}

0801b808 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 801b808:	b538      	push	{r3, r4, r5, lr}
 801b80a:	2301      	movs	r3, #1
 801b80c:	2500      	movs	r5, #0
 801b80e:	4604      	mov	r4, r0
 801b810:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 801b814:	4b1f      	ldr	r3, [pc, #124]	; (801b894 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 801b816:	8085      	strh	r5, [r0, #4]
 801b818:	80c5      	strh	r5, [r0, #6]
 801b81a:	8105      	strh	r5, [r0, #8]
 801b81c:	8145      	strh	r5, [r0, #10]
 801b81e:	8185      	strh	r5, [r0, #12]
 801b820:	81c5      	strh	r5, [r0, #14]
 801b822:	8205      	strh	r5, [r0, #16]
 801b824:	8245      	strh	r5, [r0, #18]
 801b826:	61c5      	str	r5, [r0, #28]
 801b828:	8405      	strh	r5, [r0, #32]
 801b82a:	8445      	strh	r5, [r0, #34]	; 0x22
 801b82c:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 801b830:	6003      	str	r3, [r0, #0]
 801b832:	e9c0 5505 	strd	r5, r5, [r0, #20]
 801b836:	880b      	ldrh	r3, [r1, #0]
 801b838:	84c3      	strh	r3, [r0, #38]	; 0x26
 801b83a:	23ff      	movs	r3, #255	; 0xff
 801b83c:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801b840:	f7f1 fcf3 	bl	800d22a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801b844:	4b14      	ldr	r3, [pc, #80]	; (801b898 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 801b846:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 801b84a:	4914      	ldr	r1, [pc, #80]	; (801b89c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 801b84c:	6023      	str	r3, [r4, #0]
 801b84e:	2300      	movs	r3, #0
 801b850:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 801b854:	4620      	mov	r0, r4
 801b856:	62e3      	str	r3, [r4, #44]	; 0x2c
 801b858:	6323      	str	r3, [r4, #48]	; 0x30
 801b85a:	6363      	str	r3, [r4, #52]	; 0x34
 801b85c:	63a3      	str	r3, [r4, #56]	; 0x38
 801b85e:	63e3      	str	r3, [r4, #60]	; 0x3c
 801b860:	6463      	str	r3, [r4, #68]	; 0x44
 801b862:	64a3      	str	r3, [r4, #72]	; 0x48
 801b864:	6523      	str	r3, [r4, #80]	; 0x50
 801b866:	6563      	str	r3, [r4, #84]	; 0x54
 801b868:	65e3      	str	r3, [r4, #92]	; 0x5c
 801b86a:	6623      	str	r3, [r4, #96]	; 0x60
 801b86c:	66a3      	str	r3, [r4, #104]	; 0x68
 801b86e:	66e3      	str	r3, [r4, #108]	; 0x6c
 801b870:	6763      	str	r3, [r4, #116]	; 0x74
 801b872:	67a3      	str	r3, [r4, #120]	; 0x78
 801b874:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 801b878:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 801b87c:	230c      	movs	r3, #12
 801b87e:	6422      	str	r2, [r4, #64]	; 0x40
 801b880:	64e1      	str	r1, [r4, #76]	; 0x4c
 801b882:	65a1      	str	r1, [r4, #88]	; 0x58
 801b884:	6662      	str	r2, [r4, #100]	; 0x64
 801b886:	6722      	str	r2, [r4, #112]	; 0x70
 801b888:	67e2      	str	r2, [r4, #124]	; 0x7c
 801b88a:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 801b88e:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 801b892:	bd38      	pop	{r3, r4, r5, pc}
 801b894:	0801f2e4 	.word	0x0801f2e4
 801b898:	0801f6e0 	.word	0x0801f6e0
 801b89c:	447a0000 	.word	0x447a0000

0801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 801b8a0:	b570      	push	{r4, r5, r6, lr}
 801b8a2:	ed2d 8b04 	vpush	{d8-d9}
 801b8a6:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 801b8aa:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 801b8ac:	4604      	mov	r4, r0
 801b8ae:	add0      	add	r5, sp, #832	; 0x340
 801b8b0:	f825 3d40 	strh.w	r3, [r5, #-64]!
 801b8b4:	4628      	mov	r0, r5
 801b8b6:	f7f7 fa87 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b8ba:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 801b8bc:	4606      	mov	r6, r0
 801b8be:	4628      	mov	r0, r5
 801b8c0:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 801b8c4:	f7f7 fab4 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b8c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b8cc:	1c72      	adds	r2, r6, #1
 801b8ce:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801b8d2:	3001      	adds	r0, #1
 801b8d4:	ee07 2a90 	vmov	s15, r2
 801b8d8:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 801b8dc:	ee76 5ac7 	vsub.f32	s11, s13, s14
 801b8e0:	ee06 0a90 	vmov	s13, r0
 801b8e4:	ee36 6a47 	vsub.f32	s12, s12, s14
 801b8e8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801b8ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b8ee:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 801b8f2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b8f6:	9312      	str	r3, [sp, #72]	; 0x48
 801b8f8:	9316      	str	r3, [sp, #88]	; 0x58
 801b8fa:	a830      	add	r0, sp, #192	; 0xc0
 801b8fc:	ee77 7a86 	vadd.f32	s15, s15, s12
 801b900:	931a      	str	r3, [sp, #104]	; 0x68
 801b902:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801b906:	931e      	str	r3, [sp, #120]	; 0x78
 801b908:	2300      	movs	r3, #0
 801b90a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b90e:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 801b912:	ae70      	add	r6, sp, #448	; 0x1c0
 801b914:	9320      	str	r3, [sp, #128]	; 0x80
 801b916:	9321      	str	r3, [sp, #132]	; 0x84
 801b918:	9322      	str	r3, [sp, #136]	; 0x88
 801b91a:	9324      	str	r3, [sp, #144]	; 0x90
 801b91c:	9325      	str	r3, [sp, #148]	; 0x94
 801b91e:	9326      	str	r3, [sp, #152]	; 0x98
 801b920:	9328      	str	r3, [sp, #160]	; 0xa0
 801b922:	9329      	str	r3, [sp, #164]	; 0xa4
 801b924:	932a      	str	r3, [sp, #168]	; 0xa8
 801b926:	932c      	str	r3, [sp, #176]	; 0xb0
 801b928:	932d      	str	r3, [sp, #180]	; 0xb4
 801b92a:	932e      	str	r3, [sp, #184]	; 0xb8
 801b92c:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 801b930:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 801b934:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 801b938:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 801b93c:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 801b940:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 801b944:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 801b948:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 801b94c:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801b950:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 801b954:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 801b958:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 801b95c:	f000 fc2c 	bl	801c1b8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801b960:	eeb1 0a49 	vneg.f32	s0, s18
 801b964:	a830      	add	r0, sp, #192	; 0xc0
 801b966:	f000 fcf7 	bl	801c358 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801b96a:	eeb1 0a68 	vneg.f32	s0, s17
 801b96e:	f000 fd01 	bl	801c374 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801b972:	eeb1 0a48 	vneg.f32	s0, s16
 801b976:	f000 fd0c 	bl	801c392 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 801b97a:	a840      	add	r0, sp, #256	; 0x100
 801b97c:	f000 fc1c 	bl	801c1b8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801b980:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 801b984:	a840      	add	r0, sp, #256	; 0x100
 801b986:	f000 fc6b 	bl	801c260 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 801b98a:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 801b98e:	f000 fc91 	bl	801c2b4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 801b992:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 801b996:	f000 fcb6 	bl	801c306 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 801b99a:	a850      	add	r0, sp, #320	; 0x140
 801b99c:	f000 fc0c 	bl	801c1b8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801b9a0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801b9a4:	a850      	add	r0, sp, #320	; 0x140
 801b9a6:	f000 fd03 	bl	801c3b0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 801b9aa:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801b9ae:	f000 fd0b 	bl	801c3c8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 801b9b2:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801b9b6:	f000 fd14 	bl	801c3e2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 801b9ba:	a860      	add	r0, sp, #384	; 0x180
 801b9bc:	f000 fbfc 	bl	801c1b8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801b9c0:	eeb0 0a49 	vmov.f32	s0, s18
 801b9c4:	a860      	add	r0, sp, #384	; 0x180
 801b9c6:	f000 fcc7 	bl	801c358 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801b9ca:	eeb0 0a68 	vmov.f32	s0, s17
 801b9ce:	f000 fcd1 	bl	801c374 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801b9d2:	eeb0 0a48 	vmov.f32	s0, s16
 801b9d6:	f000 fcdc 	bl	801c392 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 801b9da:	aa50      	add	r2, sp, #320	; 0x140
 801b9dc:	a960      	add	r1, sp, #384	; 0x180
 801b9de:	a8b0      	add	r0, sp, #704	; 0x2c0
 801b9e0:	f000 fc02 	bl	801c1e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801b9e4:	4628      	mov	r0, r5
 801b9e6:	aa40      	add	r2, sp, #256	; 0x100
 801b9e8:	a9b0      	add	r1, sp, #704	; 0x2c0
 801b9ea:	f000 fbfd 	bl	801c1e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801b9ee:	4629      	mov	r1, r5
 801b9f0:	aa30      	add	r2, sp, #192	; 0xc0
 801b9f2:	a870      	add	r0, sp, #448	; 0x1c0
 801b9f4:	f000 fbf8 	bl	801c1e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801b9f8:	a880      	add	r0, sp, #512	; 0x200
 801b9fa:	f000 fbdd 	bl	801c1b8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801b9fe:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 801ba02:	a880      	add	r0, sp, #512	; 0x200
 801ba04:	eeb1 0a40 	vneg.f32	s0, s0
 801ba08:	f000 fca6 	bl	801c358 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801ba0c:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 801ba10:	a880      	add	r0, sp, #512	; 0x200
 801ba12:	eeb1 0a40 	vneg.f32	s0, s0
 801ba16:	f000 fcad 	bl	801c374 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801ba1a:	a890      	add	r0, sp, #576	; 0x240
 801ba1c:	f000 fbcc 	bl	801c1b8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801ba20:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 801ba24:	a890      	add	r0, sp, #576	; 0x240
 801ba26:	f000 fc0b 	bl	801c240 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 801ba2a:	a8a0      	add	r0, sp, #640	; 0x280
 801ba2c:	f000 fbc4 	bl	801c1b8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801ba30:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 801ba34:	a8a0      	add	r0, sp, #640	; 0x280
 801ba36:	f000 fc8f 	bl	801c358 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801ba3a:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 801ba3e:	f000 fc99 	bl	801c374 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801ba42:	aa90      	add	r2, sp, #576	; 0x240
 801ba44:	a9a0      	add	r1, sp, #640	; 0x280
 801ba46:	a8b0      	add	r0, sp, #704	; 0x2c0
 801ba48:	f000 fbce 	bl	801c1e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801ba4c:	4628      	mov	r0, r5
 801ba4e:	aa80      	add	r2, sp, #512	; 0x200
 801ba50:	a9b0      	add	r1, sp, #704	; 0x2c0
 801ba52:	f000 fbc9 	bl	801c1e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801ba56:	4629      	mov	r1, r5
 801ba58:	466d      	mov	r5, sp
 801ba5a:	aa70      	add	r2, sp, #448	; 0x1c0
 801ba5c:	4668      	mov	r0, sp
 801ba5e:	f000 fbc3 	bl	801c1e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801ba62:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801ba64:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801ba66:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801ba68:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801ba6a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801ba6c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801ba6e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801ba72:	2500      	movs	r5, #0
 801ba74:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 801ba78:	0129      	lsls	r1, r5, #4
 801ba7a:	ab20      	add	r3, sp, #128	; 0x80
 801ba7c:	3501      	adds	r5, #1
 801ba7e:	a870      	add	r0, sp, #448	; 0x1c0
 801ba80:	185e      	adds	r6, r3, r1
 801ba82:	ab10      	add	r3, sp, #64	; 0x40
 801ba84:	4419      	add	r1, r3
 801ba86:	f000 fb67 	bl	801c158 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 801ba8a:	2d04      	cmp	r5, #4
 801ba8c:	ed86 0a00 	vstr	s0, [r6]
 801ba90:	edc6 0a01 	vstr	s1, [r6, #4]
 801ba94:	ed86 1a02 	vstr	s2, [r6, #8]
 801ba98:	edc6 1a03 	vstr	s3, [r6, #12]
 801ba9c:	d1ec      	bne.n	801ba78 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 801ba9e:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 801baa2:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 801baa6:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 801baaa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801baae:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 801bab2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801bab6:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 801baba:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801babe:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 801bac2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801bac6:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 801baca:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801bace:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 801bad2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801bad6:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 801bada:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801bade:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 801bae2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801bae6:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 801baea:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801baee:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 801baf2:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 801baf6:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 801bafa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801bafe:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 801bb02:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801bb06:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 801bb0a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801bb0e:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 801bb12:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801bb16:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 801bb1a:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 801bb1e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 801bb22:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801bb26:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 801bb2a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801bb2e:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 801bb32:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bb36:	eec7 6a87 	vdiv.f32	s13, s15, s14
 801bb3a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 801bb3e:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 801bb42:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 801bb46:	ecbd 8b04 	vpop	{d8-d9}
 801bb4a:	bd70      	pop	{r4, r5, r6, pc}

0801bb4c <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 801bb4c:	b510      	push	{r4, lr}
 801bb4e:	4604      	mov	r4, r0
 801bb50:	f7f1 fb6b 	bl	800d22a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801bb54:	4620      	mov	r0, r4
 801bb56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bb5a:	f7ff bea1 	b.w	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801bb5e <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 801bb5e:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 801bb62:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 801bb66:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 801bb6a:	f7ff be99 	b.w	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801bb6e <_ZN8touchgfx13TextureMapper8setScaleEf>:
 801bb6e:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 801bb72:	f7ff be95 	b.w	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801bb76 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 801bb76:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 801bb7a:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 801bb7e:	f7ff be8f 	b.w	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801bb82 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 801bb82:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801bb86:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801bb8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bb8e:	fe30 0a27 	vselgt.f32	s0, s0, s15
 801bb92:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 801bb96:	f7ff be83 	b.w	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801bb9a <_ZN8touchgfx13TextureMapper9setCameraEff>:
 801bb9a:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 801bb9e:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 801bba2:	f7ff be7d 	b.w	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801bba6 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 801bba6:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 801bbaa:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 801bbae:	f7ff be77 	b.w	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801bbb2 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 801bbb2:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 801bbb6:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 801bbba:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 801bbbe:	f7ff be6f 	b.w	801b8a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801bbc2 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 801bbc2:	b510      	push	{r4, lr}
 801bbc4:	edd1 5a1a 	vldr	s11, [r1, #104]	; 0x68
 801bbc8:	edd1 7a17 	vldr	s15, [r1, #92]	; 0x5c
 801bbcc:	ed91 6a1d 	vldr	s12, [r1, #116]	; 0x74
 801bbd0:	eef4 7ae5 	vcmpe.f32	s15, s11
 801bbd4:	edd1 6a20 	vldr	s13, [r1, #128]	; 0x80
 801bbd8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 801bbdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbe0:	bf54      	ite	pl
 801bbe2:	eeb0 7a65 	vmovpl.f32	s14, s11
 801bbe6:	eeb0 7a67 	vmovmi.f32	s14, s15
 801bbea:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801bbee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbf2:	fe37 7a06 	vselgt.f32	s14, s14, s12
 801bbf6:	eef4 6ac7 	vcmpe.f32	s13, s14
 801bbfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbfe:	fe37 7a26 	vselgt.f32	s14, s14, s13
 801bc02:	febb 7a47 	vrintm.f32	s14, s14
 801bc06:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801bc0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc0e:	eef4 7ae5 	vcmpe.f32	s15, s11
 801bc12:	bf56      	itet	pl
 801bc14:	eebd 7ac7 	vcvtpl.s32.f32	s14, s14
 801bc18:	2200      	movmi	r2, #0
 801bc1a:	ee17 3a10 	vmovpl	r3, s14
 801bc1e:	ee07 4a10 	vmov	s14, r4
 801bc22:	bf58      	it	pl
 801bc24:	b21a      	sxthpl	r2, r3
 801bc26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc2a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bc2e:	8002      	strh	r2, [r0, #0]
 801bc30:	fe77 7aa5 	vselgt.f32	s15, s15, s11
 801bc34:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801bc38:	edd1 5a1b 	vldr	s11, [r1, #108]	; 0x6c
 801bc3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc40:	bf58      	it	pl
 801bc42:	eef0 7a46 	vmovpl.f32	s15, s12
 801bc46:	ed91 6a1e 	vldr	s12, [r1, #120]	; 0x78
 801bc4a:	eef4 6ae7 	vcmpe.f32	s13, s15
 801bc4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc52:	bf58      	it	pl
 801bc54:	eef0 7a66 	vmovpl.f32	s15, s13
 801bc58:	edd1 6a21 	vldr	s13, [r1, #132]	; 0x84
 801bc5c:	fefa 7a67 	vrintp.f32	s15, s15
 801bc60:	eef4 7ac7 	vcmpe.f32	s15, s14
 801bc64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc68:	bfdc      	itt	le
 801bc6a:	eefd 7ae7 	vcvtle.s32.f32	s15, s15
 801bc6e:	ee17 3a90 	vmovle	r3, s15
 801bc72:	edd1 7a18 	vldr	s15, [r1, #96]	; 0x60
 801bc76:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 801bc7a:	eef4 7ae5 	vcmpe.f32	s15, s11
 801bc7e:	bfd8      	it	le
 801bc80:	b21c      	sxthle	r4, r3
 801bc82:	1aa2      	subs	r2, r4, r2
 801bc84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc88:	8082      	strh	r2, [r0, #4]
 801bc8a:	bf54      	ite	pl
 801bc8c:	eeb0 7a65 	vmovpl.f32	s14, s11
 801bc90:	eeb0 7a67 	vmovmi.f32	s14, s15
 801bc94:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801bc98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc9c:	fe37 7a06 	vselgt.f32	s14, s14, s12
 801bca0:	eef4 6ac7 	vcmpe.f32	s13, s14
 801bca4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bca8:	fe37 7a26 	vselgt.f32	s14, s14, s13
 801bcac:	febb 7a47 	vrintm.f32	s14, s14
 801bcb0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801bcb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bcb8:	eef4 7ae5 	vcmpe.f32	s15, s11
 801bcbc:	bf56      	itet	pl
 801bcbe:	eebd 7ac7 	vcvtpl.s32.f32	s14, s14
 801bcc2:	2300      	movmi	r3, #0
 801bcc4:	ee17 3a10 	vmovpl	r3, s14
 801bcc8:	ee07 1a10 	vmov	s14, r1
 801bccc:	bf58      	it	pl
 801bcce:	b21b      	sxthpl	r3, r3
 801bcd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bcd4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bcd8:	8043      	strh	r3, [r0, #2]
 801bcda:	fe77 7aa5 	vselgt.f32	s15, s15, s11
 801bcde:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801bce2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bce6:	bf58      	it	pl
 801bce8:	eef0 7a46 	vmovpl.f32	s15, s12
 801bcec:	eef4 6ae7 	vcmpe.f32	s13, s15
 801bcf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bcf4:	bf58      	it	pl
 801bcf6:	eef0 7a66 	vmovpl.f32	s15, s13
 801bcfa:	fefa 7a67 	vrintp.f32	s15, s15
 801bcfe:	eef4 7ac7 	vcmpe.f32	s15, s14
 801bd02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd06:	bfde      	ittt	le
 801bd08:	eefd 7ae7 	vcvtle.s32.f32	s15, s15
 801bd0c:	ee17 1a90 	vmovle	r1, s15
 801bd10:	b209      	sxthle	r1, r1
 801bd12:	1acb      	subs	r3, r1, r3
 801bd14:	80c3      	strh	r3, [r0, #6]
 801bd16:	bd10      	pop	{r4, pc}

0801bd18 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 801bd18:	b513      	push	{r0, r1, r4, lr}
 801bd1a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801bd1e:	4604      	mov	r4, r0
 801bd20:	b143      	cbz	r3, 801bd34 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 801bd22:	4601      	mov	r1, r0
 801bd24:	4668      	mov	r0, sp
 801bd26:	f7ff ff4c 	bl	801bbc2 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 801bd2a:	6823      	ldr	r3, [r4, #0]
 801bd2c:	4669      	mov	r1, sp
 801bd2e:	4620      	mov	r0, r4
 801bd30:	691b      	ldr	r3, [r3, #16]
 801bd32:	4798      	blx	r3
 801bd34:	b002      	add	sp, #8
 801bd36:	bd10      	pop	{r4, pc}

0801bd38 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 801bd38:	4603      	mov	r3, r0
 801bd3a:	3026      	adds	r0, #38	; 0x26
 801bd3c:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 801bd40:	b90b      	cbnz	r3, 801bd46 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 801bd42:	f7f5 b825 	b.w	8010d90 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 801bd46:	f7f5 b833 	b.w	8010db0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0801bd4c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 801bd4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd50:	4604      	mov	r4, r0
 801bd52:	469b      	mov	fp, r3
 801bd54:	ed2d 8b04 	vpush	{d8-d9}
 801bd58:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 801bd5c:	b0b3      	sub	sp, #204	; 0xcc
 801bd5e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801bd62:	f9b1 6000 	ldrsh.w	r6, [r1]
 801bd66:	8888      	ldrh	r0, [r1, #4]
 801bd68:	9206      	str	r2, [sp, #24]
 801bd6a:	2200      	movs	r2, #0
 801bd6c:	4430      	add	r0, r6
 801bd6e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 801bd72:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 801bd76:	b280      	uxth	r0, r0
 801bd78:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 801bd7c:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 801bd7e:	fa0f fe80 	sxth.w	lr, r0
 801bd82:	9211      	str	r2, [sp, #68]	; 0x44
 801bd84:	4596      	cmp	lr, r2
 801bd86:	f340 8129 	ble.w	801bfdc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801bd8a:	45b4      	cmp	ip, r6
 801bd8c:	f340 8126 	ble.w	801bfdc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801bd90:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 801bd94:	88ca      	ldrh	r2, [r1, #6]
 801bd96:	442a      	add	r2, r5
 801bd98:	b292      	uxth	r2, r2
 801bd9a:	b211      	sxth	r1, r2
 801bd9c:	2900      	cmp	r1, #0
 801bd9e:	f340 811d 	ble.w	801bfdc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801bda2:	42ab      	cmp	r3, r5
 801bda4:	f340 811a 	ble.w	801bfdc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801bda8:	45f4      	cmp	ip, lr
 801bdaa:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801bdae:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801bdb2:	bfb8      	it	lt
 801bdb4:	fa1f f08c 	uxthlt.w	r0, ip
 801bdb8:	428b      	cmp	r3, r1
 801bdba:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801bdbe:	bfb8      	it	lt
 801bdc0:	b29a      	uxthlt	r2, r3
 801bdc2:	1b80      	subs	r0, r0, r6
 801bdc4:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 801bdc8:	1b52      	subs	r2, r2, r5
 801bdca:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 801bdce:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 801bdd2:	ab11      	add	r3, sp, #68	; 0x44
 801bdd4:	ad13      	add	r5, sp, #76	; 0x4c
 801bdd6:	6822      	ldr	r2, [r4, #0]
 801bdd8:	1d26      	adds	r6, r4, #4
 801bdda:	9307      	str	r3, [sp, #28]
 801bddc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 801bdde:	e893 0003 	ldmia.w	r3, {r0, r1}
 801bde2:	e885 0003 	stmia.w	r5, {r0, r1}
 801bde6:	4629      	mov	r1, r5
 801bde8:	4620      	mov	r0, r4
 801bdea:	4790      	blx	r2
 801bdec:	4621      	mov	r1, r4
 801bdee:	a815      	add	r0, sp, #84	; 0x54
 801bdf0:	f7f4 ff2a 	bl	8010c48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801bdf4:	a815      	add	r0, sp, #84	; 0x54
 801bdf6:	f7f3 fc61 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bdfa:	9b07      	ldr	r3, [sp, #28]
 801bdfc:	4631      	mov	r1, r6
 801bdfe:	4618      	mov	r0, r3
 801be00:	f7f3 fca0 	bl	800f744 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801be04:	4628      	mov	r0, r5
 801be06:	f104 0526 	add.w	r5, r4, #38	; 0x26
 801be0a:	f7f3 fc57 	bl	800f6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801be0e:	4628      	mov	r0, r5
 801be10:	f7f7 f8c6 	bl	8012fa0 <_ZNK8touchgfx6Bitmap7getDataEv>
 801be14:	9007      	str	r0, [sp, #28]
 801be16:	2800      	cmp	r0, #0
 801be18:	f000 80db 	beq.w	801bfd2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 801be1c:	f8db 2000 	ldr.w	r2, [fp]
 801be20:	a90d      	add	r1, sp, #52	; 0x34
 801be22:	a809      	add	r0, sp, #36	; 0x24
 801be24:	9209      	str	r2, [sp, #36]	; 0x24
 801be26:	f8db 2004 	ldr.w	r2, [fp, #4]
 801be2a:	920a      	str	r2, [sp, #40]	; 0x28
 801be2c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801be30:	920b      	str	r2, [sp, #44]	; 0x2c
 801be32:	f8db 200c 	ldr.w	r2, [fp, #12]
 801be36:	920c      	str	r2, [sp, #48]	; 0x30
 801be38:	f8da 2000 	ldr.w	r2, [sl]
 801be3c:	920d      	str	r2, [sp, #52]	; 0x34
 801be3e:	f8da 2004 	ldr.w	r2, [sl, #4]
 801be42:	920e      	str	r2, [sp, #56]	; 0x38
 801be44:	f8da 2008 	ldr.w	r2, [sl, #8]
 801be48:	920f      	str	r2, [sp, #60]	; 0x3c
 801be4a:	f8da 200c 	ldr.w	r2, [sl, #12]
 801be4e:	9210      	str	r2, [sp, #64]	; 0x40
 801be50:	4632      	mov	r2, r6
 801be52:	f7f3 fc5b 	bl	800f70c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801be56:	4632      	mov	r2, r6
 801be58:	a90e      	add	r1, sp, #56	; 0x38
 801be5a:	a80a      	add	r0, sp, #40	; 0x28
 801be5c:	f7f3 fc56 	bl	800f70c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801be60:	4632      	mov	r2, r6
 801be62:	a90f      	add	r1, sp, #60	; 0x3c
 801be64:	a80b      	add	r0, sp, #44	; 0x2c
 801be66:	f7f3 fc51 	bl	800f70c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801be6a:	4632      	mov	r2, r6
 801be6c:	a910      	add	r1, sp, #64	; 0x40
 801be6e:	a80c      	add	r0, sp, #48	; 0x30
 801be70:	f7f3 fc4c 	bl	800f70c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801be74:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 801be78:	edd7 4a00 	vldr	s9, [r7]
 801be7c:	eef0 6a67 	vmov.f32	s13, s15
 801be80:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 801be84:	edd7 5a01 	vldr	s11, [r7, #4]
 801be88:	eeb0 7a67 	vmov.f32	s14, s15
 801be8c:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 801be90:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 801be94:	ed98 4a00 	vldr	s8, [r8]
 801be98:	eeb0 6a67 	vmov.f32	s12, s15
 801be9c:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 801bea0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 801bea4:	ed98 5a01 	vldr	s10, [r8, #4]
 801bea8:	ed99 9a00 	vldr	s18, [r9]
 801beac:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801beb0:	ed99 8a01 	vldr	s16, [r9, #4]
 801beb4:	edd9 8a02 	vldr	s17, [r9, #8]
 801beb8:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 801bebc:	ee16 6a10 	vmov	r6, s12
 801bec0:	eeb0 6a67 	vmov.f32	s12, s15
 801bec4:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 801bec8:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 801becc:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801bed0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801bed4:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 801bed8:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 801bedc:	ee16 0a10 	vmov	r0, s12
 801bee0:	eeb0 6a67 	vmov.f32	s12, s15
 801bee4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 801bee8:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 801beec:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801bef0:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 801bef4:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 801bef8:	f8d7 a008 	ldr.w	sl, [r7, #8]
 801befc:	ee16 1a10 	vmov	r1, s12
 801bf00:	eeb0 6a67 	vmov.f32	s12, s15
 801bf04:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 801bf08:	f8d8 b008 	ldr.w	fp, [r8, #8]
 801bf0c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801bf10:	68ff      	ldr	r7, [r7, #12]
 801bf12:	9624      	str	r6, [sp, #144]	; 0x90
 801bf14:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 801bf18:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 801bf1c:	ee16 2a10 	vmov	r2, s12
 801bf20:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 801bf24:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 801bf28:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801bf2c:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 801bf30:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 801bf34:	4628      	mov	r0, r5
 801bf36:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 801bf3a:	9b06      	ldr	r3, [sp, #24]
 801bf3c:	922d      	str	r2, [sp, #180]	; 0xb4
 801bf3e:	4a29      	ldr	r2, [pc, #164]	; (801bfe4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 801bf40:	9317      	str	r3, [sp, #92]	; 0x5c
 801bf42:	8812      	ldrh	r2, [r2, #0]
 801bf44:	9b07      	ldr	r3, [sp, #28]
 801bf46:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 801bf4a:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 801bf4e:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 801bf52:	9218      	str	r2, [sp, #96]	; 0x60
 801bf54:	9319      	str	r3, [sp, #100]	; 0x64
 801bf56:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 801bf5a:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 801bf5e:	9731      	str	r7, [sp, #196]	; 0xc4
 801bf60:	f7f7 f84e 	bl	8013000 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801bf64:	901a      	str	r0, [sp, #104]	; 0x68
 801bf66:	4628      	mov	r0, r5
 801bf68:	f7f6 ff2e 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801bf6c:	901b      	str	r0, [sp, #108]	; 0x6c
 801bf6e:	4628      	mov	r0, r5
 801bf70:	f7f6 ff5e 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801bf74:	901c      	str	r0, [sp, #112]	; 0x70
 801bf76:	4628      	mov	r0, r5
 801bf78:	f7f6 ff26 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801bf7c:	eeb4 9a48 	vcmp.f32	s18, s16
 801bf80:	901d      	str	r0, [sp, #116]	; 0x74
 801bf82:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 801bf86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf8a:	d107      	bne.n	801bf9c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 801bf8c:	eeb4 8a68 	vcmp.f32	s16, s17
 801bf90:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801bf94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf98:	bf08      	it	eq
 801bf9a:	461e      	moveq	r6, r3
 801bf9c:	4b12      	ldr	r3, [pc, #72]	; (801bfe8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 801bf9e:	681b      	ldr	r3, [r3, #0]
 801bfa0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801bfa4:	b10a      	cbz	r2, 801bfaa <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 801bfa6:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 801bfa8:	b905      	cbnz	r5, 801bfac <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 801bfaa:	689d      	ldr	r5, [r3, #8]
 801bfac:	682b      	ldr	r3, [r5, #0]
 801bfae:	4620      	mov	r0, r4
 801bfb0:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 801bfb2:	f7ff fec1 	bl	801bd38 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 801bfb6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801bfba:	aa1e      	add	r2, sp, #120	; 0x78
 801bfbc:	9604      	str	r6, [sp, #16]
 801bfbe:	a917      	add	r1, sp, #92	; 0x5c
 801bfc0:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801bfc4:	ab13      	add	r3, sp, #76	; 0x4c
 801bfc6:	4628      	mov	r0, r5
 801bfc8:	9301      	str	r3, [sp, #4]
 801bfca:	ab15      	add	r3, sp, #84	; 0x54
 801bfcc:	9300      	str	r3, [sp, #0]
 801bfce:	ab19      	add	r3, sp, #100	; 0x64
 801bfd0:	47b8      	blx	r7
 801bfd2:	b033      	add	sp, #204	; 0xcc
 801bfd4:	ecbd 8b04 	vpop	{d8-d9}
 801bfd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfdc:	2300      	movs	r3, #0
 801bfde:	9312      	str	r3, [sp, #72]	; 0x48
 801bfe0:	e6f7      	b.n	801bdd2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 801bfe2:	bf00      	nop
 801bfe4:	24008946 	.word	0x24008946
 801bfe8:	2400894c 	.word	0x2400894c

0801bfec <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 801bfec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bff0:	ed2d 8b02 	vpush	{d8}
 801bff4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801bff8:	b098      	sub	sp, #96	; 0x60
 801bffa:	4604      	mov	r4, r0
 801bffc:	4688      	mov	r8, r1
 801bffe:	2b00      	cmp	r3, #0
 801c000:	d077      	beq.n	801c0f2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 801c002:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801c006:	4628      	mov	r0, r5
 801c008:	f7f6 fede 	bl	8012dc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c00c:	ee07 0a90 	vmov	s15, r0
 801c010:	4628      	mov	r0, r5
 801c012:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 801c016:	f7f6 ff0b 	bl	8012e30 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c01a:	4b4e      	ldr	r3, [pc, #312]	; (801c154 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 801c01c:	ee07 0a90 	vmov	s15, r0
 801c020:	781b      	ldrb	r3, [r3, #0]
 801c022:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801c026:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 801c02a:	2b01      	cmp	r3, #1
 801c02c:	d066      	beq.n	801c0fc <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 801c02e:	eeb0 6a47 	vmov.f32	s12, s14
 801c032:	ee17 3a10 	vmov	r3, s14
 801c036:	eeb0 4a48 	vmov.f32	s8, s16
 801c03a:	eeb0 7a48 	vmov.f32	s14, s16
 801c03e:	eef0 4a67 	vmov.f32	s9, s15
 801c042:	eeb0 8a67 	vmov.f32	s16, s15
 801c046:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 801c04a:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 801c04e:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 801c052:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 801c056:	ee73 1a65 	vsub.f32	s3, s6, s11
 801c05a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 801c05e:	ee72 6ac5 	vsub.f32	s13, s5, s10
 801c062:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 801c066:	ee32 1a45 	vsub.f32	s2, s4, s10
 801c06a:	6f25      	ldr	r5, [r4, #112]	; 0x70
 801c06c:	6e66      	ldr	r6, [r4, #100]	; 0x64
 801c06e:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 801c072:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 801c074:	ee73 1ae5 	vsub.f32	s3, s7, s11
 801c078:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 801c07c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 801c080:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801c084:	eee1 6a21 	vfma.f32	s13, s2, s3
 801c088:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801c08c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c090:	dd3d      	ble.n	801c10e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 801c092:	ed8d 5a04 	vstr	s10, [sp, #16]
 801c096:	ed8d 2a05 	vstr	s4, [sp, #20]
 801c09a:	edcd 2a06 	vstr	s5, [sp, #24]
 801c09e:	f8cd c01c 	str.w	ip, [sp, #28]
 801c0a2:	edcd 5a08 	vstr	s11, [sp, #32]
 801c0a6:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 801c0aa:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 801c0ae:	970b      	str	r7, [sp, #44]	; 0x2c
 801c0b0:	960c      	str	r6, [sp, #48]	; 0x30
 801c0b2:	950d      	str	r5, [sp, #52]	; 0x34
 801c0b4:	920e      	str	r2, [sp, #56]	; 0x38
 801c0b6:	900f      	str	r0, [sp, #60]	; 0x3c
 801c0b8:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 801c0bc:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 801c0c0:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 801c0c4:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 801c0c8:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 801c0cc:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 801c0d0:	9316      	str	r3, [sp, #88]	; 0x58
 801c0d2:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 801c0d6:	ab14      	add	r3, sp, #80	; 0x50
 801c0d8:	2200      	movs	r2, #0
 801c0da:	4641      	mov	r1, r8
 801c0dc:	4620      	mov	r0, r4
 801c0de:	9303      	str	r3, [sp, #12]
 801c0e0:	ab10      	add	r3, sp, #64	; 0x40
 801c0e2:	9302      	str	r3, [sp, #8]
 801c0e4:	ab0c      	add	r3, sp, #48	; 0x30
 801c0e6:	9301      	str	r3, [sp, #4]
 801c0e8:	ab08      	add	r3, sp, #32
 801c0ea:	9300      	str	r3, [sp, #0]
 801c0ec:	ab04      	add	r3, sp, #16
 801c0ee:	f7ff fe2d 	bl	801bd4c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 801c0f2:	b018      	add	sp, #96	; 0x60
 801c0f4:	ecbd 8b02 	vpop	{d8}
 801c0f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c0fc:	eeb0 6a48 	vmov.f32	s12, s16
 801c100:	ee17 3a90 	vmov	r3, s15
 801c104:	eef0 4a47 	vmov.f32	s9, s14
 801c108:	eeb0 4a67 	vmov.f32	s8, s15
 801c10c:	e79b      	b.n	801c046 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 801c10e:	ed8d 5a05 	vstr	s10, [sp, #20]
 801c112:	ed8d 2a04 	vstr	s4, [sp, #16]
 801c116:	f8cd c018 	str.w	ip, [sp, #24]
 801c11a:	edcd 2a07 	vstr	s5, [sp, #28]
 801c11e:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 801c122:	ed8d 3a08 	vstr	s6, [sp, #32]
 801c126:	970a      	str	r7, [sp, #40]	; 0x28
 801c128:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 801c12c:	960d      	str	r6, [sp, #52]	; 0x34
 801c12e:	950c      	str	r5, [sp, #48]	; 0x30
 801c130:	900e      	str	r0, [sp, #56]	; 0x38
 801c132:	920f      	str	r2, [sp, #60]	; 0x3c
 801c134:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 801c138:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 801c13c:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 801c140:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 801c144:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 801c148:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 801c14c:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 801c150:	9317      	str	r3, [sp, #92]	; 0x5c
 801c152:	e7c0      	b.n	801c0d6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 801c154:	24008944 	.word	0x24008944

0801c158 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 801c158:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c15a:	2300      	movs	r3, #0
 801c15c:	b08d      	sub	sp, #52	; 0x34
 801c15e:	f100 0640 	add.w	r6, r0, #64	; 0x40
 801c162:	f101 0710 	add.w	r7, r1, #16
 801c166:	9304      	str	r3, [sp, #16]
 801c168:	aa04      	add	r2, sp, #16
 801c16a:	9305      	str	r3, [sp, #20]
 801c16c:	9306      	str	r3, [sp, #24]
 801c16e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 801c172:	9307      	str	r3, [sp, #28]
 801c174:	4613      	mov	r3, r2
 801c176:	460c      	mov	r4, r1
 801c178:	4605      	mov	r5, r0
 801c17a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 801c1b4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 801c17e:	ecb4 7a01 	vldmia	r4!, {s14}
 801c182:	ecf5 6a01 	vldmia	r5!, {s13}
 801c186:	42bc      	cmp	r4, r7
 801c188:	eee6 7a87 	vfma.f32	s15, s13, s14
 801c18c:	d1f7      	bne.n	801c17e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 801c18e:	3010      	adds	r0, #16
 801c190:	ece2 7a01 	vstmia	r2!, {s15}
 801c194:	42b0      	cmp	r0, r6
 801c196:	d1ee      	bne.n	801c176 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 801c198:	ac0c      	add	r4, sp, #48	; 0x30
 801c19a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801c19c:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 801c1a0:	ed9d 0a08 	vldr	s0, [sp, #32]
 801c1a4:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 801c1a8:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 801c1ac:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 801c1b0:	b00d      	add	sp, #52	; 0x34
 801c1b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c1b4:	00000000 	.word	0x00000000

0801c1b8 <_ZN8touchgfx9Matrix4x4C1Ev>:
 801c1b8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801c1bc:	2300      	movs	r3, #0
 801c1be:	ed9f 7a09 	vldr	s14, [pc, #36]	; 801c1e4 <_ZN8touchgfx9Matrix4x4C1Ev+0x2c>
 801c1c2:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 801c1c6:	2200      	movs	r2, #0
 801c1c8:	4293      	cmp	r3, r2
 801c1ca:	f102 0201 	add.w	r2, r2, #1
 801c1ce:	fe47 6a87 	vseleq.f32	s13, s15, s14
 801c1d2:	2a04      	cmp	r2, #4
 801c1d4:	ece1 6a01 	vstmia	r1!, {s13}
 801c1d8:	d1f6      	bne.n	801c1c8 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 801c1da:	3301      	adds	r3, #1
 801c1dc:	2b04      	cmp	r3, #4
 801c1de:	d1f0      	bne.n	801c1c2 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 801c1e0:	4770      	bx	lr
 801c1e2:	bf00      	nop
 801c1e4:	00000000 	.word	0x00000000

0801c1e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 801c1e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c1ec:	460c      	mov	r4, r1
 801c1ee:	4605      	mov	r5, r0
 801c1f0:	4690      	mov	r8, r2
 801c1f2:	f7ff ffe1 	bl	801c1b8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801c1f6:	4628      	mov	r0, r5
 801c1f8:	4621      	mov	r1, r4
 801c1fa:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 801c1fe:	2300      	movs	r3, #0
 801c200:	eb08 0603 	add.w	r6, r8, r3
 801c204:	460f      	mov	r7, r1
 801c206:	2400      	movs	r4, #0
 801c208:	eddf 7a0c 	vldr	s15, [pc, #48]	; 801c23c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x54>
 801c20c:	4632      	mov	r2, r6
 801c20e:	3401      	adds	r4, #1
 801c210:	ecf7 6a01 	vldmia	r7!, {s13}
 801c214:	3610      	adds	r6, #16
 801c216:	ed92 7a00 	vldr	s14, [r2]
 801c21a:	2c04      	cmp	r4, #4
 801c21c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801c220:	d1f4      	bne.n	801c20c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 801c222:	18c2      	adds	r2, r0, r3
 801c224:	3304      	adds	r3, #4
 801c226:	2b10      	cmp	r3, #16
 801c228:	edc2 7a00 	vstr	s15, [r2]
 801c22c:	d1e8      	bne.n	801c200 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 801c22e:	3110      	adds	r1, #16
 801c230:	3010      	adds	r0, #16
 801c232:	4561      	cmp	r1, ip
 801c234:	d1e3      	bne.n	801c1fe <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 801c236:	4628      	mov	r0, r5
 801c238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c23c:	00000000 	.word	0x00000000

0801c240 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 801c240:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801c244:	f100 0320 	add.w	r3, r0, #32
 801c248:	3030      	adds	r0, #48	; 0x30
 801c24a:	ee87 0a80 	vdiv.f32	s0, s15, s0
 801c24e:	ecf3 7a01 	vldmia	r3!, {s15}
 801c252:	4283      	cmp	r3, r0
 801c254:	ee60 7a27 	vmul.f32	s15, s0, s15
 801c258:	edc3 7a03 	vstr	s15, [r3, #12]
 801c25c:	d1f7      	bne.n	801c24e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 801c25e:	4770      	bx	lr

0801c260 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 801c260:	b510      	push	{r4, lr}
 801c262:	ed2d 8b02 	vpush	{d8}
 801c266:	eef0 8a40 	vmov.f32	s17, s0
 801c26a:	4604      	mov	r4, r0
 801c26c:	f000 fa08 	bl	801c680 <sinf>
 801c270:	eeb0 8a40 	vmov.f32	s16, s0
 801c274:	eeb0 0a68 	vmov.f32	s0, s17
 801c278:	f000 f91a 	bl	801c4b0 <cosf>
 801c27c:	eeb1 6a48 	vneg.f32	s12, s16
 801c280:	f104 0310 	add.w	r3, r4, #16
 801c284:	f104 0220 	add.w	r2, r4, #32
 801c288:	edd3 7a04 	vldr	s15, [r3, #16]
 801c28c:	edd3 6a00 	vldr	s13, [r3]
 801c290:	ee26 7a27 	vmul.f32	s14, s12, s15
 801c294:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c298:	eea6 7a80 	vfma.f32	s14, s13, s0
 801c29c:	eee6 7a88 	vfma.f32	s15, s13, s16
 801c2a0:	eca3 7a01 	vstmia	r3!, {s14}
 801c2a4:	429a      	cmp	r2, r3
 801c2a6:	edc3 7a03 	vstr	s15, [r3, #12]
 801c2aa:	d1ed      	bne.n	801c288 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 801c2ac:	4620      	mov	r0, r4
 801c2ae:	ecbd 8b02 	vpop	{d8}
 801c2b2:	bd10      	pop	{r4, pc}

0801c2b4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 801c2b4:	b510      	push	{r4, lr}
 801c2b6:	ed2d 8b02 	vpush	{d8}
 801c2ba:	eef0 8a40 	vmov.f32	s17, s0
 801c2be:	4604      	mov	r4, r0
 801c2c0:	f000 f9de 	bl	801c680 <sinf>
 801c2c4:	eeb0 8a40 	vmov.f32	s16, s0
 801c2c8:	eeb0 0a68 	vmov.f32	s0, s17
 801c2cc:	f000 f8f0 	bl	801c4b0 <cosf>
 801c2d0:	eeb1 6a48 	vneg.f32	s12, s16
 801c2d4:	4623      	mov	r3, r4
 801c2d6:	f104 0210 	add.w	r2, r4, #16
 801c2da:	edd3 7a08 	vldr	s15, [r3, #32]
 801c2de:	edd3 6a00 	vldr	s13, [r3]
 801c2e2:	ee27 7a88 	vmul.f32	s14, s15, s16
 801c2e6:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c2ea:	eea6 7a80 	vfma.f32	s14, s13, s0
 801c2ee:	eee6 7a26 	vfma.f32	s15, s12, s13
 801c2f2:	eca3 7a01 	vstmia	r3!, {s14}
 801c2f6:	429a      	cmp	r2, r3
 801c2f8:	edc3 7a07 	vstr	s15, [r3, #28]
 801c2fc:	d1ed      	bne.n	801c2da <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 801c2fe:	4620      	mov	r0, r4
 801c300:	ecbd 8b02 	vpop	{d8}
 801c304:	bd10      	pop	{r4, pc}

0801c306 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 801c306:	b510      	push	{r4, lr}
 801c308:	ed2d 8b02 	vpush	{d8}
 801c30c:	eef0 8a40 	vmov.f32	s17, s0
 801c310:	4604      	mov	r4, r0
 801c312:	f000 f9b5 	bl	801c680 <sinf>
 801c316:	eeb0 8a40 	vmov.f32	s16, s0
 801c31a:	eeb0 0a68 	vmov.f32	s0, s17
 801c31e:	f000 f8c7 	bl	801c4b0 <cosf>
 801c322:	eeb1 6a48 	vneg.f32	s12, s16
 801c326:	4623      	mov	r3, r4
 801c328:	f104 0210 	add.w	r2, r4, #16
 801c32c:	edd3 7a04 	vldr	s15, [r3, #16]
 801c330:	edd3 6a00 	vldr	s13, [r3]
 801c334:	ee26 7a27 	vmul.f32	s14, s12, s15
 801c338:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c33c:	eea6 7a80 	vfma.f32	s14, s13, s0
 801c340:	eee6 7a88 	vfma.f32	s15, s13, s16
 801c344:	eca3 7a01 	vstmia	r3!, {s14}
 801c348:	429a      	cmp	r2, r3
 801c34a:	edc3 7a03 	vstr	s15, [r3, #12]
 801c34e:	d1ed      	bne.n	801c32c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 801c350:	4620      	mov	r0, r4
 801c352:	ecbd 8b02 	vpop	{d8}
 801c356:	bd10      	pop	{r4, pc}

0801c358 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 801c358:	4603      	mov	r3, r0
 801c35a:	f100 0210 	add.w	r2, r0, #16
 801c35e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 801c362:	edd3 7a00 	vldr	s15, [r3]
 801c366:	eee7 7a00 	vfma.f32	s15, s14, s0
 801c36a:	ece3 7a01 	vstmia	r3!, {s15}
 801c36e:	4293      	cmp	r3, r2
 801c370:	d1f5      	bne.n	801c35e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 801c372:	4770      	bx	lr

0801c374 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 801c374:	f100 0310 	add.w	r3, r0, #16
 801c378:	f100 0220 	add.w	r2, r0, #32
 801c37c:	ed93 7a08 	vldr	s14, [r3, #32]
 801c380:	edd3 7a00 	vldr	s15, [r3]
 801c384:	eee7 7a00 	vfma.f32	s15, s14, s0
 801c388:	ece3 7a01 	vstmia	r3!, {s15}
 801c38c:	4293      	cmp	r3, r2
 801c38e:	d1f5      	bne.n	801c37c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 801c390:	4770      	bx	lr

0801c392 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 801c392:	f100 0320 	add.w	r3, r0, #32
 801c396:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801c39a:	ed93 7a04 	vldr	s14, [r3, #16]
 801c39e:	edd3 7a00 	vldr	s15, [r3]
 801c3a2:	eee7 7a00 	vfma.f32	s15, s14, s0
 801c3a6:	ece3 7a01 	vstmia	r3!, {s15}
 801c3aa:	4293      	cmp	r3, r2
 801c3ac:	d1f5      	bne.n	801c39a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 801c3ae:	4770      	bx	lr

0801c3b0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 801c3b0:	4603      	mov	r3, r0
 801c3b2:	f100 0210 	add.w	r2, r0, #16
 801c3b6:	edd3 7a00 	vldr	s15, [r3]
 801c3ba:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c3be:	ece3 7a01 	vstmia	r3!, {s15}
 801c3c2:	4293      	cmp	r3, r2
 801c3c4:	d1f7      	bne.n	801c3b6 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 801c3c6:	4770      	bx	lr

0801c3c8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 801c3c8:	f100 0310 	add.w	r3, r0, #16
 801c3cc:	f100 0220 	add.w	r2, r0, #32
 801c3d0:	edd3 7a00 	vldr	s15, [r3]
 801c3d4:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c3d8:	ece3 7a01 	vstmia	r3!, {s15}
 801c3dc:	4293      	cmp	r3, r2
 801c3de:	d1f7      	bne.n	801c3d0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 801c3e0:	4770      	bx	lr

0801c3e2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 801c3e2:	f100 0320 	add.w	r3, r0, #32
 801c3e6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801c3ea:	edd3 7a00 	vldr	s15, [r3]
 801c3ee:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c3f2:	ece3 7a01 	vstmia	r3!, {s15}
 801c3f6:	4293      	cmp	r3, r2
 801c3f8:	d1f7      	bne.n	801c3ea <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 801c3fa:	4770      	bx	lr

0801c3fc <__aeabi_atexit>:
 801c3fc:	460b      	mov	r3, r1
 801c3fe:	4601      	mov	r1, r0
 801c400:	4618      	mov	r0, r3
 801c402:	f000 ba01 	b.w	801c808 <__cxa_atexit>

0801c406 <_ZdlPvj>:
 801c406:	f000 b812 	b.w	801c42e <_ZdlPv>

0801c40a <__cxa_guard_acquire>:
 801c40a:	6803      	ldr	r3, [r0, #0]
 801c40c:	07db      	lsls	r3, r3, #31
 801c40e:	d406      	bmi.n	801c41e <__cxa_guard_acquire+0x14>
 801c410:	7843      	ldrb	r3, [r0, #1]
 801c412:	b103      	cbz	r3, 801c416 <__cxa_guard_acquire+0xc>
 801c414:	deff      	udf	#255	; 0xff
 801c416:	2301      	movs	r3, #1
 801c418:	7043      	strb	r3, [r0, #1]
 801c41a:	4618      	mov	r0, r3
 801c41c:	4770      	bx	lr
 801c41e:	2000      	movs	r0, #0
 801c420:	4770      	bx	lr

0801c422 <__cxa_guard_release>:
 801c422:	2301      	movs	r3, #1
 801c424:	6003      	str	r3, [r0, #0]
 801c426:	4770      	bx	lr

0801c428 <__cxa_pure_virtual>:
 801c428:	b508      	push	{r3, lr}
 801c42a:	f000 f80f 	bl	801c44c <_ZSt9terminatev>

0801c42e <_ZdlPv>:
 801c42e:	f000 bb37 	b.w	801caa0 <free>

0801c432 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801c432:	b508      	push	{r3, lr}
 801c434:	4780      	blx	r0
 801c436:	f000 f9bb 	bl	801c7b0 <abort>
	...

0801c43c <_ZSt13get_terminatev>:
 801c43c:	4b02      	ldr	r3, [pc, #8]	; (801c448 <_ZSt13get_terminatev+0xc>)
 801c43e:	6818      	ldr	r0, [r3, #0]
 801c440:	f3bf 8f5b 	dmb	ish
 801c444:	4770      	bx	lr
 801c446:	bf00      	nop
 801c448:	240000a8 	.word	0x240000a8

0801c44c <_ZSt9terminatev>:
 801c44c:	b508      	push	{r3, lr}
 801c44e:	f7ff fff5 	bl	801c43c <_ZSt13get_terminatev>
 801c452:	f7ff ffee 	bl	801c432 <_ZN10__cxxabiv111__terminateEPFvvE>

0801c456 <sinf_poly>:
 801c456:	07cb      	lsls	r3, r1, #31
 801c458:	d412      	bmi.n	801c480 <sinf_poly+0x2a>
 801c45a:	ee21 5b00 	vmul.f64	d5, d1, d0
 801c45e:	ed90 6b1a 	vldr	d6, [r0, #104]	; 0x68
 801c462:	ed90 7b18 	vldr	d7, [r0, #96]	; 0x60
 801c466:	eea6 7b01 	vfma.f64	d7, d6, d1
 801c46a:	ed90 6b16 	vldr	d6, [r0, #88]	; 0x58
 801c46e:	ee21 1b05 	vmul.f64	d1, d1, d5
 801c472:	eea6 0b05 	vfma.f64	d0, d6, d5
 801c476:	eea7 0b01 	vfma.f64	d0, d7, d1
 801c47a:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 801c47e:	4770      	bx	lr
 801c480:	ed90 6b14 	vldr	d6, [r0, #80]	; 0x50
 801c484:	ee21 5b01 	vmul.f64	d5, d1, d1
 801c488:	ed90 7b12 	vldr	d7, [r0, #72]	; 0x48
 801c48c:	ed90 0b0c 	vldr	d0, [r0, #48]	; 0x30
 801c490:	eea1 7b06 	vfma.f64	d7, d1, d6
 801c494:	ed90 6b0e 	vldr	d6, [r0, #56]	; 0x38
 801c498:	eea1 0b06 	vfma.f64	d0, d1, d6
 801c49c:	ed90 6b10 	vldr	d6, [r0, #64]	; 0x40
 801c4a0:	ee21 1b05 	vmul.f64	d1, d1, d5
 801c4a4:	eea5 0b06 	vfma.f64	d0, d5, d6
 801c4a8:	e7e5      	b.n	801c476 <sinf_poly+0x20>
 801c4aa:	0000      	movs	r0, r0
 801c4ac:	0000      	movs	r0, r0
	...

0801c4b0 <cosf>:
 801c4b0:	b538      	push	{r3, r4, r5, lr}
 801c4b2:	ee10 4a10 	vmov	r4, s0
 801c4b6:	f3c4 530a 	ubfx	r3, r4, #20, #11
 801c4ba:	f5b3 7f7d 	cmp.w	r3, #1012	; 0x3f4
 801c4be:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
 801c4c2:	d21f      	bcs.n	801c504 <cosf+0x54>
 801c4c4:	ee27 0b07 	vmul.f64	d0, d7, d7
 801c4c8:	f5b3 7f66 	cmp.w	r3, #920	; 0x398
 801c4cc:	f0c0 8088 	bcc.w	801c5e0 <cosf+0x130>
 801c4d0:	ee20 4b00 	vmul.f64	d4, d0, d0
 801c4d4:	4b46      	ldr	r3, [pc, #280]	; (801c5f0 <cosf+0x140>)
 801c4d6:	ed93 5b14 	vldr	d5, [r3, #80]	; 0x50
 801c4da:	ed93 6b12 	vldr	d6, [r3, #72]	; 0x48
 801c4de:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 801c4e2:	eea0 6b05 	vfma.f64	d6, d0, d5
 801c4e6:	ed93 5b0e 	vldr	d5, [r3, #56]	; 0x38
 801c4ea:	eea0 7b05 	vfma.f64	d7, d0, d5
 801c4ee:	ed93 5b10 	vldr	d5, [r3, #64]	; 0x40
 801c4f2:	ee20 0b04 	vmul.f64	d0, d0, d4
 801c4f6:	eea4 7b05 	vfma.f64	d7, d4, d5
 801c4fa:	eea6 7b00 	vfma.f64	d7, d6, d0
 801c4fe:	eeb7 0bc7 	vcvt.f32.f64	s0, d7
 801c502:	bd38      	pop	{r3, r4, r5, pc}
 801c504:	f240 422e 	movw	r2, #1070	; 0x42e
 801c508:	4293      	cmp	r3, r2
 801c50a:	d82b      	bhi.n	801c564 <cosf+0xb4>
 801c50c:	4b38      	ldr	r3, [pc, #224]	; (801c5f0 <cosf+0x140>)
 801c50e:	ed93 6b08 	vldr	d6, [r3, #32]
 801c512:	ee27 6b06 	vmul.f64	d6, d7, d6
 801c516:	eefd 6bc6 	vcvt.s32.f64	s13, d6
 801c51a:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801c51e:	ee16 1a90 	vmov	r1, s13
 801c522:	f501 0100 	add.w	r1, r1, #8388608	; 0x800000
 801c526:	1609      	asrs	r1, r1, #24
 801c528:	ee06 1a90 	vmov	s13, r1
 801c52c:	eeb8 5be6 	vcvt.f64.s32	d5, s13
 801c530:	ed93 6b0a 	vldr	d6, [r3, #40]	; 0x28
 801c534:	f001 0203 	and.w	r2, r1, #3
 801c538:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801c53c:	eea5 7b46 	vfms.f64	d7, d5, d6
 801c540:	eeb0 0b47 	vmov.f64	d0, d7
 801c544:	ed92 7b00 	vldr	d7, [r2]
 801c548:	ee20 1b00 	vmul.f64	d1, d0, d0
 801c54c:	f011 0f02 	tst.w	r1, #2
 801c550:	bf08      	it	eq
 801c552:	4618      	moveq	r0, r3
 801c554:	f081 0101 	eor.w	r1, r1, #1
 801c558:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c55c:	ee20 0b07 	vmul.f64	d0, d0, d7
 801c560:	f7ff bf79 	b.w	801c456 <sinf_poly>
 801c564:	f5b3 6fff 	cmp.w	r3, #2040	; 0x7f8
 801c568:	d236      	bcs.n	801c5d8 <cosf+0x128>
 801c56a:	4a22      	ldr	r2, [pc, #136]	; (801c5f4 <cosf+0x144>)
 801c56c:	f3c4 6183 	ubfx	r1, r4, #26, #4
 801c570:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 801c574:	f3c4 0316 	ubfx	r3, r4, #0, #23
 801c578:	f3c4 50c2 	ubfx	r0, r4, #23, #3
 801c57c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801c580:	4083      	lsls	r3, r0
 801c582:	6a28      	ldr	r0, [r5, #32]
 801c584:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 801c588:	fba3 1000 	umull	r1, r0, r3, r0
 801c58c:	6929      	ldr	r1, [r5, #16]
 801c58e:	435a      	muls	r2, r3
 801c590:	fbe3 0201 	umlal	r0, r2, r3, r1
 801c594:	f102 5100 	add.w	r1, r2, #536870912	; 0x20000000
 801c598:	0f8d      	lsrs	r5, r1, #30
 801c59a:	f001 4140 	and.w	r1, r1, #3221225472	; 0xc0000000
 801c59e:	1a51      	subs	r1, r2, r1
 801c5a0:	f7e4 f894 	bl	80006cc <__aeabi_l2d>
 801c5a4:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
 801c5a8:	4b11      	ldr	r3, [pc, #68]	; (801c5f0 <cosf+0x140>)
 801c5aa:	ed9f 7b0f 	vldr	d7, [pc, #60]	; 801c5e8 <cosf+0x138>
 801c5ae:	ec41 0b16 	vmov	d6, r0, r1
 801c5b2:	f004 0203 	and.w	r2, r4, #3
 801c5b6:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801c5ba:	f014 0f02 	tst.w	r4, #2
 801c5be:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801c5c2:	ee26 7b07 	vmul.f64	d7, d6, d7
 801c5c6:	ed92 0b00 	vldr	d0, [r2]
 801c5ca:	ee27 1b07 	vmul.f64	d1, d7, d7
 801c5ce:	f085 0101 	eor.w	r1, r5, #1
 801c5d2:	bf08      	it	eq
 801c5d4:	4618      	moveq	r0, r3
 801c5d6:	e7bf      	b.n	801c558 <cosf+0xa8>
 801c5d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c5dc:	f000 b817 	b.w	801c60e <__math_invalidf>
 801c5e0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801c5e4:	e78d      	b.n	801c502 <cosf+0x52>
 801c5e6:	bf00      	nop
 801c5e8:	54442d18 	.word	0x54442d18
 801c5ec:	3c1921fb 	.word	0x3c1921fb
 801c5f0:	0801f850 	.word	0x0801f850
 801c5f4:	0801f7ec 	.word	0x0801f7ec

0801c5f8 <with_errnof>:
 801c5f8:	b513      	push	{r0, r1, r4, lr}
 801c5fa:	4604      	mov	r4, r0
 801c5fc:	ed8d 0a01 	vstr	s0, [sp, #4]
 801c600:	f000 f910 	bl	801c824 <__errno>
 801c604:	ed9d 0a01 	vldr	s0, [sp, #4]
 801c608:	6004      	str	r4, [r0, #0]
 801c60a:	b002      	add	sp, #8
 801c60c:	bd10      	pop	{r4, pc}

0801c60e <__math_invalidf>:
 801c60e:	eef0 7a40 	vmov.f32	s15, s0
 801c612:	ee30 7a40 	vsub.f32	s14, s0, s0
 801c616:	eef4 7a67 	vcmp.f32	s15, s15
 801c61a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c61e:	ee87 0a07 	vdiv.f32	s0, s14, s14
 801c622:	d602      	bvs.n	801c62a <__math_invalidf+0x1c>
 801c624:	2021      	movs	r0, #33	; 0x21
 801c626:	f7ff bfe7 	b.w	801c5f8 <with_errnof>
 801c62a:	4770      	bx	lr

0801c62c <sinf_poly>:
 801c62c:	07cb      	lsls	r3, r1, #31
 801c62e:	d412      	bmi.n	801c656 <sinf_poly+0x2a>
 801c630:	ee21 5b00 	vmul.f64	d5, d1, d0
 801c634:	ed90 6b1a 	vldr	d6, [r0, #104]	; 0x68
 801c638:	ed90 7b18 	vldr	d7, [r0, #96]	; 0x60
 801c63c:	eea6 7b01 	vfma.f64	d7, d6, d1
 801c640:	ed90 6b16 	vldr	d6, [r0, #88]	; 0x58
 801c644:	ee21 1b05 	vmul.f64	d1, d1, d5
 801c648:	eea6 0b05 	vfma.f64	d0, d6, d5
 801c64c:	eea7 0b01 	vfma.f64	d0, d7, d1
 801c650:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 801c654:	4770      	bx	lr
 801c656:	ed90 6b14 	vldr	d6, [r0, #80]	; 0x50
 801c65a:	ee21 5b01 	vmul.f64	d5, d1, d1
 801c65e:	ed90 7b12 	vldr	d7, [r0, #72]	; 0x48
 801c662:	ed90 0b0c 	vldr	d0, [r0, #48]	; 0x30
 801c666:	eea1 7b06 	vfma.f64	d7, d1, d6
 801c66a:	ed90 6b0e 	vldr	d6, [r0, #56]	; 0x38
 801c66e:	eea1 0b06 	vfma.f64	d0, d1, d6
 801c672:	ed90 6b10 	vldr	d6, [r0, #64]	; 0x40
 801c676:	ee21 1b05 	vmul.f64	d1, d1, d5
 801c67a:	eea5 0b06 	vfma.f64	d0, d5, d6
 801c67e:	e7e5      	b.n	801c64c <sinf_poly+0x20>

0801c680 <sinf>:
 801c680:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801c682:	ee10 4a10 	vmov	r4, s0
 801c686:	f3c4 530a 	ubfx	r3, r4, #20, #11
 801c68a:	f5b3 7f7d 	cmp.w	r3, #1012	; 0x3f4
 801c68e:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
 801c692:	eef0 7a40 	vmov.f32	s15, s0
 801c696:	ea4f 5214 	mov.w	r2, r4, lsr #20
 801c69a:	d218      	bcs.n	801c6ce <sinf+0x4e>
 801c69c:	ee26 1b06 	vmul.f64	d1, d6, d6
 801c6a0:	f5b3 7f66 	cmp.w	r3, #920	; 0x398
 801c6a4:	d20a      	bcs.n	801c6bc <sinf+0x3c>
 801c6a6:	f412 6fff 	tst.w	r2, #2040	; 0x7f8
 801c6aa:	d103      	bne.n	801c6b4 <sinf+0x34>
 801c6ac:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
 801c6b0:	ed8d 1a01 	vstr	s2, [sp, #4]
 801c6b4:	eeb0 0a67 	vmov.f32	s0, s15
 801c6b8:	b003      	add	sp, #12
 801c6ba:	bd30      	pop	{r4, r5, pc}
 801c6bc:	483a      	ldr	r0, [pc, #232]	; (801c7a8 <sinf+0x128>)
 801c6be:	eeb0 0b46 	vmov.f64	d0, d6
 801c6c2:	2100      	movs	r1, #0
 801c6c4:	b003      	add	sp, #12
 801c6c6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801c6ca:	f7ff bfaf 	b.w	801c62c <sinf_poly>
 801c6ce:	f240 422e 	movw	r2, #1070	; 0x42e
 801c6d2:	4293      	cmp	r3, r2
 801c6d4:	d824      	bhi.n	801c720 <sinf+0xa0>
 801c6d6:	4b34      	ldr	r3, [pc, #208]	; (801c7a8 <sinf+0x128>)
 801c6d8:	ed93 7b08 	vldr	d7, [r3, #32]
 801c6dc:	ee26 7b07 	vmul.f64	d7, d6, d7
 801c6e0:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 801c6e4:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801c6e8:	ee17 1a90 	vmov	r1, s15
 801c6ec:	f501 0100 	add.w	r1, r1, #8388608	; 0x800000
 801c6f0:	1609      	asrs	r1, r1, #24
 801c6f2:	ee07 1a90 	vmov	s15, r1
 801c6f6:	f001 0203 	and.w	r2, r1, #3
 801c6fa:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801c6fe:	eeb8 5be7 	vcvt.f64.s32	d5, s15
 801c702:	ed92 0b00 	vldr	d0, [r2]
 801c706:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
 801c70a:	f011 0f02 	tst.w	r1, #2
 801c70e:	eea5 6b47 	vfms.f64	d6, d5, d7
 801c712:	bf08      	it	eq
 801c714:	4618      	moveq	r0, r3
 801c716:	ee26 1b06 	vmul.f64	d1, d6, d6
 801c71a:	ee20 0b06 	vmul.f64	d0, d0, d6
 801c71e:	e7d1      	b.n	801c6c4 <sinf+0x44>
 801c720:	f5b3 6fff 	cmp.w	r3, #2040	; 0x7f8
 801c724:	d237      	bcs.n	801c796 <sinf+0x116>
 801c726:	4a21      	ldr	r2, [pc, #132]	; (801c7ac <sinf+0x12c>)
 801c728:	f3c4 6183 	ubfx	r1, r4, #26, #4
 801c72c:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 801c730:	f3c4 0316 	ubfx	r3, r4, #0, #23
 801c734:	f3c4 50c2 	ubfx	r0, r4, #23, #3
 801c738:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801c73c:	4083      	lsls	r3, r0
 801c73e:	6a28      	ldr	r0, [r5, #32]
 801c740:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 801c744:	fba3 1000 	umull	r1, r0, r3, r0
 801c748:	6929      	ldr	r1, [r5, #16]
 801c74a:	435a      	muls	r2, r3
 801c74c:	fbe3 0201 	umlal	r0, r2, r3, r1
 801c750:	f102 5100 	add.w	r1, r2, #536870912	; 0x20000000
 801c754:	0f8d      	lsrs	r5, r1, #30
 801c756:	f001 4140 	and.w	r1, r1, #3221225472	; 0xc0000000
 801c75a:	1a51      	subs	r1, r2, r1
 801c75c:	f7e3 ffb6 	bl	80006cc <__aeabi_l2d>
 801c760:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
 801c764:	4b10      	ldr	r3, [pc, #64]	; (801c7a8 <sinf+0x128>)
 801c766:	f004 0203 	and.w	r2, r4, #3
 801c76a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801c76e:	ed9f 7b0c 	vldr	d7, [pc, #48]	; 801c7a0 <sinf+0x120>
 801c772:	ed92 0b00 	vldr	d0, [r2]
 801c776:	ec41 0b16 	vmov	d6, r0, r1
 801c77a:	f014 0f02 	tst.w	r4, #2
 801c77e:	ee26 7b07 	vmul.f64	d7, d6, d7
 801c782:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801c786:	4629      	mov	r1, r5
 801c788:	bf08      	it	eq
 801c78a:	4618      	moveq	r0, r3
 801c78c:	ee27 1b07 	vmul.f64	d1, d7, d7
 801c790:	ee20 0b07 	vmul.f64	d0, d0, d7
 801c794:	e796      	b.n	801c6c4 <sinf+0x44>
 801c796:	b003      	add	sp, #12
 801c798:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801c79c:	f7ff bf37 	b.w	801c60e <__math_invalidf>
 801c7a0:	54442d18 	.word	0x54442d18
 801c7a4:	3c1921fb 	.word	0x3c1921fb
 801c7a8:	0801f850 	.word	0x0801f850
 801c7ac:	0801f7ec 	.word	0x0801f7ec

0801c7b0 <abort>:
 801c7b0:	b508      	push	{r3, lr}
 801c7b2:	2006      	movs	r0, #6
 801c7b4:	f000 fe02 	bl	801d3bc <raise>
 801c7b8:	2001      	movs	r0, #1
 801c7ba:	f7e4 fe37 	bl	800142c <_exit>
	...

0801c7c0 <__assert_func>:
 801c7c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801c7c2:	4614      	mov	r4, r2
 801c7c4:	461a      	mov	r2, r3
 801c7c6:	4b09      	ldr	r3, [pc, #36]	; (801c7ec <__assert_func+0x2c>)
 801c7c8:	681b      	ldr	r3, [r3, #0]
 801c7ca:	4605      	mov	r5, r0
 801c7cc:	68d8      	ldr	r0, [r3, #12]
 801c7ce:	b14c      	cbz	r4, 801c7e4 <__assert_func+0x24>
 801c7d0:	4b07      	ldr	r3, [pc, #28]	; (801c7f0 <__assert_func+0x30>)
 801c7d2:	9100      	str	r1, [sp, #0]
 801c7d4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801c7d8:	4906      	ldr	r1, [pc, #24]	; (801c7f4 <__assert_func+0x34>)
 801c7da:	462b      	mov	r3, r5
 801c7dc:	f000 f8fe 	bl	801c9dc <fiprintf>
 801c7e0:	f7ff ffe6 	bl	801c7b0 <abort>
 801c7e4:	4b04      	ldr	r3, [pc, #16]	; (801c7f8 <__assert_func+0x38>)
 801c7e6:	461c      	mov	r4, r3
 801c7e8:	e7f3      	b.n	801c7d2 <__assert_func+0x12>
 801c7ea:	bf00      	nop
 801c7ec:	240000ac 	.word	0x240000ac
 801c7f0:	0801f930 	.word	0x0801f930
 801c7f4:	0801f93d 	.word	0x0801f93d
 801c7f8:	0801f96b 	.word	0x0801f96b

0801c7fc <atexit>:
 801c7fc:	2300      	movs	r3, #0
 801c7fe:	4601      	mov	r1, r0
 801c800:	461a      	mov	r2, r3
 801c802:	4618      	mov	r0, r3
 801c804:	f000 bf0c 	b.w	801d620 <__register_exitproc>

0801c808 <__cxa_atexit>:
 801c808:	b510      	push	{r4, lr}
 801c80a:	4c05      	ldr	r4, [pc, #20]	; (801c820 <__cxa_atexit+0x18>)
 801c80c:	4613      	mov	r3, r2
 801c80e:	b12c      	cbz	r4, 801c81c <__cxa_atexit+0x14>
 801c810:	460a      	mov	r2, r1
 801c812:	4601      	mov	r1, r0
 801c814:	2002      	movs	r0, #2
 801c816:	f000 ff03 	bl	801d620 <__register_exitproc>
 801c81a:	bd10      	pop	{r4, pc}
 801c81c:	4620      	mov	r0, r4
 801c81e:	e7fc      	b.n	801c81a <__cxa_atexit+0x12>
 801c820:	0801d621 	.word	0x0801d621

0801c824 <__errno>:
 801c824:	4b01      	ldr	r3, [pc, #4]	; (801c82c <__errno+0x8>)
 801c826:	6818      	ldr	r0, [r3, #0]
 801c828:	4770      	bx	lr
 801c82a:	bf00      	nop
 801c82c:	240000ac 	.word	0x240000ac

0801c830 <std>:
 801c830:	2300      	movs	r3, #0
 801c832:	b510      	push	{r4, lr}
 801c834:	4604      	mov	r4, r0
 801c836:	e9c0 3300 	strd	r3, r3, [r0]
 801c83a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801c83e:	6083      	str	r3, [r0, #8]
 801c840:	8181      	strh	r1, [r0, #12]
 801c842:	6643      	str	r3, [r0, #100]	; 0x64
 801c844:	81c2      	strh	r2, [r0, #14]
 801c846:	6183      	str	r3, [r0, #24]
 801c848:	4619      	mov	r1, r3
 801c84a:	2208      	movs	r2, #8
 801c84c:	305c      	adds	r0, #92	; 0x5c
 801c84e:	f000 f93d 	bl	801cacc <memset>
 801c852:	4b05      	ldr	r3, [pc, #20]	; (801c868 <std+0x38>)
 801c854:	6263      	str	r3, [r4, #36]	; 0x24
 801c856:	4b05      	ldr	r3, [pc, #20]	; (801c86c <std+0x3c>)
 801c858:	62a3      	str	r3, [r4, #40]	; 0x28
 801c85a:	4b05      	ldr	r3, [pc, #20]	; (801c870 <std+0x40>)
 801c85c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801c85e:	4b05      	ldr	r3, [pc, #20]	; (801c874 <std+0x44>)
 801c860:	6224      	str	r4, [r4, #32]
 801c862:	6323      	str	r3, [r4, #48]	; 0x30
 801c864:	bd10      	pop	{r4, pc}
 801c866:	bf00      	nop
 801c868:	0801d3f5 	.word	0x0801d3f5
 801c86c:	0801d417 	.word	0x0801d417
 801c870:	0801d44f 	.word	0x0801d44f
 801c874:	0801d473 	.word	0x0801d473

0801c878 <_cleanup_r>:
 801c878:	4901      	ldr	r1, [pc, #4]	; (801c880 <_cleanup_r+0x8>)
 801c87a:	f000 b8c1 	b.w	801ca00 <_fwalk_reent>
 801c87e:	bf00      	nop
 801c880:	0801d811 	.word	0x0801d811

0801c884 <__sfmoreglue>:
 801c884:	b570      	push	{r4, r5, r6, lr}
 801c886:	2268      	movs	r2, #104	; 0x68
 801c888:	1e4d      	subs	r5, r1, #1
 801c88a:	4355      	muls	r5, r2
 801c88c:	460e      	mov	r6, r1
 801c88e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801c892:	f000 f98f 	bl	801cbb4 <_malloc_r>
 801c896:	4604      	mov	r4, r0
 801c898:	b140      	cbz	r0, 801c8ac <__sfmoreglue+0x28>
 801c89a:	2100      	movs	r1, #0
 801c89c:	e9c0 1600 	strd	r1, r6, [r0]
 801c8a0:	300c      	adds	r0, #12
 801c8a2:	60a0      	str	r0, [r4, #8]
 801c8a4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801c8a8:	f000 f910 	bl	801cacc <memset>
 801c8ac:	4620      	mov	r0, r4
 801c8ae:	bd70      	pop	{r4, r5, r6, pc}

0801c8b0 <__sfp_lock_acquire>:
 801c8b0:	4801      	ldr	r0, [pc, #4]	; (801c8b8 <__sfp_lock_acquire+0x8>)
 801c8b2:	f000 b8ea 	b.w	801ca8a <__retarget_lock_acquire_recursive>
 801c8b6:	bf00      	nop
 801c8b8:	24008a32 	.word	0x24008a32

0801c8bc <__sfp_lock_release>:
 801c8bc:	4801      	ldr	r0, [pc, #4]	; (801c8c4 <__sfp_lock_release+0x8>)
 801c8be:	f000 b8e6 	b.w	801ca8e <__retarget_lock_release_recursive>
 801c8c2:	bf00      	nop
 801c8c4:	24008a32 	.word	0x24008a32

0801c8c8 <__sinit_lock_acquire>:
 801c8c8:	4801      	ldr	r0, [pc, #4]	; (801c8d0 <__sinit_lock_acquire+0x8>)
 801c8ca:	f000 b8de 	b.w	801ca8a <__retarget_lock_acquire_recursive>
 801c8ce:	bf00      	nop
 801c8d0:	24008a33 	.word	0x24008a33

0801c8d4 <__sinit_lock_release>:
 801c8d4:	4801      	ldr	r0, [pc, #4]	; (801c8dc <__sinit_lock_release+0x8>)
 801c8d6:	f000 b8da 	b.w	801ca8e <__retarget_lock_release_recursive>
 801c8da:	bf00      	nop
 801c8dc:	24008a33 	.word	0x24008a33

0801c8e0 <__sinit>:
 801c8e0:	b510      	push	{r4, lr}
 801c8e2:	4604      	mov	r4, r0
 801c8e4:	f7ff fff0 	bl	801c8c8 <__sinit_lock_acquire>
 801c8e8:	69a3      	ldr	r3, [r4, #24]
 801c8ea:	b11b      	cbz	r3, 801c8f4 <__sinit+0x14>
 801c8ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c8f0:	f7ff bff0 	b.w	801c8d4 <__sinit_lock_release>
 801c8f4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801c8f8:	6523      	str	r3, [r4, #80]	; 0x50
 801c8fa:	4b13      	ldr	r3, [pc, #76]	; (801c948 <__sinit+0x68>)
 801c8fc:	4a13      	ldr	r2, [pc, #76]	; (801c94c <__sinit+0x6c>)
 801c8fe:	681b      	ldr	r3, [r3, #0]
 801c900:	62a2      	str	r2, [r4, #40]	; 0x28
 801c902:	42a3      	cmp	r3, r4
 801c904:	bf04      	itt	eq
 801c906:	2301      	moveq	r3, #1
 801c908:	61a3      	streq	r3, [r4, #24]
 801c90a:	4620      	mov	r0, r4
 801c90c:	f000 f820 	bl	801c950 <__sfp>
 801c910:	6060      	str	r0, [r4, #4]
 801c912:	4620      	mov	r0, r4
 801c914:	f000 f81c 	bl	801c950 <__sfp>
 801c918:	60a0      	str	r0, [r4, #8]
 801c91a:	4620      	mov	r0, r4
 801c91c:	f000 f818 	bl	801c950 <__sfp>
 801c920:	2200      	movs	r2, #0
 801c922:	60e0      	str	r0, [r4, #12]
 801c924:	2104      	movs	r1, #4
 801c926:	6860      	ldr	r0, [r4, #4]
 801c928:	f7ff ff82 	bl	801c830 <std>
 801c92c:	68a0      	ldr	r0, [r4, #8]
 801c92e:	2201      	movs	r2, #1
 801c930:	2109      	movs	r1, #9
 801c932:	f7ff ff7d 	bl	801c830 <std>
 801c936:	68e0      	ldr	r0, [r4, #12]
 801c938:	2202      	movs	r2, #2
 801c93a:	2112      	movs	r1, #18
 801c93c:	f7ff ff78 	bl	801c830 <std>
 801c940:	2301      	movs	r3, #1
 801c942:	61a3      	str	r3, [r4, #24]
 801c944:	e7d2      	b.n	801c8ec <__sinit+0xc>
 801c946:	bf00      	nop
 801c948:	0801f9cc 	.word	0x0801f9cc
 801c94c:	0801c879 	.word	0x0801c879

0801c950 <__sfp>:
 801c950:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c952:	4607      	mov	r7, r0
 801c954:	f7ff ffac 	bl	801c8b0 <__sfp_lock_acquire>
 801c958:	4b1e      	ldr	r3, [pc, #120]	; (801c9d4 <__sfp+0x84>)
 801c95a:	681e      	ldr	r6, [r3, #0]
 801c95c:	69b3      	ldr	r3, [r6, #24]
 801c95e:	b913      	cbnz	r3, 801c966 <__sfp+0x16>
 801c960:	4630      	mov	r0, r6
 801c962:	f7ff ffbd 	bl	801c8e0 <__sinit>
 801c966:	3648      	adds	r6, #72	; 0x48
 801c968:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801c96c:	3b01      	subs	r3, #1
 801c96e:	d503      	bpl.n	801c978 <__sfp+0x28>
 801c970:	6833      	ldr	r3, [r6, #0]
 801c972:	b30b      	cbz	r3, 801c9b8 <__sfp+0x68>
 801c974:	6836      	ldr	r6, [r6, #0]
 801c976:	e7f7      	b.n	801c968 <__sfp+0x18>
 801c978:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801c97c:	b9d5      	cbnz	r5, 801c9b4 <__sfp+0x64>
 801c97e:	4b16      	ldr	r3, [pc, #88]	; (801c9d8 <__sfp+0x88>)
 801c980:	60e3      	str	r3, [r4, #12]
 801c982:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801c986:	6665      	str	r5, [r4, #100]	; 0x64
 801c988:	f000 f87e 	bl	801ca88 <__retarget_lock_init_recursive>
 801c98c:	f7ff ff96 	bl	801c8bc <__sfp_lock_release>
 801c990:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801c994:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801c998:	6025      	str	r5, [r4, #0]
 801c99a:	61a5      	str	r5, [r4, #24]
 801c99c:	2208      	movs	r2, #8
 801c99e:	4629      	mov	r1, r5
 801c9a0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801c9a4:	f000 f892 	bl	801cacc <memset>
 801c9a8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801c9ac:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801c9b0:	4620      	mov	r0, r4
 801c9b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c9b4:	3468      	adds	r4, #104	; 0x68
 801c9b6:	e7d9      	b.n	801c96c <__sfp+0x1c>
 801c9b8:	2104      	movs	r1, #4
 801c9ba:	4638      	mov	r0, r7
 801c9bc:	f7ff ff62 	bl	801c884 <__sfmoreglue>
 801c9c0:	4604      	mov	r4, r0
 801c9c2:	6030      	str	r0, [r6, #0]
 801c9c4:	2800      	cmp	r0, #0
 801c9c6:	d1d5      	bne.n	801c974 <__sfp+0x24>
 801c9c8:	f7ff ff78 	bl	801c8bc <__sfp_lock_release>
 801c9cc:	230c      	movs	r3, #12
 801c9ce:	603b      	str	r3, [r7, #0]
 801c9d0:	e7ee      	b.n	801c9b0 <__sfp+0x60>
 801c9d2:	bf00      	nop
 801c9d4:	0801f9cc 	.word	0x0801f9cc
 801c9d8:	ffff0001 	.word	0xffff0001

0801c9dc <fiprintf>:
 801c9dc:	b40e      	push	{r1, r2, r3}
 801c9de:	b503      	push	{r0, r1, lr}
 801c9e0:	4601      	mov	r1, r0
 801c9e2:	ab03      	add	r3, sp, #12
 801c9e4:	4805      	ldr	r0, [pc, #20]	; (801c9fc <fiprintf+0x20>)
 801c9e6:	f853 2b04 	ldr.w	r2, [r3], #4
 801c9ea:	6800      	ldr	r0, [r0, #0]
 801c9ec:	9301      	str	r3, [sp, #4]
 801c9ee:	f000 f97f 	bl	801ccf0 <_vfiprintf_r>
 801c9f2:	b002      	add	sp, #8
 801c9f4:	f85d eb04 	ldr.w	lr, [sp], #4
 801c9f8:	b003      	add	sp, #12
 801c9fa:	4770      	bx	lr
 801c9fc:	240000ac 	.word	0x240000ac

0801ca00 <_fwalk_reent>:
 801ca00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ca04:	4606      	mov	r6, r0
 801ca06:	4688      	mov	r8, r1
 801ca08:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801ca0c:	2700      	movs	r7, #0
 801ca0e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801ca12:	f1b9 0901 	subs.w	r9, r9, #1
 801ca16:	d505      	bpl.n	801ca24 <_fwalk_reent+0x24>
 801ca18:	6824      	ldr	r4, [r4, #0]
 801ca1a:	2c00      	cmp	r4, #0
 801ca1c:	d1f7      	bne.n	801ca0e <_fwalk_reent+0xe>
 801ca1e:	4638      	mov	r0, r7
 801ca20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ca24:	89ab      	ldrh	r3, [r5, #12]
 801ca26:	2b01      	cmp	r3, #1
 801ca28:	d907      	bls.n	801ca3a <_fwalk_reent+0x3a>
 801ca2a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801ca2e:	3301      	adds	r3, #1
 801ca30:	d003      	beq.n	801ca3a <_fwalk_reent+0x3a>
 801ca32:	4629      	mov	r1, r5
 801ca34:	4630      	mov	r0, r6
 801ca36:	47c0      	blx	r8
 801ca38:	4307      	orrs	r7, r0
 801ca3a:	3568      	adds	r5, #104	; 0x68
 801ca3c:	e7e9      	b.n	801ca12 <_fwalk_reent+0x12>
	...

0801ca40 <__libc_init_array>:
 801ca40:	b570      	push	{r4, r5, r6, lr}
 801ca42:	4d0d      	ldr	r5, [pc, #52]	; (801ca78 <__libc_init_array+0x38>)
 801ca44:	4c0d      	ldr	r4, [pc, #52]	; (801ca7c <__libc_init_array+0x3c>)
 801ca46:	1b64      	subs	r4, r4, r5
 801ca48:	10a4      	asrs	r4, r4, #2
 801ca4a:	2600      	movs	r6, #0
 801ca4c:	42a6      	cmp	r6, r4
 801ca4e:	d109      	bne.n	801ca64 <__libc_init_array+0x24>
 801ca50:	4d0b      	ldr	r5, [pc, #44]	; (801ca80 <__libc_init_array+0x40>)
 801ca52:	4c0c      	ldr	r4, [pc, #48]	; (801ca84 <__libc_init_array+0x44>)
 801ca54:	f000 ffd0 	bl	801d9f8 <_init>
 801ca58:	1b64      	subs	r4, r4, r5
 801ca5a:	10a4      	asrs	r4, r4, #2
 801ca5c:	2600      	movs	r6, #0
 801ca5e:	42a6      	cmp	r6, r4
 801ca60:	d105      	bne.n	801ca6e <__libc_init_array+0x2e>
 801ca62:	bd70      	pop	{r4, r5, r6, pc}
 801ca64:	f855 3b04 	ldr.w	r3, [r5], #4
 801ca68:	4798      	blx	r3
 801ca6a:	3601      	adds	r6, #1
 801ca6c:	e7ee      	b.n	801ca4c <__libc_init_array+0xc>
 801ca6e:	f855 3b04 	ldr.w	r3, [r5], #4
 801ca72:	4798      	blx	r3
 801ca74:	3601      	adds	r6, #1
 801ca76:	e7f2      	b.n	801ca5e <__libc_init_array+0x1e>
 801ca78:	08020940 	.word	0x08020940
 801ca7c:	08020940 	.word	0x08020940
 801ca80:	08020940 	.word	0x08020940
 801ca84:	08020954 	.word	0x08020954

0801ca88 <__retarget_lock_init_recursive>:
 801ca88:	4770      	bx	lr

0801ca8a <__retarget_lock_acquire_recursive>:
 801ca8a:	4770      	bx	lr

0801ca8c <__retarget_lock_release>:
 801ca8c:	4770      	bx	lr

0801ca8e <__retarget_lock_release_recursive>:
 801ca8e:	4770      	bx	lr

0801ca90 <malloc>:
 801ca90:	4b02      	ldr	r3, [pc, #8]	; (801ca9c <malloc+0xc>)
 801ca92:	4601      	mov	r1, r0
 801ca94:	6818      	ldr	r0, [r3, #0]
 801ca96:	f000 b88d 	b.w	801cbb4 <_malloc_r>
 801ca9a:	bf00      	nop
 801ca9c:	240000ac 	.word	0x240000ac

0801caa0 <free>:
 801caa0:	4b02      	ldr	r3, [pc, #8]	; (801caac <free+0xc>)
 801caa2:	4601      	mov	r1, r0
 801caa4:	6818      	ldr	r0, [r3, #0]
 801caa6:	f000 b819 	b.w	801cadc <_free_r>
 801caaa:	bf00      	nop
 801caac:	240000ac 	.word	0x240000ac

0801cab0 <memcpy>:
 801cab0:	440a      	add	r2, r1
 801cab2:	4291      	cmp	r1, r2
 801cab4:	f100 33ff 	add.w	r3, r0, #4294967295
 801cab8:	d100      	bne.n	801cabc <memcpy+0xc>
 801caba:	4770      	bx	lr
 801cabc:	b510      	push	{r4, lr}
 801cabe:	f811 4b01 	ldrb.w	r4, [r1], #1
 801cac2:	f803 4f01 	strb.w	r4, [r3, #1]!
 801cac6:	4291      	cmp	r1, r2
 801cac8:	d1f9      	bne.n	801cabe <memcpy+0xe>
 801caca:	bd10      	pop	{r4, pc}

0801cacc <memset>:
 801cacc:	4402      	add	r2, r0
 801cace:	4603      	mov	r3, r0
 801cad0:	4293      	cmp	r3, r2
 801cad2:	d100      	bne.n	801cad6 <memset+0xa>
 801cad4:	4770      	bx	lr
 801cad6:	f803 1b01 	strb.w	r1, [r3], #1
 801cada:	e7f9      	b.n	801cad0 <memset+0x4>

0801cadc <_free_r>:
 801cadc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801cade:	2900      	cmp	r1, #0
 801cae0:	d044      	beq.n	801cb6c <_free_r+0x90>
 801cae2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801cae6:	9001      	str	r0, [sp, #4]
 801cae8:	2b00      	cmp	r3, #0
 801caea:	f1a1 0404 	sub.w	r4, r1, #4
 801caee:	bfb8      	it	lt
 801caf0:	18e4      	addlt	r4, r4, r3
 801caf2:	f000 ff41 	bl	801d978 <__malloc_lock>
 801caf6:	4a1e      	ldr	r2, [pc, #120]	; (801cb70 <_free_r+0x94>)
 801caf8:	9801      	ldr	r0, [sp, #4]
 801cafa:	6813      	ldr	r3, [r2, #0]
 801cafc:	b933      	cbnz	r3, 801cb0c <_free_r+0x30>
 801cafe:	6063      	str	r3, [r4, #4]
 801cb00:	6014      	str	r4, [r2, #0]
 801cb02:	b003      	add	sp, #12
 801cb04:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801cb08:	f000 bf3c 	b.w	801d984 <__malloc_unlock>
 801cb0c:	42a3      	cmp	r3, r4
 801cb0e:	d908      	bls.n	801cb22 <_free_r+0x46>
 801cb10:	6825      	ldr	r5, [r4, #0]
 801cb12:	1961      	adds	r1, r4, r5
 801cb14:	428b      	cmp	r3, r1
 801cb16:	bf01      	itttt	eq
 801cb18:	6819      	ldreq	r1, [r3, #0]
 801cb1a:	685b      	ldreq	r3, [r3, #4]
 801cb1c:	1949      	addeq	r1, r1, r5
 801cb1e:	6021      	streq	r1, [r4, #0]
 801cb20:	e7ed      	b.n	801cafe <_free_r+0x22>
 801cb22:	461a      	mov	r2, r3
 801cb24:	685b      	ldr	r3, [r3, #4]
 801cb26:	b10b      	cbz	r3, 801cb2c <_free_r+0x50>
 801cb28:	42a3      	cmp	r3, r4
 801cb2a:	d9fa      	bls.n	801cb22 <_free_r+0x46>
 801cb2c:	6811      	ldr	r1, [r2, #0]
 801cb2e:	1855      	adds	r5, r2, r1
 801cb30:	42a5      	cmp	r5, r4
 801cb32:	d10b      	bne.n	801cb4c <_free_r+0x70>
 801cb34:	6824      	ldr	r4, [r4, #0]
 801cb36:	4421      	add	r1, r4
 801cb38:	1854      	adds	r4, r2, r1
 801cb3a:	42a3      	cmp	r3, r4
 801cb3c:	6011      	str	r1, [r2, #0]
 801cb3e:	d1e0      	bne.n	801cb02 <_free_r+0x26>
 801cb40:	681c      	ldr	r4, [r3, #0]
 801cb42:	685b      	ldr	r3, [r3, #4]
 801cb44:	6053      	str	r3, [r2, #4]
 801cb46:	4421      	add	r1, r4
 801cb48:	6011      	str	r1, [r2, #0]
 801cb4a:	e7da      	b.n	801cb02 <_free_r+0x26>
 801cb4c:	d902      	bls.n	801cb54 <_free_r+0x78>
 801cb4e:	230c      	movs	r3, #12
 801cb50:	6003      	str	r3, [r0, #0]
 801cb52:	e7d6      	b.n	801cb02 <_free_r+0x26>
 801cb54:	6825      	ldr	r5, [r4, #0]
 801cb56:	1961      	adds	r1, r4, r5
 801cb58:	428b      	cmp	r3, r1
 801cb5a:	bf04      	itt	eq
 801cb5c:	6819      	ldreq	r1, [r3, #0]
 801cb5e:	685b      	ldreq	r3, [r3, #4]
 801cb60:	6063      	str	r3, [r4, #4]
 801cb62:	bf04      	itt	eq
 801cb64:	1949      	addeq	r1, r1, r5
 801cb66:	6021      	streq	r1, [r4, #0]
 801cb68:	6054      	str	r4, [r2, #4]
 801cb6a:	e7ca      	b.n	801cb02 <_free_r+0x26>
 801cb6c:	b003      	add	sp, #12
 801cb6e:	bd30      	pop	{r4, r5, pc}
 801cb70:	24008a34 	.word	0x24008a34

0801cb74 <sbrk_aligned>:
 801cb74:	b570      	push	{r4, r5, r6, lr}
 801cb76:	4e0e      	ldr	r6, [pc, #56]	; (801cbb0 <sbrk_aligned+0x3c>)
 801cb78:	460c      	mov	r4, r1
 801cb7a:	6831      	ldr	r1, [r6, #0]
 801cb7c:	4605      	mov	r5, r0
 801cb7e:	b911      	cbnz	r1, 801cb86 <sbrk_aligned+0x12>
 801cb80:	f000 fbe4 	bl	801d34c <_sbrk_r>
 801cb84:	6030      	str	r0, [r6, #0]
 801cb86:	4621      	mov	r1, r4
 801cb88:	4628      	mov	r0, r5
 801cb8a:	f000 fbdf 	bl	801d34c <_sbrk_r>
 801cb8e:	1c43      	adds	r3, r0, #1
 801cb90:	d00a      	beq.n	801cba8 <sbrk_aligned+0x34>
 801cb92:	1cc4      	adds	r4, r0, #3
 801cb94:	f024 0403 	bic.w	r4, r4, #3
 801cb98:	42a0      	cmp	r0, r4
 801cb9a:	d007      	beq.n	801cbac <sbrk_aligned+0x38>
 801cb9c:	1a21      	subs	r1, r4, r0
 801cb9e:	4628      	mov	r0, r5
 801cba0:	f000 fbd4 	bl	801d34c <_sbrk_r>
 801cba4:	3001      	adds	r0, #1
 801cba6:	d101      	bne.n	801cbac <sbrk_aligned+0x38>
 801cba8:	f04f 34ff 	mov.w	r4, #4294967295
 801cbac:	4620      	mov	r0, r4
 801cbae:	bd70      	pop	{r4, r5, r6, pc}
 801cbb0:	24008a38 	.word	0x24008a38

0801cbb4 <_malloc_r>:
 801cbb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cbb8:	1ccd      	adds	r5, r1, #3
 801cbba:	f025 0503 	bic.w	r5, r5, #3
 801cbbe:	3508      	adds	r5, #8
 801cbc0:	2d0c      	cmp	r5, #12
 801cbc2:	bf38      	it	cc
 801cbc4:	250c      	movcc	r5, #12
 801cbc6:	2d00      	cmp	r5, #0
 801cbc8:	4607      	mov	r7, r0
 801cbca:	db01      	blt.n	801cbd0 <_malloc_r+0x1c>
 801cbcc:	42a9      	cmp	r1, r5
 801cbce:	d905      	bls.n	801cbdc <_malloc_r+0x28>
 801cbd0:	230c      	movs	r3, #12
 801cbd2:	603b      	str	r3, [r7, #0]
 801cbd4:	2600      	movs	r6, #0
 801cbd6:	4630      	mov	r0, r6
 801cbd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cbdc:	4e2e      	ldr	r6, [pc, #184]	; (801cc98 <_malloc_r+0xe4>)
 801cbde:	f000 fecb 	bl	801d978 <__malloc_lock>
 801cbe2:	6833      	ldr	r3, [r6, #0]
 801cbe4:	461c      	mov	r4, r3
 801cbe6:	bb34      	cbnz	r4, 801cc36 <_malloc_r+0x82>
 801cbe8:	4629      	mov	r1, r5
 801cbea:	4638      	mov	r0, r7
 801cbec:	f7ff ffc2 	bl	801cb74 <sbrk_aligned>
 801cbf0:	1c43      	adds	r3, r0, #1
 801cbf2:	4604      	mov	r4, r0
 801cbf4:	d14d      	bne.n	801cc92 <_malloc_r+0xde>
 801cbf6:	6834      	ldr	r4, [r6, #0]
 801cbf8:	4626      	mov	r6, r4
 801cbfa:	2e00      	cmp	r6, #0
 801cbfc:	d140      	bne.n	801cc80 <_malloc_r+0xcc>
 801cbfe:	6823      	ldr	r3, [r4, #0]
 801cc00:	4631      	mov	r1, r6
 801cc02:	4638      	mov	r0, r7
 801cc04:	eb04 0803 	add.w	r8, r4, r3
 801cc08:	f000 fba0 	bl	801d34c <_sbrk_r>
 801cc0c:	4580      	cmp	r8, r0
 801cc0e:	d13a      	bne.n	801cc86 <_malloc_r+0xd2>
 801cc10:	6821      	ldr	r1, [r4, #0]
 801cc12:	3503      	adds	r5, #3
 801cc14:	1a6d      	subs	r5, r5, r1
 801cc16:	f025 0503 	bic.w	r5, r5, #3
 801cc1a:	3508      	adds	r5, #8
 801cc1c:	2d0c      	cmp	r5, #12
 801cc1e:	bf38      	it	cc
 801cc20:	250c      	movcc	r5, #12
 801cc22:	4629      	mov	r1, r5
 801cc24:	4638      	mov	r0, r7
 801cc26:	f7ff ffa5 	bl	801cb74 <sbrk_aligned>
 801cc2a:	3001      	adds	r0, #1
 801cc2c:	d02b      	beq.n	801cc86 <_malloc_r+0xd2>
 801cc2e:	6823      	ldr	r3, [r4, #0]
 801cc30:	442b      	add	r3, r5
 801cc32:	6023      	str	r3, [r4, #0]
 801cc34:	e00e      	b.n	801cc54 <_malloc_r+0xa0>
 801cc36:	6822      	ldr	r2, [r4, #0]
 801cc38:	1b52      	subs	r2, r2, r5
 801cc3a:	d41e      	bmi.n	801cc7a <_malloc_r+0xc6>
 801cc3c:	2a0b      	cmp	r2, #11
 801cc3e:	d916      	bls.n	801cc6e <_malloc_r+0xba>
 801cc40:	1961      	adds	r1, r4, r5
 801cc42:	42a3      	cmp	r3, r4
 801cc44:	6025      	str	r5, [r4, #0]
 801cc46:	bf18      	it	ne
 801cc48:	6059      	strne	r1, [r3, #4]
 801cc4a:	6863      	ldr	r3, [r4, #4]
 801cc4c:	bf08      	it	eq
 801cc4e:	6031      	streq	r1, [r6, #0]
 801cc50:	5162      	str	r2, [r4, r5]
 801cc52:	604b      	str	r3, [r1, #4]
 801cc54:	4638      	mov	r0, r7
 801cc56:	f104 060b 	add.w	r6, r4, #11
 801cc5a:	f000 fe93 	bl	801d984 <__malloc_unlock>
 801cc5e:	f026 0607 	bic.w	r6, r6, #7
 801cc62:	1d23      	adds	r3, r4, #4
 801cc64:	1af2      	subs	r2, r6, r3
 801cc66:	d0b6      	beq.n	801cbd6 <_malloc_r+0x22>
 801cc68:	1b9b      	subs	r3, r3, r6
 801cc6a:	50a3      	str	r3, [r4, r2]
 801cc6c:	e7b3      	b.n	801cbd6 <_malloc_r+0x22>
 801cc6e:	6862      	ldr	r2, [r4, #4]
 801cc70:	42a3      	cmp	r3, r4
 801cc72:	bf0c      	ite	eq
 801cc74:	6032      	streq	r2, [r6, #0]
 801cc76:	605a      	strne	r2, [r3, #4]
 801cc78:	e7ec      	b.n	801cc54 <_malloc_r+0xa0>
 801cc7a:	4623      	mov	r3, r4
 801cc7c:	6864      	ldr	r4, [r4, #4]
 801cc7e:	e7b2      	b.n	801cbe6 <_malloc_r+0x32>
 801cc80:	4634      	mov	r4, r6
 801cc82:	6876      	ldr	r6, [r6, #4]
 801cc84:	e7b9      	b.n	801cbfa <_malloc_r+0x46>
 801cc86:	230c      	movs	r3, #12
 801cc88:	603b      	str	r3, [r7, #0]
 801cc8a:	4638      	mov	r0, r7
 801cc8c:	f000 fe7a 	bl	801d984 <__malloc_unlock>
 801cc90:	e7a1      	b.n	801cbd6 <_malloc_r+0x22>
 801cc92:	6025      	str	r5, [r4, #0]
 801cc94:	e7de      	b.n	801cc54 <_malloc_r+0xa0>
 801cc96:	bf00      	nop
 801cc98:	24008a34 	.word	0x24008a34

0801cc9c <__sfputc_r>:
 801cc9c:	6893      	ldr	r3, [r2, #8]
 801cc9e:	3b01      	subs	r3, #1
 801cca0:	2b00      	cmp	r3, #0
 801cca2:	b410      	push	{r4}
 801cca4:	6093      	str	r3, [r2, #8]
 801cca6:	da08      	bge.n	801ccba <__sfputc_r+0x1e>
 801cca8:	6994      	ldr	r4, [r2, #24]
 801ccaa:	42a3      	cmp	r3, r4
 801ccac:	db01      	blt.n	801ccb2 <__sfputc_r+0x16>
 801ccae:	290a      	cmp	r1, #10
 801ccb0:	d103      	bne.n	801ccba <__sfputc_r+0x1e>
 801ccb2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ccb6:	f000 bbe1 	b.w	801d47c <__swbuf_r>
 801ccba:	6813      	ldr	r3, [r2, #0]
 801ccbc:	1c58      	adds	r0, r3, #1
 801ccbe:	6010      	str	r0, [r2, #0]
 801ccc0:	7019      	strb	r1, [r3, #0]
 801ccc2:	4608      	mov	r0, r1
 801ccc4:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ccc8:	4770      	bx	lr

0801ccca <__sfputs_r>:
 801ccca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cccc:	4606      	mov	r6, r0
 801ccce:	460f      	mov	r7, r1
 801ccd0:	4614      	mov	r4, r2
 801ccd2:	18d5      	adds	r5, r2, r3
 801ccd4:	42ac      	cmp	r4, r5
 801ccd6:	d101      	bne.n	801ccdc <__sfputs_r+0x12>
 801ccd8:	2000      	movs	r0, #0
 801ccda:	e007      	b.n	801ccec <__sfputs_r+0x22>
 801ccdc:	f814 1b01 	ldrb.w	r1, [r4], #1
 801cce0:	463a      	mov	r2, r7
 801cce2:	4630      	mov	r0, r6
 801cce4:	f7ff ffda 	bl	801cc9c <__sfputc_r>
 801cce8:	1c43      	adds	r3, r0, #1
 801ccea:	d1f3      	bne.n	801ccd4 <__sfputs_r+0xa>
 801ccec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801ccf0 <_vfiprintf_r>:
 801ccf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ccf4:	460d      	mov	r5, r1
 801ccf6:	b09d      	sub	sp, #116	; 0x74
 801ccf8:	4614      	mov	r4, r2
 801ccfa:	4698      	mov	r8, r3
 801ccfc:	4606      	mov	r6, r0
 801ccfe:	b118      	cbz	r0, 801cd08 <_vfiprintf_r+0x18>
 801cd00:	6983      	ldr	r3, [r0, #24]
 801cd02:	b90b      	cbnz	r3, 801cd08 <_vfiprintf_r+0x18>
 801cd04:	f7ff fdec 	bl	801c8e0 <__sinit>
 801cd08:	4b89      	ldr	r3, [pc, #548]	; (801cf30 <_vfiprintf_r+0x240>)
 801cd0a:	429d      	cmp	r5, r3
 801cd0c:	d11b      	bne.n	801cd46 <_vfiprintf_r+0x56>
 801cd0e:	6875      	ldr	r5, [r6, #4]
 801cd10:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801cd12:	07d9      	lsls	r1, r3, #31
 801cd14:	d405      	bmi.n	801cd22 <_vfiprintf_r+0x32>
 801cd16:	89ab      	ldrh	r3, [r5, #12]
 801cd18:	059a      	lsls	r2, r3, #22
 801cd1a:	d402      	bmi.n	801cd22 <_vfiprintf_r+0x32>
 801cd1c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801cd1e:	f7ff feb4 	bl	801ca8a <__retarget_lock_acquire_recursive>
 801cd22:	89ab      	ldrh	r3, [r5, #12]
 801cd24:	071b      	lsls	r3, r3, #28
 801cd26:	d501      	bpl.n	801cd2c <_vfiprintf_r+0x3c>
 801cd28:	692b      	ldr	r3, [r5, #16]
 801cd2a:	b9eb      	cbnz	r3, 801cd68 <_vfiprintf_r+0x78>
 801cd2c:	4629      	mov	r1, r5
 801cd2e:	4630      	mov	r0, r6
 801cd30:	f000 fc08 	bl	801d544 <__swsetup_r>
 801cd34:	b1c0      	cbz	r0, 801cd68 <_vfiprintf_r+0x78>
 801cd36:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801cd38:	07dc      	lsls	r4, r3, #31
 801cd3a:	d50e      	bpl.n	801cd5a <_vfiprintf_r+0x6a>
 801cd3c:	f04f 30ff 	mov.w	r0, #4294967295
 801cd40:	b01d      	add	sp, #116	; 0x74
 801cd42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd46:	4b7b      	ldr	r3, [pc, #492]	; (801cf34 <_vfiprintf_r+0x244>)
 801cd48:	429d      	cmp	r5, r3
 801cd4a:	d101      	bne.n	801cd50 <_vfiprintf_r+0x60>
 801cd4c:	68b5      	ldr	r5, [r6, #8]
 801cd4e:	e7df      	b.n	801cd10 <_vfiprintf_r+0x20>
 801cd50:	4b79      	ldr	r3, [pc, #484]	; (801cf38 <_vfiprintf_r+0x248>)
 801cd52:	429d      	cmp	r5, r3
 801cd54:	bf08      	it	eq
 801cd56:	68f5      	ldreq	r5, [r6, #12]
 801cd58:	e7da      	b.n	801cd10 <_vfiprintf_r+0x20>
 801cd5a:	89ab      	ldrh	r3, [r5, #12]
 801cd5c:	0598      	lsls	r0, r3, #22
 801cd5e:	d4ed      	bmi.n	801cd3c <_vfiprintf_r+0x4c>
 801cd60:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801cd62:	f7ff fe94 	bl	801ca8e <__retarget_lock_release_recursive>
 801cd66:	e7e9      	b.n	801cd3c <_vfiprintf_r+0x4c>
 801cd68:	2300      	movs	r3, #0
 801cd6a:	9309      	str	r3, [sp, #36]	; 0x24
 801cd6c:	2320      	movs	r3, #32
 801cd6e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801cd72:	f8cd 800c 	str.w	r8, [sp, #12]
 801cd76:	2330      	movs	r3, #48	; 0x30
 801cd78:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801cf3c <_vfiprintf_r+0x24c>
 801cd7c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801cd80:	f04f 0901 	mov.w	r9, #1
 801cd84:	4623      	mov	r3, r4
 801cd86:	469a      	mov	sl, r3
 801cd88:	f813 2b01 	ldrb.w	r2, [r3], #1
 801cd8c:	b10a      	cbz	r2, 801cd92 <_vfiprintf_r+0xa2>
 801cd8e:	2a25      	cmp	r2, #37	; 0x25
 801cd90:	d1f9      	bne.n	801cd86 <_vfiprintf_r+0x96>
 801cd92:	ebba 0b04 	subs.w	fp, sl, r4
 801cd96:	d00b      	beq.n	801cdb0 <_vfiprintf_r+0xc0>
 801cd98:	465b      	mov	r3, fp
 801cd9a:	4622      	mov	r2, r4
 801cd9c:	4629      	mov	r1, r5
 801cd9e:	4630      	mov	r0, r6
 801cda0:	f7ff ff93 	bl	801ccca <__sfputs_r>
 801cda4:	3001      	adds	r0, #1
 801cda6:	f000 80aa 	beq.w	801cefe <_vfiprintf_r+0x20e>
 801cdaa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cdac:	445a      	add	r2, fp
 801cdae:	9209      	str	r2, [sp, #36]	; 0x24
 801cdb0:	f89a 3000 	ldrb.w	r3, [sl]
 801cdb4:	2b00      	cmp	r3, #0
 801cdb6:	f000 80a2 	beq.w	801cefe <_vfiprintf_r+0x20e>
 801cdba:	2300      	movs	r3, #0
 801cdbc:	f04f 32ff 	mov.w	r2, #4294967295
 801cdc0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801cdc4:	f10a 0a01 	add.w	sl, sl, #1
 801cdc8:	9304      	str	r3, [sp, #16]
 801cdca:	9307      	str	r3, [sp, #28]
 801cdcc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801cdd0:	931a      	str	r3, [sp, #104]	; 0x68
 801cdd2:	4654      	mov	r4, sl
 801cdd4:	2205      	movs	r2, #5
 801cdd6:	f814 1b01 	ldrb.w	r1, [r4], #1
 801cdda:	4858      	ldr	r0, [pc, #352]	; (801cf3c <_vfiprintf_r+0x24c>)
 801cddc:	f7e3 fa98 	bl	8000310 <memchr>
 801cde0:	9a04      	ldr	r2, [sp, #16]
 801cde2:	b9d8      	cbnz	r0, 801ce1c <_vfiprintf_r+0x12c>
 801cde4:	06d1      	lsls	r1, r2, #27
 801cde6:	bf44      	itt	mi
 801cde8:	2320      	movmi	r3, #32
 801cdea:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801cdee:	0713      	lsls	r3, r2, #28
 801cdf0:	bf44      	itt	mi
 801cdf2:	232b      	movmi	r3, #43	; 0x2b
 801cdf4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801cdf8:	f89a 3000 	ldrb.w	r3, [sl]
 801cdfc:	2b2a      	cmp	r3, #42	; 0x2a
 801cdfe:	d015      	beq.n	801ce2c <_vfiprintf_r+0x13c>
 801ce00:	9a07      	ldr	r2, [sp, #28]
 801ce02:	4654      	mov	r4, sl
 801ce04:	2000      	movs	r0, #0
 801ce06:	f04f 0c0a 	mov.w	ip, #10
 801ce0a:	4621      	mov	r1, r4
 801ce0c:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ce10:	3b30      	subs	r3, #48	; 0x30
 801ce12:	2b09      	cmp	r3, #9
 801ce14:	d94e      	bls.n	801ceb4 <_vfiprintf_r+0x1c4>
 801ce16:	b1b0      	cbz	r0, 801ce46 <_vfiprintf_r+0x156>
 801ce18:	9207      	str	r2, [sp, #28]
 801ce1a:	e014      	b.n	801ce46 <_vfiprintf_r+0x156>
 801ce1c:	eba0 0308 	sub.w	r3, r0, r8
 801ce20:	fa09 f303 	lsl.w	r3, r9, r3
 801ce24:	4313      	orrs	r3, r2
 801ce26:	9304      	str	r3, [sp, #16]
 801ce28:	46a2      	mov	sl, r4
 801ce2a:	e7d2      	b.n	801cdd2 <_vfiprintf_r+0xe2>
 801ce2c:	9b03      	ldr	r3, [sp, #12]
 801ce2e:	1d19      	adds	r1, r3, #4
 801ce30:	681b      	ldr	r3, [r3, #0]
 801ce32:	9103      	str	r1, [sp, #12]
 801ce34:	2b00      	cmp	r3, #0
 801ce36:	bfbb      	ittet	lt
 801ce38:	425b      	neglt	r3, r3
 801ce3a:	f042 0202 	orrlt.w	r2, r2, #2
 801ce3e:	9307      	strge	r3, [sp, #28]
 801ce40:	9307      	strlt	r3, [sp, #28]
 801ce42:	bfb8      	it	lt
 801ce44:	9204      	strlt	r2, [sp, #16]
 801ce46:	7823      	ldrb	r3, [r4, #0]
 801ce48:	2b2e      	cmp	r3, #46	; 0x2e
 801ce4a:	d10c      	bne.n	801ce66 <_vfiprintf_r+0x176>
 801ce4c:	7863      	ldrb	r3, [r4, #1]
 801ce4e:	2b2a      	cmp	r3, #42	; 0x2a
 801ce50:	d135      	bne.n	801cebe <_vfiprintf_r+0x1ce>
 801ce52:	9b03      	ldr	r3, [sp, #12]
 801ce54:	1d1a      	adds	r2, r3, #4
 801ce56:	681b      	ldr	r3, [r3, #0]
 801ce58:	9203      	str	r2, [sp, #12]
 801ce5a:	2b00      	cmp	r3, #0
 801ce5c:	bfb8      	it	lt
 801ce5e:	f04f 33ff 	movlt.w	r3, #4294967295
 801ce62:	3402      	adds	r4, #2
 801ce64:	9305      	str	r3, [sp, #20]
 801ce66:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801cf4c <_vfiprintf_r+0x25c>
 801ce6a:	7821      	ldrb	r1, [r4, #0]
 801ce6c:	2203      	movs	r2, #3
 801ce6e:	4650      	mov	r0, sl
 801ce70:	f7e3 fa4e 	bl	8000310 <memchr>
 801ce74:	b140      	cbz	r0, 801ce88 <_vfiprintf_r+0x198>
 801ce76:	2340      	movs	r3, #64	; 0x40
 801ce78:	eba0 000a 	sub.w	r0, r0, sl
 801ce7c:	fa03 f000 	lsl.w	r0, r3, r0
 801ce80:	9b04      	ldr	r3, [sp, #16]
 801ce82:	4303      	orrs	r3, r0
 801ce84:	3401      	adds	r4, #1
 801ce86:	9304      	str	r3, [sp, #16]
 801ce88:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ce8c:	482c      	ldr	r0, [pc, #176]	; (801cf40 <_vfiprintf_r+0x250>)
 801ce8e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801ce92:	2206      	movs	r2, #6
 801ce94:	f7e3 fa3c 	bl	8000310 <memchr>
 801ce98:	2800      	cmp	r0, #0
 801ce9a:	d03f      	beq.n	801cf1c <_vfiprintf_r+0x22c>
 801ce9c:	4b29      	ldr	r3, [pc, #164]	; (801cf44 <_vfiprintf_r+0x254>)
 801ce9e:	bb1b      	cbnz	r3, 801cee8 <_vfiprintf_r+0x1f8>
 801cea0:	9b03      	ldr	r3, [sp, #12]
 801cea2:	3307      	adds	r3, #7
 801cea4:	f023 0307 	bic.w	r3, r3, #7
 801cea8:	3308      	adds	r3, #8
 801ceaa:	9303      	str	r3, [sp, #12]
 801ceac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ceae:	443b      	add	r3, r7
 801ceb0:	9309      	str	r3, [sp, #36]	; 0x24
 801ceb2:	e767      	b.n	801cd84 <_vfiprintf_r+0x94>
 801ceb4:	fb0c 3202 	mla	r2, ip, r2, r3
 801ceb8:	460c      	mov	r4, r1
 801ceba:	2001      	movs	r0, #1
 801cebc:	e7a5      	b.n	801ce0a <_vfiprintf_r+0x11a>
 801cebe:	2300      	movs	r3, #0
 801cec0:	3401      	adds	r4, #1
 801cec2:	9305      	str	r3, [sp, #20]
 801cec4:	4619      	mov	r1, r3
 801cec6:	f04f 0c0a 	mov.w	ip, #10
 801ceca:	4620      	mov	r0, r4
 801cecc:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ced0:	3a30      	subs	r2, #48	; 0x30
 801ced2:	2a09      	cmp	r2, #9
 801ced4:	d903      	bls.n	801cede <_vfiprintf_r+0x1ee>
 801ced6:	2b00      	cmp	r3, #0
 801ced8:	d0c5      	beq.n	801ce66 <_vfiprintf_r+0x176>
 801ceda:	9105      	str	r1, [sp, #20]
 801cedc:	e7c3      	b.n	801ce66 <_vfiprintf_r+0x176>
 801cede:	fb0c 2101 	mla	r1, ip, r1, r2
 801cee2:	4604      	mov	r4, r0
 801cee4:	2301      	movs	r3, #1
 801cee6:	e7f0      	b.n	801ceca <_vfiprintf_r+0x1da>
 801cee8:	ab03      	add	r3, sp, #12
 801ceea:	9300      	str	r3, [sp, #0]
 801ceec:	462a      	mov	r2, r5
 801ceee:	4b16      	ldr	r3, [pc, #88]	; (801cf48 <_vfiprintf_r+0x258>)
 801cef0:	a904      	add	r1, sp, #16
 801cef2:	4630      	mov	r0, r6
 801cef4:	f3af 8000 	nop.w
 801cef8:	4607      	mov	r7, r0
 801cefa:	1c78      	adds	r0, r7, #1
 801cefc:	d1d6      	bne.n	801ceac <_vfiprintf_r+0x1bc>
 801cefe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801cf00:	07d9      	lsls	r1, r3, #31
 801cf02:	d405      	bmi.n	801cf10 <_vfiprintf_r+0x220>
 801cf04:	89ab      	ldrh	r3, [r5, #12]
 801cf06:	059a      	lsls	r2, r3, #22
 801cf08:	d402      	bmi.n	801cf10 <_vfiprintf_r+0x220>
 801cf0a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801cf0c:	f7ff fdbf 	bl	801ca8e <__retarget_lock_release_recursive>
 801cf10:	89ab      	ldrh	r3, [r5, #12]
 801cf12:	065b      	lsls	r3, r3, #25
 801cf14:	f53f af12 	bmi.w	801cd3c <_vfiprintf_r+0x4c>
 801cf18:	9809      	ldr	r0, [sp, #36]	; 0x24
 801cf1a:	e711      	b.n	801cd40 <_vfiprintf_r+0x50>
 801cf1c:	ab03      	add	r3, sp, #12
 801cf1e:	9300      	str	r3, [sp, #0]
 801cf20:	462a      	mov	r2, r5
 801cf22:	4b09      	ldr	r3, [pc, #36]	; (801cf48 <_vfiprintf_r+0x258>)
 801cf24:	a904      	add	r1, sp, #16
 801cf26:	4630      	mov	r0, r6
 801cf28:	f000 f880 	bl	801d02c <_printf_i>
 801cf2c:	e7e4      	b.n	801cef8 <_vfiprintf_r+0x208>
 801cf2e:	bf00      	nop
 801cf30:	0801f98c 	.word	0x0801f98c
 801cf34:	0801f9ac 	.word	0x0801f9ac
 801cf38:	0801f96c 	.word	0x0801f96c
 801cf3c:	0801f9d0 	.word	0x0801f9d0
 801cf40:	0801f9da 	.word	0x0801f9da
 801cf44:	00000000 	.word	0x00000000
 801cf48:	0801cccb 	.word	0x0801cccb
 801cf4c:	0801f9d6 	.word	0x0801f9d6

0801cf50 <_printf_common>:
 801cf50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cf54:	4616      	mov	r6, r2
 801cf56:	4699      	mov	r9, r3
 801cf58:	688a      	ldr	r2, [r1, #8]
 801cf5a:	690b      	ldr	r3, [r1, #16]
 801cf5c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801cf60:	4293      	cmp	r3, r2
 801cf62:	bfb8      	it	lt
 801cf64:	4613      	movlt	r3, r2
 801cf66:	6033      	str	r3, [r6, #0]
 801cf68:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801cf6c:	4607      	mov	r7, r0
 801cf6e:	460c      	mov	r4, r1
 801cf70:	b10a      	cbz	r2, 801cf76 <_printf_common+0x26>
 801cf72:	3301      	adds	r3, #1
 801cf74:	6033      	str	r3, [r6, #0]
 801cf76:	6823      	ldr	r3, [r4, #0]
 801cf78:	0699      	lsls	r1, r3, #26
 801cf7a:	bf42      	ittt	mi
 801cf7c:	6833      	ldrmi	r3, [r6, #0]
 801cf7e:	3302      	addmi	r3, #2
 801cf80:	6033      	strmi	r3, [r6, #0]
 801cf82:	6825      	ldr	r5, [r4, #0]
 801cf84:	f015 0506 	ands.w	r5, r5, #6
 801cf88:	d106      	bne.n	801cf98 <_printf_common+0x48>
 801cf8a:	f104 0a19 	add.w	sl, r4, #25
 801cf8e:	68e3      	ldr	r3, [r4, #12]
 801cf90:	6832      	ldr	r2, [r6, #0]
 801cf92:	1a9b      	subs	r3, r3, r2
 801cf94:	42ab      	cmp	r3, r5
 801cf96:	dc26      	bgt.n	801cfe6 <_printf_common+0x96>
 801cf98:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801cf9c:	1e13      	subs	r3, r2, #0
 801cf9e:	6822      	ldr	r2, [r4, #0]
 801cfa0:	bf18      	it	ne
 801cfa2:	2301      	movne	r3, #1
 801cfa4:	0692      	lsls	r2, r2, #26
 801cfa6:	d42b      	bmi.n	801d000 <_printf_common+0xb0>
 801cfa8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801cfac:	4649      	mov	r1, r9
 801cfae:	4638      	mov	r0, r7
 801cfb0:	47c0      	blx	r8
 801cfb2:	3001      	adds	r0, #1
 801cfb4:	d01e      	beq.n	801cff4 <_printf_common+0xa4>
 801cfb6:	6823      	ldr	r3, [r4, #0]
 801cfb8:	68e5      	ldr	r5, [r4, #12]
 801cfba:	6832      	ldr	r2, [r6, #0]
 801cfbc:	f003 0306 	and.w	r3, r3, #6
 801cfc0:	2b04      	cmp	r3, #4
 801cfc2:	bf08      	it	eq
 801cfc4:	1aad      	subeq	r5, r5, r2
 801cfc6:	68a3      	ldr	r3, [r4, #8]
 801cfc8:	6922      	ldr	r2, [r4, #16]
 801cfca:	bf0c      	ite	eq
 801cfcc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801cfd0:	2500      	movne	r5, #0
 801cfd2:	4293      	cmp	r3, r2
 801cfd4:	bfc4      	itt	gt
 801cfd6:	1a9b      	subgt	r3, r3, r2
 801cfd8:	18ed      	addgt	r5, r5, r3
 801cfda:	2600      	movs	r6, #0
 801cfdc:	341a      	adds	r4, #26
 801cfde:	42b5      	cmp	r5, r6
 801cfe0:	d11a      	bne.n	801d018 <_printf_common+0xc8>
 801cfe2:	2000      	movs	r0, #0
 801cfe4:	e008      	b.n	801cff8 <_printf_common+0xa8>
 801cfe6:	2301      	movs	r3, #1
 801cfe8:	4652      	mov	r2, sl
 801cfea:	4649      	mov	r1, r9
 801cfec:	4638      	mov	r0, r7
 801cfee:	47c0      	blx	r8
 801cff0:	3001      	adds	r0, #1
 801cff2:	d103      	bne.n	801cffc <_printf_common+0xac>
 801cff4:	f04f 30ff 	mov.w	r0, #4294967295
 801cff8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cffc:	3501      	adds	r5, #1
 801cffe:	e7c6      	b.n	801cf8e <_printf_common+0x3e>
 801d000:	18e1      	adds	r1, r4, r3
 801d002:	1c5a      	adds	r2, r3, #1
 801d004:	2030      	movs	r0, #48	; 0x30
 801d006:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801d00a:	4422      	add	r2, r4
 801d00c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801d010:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801d014:	3302      	adds	r3, #2
 801d016:	e7c7      	b.n	801cfa8 <_printf_common+0x58>
 801d018:	2301      	movs	r3, #1
 801d01a:	4622      	mov	r2, r4
 801d01c:	4649      	mov	r1, r9
 801d01e:	4638      	mov	r0, r7
 801d020:	47c0      	blx	r8
 801d022:	3001      	adds	r0, #1
 801d024:	d0e6      	beq.n	801cff4 <_printf_common+0xa4>
 801d026:	3601      	adds	r6, #1
 801d028:	e7d9      	b.n	801cfde <_printf_common+0x8e>
	...

0801d02c <_printf_i>:
 801d02c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801d030:	7e0f      	ldrb	r7, [r1, #24]
 801d032:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d034:	2f78      	cmp	r7, #120	; 0x78
 801d036:	4691      	mov	r9, r2
 801d038:	4680      	mov	r8, r0
 801d03a:	460c      	mov	r4, r1
 801d03c:	469a      	mov	sl, r3
 801d03e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801d042:	d807      	bhi.n	801d054 <_printf_i+0x28>
 801d044:	2f62      	cmp	r7, #98	; 0x62
 801d046:	d80a      	bhi.n	801d05e <_printf_i+0x32>
 801d048:	2f00      	cmp	r7, #0
 801d04a:	f000 80d8 	beq.w	801d1fe <_printf_i+0x1d2>
 801d04e:	2f58      	cmp	r7, #88	; 0x58
 801d050:	f000 80a3 	beq.w	801d19a <_printf_i+0x16e>
 801d054:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801d058:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801d05c:	e03a      	b.n	801d0d4 <_printf_i+0xa8>
 801d05e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801d062:	2b15      	cmp	r3, #21
 801d064:	d8f6      	bhi.n	801d054 <_printf_i+0x28>
 801d066:	a101      	add	r1, pc, #4	; (adr r1, 801d06c <_printf_i+0x40>)
 801d068:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801d06c:	0801d0c5 	.word	0x0801d0c5
 801d070:	0801d0d9 	.word	0x0801d0d9
 801d074:	0801d055 	.word	0x0801d055
 801d078:	0801d055 	.word	0x0801d055
 801d07c:	0801d055 	.word	0x0801d055
 801d080:	0801d055 	.word	0x0801d055
 801d084:	0801d0d9 	.word	0x0801d0d9
 801d088:	0801d055 	.word	0x0801d055
 801d08c:	0801d055 	.word	0x0801d055
 801d090:	0801d055 	.word	0x0801d055
 801d094:	0801d055 	.word	0x0801d055
 801d098:	0801d1e5 	.word	0x0801d1e5
 801d09c:	0801d109 	.word	0x0801d109
 801d0a0:	0801d1c7 	.word	0x0801d1c7
 801d0a4:	0801d055 	.word	0x0801d055
 801d0a8:	0801d055 	.word	0x0801d055
 801d0ac:	0801d207 	.word	0x0801d207
 801d0b0:	0801d055 	.word	0x0801d055
 801d0b4:	0801d109 	.word	0x0801d109
 801d0b8:	0801d055 	.word	0x0801d055
 801d0bc:	0801d055 	.word	0x0801d055
 801d0c0:	0801d1cf 	.word	0x0801d1cf
 801d0c4:	682b      	ldr	r3, [r5, #0]
 801d0c6:	1d1a      	adds	r2, r3, #4
 801d0c8:	681b      	ldr	r3, [r3, #0]
 801d0ca:	602a      	str	r2, [r5, #0]
 801d0cc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801d0d0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801d0d4:	2301      	movs	r3, #1
 801d0d6:	e0a3      	b.n	801d220 <_printf_i+0x1f4>
 801d0d8:	6820      	ldr	r0, [r4, #0]
 801d0da:	6829      	ldr	r1, [r5, #0]
 801d0dc:	0606      	lsls	r6, r0, #24
 801d0de:	f101 0304 	add.w	r3, r1, #4
 801d0e2:	d50a      	bpl.n	801d0fa <_printf_i+0xce>
 801d0e4:	680e      	ldr	r6, [r1, #0]
 801d0e6:	602b      	str	r3, [r5, #0]
 801d0e8:	2e00      	cmp	r6, #0
 801d0ea:	da03      	bge.n	801d0f4 <_printf_i+0xc8>
 801d0ec:	232d      	movs	r3, #45	; 0x2d
 801d0ee:	4276      	negs	r6, r6
 801d0f0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d0f4:	485e      	ldr	r0, [pc, #376]	; (801d270 <_printf_i+0x244>)
 801d0f6:	230a      	movs	r3, #10
 801d0f8:	e019      	b.n	801d12e <_printf_i+0x102>
 801d0fa:	680e      	ldr	r6, [r1, #0]
 801d0fc:	602b      	str	r3, [r5, #0]
 801d0fe:	f010 0f40 	tst.w	r0, #64	; 0x40
 801d102:	bf18      	it	ne
 801d104:	b236      	sxthne	r6, r6
 801d106:	e7ef      	b.n	801d0e8 <_printf_i+0xbc>
 801d108:	682b      	ldr	r3, [r5, #0]
 801d10a:	6820      	ldr	r0, [r4, #0]
 801d10c:	1d19      	adds	r1, r3, #4
 801d10e:	6029      	str	r1, [r5, #0]
 801d110:	0601      	lsls	r1, r0, #24
 801d112:	d501      	bpl.n	801d118 <_printf_i+0xec>
 801d114:	681e      	ldr	r6, [r3, #0]
 801d116:	e002      	b.n	801d11e <_printf_i+0xf2>
 801d118:	0646      	lsls	r6, r0, #25
 801d11a:	d5fb      	bpl.n	801d114 <_printf_i+0xe8>
 801d11c:	881e      	ldrh	r6, [r3, #0]
 801d11e:	4854      	ldr	r0, [pc, #336]	; (801d270 <_printf_i+0x244>)
 801d120:	2f6f      	cmp	r7, #111	; 0x6f
 801d122:	bf0c      	ite	eq
 801d124:	2308      	moveq	r3, #8
 801d126:	230a      	movne	r3, #10
 801d128:	2100      	movs	r1, #0
 801d12a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801d12e:	6865      	ldr	r5, [r4, #4]
 801d130:	60a5      	str	r5, [r4, #8]
 801d132:	2d00      	cmp	r5, #0
 801d134:	bfa2      	ittt	ge
 801d136:	6821      	ldrge	r1, [r4, #0]
 801d138:	f021 0104 	bicge.w	r1, r1, #4
 801d13c:	6021      	strge	r1, [r4, #0]
 801d13e:	b90e      	cbnz	r6, 801d144 <_printf_i+0x118>
 801d140:	2d00      	cmp	r5, #0
 801d142:	d04d      	beq.n	801d1e0 <_printf_i+0x1b4>
 801d144:	4615      	mov	r5, r2
 801d146:	fbb6 f1f3 	udiv	r1, r6, r3
 801d14a:	fb03 6711 	mls	r7, r3, r1, r6
 801d14e:	5dc7      	ldrb	r7, [r0, r7]
 801d150:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801d154:	4637      	mov	r7, r6
 801d156:	42bb      	cmp	r3, r7
 801d158:	460e      	mov	r6, r1
 801d15a:	d9f4      	bls.n	801d146 <_printf_i+0x11a>
 801d15c:	2b08      	cmp	r3, #8
 801d15e:	d10b      	bne.n	801d178 <_printf_i+0x14c>
 801d160:	6823      	ldr	r3, [r4, #0]
 801d162:	07de      	lsls	r6, r3, #31
 801d164:	d508      	bpl.n	801d178 <_printf_i+0x14c>
 801d166:	6923      	ldr	r3, [r4, #16]
 801d168:	6861      	ldr	r1, [r4, #4]
 801d16a:	4299      	cmp	r1, r3
 801d16c:	bfde      	ittt	le
 801d16e:	2330      	movle	r3, #48	; 0x30
 801d170:	f805 3c01 	strble.w	r3, [r5, #-1]
 801d174:	f105 35ff 	addle.w	r5, r5, #4294967295
 801d178:	1b52      	subs	r2, r2, r5
 801d17a:	6122      	str	r2, [r4, #16]
 801d17c:	f8cd a000 	str.w	sl, [sp]
 801d180:	464b      	mov	r3, r9
 801d182:	aa03      	add	r2, sp, #12
 801d184:	4621      	mov	r1, r4
 801d186:	4640      	mov	r0, r8
 801d188:	f7ff fee2 	bl	801cf50 <_printf_common>
 801d18c:	3001      	adds	r0, #1
 801d18e:	d14c      	bne.n	801d22a <_printf_i+0x1fe>
 801d190:	f04f 30ff 	mov.w	r0, #4294967295
 801d194:	b004      	add	sp, #16
 801d196:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d19a:	4835      	ldr	r0, [pc, #212]	; (801d270 <_printf_i+0x244>)
 801d19c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801d1a0:	6829      	ldr	r1, [r5, #0]
 801d1a2:	6823      	ldr	r3, [r4, #0]
 801d1a4:	f851 6b04 	ldr.w	r6, [r1], #4
 801d1a8:	6029      	str	r1, [r5, #0]
 801d1aa:	061d      	lsls	r5, r3, #24
 801d1ac:	d514      	bpl.n	801d1d8 <_printf_i+0x1ac>
 801d1ae:	07df      	lsls	r7, r3, #31
 801d1b0:	bf44      	itt	mi
 801d1b2:	f043 0320 	orrmi.w	r3, r3, #32
 801d1b6:	6023      	strmi	r3, [r4, #0]
 801d1b8:	b91e      	cbnz	r6, 801d1c2 <_printf_i+0x196>
 801d1ba:	6823      	ldr	r3, [r4, #0]
 801d1bc:	f023 0320 	bic.w	r3, r3, #32
 801d1c0:	6023      	str	r3, [r4, #0]
 801d1c2:	2310      	movs	r3, #16
 801d1c4:	e7b0      	b.n	801d128 <_printf_i+0xfc>
 801d1c6:	6823      	ldr	r3, [r4, #0]
 801d1c8:	f043 0320 	orr.w	r3, r3, #32
 801d1cc:	6023      	str	r3, [r4, #0]
 801d1ce:	2378      	movs	r3, #120	; 0x78
 801d1d0:	4828      	ldr	r0, [pc, #160]	; (801d274 <_printf_i+0x248>)
 801d1d2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801d1d6:	e7e3      	b.n	801d1a0 <_printf_i+0x174>
 801d1d8:	0659      	lsls	r1, r3, #25
 801d1da:	bf48      	it	mi
 801d1dc:	b2b6      	uxthmi	r6, r6
 801d1de:	e7e6      	b.n	801d1ae <_printf_i+0x182>
 801d1e0:	4615      	mov	r5, r2
 801d1e2:	e7bb      	b.n	801d15c <_printf_i+0x130>
 801d1e4:	682b      	ldr	r3, [r5, #0]
 801d1e6:	6826      	ldr	r6, [r4, #0]
 801d1e8:	6961      	ldr	r1, [r4, #20]
 801d1ea:	1d18      	adds	r0, r3, #4
 801d1ec:	6028      	str	r0, [r5, #0]
 801d1ee:	0635      	lsls	r5, r6, #24
 801d1f0:	681b      	ldr	r3, [r3, #0]
 801d1f2:	d501      	bpl.n	801d1f8 <_printf_i+0x1cc>
 801d1f4:	6019      	str	r1, [r3, #0]
 801d1f6:	e002      	b.n	801d1fe <_printf_i+0x1d2>
 801d1f8:	0670      	lsls	r0, r6, #25
 801d1fa:	d5fb      	bpl.n	801d1f4 <_printf_i+0x1c8>
 801d1fc:	8019      	strh	r1, [r3, #0]
 801d1fe:	2300      	movs	r3, #0
 801d200:	6123      	str	r3, [r4, #16]
 801d202:	4615      	mov	r5, r2
 801d204:	e7ba      	b.n	801d17c <_printf_i+0x150>
 801d206:	682b      	ldr	r3, [r5, #0]
 801d208:	1d1a      	adds	r2, r3, #4
 801d20a:	602a      	str	r2, [r5, #0]
 801d20c:	681d      	ldr	r5, [r3, #0]
 801d20e:	6862      	ldr	r2, [r4, #4]
 801d210:	2100      	movs	r1, #0
 801d212:	4628      	mov	r0, r5
 801d214:	f7e3 f87c 	bl	8000310 <memchr>
 801d218:	b108      	cbz	r0, 801d21e <_printf_i+0x1f2>
 801d21a:	1b40      	subs	r0, r0, r5
 801d21c:	6060      	str	r0, [r4, #4]
 801d21e:	6863      	ldr	r3, [r4, #4]
 801d220:	6123      	str	r3, [r4, #16]
 801d222:	2300      	movs	r3, #0
 801d224:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d228:	e7a8      	b.n	801d17c <_printf_i+0x150>
 801d22a:	6923      	ldr	r3, [r4, #16]
 801d22c:	462a      	mov	r2, r5
 801d22e:	4649      	mov	r1, r9
 801d230:	4640      	mov	r0, r8
 801d232:	47d0      	blx	sl
 801d234:	3001      	adds	r0, #1
 801d236:	d0ab      	beq.n	801d190 <_printf_i+0x164>
 801d238:	6823      	ldr	r3, [r4, #0]
 801d23a:	079b      	lsls	r3, r3, #30
 801d23c:	d413      	bmi.n	801d266 <_printf_i+0x23a>
 801d23e:	68e0      	ldr	r0, [r4, #12]
 801d240:	9b03      	ldr	r3, [sp, #12]
 801d242:	4298      	cmp	r0, r3
 801d244:	bfb8      	it	lt
 801d246:	4618      	movlt	r0, r3
 801d248:	e7a4      	b.n	801d194 <_printf_i+0x168>
 801d24a:	2301      	movs	r3, #1
 801d24c:	4632      	mov	r2, r6
 801d24e:	4649      	mov	r1, r9
 801d250:	4640      	mov	r0, r8
 801d252:	47d0      	blx	sl
 801d254:	3001      	adds	r0, #1
 801d256:	d09b      	beq.n	801d190 <_printf_i+0x164>
 801d258:	3501      	adds	r5, #1
 801d25a:	68e3      	ldr	r3, [r4, #12]
 801d25c:	9903      	ldr	r1, [sp, #12]
 801d25e:	1a5b      	subs	r3, r3, r1
 801d260:	42ab      	cmp	r3, r5
 801d262:	dcf2      	bgt.n	801d24a <_printf_i+0x21e>
 801d264:	e7eb      	b.n	801d23e <_printf_i+0x212>
 801d266:	2500      	movs	r5, #0
 801d268:	f104 0619 	add.w	r6, r4, #25
 801d26c:	e7f5      	b.n	801d25a <_printf_i+0x22e>
 801d26e:	bf00      	nop
 801d270:	0801f9e1 	.word	0x0801f9e1
 801d274:	0801f9f2 	.word	0x0801f9f2

0801d278 <cleanup_glue>:
 801d278:	b538      	push	{r3, r4, r5, lr}
 801d27a:	460c      	mov	r4, r1
 801d27c:	6809      	ldr	r1, [r1, #0]
 801d27e:	4605      	mov	r5, r0
 801d280:	b109      	cbz	r1, 801d286 <cleanup_glue+0xe>
 801d282:	f7ff fff9 	bl	801d278 <cleanup_glue>
 801d286:	4621      	mov	r1, r4
 801d288:	4628      	mov	r0, r5
 801d28a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801d28e:	f7ff bc25 	b.w	801cadc <_free_r>
	...

0801d294 <_reclaim_reent>:
 801d294:	4b2c      	ldr	r3, [pc, #176]	; (801d348 <_reclaim_reent+0xb4>)
 801d296:	681b      	ldr	r3, [r3, #0]
 801d298:	4283      	cmp	r3, r0
 801d29a:	b570      	push	{r4, r5, r6, lr}
 801d29c:	4604      	mov	r4, r0
 801d29e:	d051      	beq.n	801d344 <_reclaim_reent+0xb0>
 801d2a0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801d2a2:	b143      	cbz	r3, 801d2b6 <_reclaim_reent+0x22>
 801d2a4:	68db      	ldr	r3, [r3, #12]
 801d2a6:	2b00      	cmp	r3, #0
 801d2a8:	d14a      	bne.n	801d340 <_reclaim_reent+0xac>
 801d2aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801d2ac:	6819      	ldr	r1, [r3, #0]
 801d2ae:	b111      	cbz	r1, 801d2b6 <_reclaim_reent+0x22>
 801d2b0:	4620      	mov	r0, r4
 801d2b2:	f7ff fc13 	bl	801cadc <_free_r>
 801d2b6:	6961      	ldr	r1, [r4, #20]
 801d2b8:	b111      	cbz	r1, 801d2c0 <_reclaim_reent+0x2c>
 801d2ba:	4620      	mov	r0, r4
 801d2bc:	f7ff fc0e 	bl	801cadc <_free_r>
 801d2c0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801d2c2:	b111      	cbz	r1, 801d2ca <_reclaim_reent+0x36>
 801d2c4:	4620      	mov	r0, r4
 801d2c6:	f7ff fc09 	bl	801cadc <_free_r>
 801d2ca:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801d2cc:	b111      	cbz	r1, 801d2d4 <_reclaim_reent+0x40>
 801d2ce:	4620      	mov	r0, r4
 801d2d0:	f7ff fc04 	bl	801cadc <_free_r>
 801d2d4:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 801d2d6:	b111      	cbz	r1, 801d2de <_reclaim_reent+0x4a>
 801d2d8:	4620      	mov	r0, r4
 801d2da:	f7ff fbff 	bl	801cadc <_free_r>
 801d2de:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801d2e0:	b111      	cbz	r1, 801d2e8 <_reclaim_reent+0x54>
 801d2e2:	4620      	mov	r0, r4
 801d2e4:	f7ff fbfa 	bl	801cadc <_free_r>
 801d2e8:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 801d2ea:	b111      	cbz	r1, 801d2f2 <_reclaim_reent+0x5e>
 801d2ec:	4620      	mov	r0, r4
 801d2ee:	f7ff fbf5 	bl	801cadc <_free_r>
 801d2f2:	6da1      	ldr	r1, [r4, #88]	; 0x58
 801d2f4:	b111      	cbz	r1, 801d2fc <_reclaim_reent+0x68>
 801d2f6:	4620      	mov	r0, r4
 801d2f8:	f7ff fbf0 	bl	801cadc <_free_r>
 801d2fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801d2fe:	b111      	cbz	r1, 801d306 <_reclaim_reent+0x72>
 801d300:	4620      	mov	r0, r4
 801d302:	f7ff fbeb 	bl	801cadc <_free_r>
 801d306:	69a3      	ldr	r3, [r4, #24]
 801d308:	b1e3      	cbz	r3, 801d344 <_reclaim_reent+0xb0>
 801d30a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801d30c:	4620      	mov	r0, r4
 801d30e:	4798      	blx	r3
 801d310:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801d312:	b1b9      	cbz	r1, 801d344 <_reclaim_reent+0xb0>
 801d314:	4620      	mov	r0, r4
 801d316:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d31a:	f7ff bfad 	b.w	801d278 <cleanup_glue>
 801d31e:	5949      	ldr	r1, [r1, r5]
 801d320:	b941      	cbnz	r1, 801d334 <_reclaim_reent+0xa0>
 801d322:	3504      	adds	r5, #4
 801d324:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801d326:	2d80      	cmp	r5, #128	; 0x80
 801d328:	68d9      	ldr	r1, [r3, #12]
 801d32a:	d1f8      	bne.n	801d31e <_reclaim_reent+0x8a>
 801d32c:	4620      	mov	r0, r4
 801d32e:	f7ff fbd5 	bl	801cadc <_free_r>
 801d332:	e7ba      	b.n	801d2aa <_reclaim_reent+0x16>
 801d334:	680e      	ldr	r6, [r1, #0]
 801d336:	4620      	mov	r0, r4
 801d338:	f7ff fbd0 	bl	801cadc <_free_r>
 801d33c:	4631      	mov	r1, r6
 801d33e:	e7ef      	b.n	801d320 <_reclaim_reent+0x8c>
 801d340:	2500      	movs	r5, #0
 801d342:	e7ef      	b.n	801d324 <_reclaim_reent+0x90>
 801d344:	bd70      	pop	{r4, r5, r6, pc}
 801d346:	bf00      	nop
 801d348:	240000ac 	.word	0x240000ac

0801d34c <_sbrk_r>:
 801d34c:	b538      	push	{r3, r4, r5, lr}
 801d34e:	4d06      	ldr	r5, [pc, #24]	; (801d368 <_sbrk_r+0x1c>)
 801d350:	2300      	movs	r3, #0
 801d352:	4604      	mov	r4, r0
 801d354:	4608      	mov	r0, r1
 801d356:	602b      	str	r3, [r5, #0]
 801d358:	f7e4 f896 	bl	8001488 <_sbrk>
 801d35c:	1c43      	adds	r3, r0, #1
 801d35e:	d102      	bne.n	801d366 <_sbrk_r+0x1a>
 801d360:	682b      	ldr	r3, [r5, #0]
 801d362:	b103      	cbz	r3, 801d366 <_sbrk_r+0x1a>
 801d364:	6023      	str	r3, [r4, #0]
 801d366:	bd38      	pop	{r3, r4, r5, pc}
 801d368:	24008b44 	.word	0x24008b44

0801d36c <_raise_r>:
 801d36c:	291f      	cmp	r1, #31
 801d36e:	b538      	push	{r3, r4, r5, lr}
 801d370:	4604      	mov	r4, r0
 801d372:	460d      	mov	r5, r1
 801d374:	d904      	bls.n	801d380 <_raise_r+0x14>
 801d376:	2316      	movs	r3, #22
 801d378:	6003      	str	r3, [r0, #0]
 801d37a:	f04f 30ff 	mov.w	r0, #4294967295
 801d37e:	bd38      	pop	{r3, r4, r5, pc}
 801d380:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801d382:	b112      	cbz	r2, 801d38a <_raise_r+0x1e>
 801d384:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801d388:	b94b      	cbnz	r3, 801d39e <_raise_r+0x32>
 801d38a:	4620      	mov	r0, r4
 801d38c:	f000 f830 	bl	801d3f0 <_getpid_r>
 801d390:	462a      	mov	r2, r5
 801d392:	4601      	mov	r1, r0
 801d394:	4620      	mov	r0, r4
 801d396:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801d39a:	f000 b817 	b.w	801d3cc <_kill_r>
 801d39e:	2b01      	cmp	r3, #1
 801d3a0:	d00a      	beq.n	801d3b8 <_raise_r+0x4c>
 801d3a2:	1c59      	adds	r1, r3, #1
 801d3a4:	d103      	bne.n	801d3ae <_raise_r+0x42>
 801d3a6:	2316      	movs	r3, #22
 801d3a8:	6003      	str	r3, [r0, #0]
 801d3aa:	2001      	movs	r0, #1
 801d3ac:	e7e7      	b.n	801d37e <_raise_r+0x12>
 801d3ae:	2400      	movs	r4, #0
 801d3b0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801d3b4:	4628      	mov	r0, r5
 801d3b6:	4798      	blx	r3
 801d3b8:	2000      	movs	r0, #0
 801d3ba:	e7e0      	b.n	801d37e <_raise_r+0x12>

0801d3bc <raise>:
 801d3bc:	4b02      	ldr	r3, [pc, #8]	; (801d3c8 <raise+0xc>)
 801d3be:	4601      	mov	r1, r0
 801d3c0:	6818      	ldr	r0, [r3, #0]
 801d3c2:	f7ff bfd3 	b.w	801d36c <_raise_r>
 801d3c6:	bf00      	nop
 801d3c8:	240000ac 	.word	0x240000ac

0801d3cc <_kill_r>:
 801d3cc:	b538      	push	{r3, r4, r5, lr}
 801d3ce:	4d07      	ldr	r5, [pc, #28]	; (801d3ec <_kill_r+0x20>)
 801d3d0:	2300      	movs	r3, #0
 801d3d2:	4604      	mov	r4, r0
 801d3d4:	4608      	mov	r0, r1
 801d3d6:	4611      	mov	r1, r2
 801d3d8:	602b      	str	r3, [r5, #0]
 801d3da:	f7e4 f81f 	bl	800141c <_kill>
 801d3de:	1c43      	adds	r3, r0, #1
 801d3e0:	d102      	bne.n	801d3e8 <_kill_r+0x1c>
 801d3e2:	682b      	ldr	r3, [r5, #0]
 801d3e4:	b103      	cbz	r3, 801d3e8 <_kill_r+0x1c>
 801d3e6:	6023      	str	r3, [r4, #0]
 801d3e8:	bd38      	pop	{r3, r4, r5, pc}
 801d3ea:	bf00      	nop
 801d3ec:	24008b44 	.word	0x24008b44

0801d3f0 <_getpid_r>:
 801d3f0:	f7e4 b812 	b.w	8001418 <_getpid>

0801d3f4 <__sread>:
 801d3f4:	b510      	push	{r4, lr}
 801d3f6:	460c      	mov	r4, r1
 801d3f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d3fc:	f000 fac8 	bl	801d990 <_read_r>
 801d400:	2800      	cmp	r0, #0
 801d402:	bfab      	itete	ge
 801d404:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801d406:	89a3      	ldrhlt	r3, [r4, #12]
 801d408:	181b      	addge	r3, r3, r0
 801d40a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801d40e:	bfac      	ite	ge
 801d410:	6563      	strge	r3, [r4, #84]	; 0x54
 801d412:	81a3      	strhlt	r3, [r4, #12]
 801d414:	bd10      	pop	{r4, pc}

0801d416 <__swrite>:
 801d416:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d41a:	461f      	mov	r7, r3
 801d41c:	898b      	ldrh	r3, [r1, #12]
 801d41e:	05db      	lsls	r3, r3, #23
 801d420:	4605      	mov	r5, r0
 801d422:	460c      	mov	r4, r1
 801d424:	4616      	mov	r6, r2
 801d426:	d505      	bpl.n	801d434 <__swrite+0x1e>
 801d428:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d42c:	2302      	movs	r3, #2
 801d42e:	2200      	movs	r2, #0
 801d430:	f000 fa2a 	bl	801d888 <_lseek_r>
 801d434:	89a3      	ldrh	r3, [r4, #12]
 801d436:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801d43a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801d43e:	81a3      	strh	r3, [r4, #12]
 801d440:	4632      	mov	r2, r6
 801d442:	463b      	mov	r3, r7
 801d444:	4628      	mov	r0, r5
 801d446:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801d44a:	f000 b869 	b.w	801d520 <_write_r>

0801d44e <__sseek>:
 801d44e:	b510      	push	{r4, lr}
 801d450:	460c      	mov	r4, r1
 801d452:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d456:	f000 fa17 	bl	801d888 <_lseek_r>
 801d45a:	1c43      	adds	r3, r0, #1
 801d45c:	89a3      	ldrh	r3, [r4, #12]
 801d45e:	bf15      	itete	ne
 801d460:	6560      	strne	r0, [r4, #84]	; 0x54
 801d462:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801d466:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801d46a:	81a3      	strheq	r3, [r4, #12]
 801d46c:	bf18      	it	ne
 801d46e:	81a3      	strhne	r3, [r4, #12]
 801d470:	bd10      	pop	{r4, pc}

0801d472 <__sclose>:
 801d472:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d476:	f000 b935 	b.w	801d6e4 <_close_r>
	...

0801d47c <__swbuf_r>:
 801d47c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d47e:	460e      	mov	r6, r1
 801d480:	4614      	mov	r4, r2
 801d482:	4605      	mov	r5, r0
 801d484:	b118      	cbz	r0, 801d48e <__swbuf_r+0x12>
 801d486:	6983      	ldr	r3, [r0, #24]
 801d488:	b90b      	cbnz	r3, 801d48e <__swbuf_r+0x12>
 801d48a:	f7ff fa29 	bl	801c8e0 <__sinit>
 801d48e:	4b21      	ldr	r3, [pc, #132]	; (801d514 <__swbuf_r+0x98>)
 801d490:	429c      	cmp	r4, r3
 801d492:	d12b      	bne.n	801d4ec <__swbuf_r+0x70>
 801d494:	686c      	ldr	r4, [r5, #4]
 801d496:	69a3      	ldr	r3, [r4, #24]
 801d498:	60a3      	str	r3, [r4, #8]
 801d49a:	89a3      	ldrh	r3, [r4, #12]
 801d49c:	071a      	lsls	r2, r3, #28
 801d49e:	d52f      	bpl.n	801d500 <__swbuf_r+0x84>
 801d4a0:	6923      	ldr	r3, [r4, #16]
 801d4a2:	b36b      	cbz	r3, 801d500 <__swbuf_r+0x84>
 801d4a4:	6923      	ldr	r3, [r4, #16]
 801d4a6:	6820      	ldr	r0, [r4, #0]
 801d4a8:	1ac0      	subs	r0, r0, r3
 801d4aa:	6963      	ldr	r3, [r4, #20]
 801d4ac:	b2f6      	uxtb	r6, r6
 801d4ae:	4283      	cmp	r3, r0
 801d4b0:	4637      	mov	r7, r6
 801d4b2:	dc04      	bgt.n	801d4be <__swbuf_r+0x42>
 801d4b4:	4621      	mov	r1, r4
 801d4b6:	4628      	mov	r0, r5
 801d4b8:	f000 f9aa 	bl	801d810 <_fflush_r>
 801d4bc:	bb30      	cbnz	r0, 801d50c <__swbuf_r+0x90>
 801d4be:	68a3      	ldr	r3, [r4, #8]
 801d4c0:	3b01      	subs	r3, #1
 801d4c2:	60a3      	str	r3, [r4, #8]
 801d4c4:	6823      	ldr	r3, [r4, #0]
 801d4c6:	1c5a      	adds	r2, r3, #1
 801d4c8:	6022      	str	r2, [r4, #0]
 801d4ca:	701e      	strb	r6, [r3, #0]
 801d4cc:	6963      	ldr	r3, [r4, #20]
 801d4ce:	3001      	adds	r0, #1
 801d4d0:	4283      	cmp	r3, r0
 801d4d2:	d004      	beq.n	801d4de <__swbuf_r+0x62>
 801d4d4:	89a3      	ldrh	r3, [r4, #12]
 801d4d6:	07db      	lsls	r3, r3, #31
 801d4d8:	d506      	bpl.n	801d4e8 <__swbuf_r+0x6c>
 801d4da:	2e0a      	cmp	r6, #10
 801d4dc:	d104      	bne.n	801d4e8 <__swbuf_r+0x6c>
 801d4de:	4621      	mov	r1, r4
 801d4e0:	4628      	mov	r0, r5
 801d4e2:	f000 f995 	bl	801d810 <_fflush_r>
 801d4e6:	b988      	cbnz	r0, 801d50c <__swbuf_r+0x90>
 801d4e8:	4638      	mov	r0, r7
 801d4ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801d4ec:	4b0a      	ldr	r3, [pc, #40]	; (801d518 <__swbuf_r+0x9c>)
 801d4ee:	429c      	cmp	r4, r3
 801d4f0:	d101      	bne.n	801d4f6 <__swbuf_r+0x7a>
 801d4f2:	68ac      	ldr	r4, [r5, #8]
 801d4f4:	e7cf      	b.n	801d496 <__swbuf_r+0x1a>
 801d4f6:	4b09      	ldr	r3, [pc, #36]	; (801d51c <__swbuf_r+0xa0>)
 801d4f8:	429c      	cmp	r4, r3
 801d4fa:	bf08      	it	eq
 801d4fc:	68ec      	ldreq	r4, [r5, #12]
 801d4fe:	e7ca      	b.n	801d496 <__swbuf_r+0x1a>
 801d500:	4621      	mov	r1, r4
 801d502:	4628      	mov	r0, r5
 801d504:	f000 f81e 	bl	801d544 <__swsetup_r>
 801d508:	2800      	cmp	r0, #0
 801d50a:	d0cb      	beq.n	801d4a4 <__swbuf_r+0x28>
 801d50c:	f04f 37ff 	mov.w	r7, #4294967295
 801d510:	e7ea      	b.n	801d4e8 <__swbuf_r+0x6c>
 801d512:	bf00      	nop
 801d514:	0801f98c 	.word	0x0801f98c
 801d518:	0801f9ac 	.word	0x0801f9ac
 801d51c:	0801f96c 	.word	0x0801f96c

0801d520 <_write_r>:
 801d520:	b538      	push	{r3, r4, r5, lr}
 801d522:	4d07      	ldr	r5, [pc, #28]	; (801d540 <_write_r+0x20>)
 801d524:	4604      	mov	r4, r0
 801d526:	4608      	mov	r0, r1
 801d528:	4611      	mov	r1, r2
 801d52a:	2200      	movs	r2, #0
 801d52c:	602a      	str	r2, [r5, #0]
 801d52e:	461a      	mov	r2, r3
 801d530:	f7e3 ff90 	bl	8001454 <_write>
 801d534:	1c43      	adds	r3, r0, #1
 801d536:	d102      	bne.n	801d53e <_write_r+0x1e>
 801d538:	682b      	ldr	r3, [r5, #0]
 801d53a:	b103      	cbz	r3, 801d53e <_write_r+0x1e>
 801d53c:	6023      	str	r3, [r4, #0]
 801d53e:	bd38      	pop	{r3, r4, r5, pc}
 801d540:	24008b44 	.word	0x24008b44

0801d544 <__swsetup_r>:
 801d544:	4b32      	ldr	r3, [pc, #200]	; (801d610 <__swsetup_r+0xcc>)
 801d546:	b570      	push	{r4, r5, r6, lr}
 801d548:	681d      	ldr	r5, [r3, #0]
 801d54a:	4606      	mov	r6, r0
 801d54c:	460c      	mov	r4, r1
 801d54e:	b125      	cbz	r5, 801d55a <__swsetup_r+0x16>
 801d550:	69ab      	ldr	r3, [r5, #24]
 801d552:	b913      	cbnz	r3, 801d55a <__swsetup_r+0x16>
 801d554:	4628      	mov	r0, r5
 801d556:	f7ff f9c3 	bl	801c8e0 <__sinit>
 801d55a:	4b2e      	ldr	r3, [pc, #184]	; (801d614 <__swsetup_r+0xd0>)
 801d55c:	429c      	cmp	r4, r3
 801d55e:	d10f      	bne.n	801d580 <__swsetup_r+0x3c>
 801d560:	686c      	ldr	r4, [r5, #4]
 801d562:	89a3      	ldrh	r3, [r4, #12]
 801d564:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d568:	0719      	lsls	r1, r3, #28
 801d56a:	d42c      	bmi.n	801d5c6 <__swsetup_r+0x82>
 801d56c:	06dd      	lsls	r5, r3, #27
 801d56e:	d411      	bmi.n	801d594 <__swsetup_r+0x50>
 801d570:	2309      	movs	r3, #9
 801d572:	6033      	str	r3, [r6, #0]
 801d574:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801d578:	81a3      	strh	r3, [r4, #12]
 801d57a:	f04f 30ff 	mov.w	r0, #4294967295
 801d57e:	e03e      	b.n	801d5fe <__swsetup_r+0xba>
 801d580:	4b25      	ldr	r3, [pc, #148]	; (801d618 <__swsetup_r+0xd4>)
 801d582:	429c      	cmp	r4, r3
 801d584:	d101      	bne.n	801d58a <__swsetup_r+0x46>
 801d586:	68ac      	ldr	r4, [r5, #8]
 801d588:	e7eb      	b.n	801d562 <__swsetup_r+0x1e>
 801d58a:	4b24      	ldr	r3, [pc, #144]	; (801d61c <__swsetup_r+0xd8>)
 801d58c:	429c      	cmp	r4, r3
 801d58e:	bf08      	it	eq
 801d590:	68ec      	ldreq	r4, [r5, #12]
 801d592:	e7e6      	b.n	801d562 <__swsetup_r+0x1e>
 801d594:	0758      	lsls	r0, r3, #29
 801d596:	d512      	bpl.n	801d5be <__swsetup_r+0x7a>
 801d598:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801d59a:	b141      	cbz	r1, 801d5ae <__swsetup_r+0x6a>
 801d59c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801d5a0:	4299      	cmp	r1, r3
 801d5a2:	d002      	beq.n	801d5aa <__swsetup_r+0x66>
 801d5a4:	4630      	mov	r0, r6
 801d5a6:	f7ff fa99 	bl	801cadc <_free_r>
 801d5aa:	2300      	movs	r3, #0
 801d5ac:	6363      	str	r3, [r4, #52]	; 0x34
 801d5ae:	89a3      	ldrh	r3, [r4, #12]
 801d5b0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801d5b4:	81a3      	strh	r3, [r4, #12]
 801d5b6:	2300      	movs	r3, #0
 801d5b8:	6063      	str	r3, [r4, #4]
 801d5ba:	6923      	ldr	r3, [r4, #16]
 801d5bc:	6023      	str	r3, [r4, #0]
 801d5be:	89a3      	ldrh	r3, [r4, #12]
 801d5c0:	f043 0308 	orr.w	r3, r3, #8
 801d5c4:	81a3      	strh	r3, [r4, #12]
 801d5c6:	6923      	ldr	r3, [r4, #16]
 801d5c8:	b94b      	cbnz	r3, 801d5de <__swsetup_r+0x9a>
 801d5ca:	89a3      	ldrh	r3, [r4, #12]
 801d5cc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801d5d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801d5d4:	d003      	beq.n	801d5de <__swsetup_r+0x9a>
 801d5d6:	4621      	mov	r1, r4
 801d5d8:	4630      	mov	r0, r6
 801d5da:	f000 f98d 	bl	801d8f8 <__smakebuf_r>
 801d5de:	89a0      	ldrh	r0, [r4, #12]
 801d5e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d5e4:	f010 0301 	ands.w	r3, r0, #1
 801d5e8:	d00a      	beq.n	801d600 <__swsetup_r+0xbc>
 801d5ea:	2300      	movs	r3, #0
 801d5ec:	60a3      	str	r3, [r4, #8]
 801d5ee:	6963      	ldr	r3, [r4, #20]
 801d5f0:	425b      	negs	r3, r3
 801d5f2:	61a3      	str	r3, [r4, #24]
 801d5f4:	6923      	ldr	r3, [r4, #16]
 801d5f6:	b943      	cbnz	r3, 801d60a <__swsetup_r+0xc6>
 801d5f8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801d5fc:	d1ba      	bne.n	801d574 <__swsetup_r+0x30>
 801d5fe:	bd70      	pop	{r4, r5, r6, pc}
 801d600:	0781      	lsls	r1, r0, #30
 801d602:	bf58      	it	pl
 801d604:	6963      	ldrpl	r3, [r4, #20]
 801d606:	60a3      	str	r3, [r4, #8]
 801d608:	e7f4      	b.n	801d5f4 <__swsetup_r+0xb0>
 801d60a:	2000      	movs	r0, #0
 801d60c:	e7f7      	b.n	801d5fe <__swsetup_r+0xba>
 801d60e:	bf00      	nop
 801d610:	240000ac 	.word	0x240000ac
 801d614:	0801f98c 	.word	0x0801f98c
 801d618:	0801f9ac 	.word	0x0801f9ac
 801d61c:	0801f96c 	.word	0x0801f96c

0801d620 <__register_exitproc>:
 801d620:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d624:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801d6e0 <__register_exitproc+0xc0>
 801d628:	4606      	mov	r6, r0
 801d62a:	f8d8 0000 	ldr.w	r0, [r8]
 801d62e:	461f      	mov	r7, r3
 801d630:	460d      	mov	r5, r1
 801d632:	4691      	mov	r9, r2
 801d634:	f7ff fa29 	bl	801ca8a <__retarget_lock_acquire_recursive>
 801d638:	4b25      	ldr	r3, [pc, #148]	; (801d6d0 <__register_exitproc+0xb0>)
 801d63a:	681c      	ldr	r4, [r3, #0]
 801d63c:	b934      	cbnz	r4, 801d64c <__register_exitproc+0x2c>
 801d63e:	4c25      	ldr	r4, [pc, #148]	; (801d6d4 <__register_exitproc+0xb4>)
 801d640:	601c      	str	r4, [r3, #0]
 801d642:	4b25      	ldr	r3, [pc, #148]	; (801d6d8 <__register_exitproc+0xb8>)
 801d644:	b113      	cbz	r3, 801d64c <__register_exitproc+0x2c>
 801d646:	681b      	ldr	r3, [r3, #0]
 801d648:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801d64c:	6863      	ldr	r3, [r4, #4]
 801d64e:	2b1f      	cmp	r3, #31
 801d650:	dd07      	ble.n	801d662 <__register_exitproc+0x42>
 801d652:	f8d8 0000 	ldr.w	r0, [r8]
 801d656:	f7ff fa1a 	bl	801ca8e <__retarget_lock_release_recursive>
 801d65a:	f04f 30ff 	mov.w	r0, #4294967295
 801d65e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d662:	b34e      	cbz	r6, 801d6b8 <__register_exitproc+0x98>
 801d664:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801d668:	b988      	cbnz	r0, 801d68e <__register_exitproc+0x6e>
 801d66a:	4b1c      	ldr	r3, [pc, #112]	; (801d6dc <__register_exitproc+0xbc>)
 801d66c:	b923      	cbnz	r3, 801d678 <__register_exitproc+0x58>
 801d66e:	f8d8 0000 	ldr.w	r0, [r8]
 801d672:	f7ff fa0b 	bl	801ca8c <__retarget_lock_release>
 801d676:	e7f0      	b.n	801d65a <__register_exitproc+0x3a>
 801d678:	f44f 7084 	mov.w	r0, #264	; 0x108
 801d67c:	f7ff fa08 	bl	801ca90 <malloc>
 801d680:	2800      	cmp	r0, #0
 801d682:	d0f4      	beq.n	801d66e <__register_exitproc+0x4e>
 801d684:	2300      	movs	r3, #0
 801d686:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801d68a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801d68e:	6863      	ldr	r3, [r4, #4]
 801d690:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801d694:	2201      	movs	r2, #1
 801d696:	409a      	lsls	r2, r3
 801d698:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801d69c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801d6a0:	4313      	orrs	r3, r2
 801d6a2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801d6a6:	2e02      	cmp	r6, #2
 801d6a8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801d6ac:	bf02      	ittt	eq
 801d6ae:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801d6b2:	4313      	orreq	r3, r2
 801d6b4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801d6b8:	6863      	ldr	r3, [r4, #4]
 801d6ba:	f8d8 0000 	ldr.w	r0, [r8]
 801d6be:	1c5a      	adds	r2, r3, #1
 801d6c0:	3302      	adds	r3, #2
 801d6c2:	6062      	str	r2, [r4, #4]
 801d6c4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801d6c8:	f7ff f9e1 	bl	801ca8e <__retarget_lock_release_recursive>
 801d6cc:	2000      	movs	r0, #0
 801d6ce:	e7c6      	b.n	801d65e <__register_exitproc+0x3e>
 801d6d0:	24008bd4 	.word	0x24008bd4
 801d6d4:	24008b48 	.word	0x24008b48
 801d6d8:	0801fa04 	.word	0x0801fa04
 801d6dc:	0801ca91 	.word	0x0801ca91
 801d6e0:	24000110 	.word	0x24000110

0801d6e4 <_close_r>:
 801d6e4:	b538      	push	{r3, r4, r5, lr}
 801d6e6:	4d06      	ldr	r5, [pc, #24]	; (801d700 <_close_r+0x1c>)
 801d6e8:	2300      	movs	r3, #0
 801d6ea:	4604      	mov	r4, r0
 801d6ec:	4608      	mov	r0, r1
 801d6ee:	602b      	str	r3, [r5, #0]
 801d6f0:	f7e3 febe 	bl	8001470 <_close>
 801d6f4:	1c43      	adds	r3, r0, #1
 801d6f6:	d102      	bne.n	801d6fe <_close_r+0x1a>
 801d6f8:	682b      	ldr	r3, [r5, #0]
 801d6fa:	b103      	cbz	r3, 801d6fe <_close_r+0x1a>
 801d6fc:	6023      	str	r3, [r4, #0]
 801d6fe:	bd38      	pop	{r3, r4, r5, pc}
 801d700:	24008b44 	.word	0x24008b44

0801d704 <__sflush_r>:
 801d704:	898a      	ldrh	r2, [r1, #12]
 801d706:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d70a:	4605      	mov	r5, r0
 801d70c:	0710      	lsls	r0, r2, #28
 801d70e:	460c      	mov	r4, r1
 801d710:	d458      	bmi.n	801d7c4 <__sflush_r+0xc0>
 801d712:	684b      	ldr	r3, [r1, #4]
 801d714:	2b00      	cmp	r3, #0
 801d716:	dc05      	bgt.n	801d724 <__sflush_r+0x20>
 801d718:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801d71a:	2b00      	cmp	r3, #0
 801d71c:	dc02      	bgt.n	801d724 <__sflush_r+0x20>
 801d71e:	2000      	movs	r0, #0
 801d720:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d724:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d726:	2e00      	cmp	r6, #0
 801d728:	d0f9      	beq.n	801d71e <__sflush_r+0x1a>
 801d72a:	2300      	movs	r3, #0
 801d72c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801d730:	682f      	ldr	r7, [r5, #0]
 801d732:	602b      	str	r3, [r5, #0]
 801d734:	d032      	beq.n	801d79c <__sflush_r+0x98>
 801d736:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801d738:	89a3      	ldrh	r3, [r4, #12]
 801d73a:	075a      	lsls	r2, r3, #29
 801d73c:	d505      	bpl.n	801d74a <__sflush_r+0x46>
 801d73e:	6863      	ldr	r3, [r4, #4]
 801d740:	1ac0      	subs	r0, r0, r3
 801d742:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801d744:	b10b      	cbz	r3, 801d74a <__sflush_r+0x46>
 801d746:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801d748:	1ac0      	subs	r0, r0, r3
 801d74a:	2300      	movs	r3, #0
 801d74c:	4602      	mov	r2, r0
 801d74e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d750:	6a21      	ldr	r1, [r4, #32]
 801d752:	4628      	mov	r0, r5
 801d754:	47b0      	blx	r6
 801d756:	1c43      	adds	r3, r0, #1
 801d758:	89a3      	ldrh	r3, [r4, #12]
 801d75a:	d106      	bne.n	801d76a <__sflush_r+0x66>
 801d75c:	6829      	ldr	r1, [r5, #0]
 801d75e:	291d      	cmp	r1, #29
 801d760:	d82c      	bhi.n	801d7bc <__sflush_r+0xb8>
 801d762:	4a2a      	ldr	r2, [pc, #168]	; (801d80c <__sflush_r+0x108>)
 801d764:	40ca      	lsrs	r2, r1
 801d766:	07d6      	lsls	r6, r2, #31
 801d768:	d528      	bpl.n	801d7bc <__sflush_r+0xb8>
 801d76a:	2200      	movs	r2, #0
 801d76c:	6062      	str	r2, [r4, #4]
 801d76e:	04d9      	lsls	r1, r3, #19
 801d770:	6922      	ldr	r2, [r4, #16]
 801d772:	6022      	str	r2, [r4, #0]
 801d774:	d504      	bpl.n	801d780 <__sflush_r+0x7c>
 801d776:	1c42      	adds	r2, r0, #1
 801d778:	d101      	bne.n	801d77e <__sflush_r+0x7a>
 801d77a:	682b      	ldr	r3, [r5, #0]
 801d77c:	b903      	cbnz	r3, 801d780 <__sflush_r+0x7c>
 801d77e:	6560      	str	r0, [r4, #84]	; 0x54
 801d780:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801d782:	602f      	str	r7, [r5, #0]
 801d784:	2900      	cmp	r1, #0
 801d786:	d0ca      	beq.n	801d71e <__sflush_r+0x1a>
 801d788:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801d78c:	4299      	cmp	r1, r3
 801d78e:	d002      	beq.n	801d796 <__sflush_r+0x92>
 801d790:	4628      	mov	r0, r5
 801d792:	f7ff f9a3 	bl	801cadc <_free_r>
 801d796:	2000      	movs	r0, #0
 801d798:	6360      	str	r0, [r4, #52]	; 0x34
 801d79a:	e7c1      	b.n	801d720 <__sflush_r+0x1c>
 801d79c:	6a21      	ldr	r1, [r4, #32]
 801d79e:	2301      	movs	r3, #1
 801d7a0:	4628      	mov	r0, r5
 801d7a2:	47b0      	blx	r6
 801d7a4:	1c41      	adds	r1, r0, #1
 801d7a6:	d1c7      	bne.n	801d738 <__sflush_r+0x34>
 801d7a8:	682b      	ldr	r3, [r5, #0]
 801d7aa:	2b00      	cmp	r3, #0
 801d7ac:	d0c4      	beq.n	801d738 <__sflush_r+0x34>
 801d7ae:	2b1d      	cmp	r3, #29
 801d7b0:	d001      	beq.n	801d7b6 <__sflush_r+0xb2>
 801d7b2:	2b16      	cmp	r3, #22
 801d7b4:	d101      	bne.n	801d7ba <__sflush_r+0xb6>
 801d7b6:	602f      	str	r7, [r5, #0]
 801d7b8:	e7b1      	b.n	801d71e <__sflush_r+0x1a>
 801d7ba:	89a3      	ldrh	r3, [r4, #12]
 801d7bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801d7c0:	81a3      	strh	r3, [r4, #12]
 801d7c2:	e7ad      	b.n	801d720 <__sflush_r+0x1c>
 801d7c4:	690f      	ldr	r7, [r1, #16]
 801d7c6:	2f00      	cmp	r7, #0
 801d7c8:	d0a9      	beq.n	801d71e <__sflush_r+0x1a>
 801d7ca:	0793      	lsls	r3, r2, #30
 801d7cc:	680e      	ldr	r6, [r1, #0]
 801d7ce:	bf08      	it	eq
 801d7d0:	694b      	ldreq	r3, [r1, #20]
 801d7d2:	600f      	str	r7, [r1, #0]
 801d7d4:	bf18      	it	ne
 801d7d6:	2300      	movne	r3, #0
 801d7d8:	eba6 0807 	sub.w	r8, r6, r7
 801d7dc:	608b      	str	r3, [r1, #8]
 801d7de:	f1b8 0f00 	cmp.w	r8, #0
 801d7e2:	dd9c      	ble.n	801d71e <__sflush_r+0x1a>
 801d7e4:	6a21      	ldr	r1, [r4, #32]
 801d7e6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801d7e8:	4643      	mov	r3, r8
 801d7ea:	463a      	mov	r2, r7
 801d7ec:	4628      	mov	r0, r5
 801d7ee:	47b0      	blx	r6
 801d7f0:	2800      	cmp	r0, #0
 801d7f2:	dc06      	bgt.n	801d802 <__sflush_r+0xfe>
 801d7f4:	89a3      	ldrh	r3, [r4, #12]
 801d7f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801d7fa:	81a3      	strh	r3, [r4, #12]
 801d7fc:	f04f 30ff 	mov.w	r0, #4294967295
 801d800:	e78e      	b.n	801d720 <__sflush_r+0x1c>
 801d802:	4407      	add	r7, r0
 801d804:	eba8 0800 	sub.w	r8, r8, r0
 801d808:	e7e9      	b.n	801d7de <__sflush_r+0xda>
 801d80a:	bf00      	nop
 801d80c:	20400001 	.word	0x20400001

0801d810 <_fflush_r>:
 801d810:	b538      	push	{r3, r4, r5, lr}
 801d812:	690b      	ldr	r3, [r1, #16]
 801d814:	4605      	mov	r5, r0
 801d816:	460c      	mov	r4, r1
 801d818:	b913      	cbnz	r3, 801d820 <_fflush_r+0x10>
 801d81a:	2500      	movs	r5, #0
 801d81c:	4628      	mov	r0, r5
 801d81e:	bd38      	pop	{r3, r4, r5, pc}
 801d820:	b118      	cbz	r0, 801d82a <_fflush_r+0x1a>
 801d822:	6983      	ldr	r3, [r0, #24]
 801d824:	b90b      	cbnz	r3, 801d82a <_fflush_r+0x1a>
 801d826:	f7ff f85b 	bl	801c8e0 <__sinit>
 801d82a:	4b14      	ldr	r3, [pc, #80]	; (801d87c <_fflush_r+0x6c>)
 801d82c:	429c      	cmp	r4, r3
 801d82e:	d11b      	bne.n	801d868 <_fflush_r+0x58>
 801d830:	686c      	ldr	r4, [r5, #4]
 801d832:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801d836:	2b00      	cmp	r3, #0
 801d838:	d0ef      	beq.n	801d81a <_fflush_r+0xa>
 801d83a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801d83c:	07d0      	lsls	r0, r2, #31
 801d83e:	d404      	bmi.n	801d84a <_fflush_r+0x3a>
 801d840:	0599      	lsls	r1, r3, #22
 801d842:	d402      	bmi.n	801d84a <_fflush_r+0x3a>
 801d844:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801d846:	f7ff f920 	bl	801ca8a <__retarget_lock_acquire_recursive>
 801d84a:	4628      	mov	r0, r5
 801d84c:	4621      	mov	r1, r4
 801d84e:	f7ff ff59 	bl	801d704 <__sflush_r>
 801d852:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801d854:	07da      	lsls	r2, r3, #31
 801d856:	4605      	mov	r5, r0
 801d858:	d4e0      	bmi.n	801d81c <_fflush_r+0xc>
 801d85a:	89a3      	ldrh	r3, [r4, #12]
 801d85c:	059b      	lsls	r3, r3, #22
 801d85e:	d4dd      	bmi.n	801d81c <_fflush_r+0xc>
 801d860:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801d862:	f7ff f914 	bl	801ca8e <__retarget_lock_release_recursive>
 801d866:	e7d9      	b.n	801d81c <_fflush_r+0xc>
 801d868:	4b05      	ldr	r3, [pc, #20]	; (801d880 <_fflush_r+0x70>)
 801d86a:	429c      	cmp	r4, r3
 801d86c:	d101      	bne.n	801d872 <_fflush_r+0x62>
 801d86e:	68ac      	ldr	r4, [r5, #8]
 801d870:	e7df      	b.n	801d832 <_fflush_r+0x22>
 801d872:	4b04      	ldr	r3, [pc, #16]	; (801d884 <_fflush_r+0x74>)
 801d874:	429c      	cmp	r4, r3
 801d876:	bf08      	it	eq
 801d878:	68ec      	ldreq	r4, [r5, #12]
 801d87a:	e7da      	b.n	801d832 <_fflush_r+0x22>
 801d87c:	0801f98c 	.word	0x0801f98c
 801d880:	0801f9ac 	.word	0x0801f9ac
 801d884:	0801f96c 	.word	0x0801f96c

0801d888 <_lseek_r>:
 801d888:	b538      	push	{r3, r4, r5, lr}
 801d88a:	4d07      	ldr	r5, [pc, #28]	; (801d8a8 <_lseek_r+0x20>)
 801d88c:	4604      	mov	r4, r0
 801d88e:	4608      	mov	r0, r1
 801d890:	4611      	mov	r1, r2
 801d892:	2200      	movs	r2, #0
 801d894:	602a      	str	r2, [r5, #0]
 801d896:	461a      	mov	r2, r3
 801d898:	f7e3 fdf4 	bl	8001484 <_lseek>
 801d89c:	1c43      	adds	r3, r0, #1
 801d89e:	d102      	bne.n	801d8a6 <_lseek_r+0x1e>
 801d8a0:	682b      	ldr	r3, [r5, #0]
 801d8a2:	b103      	cbz	r3, 801d8a6 <_lseek_r+0x1e>
 801d8a4:	6023      	str	r3, [r4, #0]
 801d8a6:	bd38      	pop	{r3, r4, r5, pc}
 801d8a8:	24008b44 	.word	0x24008b44

0801d8ac <__swhatbuf_r>:
 801d8ac:	b570      	push	{r4, r5, r6, lr}
 801d8ae:	460e      	mov	r6, r1
 801d8b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d8b4:	2900      	cmp	r1, #0
 801d8b6:	b096      	sub	sp, #88	; 0x58
 801d8b8:	4614      	mov	r4, r2
 801d8ba:	461d      	mov	r5, r3
 801d8bc:	da08      	bge.n	801d8d0 <__swhatbuf_r+0x24>
 801d8be:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801d8c2:	2200      	movs	r2, #0
 801d8c4:	602a      	str	r2, [r5, #0]
 801d8c6:	061a      	lsls	r2, r3, #24
 801d8c8:	d410      	bmi.n	801d8ec <__swhatbuf_r+0x40>
 801d8ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801d8ce:	e00e      	b.n	801d8ee <__swhatbuf_r+0x42>
 801d8d0:	466a      	mov	r2, sp
 801d8d2:	f000 f86f 	bl	801d9b4 <_fstat_r>
 801d8d6:	2800      	cmp	r0, #0
 801d8d8:	dbf1      	blt.n	801d8be <__swhatbuf_r+0x12>
 801d8da:	9a01      	ldr	r2, [sp, #4]
 801d8dc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801d8e0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801d8e4:	425a      	negs	r2, r3
 801d8e6:	415a      	adcs	r2, r3
 801d8e8:	602a      	str	r2, [r5, #0]
 801d8ea:	e7ee      	b.n	801d8ca <__swhatbuf_r+0x1e>
 801d8ec:	2340      	movs	r3, #64	; 0x40
 801d8ee:	2000      	movs	r0, #0
 801d8f0:	6023      	str	r3, [r4, #0]
 801d8f2:	b016      	add	sp, #88	; 0x58
 801d8f4:	bd70      	pop	{r4, r5, r6, pc}
	...

0801d8f8 <__smakebuf_r>:
 801d8f8:	898b      	ldrh	r3, [r1, #12]
 801d8fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801d8fc:	079d      	lsls	r5, r3, #30
 801d8fe:	4606      	mov	r6, r0
 801d900:	460c      	mov	r4, r1
 801d902:	d507      	bpl.n	801d914 <__smakebuf_r+0x1c>
 801d904:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801d908:	6023      	str	r3, [r4, #0]
 801d90a:	6123      	str	r3, [r4, #16]
 801d90c:	2301      	movs	r3, #1
 801d90e:	6163      	str	r3, [r4, #20]
 801d910:	b002      	add	sp, #8
 801d912:	bd70      	pop	{r4, r5, r6, pc}
 801d914:	ab01      	add	r3, sp, #4
 801d916:	466a      	mov	r2, sp
 801d918:	f7ff ffc8 	bl	801d8ac <__swhatbuf_r>
 801d91c:	9900      	ldr	r1, [sp, #0]
 801d91e:	4605      	mov	r5, r0
 801d920:	4630      	mov	r0, r6
 801d922:	f7ff f947 	bl	801cbb4 <_malloc_r>
 801d926:	b948      	cbnz	r0, 801d93c <__smakebuf_r+0x44>
 801d928:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801d92c:	059a      	lsls	r2, r3, #22
 801d92e:	d4ef      	bmi.n	801d910 <__smakebuf_r+0x18>
 801d930:	f023 0303 	bic.w	r3, r3, #3
 801d934:	f043 0302 	orr.w	r3, r3, #2
 801d938:	81a3      	strh	r3, [r4, #12]
 801d93a:	e7e3      	b.n	801d904 <__smakebuf_r+0xc>
 801d93c:	4b0d      	ldr	r3, [pc, #52]	; (801d974 <__smakebuf_r+0x7c>)
 801d93e:	62b3      	str	r3, [r6, #40]	; 0x28
 801d940:	89a3      	ldrh	r3, [r4, #12]
 801d942:	6020      	str	r0, [r4, #0]
 801d944:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801d948:	81a3      	strh	r3, [r4, #12]
 801d94a:	9b00      	ldr	r3, [sp, #0]
 801d94c:	6163      	str	r3, [r4, #20]
 801d94e:	9b01      	ldr	r3, [sp, #4]
 801d950:	6120      	str	r0, [r4, #16]
 801d952:	b15b      	cbz	r3, 801d96c <__smakebuf_r+0x74>
 801d954:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801d958:	4630      	mov	r0, r6
 801d95a:	f000 f83d 	bl	801d9d8 <_isatty_r>
 801d95e:	b128      	cbz	r0, 801d96c <__smakebuf_r+0x74>
 801d960:	89a3      	ldrh	r3, [r4, #12]
 801d962:	f023 0303 	bic.w	r3, r3, #3
 801d966:	f043 0301 	orr.w	r3, r3, #1
 801d96a:	81a3      	strh	r3, [r4, #12]
 801d96c:	89a0      	ldrh	r0, [r4, #12]
 801d96e:	4305      	orrs	r5, r0
 801d970:	81a5      	strh	r5, [r4, #12]
 801d972:	e7cd      	b.n	801d910 <__smakebuf_r+0x18>
 801d974:	0801c879 	.word	0x0801c879

0801d978 <__malloc_lock>:
 801d978:	4801      	ldr	r0, [pc, #4]	; (801d980 <__malloc_lock+0x8>)
 801d97a:	f7ff b886 	b.w	801ca8a <__retarget_lock_acquire_recursive>
 801d97e:	bf00      	nop
 801d980:	24008a31 	.word	0x24008a31

0801d984 <__malloc_unlock>:
 801d984:	4801      	ldr	r0, [pc, #4]	; (801d98c <__malloc_unlock+0x8>)
 801d986:	f7ff b882 	b.w	801ca8e <__retarget_lock_release_recursive>
 801d98a:	bf00      	nop
 801d98c:	24008a31 	.word	0x24008a31

0801d990 <_read_r>:
 801d990:	b538      	push	{r3, r4, r5, lr}
 801d992:	4d07      	ldr	r5, [pc, #28]	; (801d9b0 <_read_r+0x20>)
 801d994:	4604      	mov	r4, r0
 801d996:	4608      	mov	r0, r1
 801d998:	4611      	mov	r1, r2
 801d99a:	2200      	movs	r2, #0
 801d99c:	602a      	str	r2, [r5, #0]
 801d99e:	461a      	mov	r2, r3
 801d9a0:	f7e3 fd4a 	bl	8001438 <_read>
 801d9a4:	1c43      	adds	r3, r0, #1
 801d9a6:	d102      	bne.n	801d9ae <_read_r+0x1e>
 801d9a8:	682b      	ldr	r3, [r5, #0]
 801d9aa:	b103      	cbz	r3, 801d9ae <_read_r+0x1e>
 801d9ac:	6023      	str	r3, [r4, #0]
 801d9ae:	bd38      	pop	{r3, r4, r5, pc}
 801d9b0:	24008b44 	.word	0x24008b44

0801d9b4 <_fstat_r>:
 801d9b4:	b538      	push	{r3, r4, r5, lr}
 801d9b6:	4d07      	ldr	r5, [pc, #28]	; (801d9d4 <_fstat_r+0x20>)
 801d9b8:	2300      	movs	r3, #0
 801d9ba:	4604      	mov	r4, r0
 801d9bc:	4608      	mov	r0, r1
 801d9be:	4611      	mov	r1, r2
 801d9c0:	602b      	str	r3, [r5, #0]
 801d9c2:	f7e3 fd58 	bl	8001476 <_fstat>
 801d9c6:	1c43      	adds	r3, r0, #1
 801d9c8:	d102      	bne.n	801d9d0 <_fstat_r+0x1c>
 801d9ca:	682b      	ldr	r3, [r5, #0]
 801d9cc:	b103      	cbz	r3, 801d9d0 <_fstat_r+0x1c>
 801d9ce:	6023      	str	r3, [r4, #0]
 801d9d0:	bd38      	pop	{r3, r4, r5, pc}
 801d9d2:	bf00      	nop
 801d9d4:	24008b44 	.word	0x24008b44

0801d9d8 <_isatty_r>:
 801d9d8:	b538      	push	{r3, r4, r5, lr}
 801d9da:	4d06      	ldr	r5, [pc, #24]	; (801d9f4 <_isatty_r+0x1c>)
 801d9dc:	2300      	movs	r3, #0
 801d9de:	4604      	mov	r4, r0
 801d9e0:	4608      	mov	r0, r1
 801d9e2:	602b      	str	r3, [r5, #0]
 801d9e4:	f7e3 fd4c 	bl	8001480 <_isatty>
 801d9e8:	1c43      	adds	r3, r0, #1
 801d9ea:	d102      	bne.n	801d9f2 <_isatty_r+0x1a>
 801d9ec:	682b      	ldr	r3, [r5, #0]
 801d9ee:	b103      	cbz	r3, 801d9f2 <_isatty_r+0x1a>
 801d9f0:	6023      	str	r3, [r4, #0]
 801d9f2:	bd38      	pop	{r3, r4, r5, pc}
 801d9f4:	24008b44 	.word	0x24008b44

0801d9f8 <_init>:
 801d9f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d9fa:	bf00      	nop
 801d9fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801d9fe:	bc08      	pop	{r3}
 801da00:	469e      	mov	lr, r3
 801da02:	4770      	bx	lr

0801da04 <_fini>:
 801da04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801da06:	bf00      	nop
 801da08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801da0a:	bc08      	pop	{r3}
 801da0c:	469e      	mov	lr, r3
 801da0e:	4770      	bx	lr
